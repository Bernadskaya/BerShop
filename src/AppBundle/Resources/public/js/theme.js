(function(modules) {
	var installedModules = {};

	function __webpack_require__(moduleId) {
		if (installedModules[moduleId])
			return installedModules[moduleId].exports;
		var module = installedModules[moduleId] = {
			exports: {},
			id: moduleId,
			loaded: !1
		};
		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		module.loaded = !0;
		return module.exports
	}
	__webpack_require__.m = modules;
	__webpack_require__.c = installedModules;
	__webpack_require__.p = "";
	return __webpack_require__(0)
})([function(module, exports, __webpack_require__) {
		module.exports = __webpack_require__(1)
	}, function(module, exports, __webpack_require__) {
		'use strict';

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}
		var _jquery = __webpack_require__(2);
		var _jquery2 = _interopRequireDefault(_jquery);
		__webpack_require__(3);
		__webpack_require__(5);
		__webpack_require__(8);
		__webpack_require__(9);
		__webpack_require__(10);
		__webpack_require__(11);
		var _prestashop = __webpack_require__(4);
		var _prestashop2 = _interopRequireDefault(_prestashop);
		var _events = __webpack_require__(12);
		var _events2 = _interopRequireDefault(_events);
		var _common = __webpack_require__(13);
		window.$ = _jquery2['default'];
		window.jQuery = _jquery2['default'];
		for (var i in _events2['default'].prototype) {
			_prestashop2['default'][i] = _events2['default'].prototype[i]
		}(0, _jquery2['default'])(document).ready(function() {
			(0, _common.psShowHide)()
		});
	}, function(module, exports, __webpack_require__) {
		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
		"use strict";
		(function(global, factory) {
			if (typeof module === "object" && typeof module.exports === "object") {
				module.exports = global.document ? factory(global, !0) : function(w) {
					if (!w.document) {
						throw new Error("jQuery requires a window with a document")
					}
					return factory(w)
				}
			} else {
				factory(global)
			}
		})(typeof window !== "undefined" ? window : undefined, function(window, noGlobal) {
			var arr = [];
			var document = window.document;
			var _slice = arr.slice;
			var concat = arr.concat;
			var push = arr.push;
			var indexOf = arr.indexOf;
			var class2type = {};
			var toString = class2type.toString;
			var hasOwn = class2type.hasOwnProperty;
			var support = {};
			var version = "2.2.4",
				jQuery = function jQuery(selector, context) {
					return new jQuery.fn.init(selector, context)
				},
				rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
				rmsPrefix = /^-ms-/,
				rdashAlpha = /-([\da-z])/gi,
				fcamelCase = function fcamelCase(all, letter) {
					return letter.toUpperCase()
				};
			jQuery.fn = jQuery.prototype = {
				jquery: version,
				constructor: jQuery,
				selector: "",
				length: 0,
				toArray: function toArray() {
					return _slice.call(this)
				},
				get: function get(num) {
					return num != null ? num < 0 ? this[num + this.length] : this[num] : _slice.call(this)
				},
				pushStack: function pushStack(elems) {
					var ret = jQuery.merge(this.constructor(), elems);
					ret.prevObject = this;
					ret.context = this.context;
					return ret
				},
				each: function each(callback) {
					return jQuery.each(this, callback)
				},
				map: function map(callback) {
					return this.pushStack(jQuery.map(this, function(elem, i) {
						return callback.call(elem, i, elem)
					}))
				},
				slice: function slice() {
					return this.pushStack(_slice.apply(this, arguments))
				},
				first: function first() {
					return this.eq(0)
				},
				last: function last() {
					return this.eq(-1)
				},
				eq: function eq(i) {
					var len = this.length,
						j = +i + (i < 0 ? len : 0);
					return this.pushStack(j >= 0 && j < len ? [this[j]] : [])
				},
				end: function end() {
					return this.prevObject || this.constructor()
				},
				push: push,
				sort: arr.sort,
				splice: arr.splice
			};
			jQuery.extend = jQuery.fn.extend = function() {
				var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {},
					i = 1,
					length = arguments.length,
					deep = !1;
				if (typeof target === "boolean") {
					deep = target;
					target = arguments[i] || {};
					i++
				}
				if (typeof target !== "object" && !jQuery.isFunction(target)) {
					target = {}
				}
				if (i === length) {
					target = this;
					i--
				}
				for (; i < length; i++) {
					if ((options = arguments[i]) != null) {
						for (name in options) {
							src = target[name];
							copy = options[name];
							if (target === copy) {
								continue
							}
							if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))) {
								if (copyIsArray) {
									copyIsArray = !1;
									clone = src && jQuery.isArray(src) ? src : []
								} else {
									clone = src && jQuery.isPlainObject(src) ? src : {}
								}
								target[name] = jQuery.extend(deep, clone, copy)
							} else if (copy !== undefined) {
								target[name] = copy
							}
						}
					}
				}
				return target
			};
			jQuery.extend({
				expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),
				isReady: !0,
				error: function error(msg) {
					throw new Error(msg)
				},
				noop: function noop() {},
				isFunction: function isFunction(obj) {
					return jQuery.type(obj) === "function"
				},
				isArray: Array.isArray,
				isWindow: function isWindow(obj) {
					return obj != null && obj === obj.window
				},
				isNumeric: function isNumeric(obj) {
					var realStringObj = obj && obj.toString();
					return !jQuery.isArray(obj) && realStringObj - parseFloat(realStringObj) + 1 >= 0
				},
				isPlainObject: function isPlainObject(obj) {
					var key;
					if (jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow(obj)) {
						return !1
					}
					if (obj.constructor && !hasOwn.call(obj, "constructor") && !hasOwn.call(obj.constructor.prototype || {}, "isPrototypeOf")) {
						return !1
					}
					for (key in obj) {}
					return key === undefined || hasOwn.call(obj, key)
				},
				isEmptyObject: function isEmptyObject(obj) {
					var name;
					for (name in obj) {
						return !1
					}
					return !0
				},
				type: function type(obj) {
					if (obj == null) {
						return obj + ""
					}
					return typeof obj === "object" || typeof obj === "function" ? class2type[toString.call(obj)] || "object" : typeof obj
				},
				globalEval: function globalEval(code) {
					var script, indirect = eval;
					code = jQuery.trim(code);
					if (code) {
						if (code.indexOf("use strict") === 1) {
							script = document.createElement("script");
							script.text = code;
							document.head.appendChild(script).parentNode.removeChild(script)
						} else {
							indirect(code)
						}
					}
				},
				camelCase: function camelCase(string) {
					return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase)
				},
				nodeName: function nodeName(elem, name) {
					return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase()
				},
				each: function each(obj, callback) {
					var length, i = 0;
					if (isArrayLike(obj)) {
						length = obj.length;
						for (; i < length; i++) {
							if (callback.call(obj[i], i, obj[i]) === !1) {
								break
							}
						}
					} else {
						for (i in obj) {
							if (callback.call(obj[i], i, obj[i]) === !1) {
								break
							}
						}
					}
					return obj
				},
				trim: function trim(text) {
					return text == null ? "" : (text + "").replace(rtrim, "")
				},
				makeArray: function makeArray(arr, results) {
					var ret = results || [];
					if (arr != null) {
						if (isArrayLike(Object(arr))) {
							jQuery.merge(ret, typeof arr === "string" ? [arr] : arr)
						} else {
							push.call(ret, arr)
						}
					}
					return ret
				},
				inArray: function inArray(elem, arr, i) {
					return arr == null ? -1 : indexOf.call(arr, elem, i)
				},
				merge: function merge(first, second) {
					var len = +second.length,
						j = 0,
						i = first.length;
					for (; j < len; j++) {
						first[i++] = second[j]
					}
					first.length = i;
					return first
				},
				grep: function grep(elems, callback, invert) {
					var callbackInverse, matches = [],
						i = 0,
						length = elems.length,
						callbackExpect = !invert;
					for (; i < length; i++) {
						callbackInverse = !callback(elems[i], i);
						if (callbackInverse !== callbackExpect) {
							matches.push(elems[i])
						}
					}
					return matches
				},
				map: function map(elems, callback, arg) {
					var length, value, i = 0,
						ret = [];
					if (isArrayLike(elems)) {
						length = elems.length;
						for (; i < length; i++) {
							value = callback(elems[i], i, arg);
							if (value != null) {
								ret.push(value)
							}
						}
					} else {
						for (i in elems) {
							value = callback(elems[i], i, arg);
							if (value != null) {
								ret.push(value)
							}
						}
					}
					return concat.apply([], ret);
				},
				guid: 1,
				proxy: function proxy(fn, context) {
					var tmp, args, proxy;
					if (typeof context === "string") {
						tmp = fn[context];
						context = fn;
						fn = tmp
					}
					if (!jQuery.isFunction(fn)) {
						return undefined
					}
					args = _slice.call(arguments, 2);
					proxy = function() {
						return fn.apply(context || this, args.concat(_slice.call(arguments)))
					};
					proxy.guid = fn.guid = fn.guid || jQuery.guid++;
					return proxy
				},
				now: Date.now,
				support: support
			});
			if (typeof Symbol === "function") {
				jQuery.fn[Symbol.iterator] = arr[Symbol.iterator]
			}
			jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(i, name) {
				class2type["[object " + name + "]"] = name.toLowerCase()
			});

			function isArrayLike(obj) {
				var length = !!obj && "length" in obj && obj.length,
					type = jQuery.type(obj);
				if (type === "function" || jQuery.isWindow(obj)) {
					return !1
				}
				return type === "array" || length === 0 || typeof length === "number" && length > 0 && length - 1 in obj
			}
			var Sizzle = (function(window) {
				var i, support, Expr, getText, isXML, tokenize, compile, select, outermostContext, sortInput, hasDuplicate, setDocument, document, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains, expando = "sizzle" + 1 * new Date(),
					preferredDoc = window.document,
					dirruns = 0,
					done = 0,
					classCache = createCache(),
					tokenCache = createCache(),
					compilerCache = createCache(),
					sortOrder = function sortOrder(a, b) {
						if (a === b) {
							hasDuplicate = !0
						}
						return 0
					},
					MAX_NEGATIVE = 1 << 31,
					hasOwn = ({}).hasOwnProperty,
					arr = [],
					pop = arr.pop,
					push_native = arr.push,
					push = arr.push,
					slice = arr.slice,
					indexOf = function indexOf(list, elem) {
						var i = 0,
							len = list.length;
						for (; i < len; i++) {
							if (list[i] === elem) {
								return i
							}
						}
						return -1
					},
					booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
					whitespace = "[\\x20\\t\\r\\n\\f]",
					identifier = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
					attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace + "*([*^$|!~]?=)" + whitespace + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace + "*\\]",
					pseudos = ":(" + identifier + ")(?:\\((" + "('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" + "((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" + ".*" + ")\\)|)",
					rwhitespace = new RegExp(whitespace + "+", "g"),
					rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"),
					rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"),
					rcombinators = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"),
					rattributeQuotes = new RegExp("=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g"),
					rpseudo = new RegExp(pseudos),
					ridentifier = new RegExp("^" + identifier + "$"),
					matchExpr = {
						"ID": new RegExp("^#(" + identifier + ")"),
						"CLASS": new RegExp("^\\.(" + identifier + ")"),
						"TAG": new RegExp("^(" + identifier + "|[*])"),
						"ATTR": new RegExp("^" + attributes),
						"PSEUDO": new RegExp("^" + pseudos),
						"CHILD": new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
						"bool": new RegExp("^(?:" + booleans + ")$", "i"),
						"needsContext": new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
					},
					rinputs = /^(?:input|select|textarea|button)$/i,
					rheader = /^h\d$/i,
					rnative = /^[^{]+\{\s*\[native \w/,
					rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
					rsibling = /[+~]/,
					rescape = /'|\\/g,
					runescape = new RegExp("\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig"),
					funescape = function funescape(_, escaped, escapedWhitespace) {
						var high = "0x" + escaped - 0x10000;
						return high !== high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00)
					},
					unloadHandler = function unloadHandler() {
						setDocument()
					};
				try {
					push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes);
					arr[preferredDoc.childNodes.length].nodeType
				} catch (e) {
					push = {
						apply: arr.length ? function(target, els) {
							push_native.apply(target, slice.call(els))
						} : function(target, els) {
							var j = target.length,
								i = 0;
							while (target[j++] = els[i++]) {}
							target.length = j - 1
						}
					}
				}

				function Sizzle(selector, context, results, seed) {
					var m, i, elem, nid, nidselect, match, groups, newSelector, newContext = context && context.ownerDocument,
						nodeType = context ? context.nodeType : 9;
					results = results || [];
					if (typeof selector !== "string" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {
						return results
					}
					if (!seed) {
						if ((context ? context.ownerDocument || context : preferredDoc) !== document) {
							setDocument(context)
						}
						context = context || document;
						if (documentIsHTML) {
							if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {
								if (m = match[1]) {
									if (nodeType === 9) {
										if (elem = context.getElementById(m)) {
											if (elem.id === m) {
												results.push(elem);
												return results
											}
										} else {
											return results
										}
									} else {
										if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {
											results.push(elem);
											return results
										}
									}
								} else if (match[2]) {
									push.apply(results, context.getElementsByTagName(selector));
									return results
								} else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {
									push.apply(results, context.getElementsByClassName(m));
									return results
								}
							}
							if (support.qsa && !compilerCache[selector + " "] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {
								if (nodeType !== 1) {
									newContext = context;
									newSelector = selector
								} else if (context.nodeName.toLowerCase() !== "object") {
									if (nid = context.getAttribute("id")) {
										nid = nid.replace(rescape, "\\$&")
									} else {
										context.setAttribute("id", nid = expando)
									}
									groups = tokenize(selector);
									i = groups.length;
									nidselect = ridentifier.test(nid) ? "#" + nid : "[id='" + nid + "']";
									while (i--) {
										groups[i] = nidselect + " " + toSelector(groups[i])
									}
									newSelector = groups.join(",");
									newContext = rsibling.test(selector) && testContext(context.parentNode) || context
								}
								if (newSelector) {
									try {
										push.apply(results, newContext.querySelectorAll(newSelector));
										return results
									} catch (qsaError) {} finally {
										if (nid === expando) {
											context.removeAttribute("id")
										}
									}
								}
							}
						}
					}
					return select(selector.replace(rtrim, "$1"), context, results, seed)
				}

				function createCache() {
					var keys = [];

					function cache(key, value) {
						if (keys.push(key + " ") > Expr.cacheLength) {
							delete cache[keys.shift()]
						}
						return cache[key + " "] = value
					}
					return cache
				}

				function markFunction(fn) {
					fn[expando] = !0;
					return fn
				}

				function assert(fn) {
					var div = document.createElement("div");
					try {
						return !!fn(div)
					} catch (e) {
						return !1
					} finally {
						if (div.parentNode) {
							div.parentNode.removeChild(div)
						}
						div = null
					}
				}

				function addHandle(attrs, handler) {
					var arr = attrs.split("|"),
						i = arr.length;
					while (i--) {
						Expr.attrHandle[arr[i]] = handler
					}
				}

				function siblingCheck(a, b) {
					var cur = b && a,
						diff = cur && a.nodeType === 1 && b.nodeType === 1 && (~b.sourceIndex || MAX_NEGATIVE) - (~a.sourceIndex || MAX_NEGATIVE);
					if (diff) {
						return diff
					}
					if (cur) {
						while (cur = cur.nextSibling) {
							if (cur === b) {
								return -1
							}
						}
					}
					return a ? 1 : -1
				}

				function createInputPseudo(type) {
					return function(elem) {
						var name = elem.nodeName.toLowerCase();
						return name === "input" && elem.type === type
					}
				}

				function createButtonPseudo(type) {
					return function(elem) {
						var name = elem.nodeName.toLowerCase();
						return (name === "input" || name === "button") && elem.type === type
					}
				}

				function createPositionalPseudo(fn) {
					return markFunction(function(argument) {
						argument = +argument;
						return markFunction(function(seed, matches) {
							var j, matchIndexes = fn([], seed.length, argument),
								i = matchIndexes.length;
							while (i--) {
								if (seed[j = matchIndexes[i]]) {
									seed[j] = !(matches[j] = seed[j])
								}
							}
						})
					})
				}

				function testContext(context) {
					return context && typeof context.getElementsByTagName !== "undefined" && context
				}
				support = Sizzle.support = {};
				isXML = Sizzle.isXML = function(elem) {
					var documentElement = elem && (elem.ownerDocument || elem).documentElement;
					return documentElement ? documentElement.nodeName !== "HTML" : !1
				};
				setDocument = Sizzle.setDocument = function(node) {
					var hasCompare, parent, doc = node ? node.ownerDocument || node : preferredDoc;
					if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {
						return document
					}
					document = doc;
					docElem = document.documentElement;
					documentIsHTML = !isXML(document);
					if ((parent = document.defaultView) && parent.top !== parent) {
						if (parent.addEventListener) {
							parent.addEventListener("unload", unloadHandler, !1)
						} else if (parent.attachEvent) {
							parent.attachEvent("onunload", unloadHandler)
						}
					}
					support.attributes = assert(function(div) {
						div.className = "i";
						return !div.getAttribute("className")
					});
					support.getElementsByTagName = assert(function(div) {
						div.appendChild(document.createComment(""));
						return !div.getElementsByTagName("*").length
					});
					support.getElementsByClassName = rnative.test(document.getElementsByClassName);
					support.getById = assert(function(div) {
						docElem.appendChild(div).id = expando;
						return !document.getElementsByName || !document.getElementsByName(expando).length
					});
					if (support.getById) {
						Expr.find.ID = function(id, context) {
							if (typeof context.getElementById !== "undefined" && documentIsHTML) {
								var m = context.getElementById(id);
								return m ? [m] : []
							}
						};
						Expr.filter.ID = function(id) {
							var attrId = id.replace(runescape, funescape);
							return function(elem) {
								return elem.getAttribute("id") === attrId
							}
						}
					} else {
						delete Expr.find.ID;
						Expr.filter.ID = function(id) {
							var attrId = id.replace(runescape, funescape);
							return function(elem) {
								var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
								return node && node.value === attrId
							}
						}
					}
					Expr.find.TAG = support.getElementsByTagName ? function(tag, context) {
						if (typeof context.getElementsByTagName !== "undefined") {
							return context.getElementsByTagName(tag)
						} else if (support.qsa) {
							return context.querySelectorAll(tag)
						}
					} : function(tag, context) {
						var elem, tmp = [],
							i = 0,
							results = context.getElementsByTagName(tag);
						if (tag === "*") {
							while (elem = results[i++]) {
								if (elem.nodeType === 1) {
									tmp.push(elem)
								}
							}
							return tmp
						}
						return results
					};
					Expr.find.CLASS = support.getElementsByClassName && function(className, context) {
						if (typeof context.getElementsByClassName !== "undefined" && documentIsHTML) {
							return context.getElementsByClassName(className)
						}
					};
					rbuggyMatches = [];
					rbuggyQSA = [];
					if (support.qsa = rnative.test(document.querySelectorAll)) {
						assert(function(div) {
							docElem.appendChild(div).innerHTML = "<a id='" + expando + "'></a>" + "<select id='" + expando + "-\r\\' msallowcapture=''>" + "<option selected=''></option></select>";
							if (div.querySelectorAll("[msallowcapture^='']").length) {
								rbuggyQSA.push("[*^$]=" + whitespace + "*(?:''|\"\")")
							}
							if (!div.querySelectorAll("[selected]").length) {
								rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")")
							}
							if (!div.querySelectorAll("[id~=" + expando + "-]").length) {
								rbuggyQSA.push("~=")
							}
							if (!div.querySelectorAll(":checked").length) {
								rbuggyQSA.push(":checked")
							}
							if (!div.querySelectorAll("a#" + expando + "+*").length) {
								rbuggyQSA.push(".#.+[+~]")
							}
						});
						assert(function(div) {
							var input = document.createElement("input");
							input.setAttribute("type", "hidden");
							div.appendChild(input).setAttribute("name", "D");
							if (div.querySelectorAll("[name=d]").length) {
								rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?=")
							}
							if (!div.querySelectorAll(":enabled").length) {
								rbuggyQSA.push(":enabled", ":disabled")
							}
							div.querySelectorAll("*,:x");
							rbuggyQSA.push(",.*:")
						})
					}
					if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {
						assert(function(div) {
							support.disconnectedMatch = matches.call(div, "div");
							matches.call(div, "[s!='']:x");
							rbuggyMatches.push("!=", pseudos)
						})
					}
					rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));
					rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|"));
					hasCompare = rnative.test(docElem.compareDocumentPosition);
					contains = hasCompare || rnative.test(docElem.contains) ? function(a, b) {
						var adown = a.nodeType === 9 ? a.documentElement : a,
							bup = b && b.parentNode;
						return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16))
					} : function(a, b) {
						if (b) {
							while (b = b.parentNode) {
								if (b === a) {
									return !0
								}
							}
						}
						return !1
					};
					sortOrder = hasCompare ? function(a, b) {
						if (a === b) {
							hasDuplicate = !0;
							return 0
						}
						var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
						if (compare) {
							return compare
						}
						compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1;
						if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {
							if (a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {
								return -1
							}
							if (b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {
								return 1
							}
							return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0
						}
						return compare & 4 ? -1 : 1
					} : function(a, b) {
						if (a === b) {
							hasDuplicate = !0;
							return 0
						}
						var cur, i = 0,
							aup = a.parentNode,
							bup = b.parentNode,
							ap = [a],
							bp = [b];
						if (!aup || !bup) {
							return a === document ? -1 : b === document ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0
						} else if (aup === bup) {
							return siblingCheck(a, b)
						}
						cur = a;
						while (cur = cur.parentNode) {
							ap.unshift(cur)
						}
						cur = b;
						while (cur = cur.parentNode) {
							bp.unshift(cur)
						}
						while (ap[i] === bp[i]) {
							i++
						}
						return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0
					};
					return document
				};
				Sizzle.matches = function(expr, elements) {
					return Sizzle(expr, null, null, elements)
				};
				Sizzle.matchesSelector = function(elem, expr) {
					if ((elem.ownerDocument || elem) !== document) {
						setDocument(elem)
					}
					expr = expr.replace(rattributeQuotes, "='$1']");
					if (support.matchesSelector && documentIsHTML && !compilerCache[expr + " "] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {
						try {
							var ret = matches.call(elem, expr);
							if (ret || support.disconnectedMatch || elem.document && elem.document.nodeType !== 11) {
								return ret
							}
						} catch (e) {}
					}
					return Sizzle(expr, document, null, [elem]).length > 0
				};
				Sizzle.contains = function(context, elem) {
					if ((context.ownerDocument || context) !== document) {
						setDocument(context)
					}
					return contains(context, elem)
				};
				Sizzle.attr = function(elem, name) {
					if ((elem.ownerDocument || elem) !== document) {
						setDocument(elem)
					}
					var fn = Expr.attrHandle[name.toLowerCase()],
						val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;
					return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null
				};
				Sizzle.error = function(msg) {
					throw new Error("Syntax error, unrecognized expression: " + msg)
				};
				Sizzle.uniqueSort = function(results) {
					var elem, duplicates = [],
						j = 0,
						i = 0;
					hasDuplicate = !support.detectDuplicates;
					sortInput = !support.sortStable && results.slice(0);
					results.sort(sortOrder);
					if (hasDuplicate) {
						while (elem = results[i++]) {
							if (elem === results[i]) {
								j = duplicates.push(i)
							}
						}
						while (j--) {
							results.splice(duplicates[j], 1)
						}
					}
					sortInput = null;
					return results
				};
				getText = Sizzle.getText = function(elem) {
					var node, ret = "",
						i = 0,
						nodeType = elem.nodeType;
					if (!nodeType) {
						while (node = elem[i++]) {
							ret += getText(node)
						}
					} else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
						if (typeof elem.textContent === "string") {
							return elem.textContent
						} else {
							for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
								ret += getText(elem)
							}
						}
					} else if (nodeType === 3 || nodeType === 4) {
						return elem.nodeValue
					}
					return ret
				};
				Expr = Sizzle.selectors = {
					cacheLength: 50,
					createPseudo: markFunction,
					match: matchExpr,
					attrHandle: {},
					find: {},
					relative: {
						">": {
							dir: "parentNode",
							first: !0
						},
						" ": {
							dir: "parentNode"
						},
						"+": {
							dir: "previousSibling",
							first: !0
						},
						"~": {
							dir: "previousSibling"
						}
					},
					preFilter: {
						"ATTR": function ATTR(match) {
							match[1] = match[1].replace(runescape, funescape);
							match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape);
							if (match[2] === "~=") {
								match[3] = " " + match[3] + " "
							}
							return match.slice(0, 4)
						},
						"CHILD": function CHILD(match) {
							match[1] = match[1].toLowerCase();
							if (match[1].slice(0, 3) === "nth") {
								if (!match[3]) {
									Sizzle.error(match[0])
								}
								match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === "even" || match[3] === "odd"));
								match[5] = +(match[7] + match[8] || match[3] === "odd")
							} else if (match[3]) {
								Sizzle.error(match[0])
							}
							return match
						},
						"PSEUDO": function PSEUDO(match) {
							var excess, unquoted = !match[6] && match[2];
							if (matchExpr.CHILD.test(match[0])) {
								return null
							}
							if (match[3]) {
								match[2] = match[4] || match[5] || ""
							} else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, !0)) && (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {
								match[0] = match[0].slice(0, excess);
								match[2] = unquoted.slice(0, excess)
							}
							return match.slice(0, 3)
						}
					},
					filter: {
						"TAG": function TAG(nodeNameSelector) {
							var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
							return nodeNameSelector === "*" ? function() {
								return !0
							} : function(elem) {
								return elem.nodeName && elem.nodeName.toLowerCase() === nodeName
							}
						},
						"CLASS": function CLASS(className) {
							var pattern = classCache[className + " "];
							return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function(elem) {
								return pattern.test(typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "")
							})
						},
						"ATTR": function ATTR(name, operator, check) {
							return function(elem) {
								var result = Sizzle.attr(elem, name);
								if (result == null) {
									return operator === "!="
								}
								if (!operator) {
									return !0
								}
								result += "";
								return operator === "=" ? result === check : operator === "!=" ? result !== check : operator === "^=" ? check && result.indexOf(check) === 0 : operator === "*=" ? check && result.indexOf(check) > -1 : operator === "$=" ? check && result.slice(-check.length) === check : operator === "~=" ? (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1 : operator === "|=" ? result === check || result.slice(0, check.length + 1) === check + "-" : !1
							}
						},
						"CHILD": function CHILD(type, what, argument, first, last) {
							var simple = type.slice(0, 3) !== "nth",
								forward = type.slice(-4) !== "last",
								ofType = what === "of-type";
							return first === 1 && last === 0 ? function(elem) {
								return !!elem.parentNode
							} : function(elem, context, xml) {
								var cache, uniqueCache, outerCache, node, nodeIndex, start, dir = simple !== forward ? "nextSibling" : "previousSibling",
									parent = elem.parentNode,
									name = ofType && elem.nodeName.toLowerCase(),
									useCache = !xml && !ofType,
									diff = !1;
								if (parent) {
									if (simple) {
										while (dir) {
											node = elem;
											while (node = node[dir]) {
												if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {
													return !1
												}
											}
											start = dir = type === "only" && !start && "nextSibling"
										}
										return !0
									}
									start = [forward ? parent.firstChild : parent.lastChild];
									if (forward && useCache) {
										node = parent;
										outerCache = node[expando] || (node[expando] = {});
										uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
										cache = uniqueCache[type] || [];
										nodeIndex = cache[0] === dirruns && cache[1];
										diff = nodeIndex && cache[2];
										node = nodeIndex && parent.childNodes[nodeIndex];
										while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {
											if (node.nodeType === 1 && ++diff && node === elem) {
												uniqueCache[type] = [dirruns, nodeIndex, diff];
												break
											}
										}
									} else {
										if (useCache) {
											node = elem;
											outerCache = node[expando] || (node[expando] = {});
											uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
											cache = uniqueCache[type] || [];
											nodeIndex = cache[0] === dirruns && cache[1];
											diff = nodeIndex
										}
										if (diff === !1) {
											while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {
												if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {
													if (useCache) {
														outerCache = node[expando] || (node[expando] = {});
														uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
														uniqueCache[type] = [dirruns, diff]
													}
													if (node === elem) {
														break
													}
												}
											}
										}
									}
									diff -= last;
									return diff === first || diff % first === 0 && diff / first >= 0
								}
							}
						},
						"PSEUDO": function PSEUDO(pseudo, argument) {
							var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error("unsupported pseudo: " + pseudo);
							if (fn[expando]) {
								return fn(argument)
							}
							if (fn.length > 1) {
								args = [pseudo, pseudo, "", argument];
								return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches) {
									var idx, matched = fn(seed, argument),
										i = matched.length;
									while (i--) {
										idx = indexOf(seed, matched[i]);
										seed[idx] = !(matches[idx] = matched[i])
									}
								}) : function(elem) {
									return fn(elem, 0, args)
								}
							}
							return fn
						}
					},
					pseudos: {
						"not": markFunction(function(selector) {
							var input = [],
								results = [],
								matcher = compile(selector.replace(rtrim, "$1"));
							return matcher[expando] ? markFunction(function(seed, matches, context, xml) {
								var elem, unmatched = matcher(seed, null, xml, []),
									i = seed.length;
								while (i--) {
									if (elem = unmatched[i]) {
										seed[i] = !(matches[i] = elem)
									}
								}
							}) : function(elem, context, xml) {
								input[0] = elem;
								matcher(input, null, xml, results);
								input[0] = null;
								return !results.pop()
							}
						}),
						"has": markFunction(function(selector) {
							return function(elem) {
								return Sizzle(selector, elem).length > 0
							}
						}),
						"contains": markFunction(function(text) {
							text = text.replace(runescape, funescape);
							return function(elem) {
								return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1
							}
						}),
						"lang": markFunction(function(lang) {
							if (!ridentifier.test(lang || "")) {
								Sizzle.error("unsupported lang: " + lang)
							}
							lang = lang.replace(runescape, funescape).toLowerCase();
							return function(elem) {
								var elemLang;
								do {
									if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang")) {
										elemLang = elemLang.toLowerCase();
										return elemLang === lang || elemLang.indexOf(lang + "-") === 0
									}
								} while ((elem = elem.parentNode) && elem.nodeType === 1);
								return !1
							}
						}),
						"target": function target(elem) {
							var hash = window.location && window.location.hash;
							return hash && hash.slice(1) === elem.id
						},
						"root": function root(elem) {
							return elem === docElem
						},
						"focus": function focus(elem) {
							return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex)
						},
						"enabled": function enabled(elem) {
							return elem.disabled === !1
						},
						"disabled": function disabled(elem) {
							return elem.disabled === !0
						},
						"checked": function checked(elem) {
							var nodeName = elem.nodeName.toLowerCase();
							return nodeName === "input" && !!elem.checked || nodeName === "option" && !!elem.selected
						},
						"selected": function selected(elem) {
							if (elem.parentNode) {
								elem.parentNode.selectedIndex
							}
							return elem.selected === !0
						},
						"empty": function empty(elem) {
							for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
								if (elem.nodeType < 6) {
									return !1
								}
							}
							return !0
						},
						"parent": function parent(elem) {
							return !Expr.pseudos.empty(elem)
						},
						"header": function header(elem) {
							return rheader.test(elem.nodeName)
						},
						"input": function input(elem) {
							return rinputs.test(elem.nodeName)
						},
						"button": function button(elem) {
							var name = elem.nodeName.toLowerCase();
							return name === "input" && elem.type === "button" || name === "button"
						},
						"text": function text(elem) {
							var attr;
							return elem.nodeName.toLowerCase() === "input" && elem.type === "text" && ((attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text")
						},
						"first": createPositionalPseudo(function() {
							return [0]
						}),
						"last": createPositionalPseudo(function(matchIndexes, length) {
							return [length - 1]
						}),
						"eq": createPositionalPseudo(function(matchIndexes, length, argument) {
							return [argument < 0 ? argument + length : argument]
						}),
						"even": createPositionalPseudo(function(matchIndexes, length) {
							var i = 0;
							for (; i < length; i += 2) {
								matchIndexes.push(i)
							}
							return matchIndexes
						}),
						"odd": createPositionalPseudo(function(matchIndexes, length) {
							var i = 1;
							for (; i < length; i += 2) {
								matchIndexes.push(i)
							}
							return matchIndexes
						}),
						"lt": createPositionalPseudo(function(matchIndexes, length, argument) {
							var i = argument < 0 ? argument + length : argument;
							for (; --i >= 0;) {
								matchIndexes.push(i)
							}
							return matchIndexes
						}),
						"gt": createPositionalPseudo(function(matchIndexes, length, argument) {
							var i = argument < 0 ? argument + length : argument;
							for (; ++i < length;) {
								matchIndexes.push(i)
							}
							return matchIndexes
						})
					}
				};
				Expr.pseudos.nth = Expr.pseudos.eq;
				for (i in {
					radio: !0,
					checkbox: !0,
					file: !0,
					password: !0,
					image: !0
				}) {
					Expr.pseudos[i] = createInputPseudo(i)
				}
				for (i in {
					submit: !0,
					reset: !0
				}) {
					Expr.pseudos[i] = createButtonPseudo(i)
				}

				function setFilters() {}
				setFilters.prototype = Expr.filters = Expr.pseudos;
				Expr.setFilters = new setFilters();
				tokenize = Sizzle.tokenize = function(selector, parseOnly) {
					var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + " "];
					if (cached) {
						return parseOnly ? 0 : cached.slice(0)
					}
					soFar = selector;
					groups = [];
					preFilters = Expr.preFilter;
					while (soFar) {
						if (!matched || (match = rcomma.exec(soFar))) {
							if (match) {
								soFar = soFar.slice(match[0].length) || soFar
							}
							groups.push(tokens = [])
						}
						matched = !1;
						if (match = rcombinators.exec(soFar)) {
							matched = match.shift();
							tokens.push({
								value: matched,
								type: match[0].replace(rtrim, " ")
							});
							soFar = soFar.slice(matched.length)
						}
						for (type in Expr.filter) {
							if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
								matched = match.shift();
								tokens.push({
									value: matched,
									type: type,
									matches: match
								});
								soFar = soFar.slice(matched.length);
							}
						}
						if (!matched) {
							break
						}
					}
					return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0)
				};

				function toSelector(tokens) {
					var i = 0,
						len = tokens.length,
						selector = "";
					for (; i < len; i++) {
						selector += tokens[i].value
					}
					return selector
				}

				function addCombinator(matcher, combinator, base) {
					var dir = combinator.dir,
						checkNonElements = base && dir === "parentNode",
						doneName = done++;
					return combinator.first ? function(elem, context, xml) {
						while (elem = elem[dir]) {
							if (elem.nodeType === 1 || checkNonElements) {
								return matcher(elem, context, xml)
							}
						}
					} : function(elem, context, xml) {
						var oldCache, uniqueCache, outerCache, newCache = [dirruns, doneName];
						if (xml) {
							while (elem = elem[dir]) {
								if (elem.nodeType === 1 || checkNonElements) {
									if (matcher(elem, context, xml)) {
										return !0
									}
								}
							}
						} else {
							while (elem = elem[dir]) {
								if (elem.nodeType === 1 || checkNonElements) {
									outerCache = elem[expando] || (elem[expando] = {});
									uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});
									if ((oldCache = uniqueCache[dir]) && oldCache[0] === dirruns && oldCache[1] === doneName) {
										return newCache[2] = oldCache[2]
									} else {
										uniqueCache[dir] = newCache;
										if (newCache[2] = matcher(elem, context, xml)) {
											return !0
										}
									}
								}
							}
						}
					}
				}

				function elementMatcher(matchers) {
					return matchers.length > 1 ? function(elem, context, xml) {
						var i = matchers.length;
						while (i--) {
							if (!matchers[i](elem, context, xml)) {
								return !1
							}
						}
						return !0
					} : matchers[0]
				}

				function multipleContexts(selector, contexts, results) {
					var i = 0,
						len = contexts.length;
					for (; i < len; i++) {
						Sizzle(selector, contexts[i], results)
					}
					return results
				}

				function condense(unmatched, map, filter, context, xml) {
					var elem, newUnmatched = [],
						i = 0,
						len = unmatched.length,
						mapped = map != null;
					for (; i < len; i++) {
						if (elem = unmatched[i]) {
							if (!filter || filter(elem, context, xml)) {
								newUnmatched.push(elem);
								if (mapped) {
									map.push(i)
								}
							}
						}
					}
					return newUnmatched
				}

				function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
					if (postFilter && !postFilter[expando]) {
						postFilter = setMatcher(postFilter)
					}
					if (postFinder && !postFinder[expando]) {
						postFinder = setMatcher(postFinder, postSelector)
					}
					return markFunction(function(seed, results, context, xml) {
						var temp, i, elem, preMap = [],
							postMap = [],
							preexisting = results.length,
							elems = seed || multipleContexts(selector || "*", context.nodeType ? [context] : context, []),
							matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,
							matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;
						if (matcher) {
							matcher(matcherIn, matcherOut, context, xml)
						}
						if (postFilter) {
							temp = condense(matcherOut, postMap);
							postFilter(temp, [], context, xml);
							i = temp.length;
							while (i--) {
								if (elem = temp[i]) {
									matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem)
								}
							}
						}
						if (seed) {
							if (postFinder || preFilter) {
								if (postFinder) {
									temp = [];
									i = matcherOut.length;
									while (i--) {
										if (elem = matcherOut[i]) {
											temp.push(matcherIn[i] = elem)
										}
									}
									postFinder(null, matcherOut = [], temp, xml)
								}
								i = matcherOut.length;
								while (i--) {
									if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {
										seed[temp] = !(results[temp] = elem)
									}
								}
							}
						} else {
							matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);
							if (postFinder) {
								postFinder(null, results, matcherOut, xml)
							} else {
								push.apply(results, matcherOut)
							}
						}
					})
				}

				function matcherFromTokens(tokens) {
					var checkContext, matcher, j, len = tokens.length,
						leadingRelative = Expr.relative[tokens[0].type],
						implicitRelative = leadingRelative || Expr.relative[" "],
						i = leadingRelative ? 1 : 0,
						matchContext = addCombinator(function(elem) {
							return elem === checkContext
						}, implicitRelative, !0),
						matchAnyContext = addCombinator(function(elem) {
							return indexOf(checkContext, elem) > -1
						}, implicitRelative, !0),
						matchers = [function(elem, context, xml) {
							var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
							checkContext = null;
							return ret
						}];
					for (; i < len; i++) {
						if (matcher = Expr.relative[tokens[i].type]) {
							matchers = [addCombinator(elementMatcher(matchers), matcher)]
						} else {
							matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);
							if (matcher[expando]) {
								j = ++i;
								for (; j < len; j++) {
									if (Expr.relative[tokens[j].type]) {
										break
									}
								}
								return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(tokens.slice(0, i - 1).concat({
									value: tokens[i - 2].type === " " ? "*" : ""
								})).replace(rtrim, "$1"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens))
							}
							matchers.push(matcher)
						}
					}
					return elementMatcher(matchers)
				}

				function matcherFromGroupMatchers(elementMatchers, setMatchers) {
					var bySet = setMatchers.length > 0,
						byElement = elementMatchers.length > 0,
						superMatcher = function superMatcher(seed, context, xml, results, outermost) {
							var elem, j, matcher, matchedCount = 0,
								i = "0",
								unmatched = seed && [],
								setMatched = [],
								contextBackup = outermostContext,
								elems = seed || byElement && Expr.find.TAG("*", outermost),
								dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1,
								len = elems.length;
							if (outermost) {
								outermostContext = context === document || context || outermost
							}
							for (; i !== len && (elem = elems[i]) != null; i++) {
								if (byElement && elem) {
									j = 0;
									if (!context && elem.ownerDocument !== document) {
										setDocument(elem);
										xml = !documentIsHTML
									}
									while (matcher = elementMatchers[j++]) {
										if (matcher(elem, context || document, xml)) {
											results.push(elem);
											break
										}
									}
									if (outermost) {
										dirruns = dirrunsUnique
									}
								}
								if (bySet) {
									if (elem = !matcher && elem) {
										matchedCount--
									}
									if (seed) {
										unmatched.push(elem)
									}
								}
							}
							matchedCount += i;
							if (bySet && i !== matchedCount) {
								j = 0;
								while (matcher = setMatchers[j++]) {
									matcher(unmatched, setMatched, context, xml)
								}
								if (seed) {
									if (matchedCount > 0) {
										while (i--) {
											if (!(unmatched[i] || setMatched[i])) {
												setMatched[i] = pop.call(results)
											}
										}
									}
									setMatched = condense(setMatched)
								}
								push.apply(results, setMatched);
								if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {
									Sizzle.uniqueSort(results)
								}
							}
							if (outermost) {
								dirruns = dirrunsUnique;
								outermostContext = contextBackup
							}
							return unmatched
						};
					return bySet ? markFunction(superMatcher) : superMatcher
				}
				compile = Sizzle.compile = function(selector, match) {
					var i, setMatchers = [],
						elementMatchers = [],
						cached = compilerCache[selector + " "];
					if (!cached) {
						if (!match) {
							match = tokenize(selector)
						}
						i = match.length;
						while (i--) {
							cached = matcherFromTokens(match[i]);
							if (cached[expando]) {
								setMatchers.push(cached)
							} else {
								elementMatchers.push(cached)
							}
						}
						cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));
						cached.selector = selector
					}
					return cached
				};
				select = Sizzle.select = function(selector, context, results, seed) {
					var i, tokens, token, type, find, compiled = typeof selector === "function" && selector,
						match = !seed && tokenize(selector = compiled.selector || selector);
					results = results || [];
					if (match.length === 1) {
						tokens = match[0] = match[0].slice(0);
						if (tokens.length > 2 && (token = tokens[0]).type === "ID" && support.getById && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {
							context = (Expr.find.ID(token.matches[0].replace(runescape, funescape), context) || [])[0];
							if (!context) {
								return results
							} else if (compiled) {
								context = context.parentNode
							}
							selector = selector.slice(tokens.shift().value.length)
						}
						i = matchExpr.needsContext.test(selector) ? 0 : tokens.length;
						while (i--) {
							token = tokens[i];
							if (Expr.relative[type = token.type]) {
								break
							}
							if (find = Expr.find[type]) {
								if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {
									tokens.splice(i, 1);
									selector = seed.length && toSelector(tokens);
									if (!selector) {
										push.apply(results, seed);
										return results
									}
									break
								}
							}
						}
					}(compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);
					return results
				};
				support.sortStable = expando.split("").sort(sortOrder).join("") === expando;
				support.detectDuplicates = !!hasDuplicate;
				setDocument();
				support.sortDetached = assert(function(div1) {
					return div1.compareDocumentPosition(document.createElement("div")) & 1
				});
				if (!assert(function(div) {
					div.innerHTML = "<a href='#'></a>";
					return div.firstChild.getAttribute("href") === "#"
				})) {
					addHandle("type|href|height|width", function(elem, name, isXML) {
						if (!isXML) {
							return elem.getAttribute(name, name.toLowerCase() === "type" ? 1 : 2)
						}
					})
				}
				if (!support.attributes || !assert(function(div) {
					div.innerHTML = "<input/>";
					div.firstChild.setAttribute("value", "");
					return div.firstChild.getAttribute("value") === ""
				})) {
					addHandle("value", function(elem, name, isXML) {
						if (!isXML && elem.nodeName.toLowerCase() === "input") {
							return elem.defaultValue
						}
					})
				}
				if (!assert(function(div) {
					return div.getAttribute("disabled") == null
				})) {
					addHandle(booleans, function(elem, name, isXML) {
						var val;
						if (!isXML) {
							return elem[name] === !0 ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null
						}
					})
				}
				return Sizzle
			})(window);
			jQuery.find = Sizzle;
			jQuery.expr = Sizzle.selectors;
			jQuery.expr[":"] = jQuery.expr.pseudos;
			jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
			jQuery.text = Sizzle.getText;
			jQuery.isXMLDoc = Sizzle.isXML;
			jQuery.contains = Sizzle.contains;
			var dir = function dir(elem, _dir, until) {
				var matched = [],
					truncate = until !== undefined;
				while ((elem = elem[_dir]) && elem.nodeType !== 9) {
					if (elem.nodeType === 1) {
						if (truncate && jQuery(elem).is(until)) {
							break
						}
						matched.push(elem)
					}
				}
				return matched
			};
			var _siblings = function _siblings(n, elem) {
				var matched = [];
				for (; n; n = n.nextSibling) {
					if (n.nodeType === 1 && n !== elem) {
						matched.push(n)
					}
				}
				return matched
			};
			var rneedsContext = jQuery.expr.match.needsContext;
			var rsingleTag = /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/;
			var risSimple = /^.[^:#\[\.,]*$/;

			function winnow(elements, qualifier, not) {
				if (jQuery.isFunction(qualifier)) {
					return jQuery.grep(elements, function(elem, i) {
						return !!qualifier.call(elem, i, elem) !== not
					})
				}
				if (qualifier.nodeType) {
					return jQuery.grep(elements, function(elem) {
						return elem === qualifier !== not
					})
				}
				if (typeof qualifier === "string") {
					if (risSimple.test(qualifier)) {
						return jQuery.filter(qualifier, elements, not)
					}
					qualifier = jQuery.filter(qualifier, elements)
				}
				return jQuery.grep(elements, function(elem) {
					return indexOf.call(qualifier, elem) > -1 !== not
				})
			}
			jQuery.filter = function(expr, elems, not) {
				var elem = elems[0];
				if (not) {
					expr = ":not(" + expr + ")"
				}
				return elems.length === 1 && elem.nodeType === 1 ? jQuery.find.matchesSelector(elem, expr) ? [elem] : [] : jQuery.find.matches(expr, jQuery.grep(elems, function(elem) {
					return elem.nodeType === 1
				}))
			};
			jQuery.fn.extend({
				find: function find(selector) {
					var i, len = this.length,
						ret = [],
						self = this;
					if (typeof selector !== "string") {
						return this.pushStack(jQuery(selector).filter(function() {
							for (i = 0; i < len; i++) {
								if (jQuery.contains(self[i], this)) {
									return !0
								}
							}
						}))
					}
					for (i = 0; i < len; i++) {
						jQuery.find(selector, self[i], ret)
					}
					ret = this.pushStack(len > 1 ? jQuery.unique(ret) : ret);
					ret.selector = this.selector ? this.selector + " " + selector : selector;
					return ret
				},
				filter: function filter(selector) {
					return this.pushStack(winnow(this, selector || [], !1))
				},
				not: function not(selector) {
					return this.pushStack(winnow(this, selector || [], !0))
				},
				is: function is(selector) {
					return !!winnow(this, typeof selector === "string" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], !1).length
				}
			});
			var rootjQuery, rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
				init = jQuery.fn.init = function(selector, context, root) {
					var match, elem;
					if (!selector) {
						return this
					}
					root = root || rootjQuery;
					if (typeof selector === "string") {
						if (selector[0] === "<" && selector[selector.length - 1] === ">" && selector.length >= 3) {
							match = [null, selector, null]
						} else {
							match = rquickExpr.exec(selector)
						}
						if (match && (match[1] || !context)) {
							if (match[1]) {
								context = context instanceof jQuery ? context[0] : context;
								jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, !0));
								if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {
									for (match in context) {
										if (jQuery.isFunction(this[match])) {
											this[match](context[match])
										} else {
											this.attr(match, context[match])
										}
									}
								}
								return this
							} else {
								elem = document.getElementById(match[2]);
								if (elem && elem.parentNode) {
									this.length = 1;
									this[0] = elem
								}
								this.context = document;
								this.selector = selector;
								return this
							}
						} else if (!context || context.jquery) {
							return (context || root).find(selector)
						} else {
							return this.constructor(context).find(selector)
						}
					} else if (selector.nodeType) {
						this.context = this[0] = selector;
						this.length = 1;
						return this
					} else if (jQuery.isFunction(selector)) {
						return root.ready !== undefined ? root.ready(selector) : selector(jQuery)
					}
					if (selector.selector !== undefined) {
						this.selector = selector.selector;
						this.context = selector.context
					}
					return jQuery.makeArray(selector, this)
				};
			init.prototype = jQuery.fn;
			rootjQuery = jQuery(document);
			var rparentsprev = /^(?:parents|prev(?:Until|All))/,
				guaranteedUnique = {
					children: !0,
					contents: !0,
					next: !0,
					prev: !0
				};
			jQuery.fn.extend({
				has: function has(target) {
					var targets = jQuery(target, this),
						l = targets.length;
					return this.filter(function() {
						var i = 0;
						for (; i < l; i++) {
							if (jQuery.contains(this, targets[i])) {
								return !0
							}
						}
					})
				},
				closest: function closest(selectors, context) {
					var cur, i = 0,
						l = this.length,
						matched = [],
						pos = rneedsContext.test(selectors) || typeof selectors !== "string" ? jQuery(selectors, context || this.context) : 0;
					for (; i < l; i++) {
						for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {
							if (cur.nodeType < 11 && (pos ? pos.index(cur) > -1 : cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {
								matched.push(cur);
								break
							}
						}
					}
					return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched)
				},
				index: function index(elem) {
					if (!elem) {
						return this[0] && this[0].parentNode ? this.first().prevAll().length : -1
					}
					if (typeof elem === "string") {
						return indexOf.call(jQuery(elem), this[0])
					}
					return indexOf.call(this, elem.jquery ? elem[0] : elem)
				},
				add: function add(selector, context) {
					return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))))
				},
				addBack: function addBack(selector) {
					return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector))
				}
			});

			function sibling(cur, dir) {
				while ((cur = cur[dir]) && cur.nodeType !== 1) {}
				return cur
			}
			jQuery.each({
				parent: function parent(elem) {
					var parent = elem.parentNode;
					return parent && parent.nodeType !== 11 ? parent : null
				},
				parents: function parents(elem) {
					return dir(elem, "parentNode")
				},
				parentsUntil: function parentsUntil(elem, i, until) {
					return dir(elem, "parentNode", until)
				},
				next: function next(elem) {
					return sibling(elem, "nextSibling")
				},
				prev: function prev(elem) {
					return sibling(elem, "previousSibling")
				},
				nextAll: function nextAll(elem) {
					return dir(elem, "nextSibling")
				},
				prevAll: function prevAll(elem) {
					return dir(elem, "previousSibling")
				},
				nextUntil: function nextUntil(elem, i, until) {
					return dir(elem, "nextSibling", until)
				},
				prevUntil: function prevUntil(elem, i, until) {
					return dir(elem, "previousSibling", until)
				},
				siblings: function siblings(elem) {
					return _siblings((elem.parentNode || {}).firstChild, elem)
				},
				children: function children(elem) {
					return _siblings(elem.firstChild)
				},
				contents: function contents(elem) {
					return elem.contentDocument || jQuery.merge([], elem.childNodes)
				}
			}, function(name, fn) {
				jQuery.fn[name] = function(until, selector) {
					var matched = jQuery.map(this, fn, until);
					if (name.slice(-5) !== "Until") {
						selector = until
					}
					if (selector && typeof selector === "string") {
						matched = jQuery.filter(selector, matched)
					}
					if (this.length > 1) {
						if (!guaranteedUnique[name]) {
							jQuery.uniqueSort(matched)
						}
						if (rparentsprev.test(name)) {
							matched.reverse()
						}
					}
					return this.pushStack(matched)
				}
			});
			var rnotwhite = /\S+/g;

			function createOptions(options) {
				var object = {};
				jQuery.each(options.match(rnotwhite) || [], function(_, flag) {
					object[flag] = !0
				});
				return object
			}
			jQuery.Callbacks = function(options) {
				options = typeof options === "string" ? createOptions(options) : jQuery.extend({}, options);
				var firing, memory, _fired, _locked, list = [],
					queue = [],
					firingIndex = -1,
					fire = function fire() {
						_locked = options.once;
						_fired = firing = !0;
						for (; queue.length; firingIndex = -1) {
							memory = queue.shift();
							while (++firingIndex < list.length) {
								if (list[firingIndex].apply(memory[0], memory[1]) === !1 && options.stopOnFalse) {
									firingIndex = list.length;
									memory = !1
								}
							}
						}
						if (!options.memory) {
							memory = !1
						}
						firing = !1;
						if (_locked) {
							if (memory) {
								list = []
							} else {
								list = ""
							}
						}
					},
					self = {
						add: function add() {
							if (list) {
								if (memory && !firing) {
									firingIndex = list.length - 1;
									queue.push(memory)
								}(function add(args) {
									jQuery.each(args, function(_, arg) {
										if (jQuery.isFunction(arg)) {
											if (!options.unique || !self.has(arg)) {
												list.push(arg)
											}
										} else if (arg && arg.length && jQuery.type(arg) !== "string") {
											add(arg)
										}
									})
								})(arguments);
								if (memory && !firing) {
									fire()
								}
							}
							return this
						},
						remove: function remove() {
							jQuery.each(arguments, function(_, arg) {
								var index;
								while ((index = jQuery.inArray(arg, list, index)) > -1) {
									list.splice(index, 1);
									if (index <= firingIndex) {
										firingIndex--
									}
								}
							});
							return this
						},
						has: function has(fn) {
							return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0
						},
						empty: function empty() {
							if (list) {
								list = []
							}
							return this
						},
						disable: function disable() {
							_locked = queue = [];
							list = memory = "";
							return this
						},
						disabled: function disabled() {
							return !list
						},
						lock: function lock() {
							_locked = queue = [];
							if (!memory) {
								list = memory = ""
							}
							return this
						},
						locked: function locked() {
							return !!_locked
						},
						fireWith: function fireWith(context, args) {
							if (!_locked) {
								args = args || [];
								args = [context, args.slice ? args.slice() : args];
								queue.push(args);
								if (!firing) {
									fire()
								}
							}
							return this
						},
						fire: function fire() {
							self.fireWith(this, arguments);
							return this
						},
						fired: function fired() {
							return !!_fired
						}
					};
				return self
			};
			jQuery.extend({
				Deferred: function Deferred(func) {
					var tuples = [
							["resolve", "done", jQuery.Callbacks("once memory"), "resolved"],
							["reject", "fail", jQuery.Callbacks("once memory"), "rejected"],
							["notify", "progress", jQuery.Callbacks("memory")]
						],
						_state = "pending",
						_promise = {
							state: function state() {
								return _state
							},
							always: function always() {
								deferred.done(arguments).fail(arguments);
								return this
							},
							then: function then() {
								var fns = arguments;
								return jQuery.Deferred(function(newDefer) {
									jQuery.each(tuples, function(i, tuple) {
										var fn = jQuery.isFunction(fns[i]) && fns[i];
										deferred[tuple[1]](function() {
											var returned = fn && fn.apply(this, arguments);
											if (returned && jQuery.isFunction(returned.promise)) {
												returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject)
											} else {
												newDefer[tuple[0] + "With"](this === _promise ? newDefer.promise() : this, fn ? [returned] : arguments)
											}
										})
									});
									fns = null
								}).promise()
							},
							promise: function promise(obj) {
								return obj != null ? jQuery.extend(obj, _promise) : _promise
							}
						},
						deferred = {};
					_promise.pipe = _promise.then;
					jQuery.each(tuples, function(i, tuple) {
						var list = tuple[2],
							stateString = tuple[3];
						_promise[tuple[1]] = list.add;
						if (stateString) {
							list.add(function() {
								_state = stateString
							}, tuples[i ^ 1][2].disable, tuples[2][2].lock)
						}
						deferred[tuple[0]] = function() {
							deferred[tuple[0] + "With"](this === deferred ? _promise : this, arguments);
							return this
						};
						deferred[tuple[0] + "With"] = list.fireWith
					});
					_promise.promise(deferred);
					if (func) {
						func.call(deferred, deferred)
					}
					return deferred
				},
				when: function when(subordinate) {
					var i = 0,
						resolveValues = _slice.call(arguments),
						length = resolveValues.length,
						remaining = length !== 1 || subordinate && jQuery.isFunction(subordinate.promise) ? length : 0,
						deferred = remaining === 1 ? subordinate : jQuery.Deferred(),
						updateFunc = function updateFunc(i, contexts, values) {
							return function(value) {
								contexts[i] = this;
								values[i] = arguments.length > 1 ? _slice.call(arguments) : value;
								if (values === progressValues) {
									deferred.notifyWith(contexts, values)
								} else if (!--remaining) {
									deferred.resolveWith(contexts, values)
								}
							}
						},
						progressValues, progressContexts, resolveContexts;
					if (length > 1) {
						progressValues = new Array(length);
						progressContexts = new Array(length);
						resolveContexts = new Array(length);
						for (; i < length; i++) {
							if (resolveValues[i] && jQuery.isFunction(resolveValues[i].promise)) {
								resolveValues[i].promise().progress(updateFunc(i, progressContexts, progressValues)).done(updateFunc(i, resolveContexts, resolveValues)).fail(deferred.reject)
							} else {
								--remaining
							}
						}
					}
					if (!remaining) {
						deferred.resolveWith(resolveContexts, resolveValues)
					}
					return deferred.promise()
				}
			});
			var readyList;
			jQuery.fn.ready = function(fn) {
				jQuery.ready.promise().done(fn);
				return this
			};
			jQuery.extend({
				isReady: !1,
				readyWait: 1,
				holdReady: function holdReady(hold) {
					if (hold) {
						jQuery.readyWait++
					} else {
						jQuery.ready(!0)
					}
				},
				ready: function ready(wait) {
					if (wait === !0 ? --jQuery.readyWait : jQuery.isReady) {
						return
					}
					jQuery.isReady = !0;
					if (wait !== !0 && --jQuery.readyWait > 0) {
						return
					}
					readyList.resolveWith(document, [jQuery]);
					if (jQuery.fn.triggerHandler) {
						jQuery(document).triggerHandler("ready");
						jQuery(document).off("ready")
					}
				}
			});

			function completed() {
				document.removeEventListener("DOMContentLoaded", completed);
				window.removeEventListener("load", completed);
				jQuery.ready()
			}
			jQuery.ready.promise = function(obj) {
				if (!readyList) {
					readyList = jQuery.Deferred();
					if (document.readyState === "complete" || document.readyState !== "loading" && !document.documentElement.doScroll) {
						window.setTimeout(jQuery.ready)
					} else {
						document.addEventListener("DOMContentLoaded", completed);
						window.addEventListener("load", completed)
					}
				}
				return readyList.promise(obj)
			};
			jQuery.ready.promise();
			var access = function access(elems, fn, key, value, chainable, emptyGet, raw) {
				var i = 0,
					len = elems.length,
					bulk = key == null;
				if (jQuery.type(key) === "object") {
					chainable = !0;
					for (i in key) {
						access(elems, fn, i, key[i], !0, emptyGet, raw)
					}
				} else if (value !== undefined) {
					chainable = !0;
					if (!jQuery.isFunction(value)) {
						raw = !0
					}
					if (bulk) {
						if (raw) {
							fn.call(elems, value);
							fn = null
						} else {
							bulk = fn;
							fn = function(elem, key, value) {
								return bulk.call(jQuery(elem), value)
							}
						}
					}
					if (fn) {
						for (; i < len; i++) {
							fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)))
						}
					}
				}
				return chainable ? elems : bulk ? fn.call(elems) : len ? fn(elems[0], key) : emptyGet
			};
			var acceptData = function acceptData(owner) {
				return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType
			};

			function Data() {
				this.expando = jQuery.expando + Data.uid++
			}
			Data.uid = 1;
			Data.prototype = {
				register: function register(owner, initial) {
					var value = initial || {};
					if (owner.nodeType) {
						owner[this.expando] = value
					} else {
						Object.defineProperty(owner, this.expando, {
							value: value,
							writable: !0,
							configurable: !0
						})
					}
					return owner[this.expando]
				},
				cache: function cache(owner) {
					if (!acceptData(owner)) {
						return {}
					}
					var value = owner[this.expando];
					if (!value) {
						value = {};
						if (acceptData(owner)) {
							if (owner.nodeType) {
								owner[this.expando] = value
							} else {
								Object.defineProperty(owner, this.expando, {
									value: value,
									configurable: !0
								})
							}
						}
					}
					return value
				},
				set: function set(owner, data, value) {
					var prop, cache = this.cache(owner);
					if (typeof data === "string") {
						cache[data] = value
					} else {
						for (prop in data) {
							cache[prop] = data[prop]
						}
					}
					return cache
				},
				get: function get(owner, key) {
					return key === undefined ? this.cache(owner) : owner[this.expando] && owner[this.expando][key]
				},
				access: function access(owner, key, value) {
					var stored;
					if (key === undefined || key && typeof key === "string" && value === undefined) {
						stored = this.get(owner, key);
						return stored !== undefined ? stored : this.get(owner, jQuery.camelCase(key))
					}
					this.set(owner, key, value);
					return value !== undefined ? value : key
				},
				remove: function remove(owner, key) {
					var i, name, camel, cache = owner[this.expando];
					if (cache === undefined) {
						return
					}
					if (key === undefined) {
						this.register(owner)
					} else {
						if (jQuery.isArray(key)) {
							name = key.concat(key.map(jQuery.camelCase))
						} else {
							camel = jQuery.camelCase(key);
							if (key in cache) {
								name = [key, camel]
							} else {
								name = camel;
								name = name in cache ? [name] : name.match(rnotwhite) || []
							}
						}
						i = name.length;
						while (i--) {
							delete cache[name[i]]
						}
					}
					if (key === undefined || jQuery.isEmptyObject(cache)) {
						if (owner.nodeType) {
							owner[this.expando] = undefined
						} else {
							delete owner[this.expando]
						}
					}
				},
				hasData: function hasData(owner) {
					var cache = owner[this.expando];
					return cache !== undefined && !jQuery.isEmptyObject(cache)
				}
			};
			var dataPriv = new Data();
			var dataUser = new Data();
			var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
				rmultiDash = /[A-Z]/g;

			function dataAttr(elem, key, data) {
				var name;
				if (data === undefined && elem.nodeType === 1) {
					name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase();
					data = elem.getAttribute(name);
					if (typeof data === "string") {
						try {
							data = data === "true" ? true : data === "false" ? false : data === "null" ? null : +data + "" === data ? +data : rbrace.test(data) ? jQuery.parseJSON(data) : data
						} catch (e) {}
						dataUser.set(elem, key, data)
					} else {
						data = undefined
					}
				}
				return data
			}
			jQuery.extend({
				hasData: function hasData(elem) {
					return dataUser.hasData(elem) || dataPriv.hasData(elem)
				},
				data: function data(elem, name, _data) {
					return dataUser.access(elem, name, _data)
				},
				removeData: function removeData(elem, name) {
					dataUser.remove(elem, name)
				},
				_data: function _data(elem, name, data) {
					return dataPriv.access(elem, name, data)
				},
				_removeData: function _removeData(elem, name) {
					dataPriv.remove(elem, name)
				}
			});
			jQuery.fn.extend({
				data: function data(key, value) {
					var i, name, data, elem = this[0],
						attrs = elem && elem.attributes;
					if (key === undefined) {
						if (this.length) {
							data = dataUser.get(elem);
							if (elem.nodeType === 1 && !dataPriv.get(elem, "hasDataAttrs")) {
								i = attrs.length;
								while (i--) {
									if (attrs[i]) {
										name = attrs[i].name;
										if (name.indexOf("data-") === 0) {
											name = jQuery.camelCase(name.slice(5));
											dataAttr(elem, name, data[name])
										}
									}
								}
								dataPriv.set(elem, "hasDataAttrs", !0)
							}
						}
						return data
					}
					if (typeof key === "object") {
						return this.each(function() {
							dataUser.set(this, key)
						})
					}
					return access(this, function(value) {
						var data, camelKey;
						if (elem && value === undefined) {
							data = dataUser.get(elem, key) || dataUser.get(elem, key.replace(rmultiDash, "-$&").toLowerCase());
							if (data !== undefined) {
								return data
							}
							camelKey = jQuery.camelCase(key);
							data = dataUser.get(elem, camelKey);
							if (data !== undefined) {
								return data
							}
							data = dataAttr(elem, camelKey, undefined);
							if (data !== undefined) {
								return data
							}
							return
						}
						camelKey = jQuery.camelCase(key);
						this.each(function() {
							var data = dataUser.get(this, camelKey);
							dataUser.set(this, camelKey, value);
							if (key.indexOf("-") > -1 && data !== undefined) {
								dataUser.set(this, key, value)
							}
						})
					}, null, value, arguments.length > 1, null, !0)
				},
				removeData: function removeData(key) {
					return this.each(function() {
						dataUser.remove(this, key)
					})
				}
			});
			jQuery.extend({
				queue: function queue(elem, type, data) {
					var queue;
					if (elem) {
						type = (type || "fx") + "queue";
						queue = dataPriv.get(elem, type);
						if (data) {
							if (!queue || jQuery.isArray(data)) {
								queue = dataPriv.access(elem, type, jQuery.makeArray(data))
							} else {
								queue.push(data)
							}
						}
						return queue || []
					}
				},
				dequeue: function dequeue(elem, type) {
					type = type || "fx";
					var queue = jQuery.queue(elem, type),
						startLength = queue.length,
						fn = queue.shift(),
						hooks = jQuery._queueHooks(elem, type),
						next = function next() {
							jQuery.dequeue(elem, type)
						};
					if (fn === "inprogress") {
						fn = queue.shift();
						startLength--
					}
					if (fn) {
						if (type === "fx") {
							queue.unshift("inprogress")
						}
						delete hooks.stop;
						fn.call(elem, next, hooks)
					}
					if (!startLength && hooks) {
						hooks.empty.fire()
					}
				},
				_queueHooks: function _queueHooks(elem, type) {
					var key = type + "queueHooks";
					return dataPriv.get(elem, key) || dataPriv.access(elem, key, {
						empty: jQuery.Callbacks("once memory").add(function() {
							dataPriv.remove(elem, [type + "queue", key])
						})
					})
				}
			});
			jQuery.fn.extend({
				queue: function queue(type, data) {
					var setter = 2;
					if (typeof type !== "string") {
						data = type;
						type = "fx";
						setter--
					}
					if (arguments.length < setter) {
						return jQuery.queue(this[0], type)
					}
					return data === undefined ? this : this.each(function() {
						var queue = jQuery.queue(this, type, data);
						jQuery._queueHooks(this, type);
						if (type === "fx" && queue[0] !== "inprogress") {
							jQuery.dequeue(this, type)
						}
					})
				},
				dequeue: function dequeue(type) {
					return this.each(function() {
						jQuery.dequeue(this, type)
					})
				},
				clearQueue: function clearQueue(type) {
					return this.queue(type || "fx", [])
				},
				promise: function promise(type, obj) {
					var tmp, count = 1,
						defer = jQuery.Deferred(),
						elements = this,
						i = this.length,
						resolve = function resolve() {
							if (!--count) {
								defer.resolveWith(elements, [elements])
							}
						};
					if (typeof type !== "string") {
						obj = type;
						type = undefined
					}
					type = type || "fx";
					while (i--) {
						tmp = dataPriv.get(elements[i], type + "queueHooks");
						if (tmp && tmp.empty) {
							count++;
							tmp.empty.add(resolve)
						}
					}
					resolve();
					return defer.promise(obj)
				}
			});
			var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;
			var rcssNum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i");
			var cssExpand = ["Top", "Right", "Bottom", "Left"];
			var isHidden = function isHidden(elem, el) {
				elem = el || elem;
				return jQuery.css(elem, "display") === "none" || !jQuery.contains(elem.ownerDocument, elem)
			};

			function adjustCSS(elem, prop, valueParts, tween) {
				var adjusted, scale = 1,
					maxIterations = 20,
					currentValue = tween ? function() {
						return tween.cur()
					} : function() {
						return jQuery.css(elem, prop, "")
					},
					initial = currentValue(),
					unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? "" : "px"),
					initialInUnit = (jQuery.cssNumber[prop] || unit !== "px" && +initial) && rcssNum.exec(jQuery.css(elem, prop));
				if (initialInUnit && initialInUnit[3] !== unit) {
					unit = unit || initialInUnit[3];
					valueParts = valueParts || [];
					initialInUnit = +initial || 1;
					do {
						scale = scale || ".5";
						initialInUnit = initialInUnit / scale;
						jQuery.style(elem, prop, initialInUnit + unit)
					} while (scale !== (scale = currentValue() / initial) && scale !== 1 && --maxIterations)
				}
				if (valueParts) {
					initialInUnit = +initialInUnit || +initial || 0;
					adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];
					if (tween) {
						tween.unit = unit;
						tween.start = initialInUnit;
						tween.end = adjusted
					}
				}
				return adjusted
			}
			var rcheckableType = /^(?:checkbox|radio)$/i;
			var rtagName = /<([\w:-]+)/;
			var rscriptType = /^$|\/(?:java|ecma)script/i;
			var wrapMap = {
				option: [1, "<select multiple='multiple'>", "</select>"],
				thead: [1, "<table>", "</table>"],
				col: [2, "<table><colgroup>", "</colgroup></table>"],
				tr: [2, "<table><tbody>", "</tbody></table>"],
				td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
				_default: [0, "", ""]
			};
			wrapMap.optgroup = wrapMap.option;
			wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
			wrapMap.th = wrapMap.td;

			function getAll(context, tag) {
				var ret = typeof context.getElementsByTagName !== "undefined" ? context.getElementsByTagName(tag || "*") : typeof context.querySelectorAll !== "undefined" ? context.querySelectorAll(tag || "*") : [];
				return tag === undefined || tag && jQuery.nodeName(context, tag) ? jQuery.merge([context], ret) : ret
			}

			function setGlobalEval(elems, refElements) {
				var i = 0,
					l = elems.length;
				for (; i < l; i++) {
					dataPriv.set(elems[i], "globalEval", !refElements || dataPriv.get(refElements[i], "globalEval"))
				}
			}
			var rhtml = /<|&#?\w+;/;

			function buildFragment(elems, context, scripts, selection, ignored) {
				var elem, tmp, tag, wrap, contains, j, fragment = context.createDocumentFragment(),
					nodes = [],
					i = 0,
					l = elems.length;
				for (; i < l; i++) {
					elem = elems[i];
					if (elem || elem === 0) {
						if (jQuery.type(elem) === "object") {
							jQuery.merge(nodes, elem.nodeType ? [elem] : elem)
						} else if (!rhtml.test(elem)) {
							nodes.push(context.createTextNode(elem))
						} else {
							tmp = tmp || fragment.appendChild(context.createElement("div"));
							tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();
							wrap = wrapMap[tag] || wrapMap._default;
							tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];
							j = wrap[0];
							while (j--) {
								tmp = tmp.lastChild
							}
							jQuery.merge(nodes, tmp.childNodes);
							tmp = fragment.firstChild;
							tmp.textContent = ""
						}
					}
				}
				fragment.textContent = "";
				i = 0;
				while (elem = nodes[i++]) {
					if (selection && jQuery.inArray(elem, selection) > -1) {
						if (ignored) {
							ignored.push(elem)
						}
						continue
					}
					contains = jQuery.contains(elem.ownerDocument, elem);
					tmp = getAll(fragment.appendChild(elem), "script");
					if (contains) {
						setGlobalEval(tmp)
					}
					if (scripts) {
						j = 0;
						while (elem = tmp[j++]) {
							if (rscriptType.test(elem.type || "")) {
								scripts.push(elem)
							}
						}
					}
				}
				return fragment
			}(function() {
				var fragment = document.createDocumentFragment(),
					div = fragment.appendChild(document.createElement("div")),
					input = document.createElement("input");
				input.setAttribute("type", "radio");
				input.setAttribute("checked", "checked");
				input.setAttribute("name", "t");
				div.appendChild(input);
				support.checkClone = div.cloneNode(!0).cloneNode(!0).lastChild.checked;
				div.innerHTML = "<textarea>x</textarea>";
				support.noCloneChecked = !!div.cloneNode(!0).lastChild.defaultValue
			})();
			var rkeyEvent = /^key/,
				rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
				rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

			function returnTrue() {
				return !0
			}

			function returnFalse() {
				return !1
			}

			function safeActiveElement() {
				try {
					return document.activeElement
				} catch (err) {}
			}

			function _on(elem, types, selector, data, fn, one) {
				var origFn, type;
				if (typeof types === "object") {
					if (typeof selector !== "string") {
						data = data || selector;
						selector = undefined
					}
					for (type in types) {
						_on(elem, type, selector, data, types[type], one)
					}
					return elem
				}
				if (data == null && fn == null) {
					fn = selector;
					data = selector = undefined
				} else if (fn == null) {
					if (typeof selector === "string") {
						fn = data;
						data = undefined
					} else {
						fn = data;
						data = selector;
						selector = undefined
					}
				}
				if (fn === !1) {
					fn = returnFalse
				} else if (!fn) {
					return elem
				}
				if (one === 1) {
					origFn = fn;
					fn = function(event) {
						jQuery().off(event);
						return origFn.apply(this, arguments)
					};
					fn.guid = origFn.guid || (origFn.guid = jQuery.guid++)
				}
				return elem.each(function() {
					jQuery.event.add(this, types, fn, data, selector)
				})
			}
			jQuery.event = {
				global: {},
				add: function add(elem, types, handler, data, selector) {
					var handleObjIn, eventHandle, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.get(elem);
					if (!elemData) {
						return
					}
					if (handler.handler) {
						handleObjIn = handler;
						handler = handleObjIn.handler;
						selector = handleObjIn.selector
					}
					if (!handler.guid) {
						handler.guid = jQuery.guid++
					}
					if (!(events = elemData.events)) {
						events = elemData.events = {}
					}
					if (!(eventHandle = elemData.handle)) {
						eventHandle = elemData.handle = function(e) {
							return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined
						}
					}
					types = (types || "").match(rnotwhite) || [""];
					t = types.length;
					while (t--) {
						tmp = rtypenamespace.exec(types[t]) || [];
						type = origType = tmp[1];
						namespaces = (tmp[2] || "").split(".").sort();
						if (!type) {
							continue
						}
						special = jQuery.event.special[type] || {};
						type = (selector ? special.delegateType : special.bindType) || type;
						special = jQuery.event.special[type] || {};
						handleObj = jQuery.extend({
							type: type,
							origType: origType,
							data: data,
							handler: handler,
							guid: handler.guid,
							selector: selector,
							needsContext: selector && jQuery.expr.match.needsContext.test(selector),
							namespace: namespaces.join(".")
						}, handleObjIn);
						if (!(handlers = events[type])) {
							handlers = events[type] = [];
							handlers.delegateCount = 0;
							if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === !1) {
								if (elem.addEventListener) {
									elem.addEventListener(type, eventHandle)
								}
							}
						}
						if (special.add) {
							special.add.call(elem, handleObj);
							if (!handleObj.handler.guid) {
								handleObj.handler.guid = handler.guid
							}
						}
						if (selector) {
							handlers.splice(handlers.delegateCount++, 0, handleObj)
						} else {
							handlers.push(handleObj)
						}
						jQuery.event.global[type] = !0
					}
				},
				remove: function remove(elem, types, handler, selector, mappedTypes) {
					var j, origCount, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.hasData(elem) && dataPriv.get(elem);
					if (!elemData || !(events = elemData.events)) {
						return
					}
					types = (types || "").match(rnotwhite) || [""];
					t = types.length;
					while (t--) {
						tmp = rtypenamespace.exec(types[t]) || [];
						type = origType = tmp[1];
						namespaces = (tmp[2] || "").split(".").sort();
						if (!type) {
							for (type in events) {
								jQuery.event.remove(elem, type + types[t], handler, selector, !0)
							}
							continue
						}
						special = jQuery.event.special[type] || {};
						type = (selector ? special.delegateType : special.bindType) || type;
						handlers = events[type] || [];
						tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)");
						origCount = j = handlers.length;
						while (j--) {
							handleObj = handlers[j];
							if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === "**" && handleObj.selector)) {
								handlers.splice(j, 1);
								if (handleObj.selector) {
									handlers.delegateCount--
								}
								if (special.remove) {
									special.remove.call(elem, handleObj)
								}
							}
						}
						if (origCount && !handlers.length) {
							if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === !1) {
								jQuery.removeEvent(elem, type, elemData.handle)
							}
							delete events[type]
						}
					}
					if (jQuery.isEmptyObject(events)) {
						dataPriv.remove(elem, "handle events")
					}
				},
				dispatch: function dispatch(event) {
					event = jQuery.event.fix(event);
					var i, j, ret, matched, handleObj, handlerQueue = [],
						args = _slice.call(arguments),
						handlers = (dataPriv.get(this, "events") || {})[event.type] || [],
						special = jQuery.event.special[event.type] || {};
					args[0] = event;
					event.delegateTarget = this;
					if (special.preDispatch && special.preDispatch.call(this, event) === !1) {
						return
					}
					handlerQueue = jQuery.event.handlers.call(this, event, handlers);
					i = 0;
					while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {
						event.currentTarget = matched.elem;
						j = 0;
						while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {
							if (!event.rnamespace || event.rnamespace.test(handleObj.namespace)) {
								event.handleObj = handleObj;
								event.data = handleObj.data;
								ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);
								if (ret !== undefined) {
									if ((event.result = ret) === !1) {
										event.preventDefault();
										event.stopPropagation()
									}
								}
							}
						}
					}
					if (special.postDispatch) {
						special.postDispatch.call(this, event)
					}
					return event.result
				},
				handlers: function handlers(event, _handlers) {
					var i, matches, sel, handleObj, handlerQueue = [],
						delegateCount = _handlers.delegateCount,
						cur = event.target;
					if (delegateCount && cur.nodeType && (event.type !== "click" || isNaN(event.button) || event.button < 1)) {
						for (; cur !== this; cur = cur.parentNode || this) {
							if (cur.nodeType === 1 && (cur.disabled !== !0 || event.type !== "click")) {
								matches = [];
								for (i = 0; i < delegateCount; i++) {
									handleObj = _handlers[i];
									sel = handleObj.selector + " ";
									if (matches[sel] === undefined) {
										matches[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length
									}
									if (matches[sel]) {
										matches.push(handleObj)
									}
								}
								if (matches.length) {
									handlerQueue.push({
										elem: cur,
										handlers: matches
									})
								}
							}
						}
					}
					if (delegateCount < _handlers.length) {
						handlerQueue.push({
							elem: this,
							handlers: _handlers.slice(delegateCount)
						})
					}
					return handlerQueue
				},
				props: ("altKey bubbles cancelable ctrlKey currentTarget detail eventPhase " + "metaKey relatedTarget shiftKey target timeStamp view which").split(" "),
				fixHooks: {},
				keyHooks: {
					props: "char charCode key keyCode".split(" "),
					filter: function filter(event, original) {
						if (event.which == null) {
							event.which = original.charCode != null ? original.charCode : original.keyCode
						}
						return event
					}
				},
				mouseHooks: {
					props: ("button buttons clientX clientY offsetX offsetY pageX pageY " + "screenX screenY toElement").split(" "),
					filter: function filter(event, original) {
						var eventDoc, doc, body, button = original.button;
						if (event.pageX == null && original.clientX != null) {
							eventDoc = event.target.ownerDocument || document;
							doc = eventDoc.documentElement;
							body = eventDoc.body;
							event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
							event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)
						}
						if (!event.which && button !== undefined) {
							event.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0
						}
						return event
					}
				},
				fix: function fix(event) {
					if (event[jQuery.expando]) {
						return event
					}
					var i, prop, copy, type = event.type,
						originalEvent = event,
						fixHook = this.fixHooks[type];
					if (!fixHook) {
						this.fixHooks[type] = fixHook = rmouseEvent.test(type) ? this.mouseHooks : rkeyEvent.test(type) ? this.keyHooks : {}
					}
					copy = fixHook.props ? this.props.concat(fixHook.props) : this.props;
					event = new jQuery.Event(originalEvent);
					i = copy.length;
					while (i--) {
						prop = copy[i];
						event[prop] = originalEvent[prop]
					}
					if (!event.target) {
						event.target = document
					}
					if (event.target.nodeType === 3) {
						event.target = event.target.parentNode
					}
					return fixHook.filter ? fixHook.filter(event, originalEvent) : event
				},
				special: {
					load: {
						noBubble: !0
					},
					focus: {
						trigger: function trigger() {
							if (this !== safeActiveElement() && this.focus) {
								this.focus();
								return !1
							}
						},
						delegateType: "focusin"
					},
					blur: {
						trigger: function trigger() {
							if (this === safeActiveElement() && this.blur) {
								this.blur();
								return !1
							}
						},
						delegateType: "focusout"
					},
					click: {
						trigger: function trigger() {
							if (this.type === "checkbox" && this.click && jQuery.nodeName(this, "input")) {
								this.click();
								return !1
							}
						},
						_default: function _default(event) {
							return jQuery.nodeName(event.target, "a")
						}
					},
					beforeunload: {
						postDispatch: function postDispatch(event) {
							if (event.result !== undefined && event.originalEvent) {
								event.originalEvent.returnValue = event.result
							}
						}
					}
				}
			};
			jQuery.removeEvent = function(elem, type, handle) {
				if (elem.removeEventListener) {
					elem.removeEventListener(type, handle)
				}
			};
			jQuery.Event = function(src, props) {
				if (!(this instanceof jQuery.Event)) {
					return new jQuery.Event(src, props)
				}
				if (src && src.type) {
					this.originalEvent = src;
					this.type = src.type;
					this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && src.returnValue === !1 ? returnTrue : returnFalse
				} else {
					this.type = src
				}
				if (props) {
					jQuery.extend(this, props)
				}
				this.timeStamp = src && src.timeStamp || jQuery.now();
				this[jQuery.expando] = !0
			};
			jQuery.Event.prototype = {
				constructor: jQuery.Event,
				isDefaultPrevented: returnFalse,
				isPropagationStopped: returnFalse,
				isImmediatePropagationStopped: returnFalse,
				isSimulated: !1,
				preventDefault: function preventDefault() {
					var e = this.originalEvent;
					this.isDefaultPrevented = returnTrue;
					if (e && !this.isSimulated) {
						e.preventDefault()
					}
				},
				stopPropagation: function stopPropagation() {
					var e = this.originalEvent;
					this.isPropagationStopped = returnTrue;
					if (e && !this.isSimulated) {
						e.stopPropagation()
					}
				},
				stopImmediatePropagation: function stopImmediatePropagation() {
					var e = this.originalEvent;
					this.isImmediatePropagationStopped = returnTrue;
					if (e && !this.isSimulated) {
						e.stopImmediatePropagation()
					}
					this.stopPropagation()
				}
			};
			jQuery.each({
				mouseenter: "mouseover",
				mouseleave: "mouseout",
				pointerenter: "pointerover",
				pointerleave: "pointerout"
			}, function(orig, fix) {
				jQuery.event.special[orig] = {
					delegateType: fix,
					bindType: fix,
					handle: function handle(event) {
						var ret, target = this,
							related = event.relatedTarget,
							handleObj = event.handleObj;
						if (!related || related !== target && !jQuery.contains(target, related)) {
							event.type = handleObj.origType;
							ret = handleObj.handler.apply(this, arguments);
							event.type = fix
						}
						return ret
					}
				}
			});
			jQuery.fn.extend({
				on: function on(types, selector, data, fn) {
					return _on(this, types, selector, data, fn)
				},
				one: function one(types, selector, data, fn) {
					return _on(this, types, selector, data, fn, 1)
				},
				off: function off(types, selector, fn) {
					var handleObj, type;
					if (types && types.preventDefault && types.handleObj) {
						handleObj = types.handleObj;
						jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);
						return this
					}
					if (typeof types === "object") {
						for (type in types) {
							this.off(type, selector, types[type])
						}
						return this
					}
					if (selector === !1 || typeof selector === "function") {
						fn = selector;
						selector = undefined
					}
					if (fn === !1) {
						fn = returnFalse
					}
					return this.each(function() {
						jQuery.event.remove(this, types, fn, selector)
					})
				}
			});
			var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,
				rnoInnerhtml = /<script|<style|<link/i,
				rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
				rscriptTypeMasked = /^true\/(.*)/,
				rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

			function manipulationTarget(elem, content) {
				return jQuery.nodeName(elem, "table") && jQuery.nodeName(content.nodeType !== 11 ? content : content.firstChild, "tr") ? elem.getElementsByTagName("tbody")[0] || elem.appendChild(elem.ownerDocument.createElement("tbody")) : elem
			}

			function disableScript(elem) {
				elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
				return elem
			}

			function restoreScript(elem) {
				var match = rscriptTypeMasked.exec(elem.type);
				if (match) {
					elem.type = match[1]
				} else {
					elem.removeAttribute("type")
				}
				return elem
			}

			function cloneCopyEvent(src, dest) {
				var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;
				if (dest.nodeType !== 1) {
					return
				}
				if (dataPriv.hasData(src)) {
					pdataOld = dataPriv.access(src);
					pdataCur = dataPriv.set(dest, pdataOld);
					events = pdataOld.events;
					if (events) {
						delete pdataCur.handle;
						pdataCur.events = {};
						for (type in events) {
							for (i = 0, l = events[type].length; i < l; i++) {
								jQuery.event.add(dest, type, events[type][i])
							}
						}
					}
				}
				if (dataUser.hasData(src)) {
					udataOld = dataUser.access(src);
					udataCur = jQuery.extend({}, udataOld);
					dataUser.set(dest, udataCur)
				}
			}

			function fixInput(src, dest) {
				var nodeName = dest.nodeName.toLowerCase();
				if (nodeName === "input" && rcheckableType.test(src.type)) {
					dest.checked = src.checked
				} else if (nodeName === "input" || nodeName === "textarea") {
					dest.defaultValue = src.defaultValue
				}
			}

			function domManip(collection, args, callback, ignored) {
				args = concat.apply([], args);
				var fragment, first, scripts, hasScripts, node, doc, i = 0,
					l = collection.length,
					iNoClone = l - 1,
					value = args[0],
					isFunction = jQuery.isFunction(value);
				if (isFunction || l > 1 && typeof value === "string" && !support.checkClone && rchecked.test(value)) {
					return collection.each(function(index) {
						var self = collection.eq(index);
						if (isFunction) {
							args[0] = value.call(this, index, self.html())
						}
						domManip(self, args, callback, ignored)
					})
				}
				if (l) {
					fragment = buildFragment(args, collection[0].ownerDocument, !1, collection, ignored);
					first = fragment.firstChild;
					if (fragment.childNodes.length === 1) {
						fragment = first
					}
					if (first || ignored) {
						scripts = jQuery.map(getAll(fragment, "script"), disableScript);
						hasScripts = scripts.length;
						for (; i < l; i++) {
							node = fragment;
							if (i !== iNoClone) {
								node = jQuery.clone(node, !0, !0);
								if (hasScripts) {
									jQuery.merge(scripts, getAll(node, "script"))
								}
							}
							callback.call(collection[i], node, i)
						}
						if (hasScripts) {
							doc = scripts[scripts.length - 1].ownerDocument;
							jQuery.map(scripts, restoreScript);
							for (i = 0; i < hasScripts; i++) {
								node = scripts[i];
								if (rscriptType.test(node.type || "") && !dataPriv.access(node, "globalEval") && jQuery.contains(doc, node)) {
									if (node.src) {
										if (jQuery._evalUrl) {
											jQuery._evalUrl(node.src)
										}
									} else {
										jQuery.globalEval(node.textContent.replace(rcleanScript, ""))
									}
								}
							}
						}
					}
				}
				return collection
			}

			function _remove(elem, selector, keepData) {
				var node, nodes = selector ? jQuery.filter(selector, elem) : elem,
					i = 0;
				for (;
					(node = nodes[i]) != null; i++) {
					if (!keepData && node.nodeType === 1) {
						jQuery.cleanData(getAll(node))
					}
					if (node.parentNode) {
						if (keepData && jQuery.contains(node.ownerDocument, node)) {
							setGlobalEval(getAll(node, "script"))
						}
						node.parentNode.removeChild(node)
					}
				}
				return elem
			}
			jQuery.extend({
				htmlPrefilter: function htmlPrefilter(html) {
					return html.replace(rxhtmlTag, "<$1></$2>")
				},
				clone: function clone(elem, dataAndEvents, deepDataAndEvents) {
					var i, l, srcElements, destElements, clone = elem.cloneNode(!0),
						inPage = jQuery.contains(elem.ownerDocument, elem);
					if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {
						destElements = getAll(clone);
						srcElements = getAll(elem);
						for (i = 0, l = srcElements.length; i < l; i++) {
							fixInput(srcElements[i], destElements[i])
						}
					}
					if (dataAndEvents) {
						if (deepDataAndEvents) {
							srcElements = srcElements || getAll(elem);
							destElements = destElements || getAll(clone);
							for (i = 0, l = srcElements.length; i < l; i++) {
								cloneCopyEvent(srcElements[i], destElements[i])
							}
						} else {
							cloneCopyEvent(elem, clone)
						}
					}
					destElements = getAll(clone, "script");
					if (destElements.length > 0) {
						setGlobalEval(destElements, !inPage && getAll(elem, "script"))
					}
					return clone
				},
				cleanData: function cleanData(elems) {
					var data, elem, type, special = jQuery.event.special,
						i = 0;
					for (;
						(elem = elems[i]) !== undefined; i++) {
						if (acceptData(elem)) {
							if (data = elem[dataPriv.expando]) {
								if (data.events) {
									for (type in data.events) {
										if (special[type]) {
											jQuery.event.remove(elem, type)
										} else {
											jQuery.removeEvent(elem, type, data.handle)
										}
									}
								}
								elem[dataPriv.expando] = undefined
							}
							if (elem[dataUser.expando]) {
								elem[dataUser.expando] = undefined
							}
						}
					}
				}
			});
			jQuery.fn.extend({
				domManip: domManip,
				detach: function detach(selector) {
					return _remove(this, selector, !0)
				},
				remove: function remove(selector) {
					return _remove(this, selector)
				},
				text: function text(value) {
					return access(this, function(value) {
						return value === undefined ? jQuery.text(this) : this.empty().each(function() {
							if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
								this.textContent = value
							}
						})
					}, null, value, arguments.length)
				},
				append: function append() {
					return domManip(this, arguments, function(elem) {
						if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
							var target = manipulationTarget(this, elem);
							target.appendChild(elem)
						}
					})
				},
				prepend: function prepend() {
					return domManip(this, arguments, function(elem) {
						if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
							var target = manipulationTarget(this, elem);
							target.insertBefore(elem, target.firstChild)
						}
					})
				},
				before: function before() {
					return domManip(this, arguments, function(elem) {
						if (this.parentNode) {
							this.parentNode.insertBefore(elem, this)
						}
					})
				},
				after: function after() {
					return domManip(this, arguments, function(elem) {
						if (this.parentNode) {
							this.parentNode.insertBefore(elem, this.nextSibling)
						}
					})
				},
				empty: function empty() {
					var elem, i = 0;
					for (;
						(elem = this[i]) != null; i++) {
						if (elem.nodeType === 1) {
							jQuery.cleanData(getAll(elem, !1));
							elem.textContent = ""
						}
					}
					return this
				},
				clone: function clone(dataAndEvents, deepDataAndEvents) {
					dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
					deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
					return this.map(function() {
						return jQuery.clone(this, dataAndEvents, deepDataAndEvents)
					})
				},
				html: function html(value) {
					return access(this, function(value) {
						var elem = this[0] || {},
							i = 0,
							l = this.length;
						if (value === undefined && elem.nodeType === 1) {
							return elem.innerHTML
						}
						if (typeof value === "string" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]) {
							value = jQuery.htmlPrefilter(value);
							try {
								for (; i < l; i++) {
									elem = this[i] || {};
									if (elem.nodeType === 1) {
										jQuery.cleanData(getAll(elem, !1));
										elem.innerHTML = value
									}
								}
								elem = 0
							} catch (e) {}
						}
						if (elem) {
							this.empty().append(value)
						}
					}, null, value, arguments.length)
				},
				replaceWith: function replaceWith() {
					var ignored = [];
					return domManip(this, arguments, function(elem) {
						var parent = this.parentNode;
						if (jQuery.inArray(this, ignored) < 0) {
							jQuery.cleanData(getAll(this));
							if (parent) {
								parent.replaceChild(elem, this)
							}
						}
					}, ignored)
				}
			});
			jQuery.each({
				appendTo: "append",
				prependTo: "prepend",
				insertBefore: "before",
				insertAfter: "after",
				replaceAll: "replaceWith"
			}, function(name, original) {
				jQuery.fn[name] = function(selector) {
					var elems, ret = [],
						insert = jQuery(selector),
						last = insert.length - 1,
						i = 0;
					for (; i <= last; i++) {
						elems = i === last ? this : this.clone(!0);
						jQuery(insert[i])[original](elems);
						push.apply(ret, elems.get())
					}
					return this.pushStack(ret)
				}
			});
			var iframe, elemdisplay = {
				HTML: "block",
				BODY: "block"
			};

			function actualDisplay(name, doc) {
				var elem = jQuery(doc.createElement(name)).appendTo(doc.body),
					display = jQuery.css(elem[0], "display");
				elem.detach();
				return display
			}

			function defaultDisplay(nodeName) {
				var doc = document,
					display = elemdisplay[nodeName];
				if (!display) {
					display = actualDisplay(nodeName, doc);
					if (display === "none" || !display) {
						iframe = (iframe || jQuery("<iframe frameborder='0' width='0' height='0'/>")).appendTo(doc.documentElement);
						doc = iframe[0].contentDocument;
						doc.write();
						doc.close();
						display = actualDisplay(nodeName, doc);
						iframe.detach()
					}
					elemdisplay[nodeName] = display
				}
				return display
			}
			var rmargin = /^margin/;
			var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");
			var getStyles = function getStyles(elem) {
				var view = elem.ownerDocument.defaultView;
				if (!view || !view.opener) {
					view = window
				}
				return view.getComputedStyle(elem)
			};
			var swap = function swap(elem, options, callback, args) {
				var ret, name, old = {};
				for (name in options) {
					old[name] = elem.style[name];
					elem.style[name] = options[name]
				}
				ret = callback.apply(elem, args || []);
				for (name in options) {
					elem.style[name] = old[name]
				}
				return ret
			};
			var documentElement = document.documentElement;
			(function() {
				var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal, container = document.createElement("div"),
					div = document.createElement("div");
				if (!div.style) {
					return
				}
				div.style.backgroundClip = "content-box";
				div.cloneNode(!0).style.backgroundClip = "";
				support.clearCloneStyle = div.style.backgroundClip === "content-box";
				container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" + "padding:0;margin-top:1px;position:absolute";
				container.appendChild(div);

				function computeStyleTests() {
					div.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;" + "position:relative;display:block;" + "margin:auto;border:1px;padding:1px;" + "top:1%;width:50%";
					div.innerHTML = "";
					documentElement.appendChild(container);
					var divStyle = window.getComputedStyle(div);
					pixelPositionVal = divStyle.top !== "1%";
					reliableMarginLeftVal = divStyle.marginLeft === "2px";
					boxSizingReliableVal = divStyle.width === "4px";
					div.style.marginRight = "50%";
					pixelMarginRightVal = divStyle.marginRight === "4px";
					documentElement.removeChild(container)
				}
				jQuery.extend(support, {
					pixelPosition: function pixelPosition() {
						computeStyleTests();
						return pixelPositionVal
					},
					boxSizingReliable: function boxSizingReliable() {
						if (boxSizingReliableVal == null) {
							computeStyleTests()
						}
						return boxSizingReliableVal
					},
					pixelMarginRight: function pixelMarginRight() {
						if (boxSizingReliableVal == null) {
							computeStyleTests()
						}
						return pixelMarginRightVal
					},
					reliableMarginLeft: function reliableMarginLeft() {
						if (boxSizingReliableVal == null) {
							computeStyleTests()
						}
						return reliableMarginLeftVal
					},
					reliableMarginRight: function reliableMarginRight() {
						var ret, marginDiv = div.appendChild(document.createElement("div"));
						marginDiv.style.cssText = div.style.cssText = "-webkit-box-sizing:content-box;box-sizing:content-box;" + "display:block;margin:0;border:0;padding:0";
						marginDiv.style.marginRight = marginDiv.style.width = "0";
						div.style.width = "1px";
						documentElement.appendChild(container);
						ret = !parseFloat(window.getComputedStyle(marginDiv).marginRight);
						documentElement.removeChild(container);
						div.removeChild(marginDiv);
						return ret
					}
				})
			})();

			function curCSS(elem, name, computed) {
				var width, minWidth, maxWidth, ret, style = elem.style;
				computed = computed || getStyles(elem);
				ret = computed ? computed.getPropertyValue(name) || computed[name] : undefined;
				if ((ret === "" || ret === undefined) && !jQuery.contains(elem.ownerDocument, elem)) {
					ret = jQuery.style(elem, name)
				}
				if (computed) {
					if (!support.pixelMarginRight() && rnumnonpx.test(ret) && rmargin.test(name)) {
						width = style.width;
						minWidth = style.minWidth;
						maxWidth = style.maxWidth;
						style.minWidth = style.maxWidth = style.width = ret;
						ret = computed.width;
						style.width = width;
						style.minWidth = minWidth;
						style.maxWidth = maxWidth
					}
				}
				return ret !== undefined ? ret + "" : ret
			}

			function addGetHookIf(conditionFn, hookFn) {
				return {
					get: function get() {
						if (conditionFn()) {
							delete this.get;
							return
						}
						return (this.get = hookFn).apply(this, arguments)
					}
				}
			}
			var rdisplayswap = /^(none|table(?!-c[ea]).+)/,
				cssShow = {
					position: "absolute",
					visibility: "hidden",
					display: "block"
				},
				cssNormalTransform = {
					letterSpacing: "0",
					fontWeight: "400"
				},
				cssPrefixes = ["Webkit", "O", "Moz", "ms"],
				emptyStyle = document.createElement("div").style;

			function vendorPropName(name) {
				if (name in emptyStyle) {
					return name
				}
				var capName = name[0].toUpperCase() + name.slice(1),
					i = cssPrefixes.length;
				while (i--) {
					name = cssPrefixes[i] + capName;
					if (name in emptyStyle) {
						return name
					}
				}
			}

			function setPositiveNumber(elem, value, subtract) {
				var matches = rcssNum.exec(value);
				return matches ? Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px") : value
			}

			function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {
				var i = extra === (isBorderBox ? "border" : "content") ? 4 : name === "width" ? 1 : 0,
					val = 0;
				for (; i < 4; i += 2) {
					if (extra === "margin") {
						val += jQuery.css(elem, extra + cssExpand[i], !0, styles)
					}
					if (isBorderBox) {
						if (extra === "content") {
							val -= jQuery.css(elem, "padding" + cssExpand[i], !0, styles)
						}
						if (extra !== "margin") {
							val -= jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles)
						}
					} else {
						val += jQuery.css(elem, "padding" + cssExpand[i], !0, styles);
						if (extra !== "padding") {
							val += jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles)
						}
					}
				}
				return val
			}

			function getWidthOrHeight(elem, name, extra) {
				var valueIsBorderBox = !0,
					val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
					styles = getStyles(elem),
					isBorderBox = jQuery.css(elem, "boxSizing", !1, styles) === "border-box";
				if (val <= 0 || val == null) {
					val = curCSS(elem, name, styles);
					if (val < 0 || val == null) {
						val = elem.style[name]
					}
					if (rnumnonpx.test(val)) {
						return val
					}
					valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]);
					val = parseFloat(val) || 0
				}
				return val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles) + "px"
			}

			function showHide(elements, show) {
				var display, elem, hidden, values = [],
					index = 0,
					length = elements.length;
				for (; index < length; index++) {
					elem = elements[index];
					if (!elem.style) {
						continue
					}
					values[index] = dataPriv.get(elem, "olddisplay");
					display = elem.style.display;
					if (show) {
						if (!values[index] && display === "none") {
							elem.style.display = ""
						}
						if (elem.style.display === "" && isHidden(elem)) {
							values[index] = dataPriv.access(elem, "olddisplay", defaultDisplay(elem.nodeName))
						}
					} else {
						hidden = isHidden(elem);
						if (display !== "none" || !hidden) {
							dataPriv.set(elem, "olddisplay", hidden ? display : jQuery.css(elem, "display"))
						}
					}
				}
				for (index = 0; index < length; index++) {
					elem = elements[index];
					if (!elem.style) {
						continue
					}
					if (!show || elem.style.display === "none" || elem.style.display === "") {
						elem.style.display = show ? values[index] || "" : "none"
					}
				}
				return elements
			}
			jQuery.extend({
				cssHooks: {
					opacity: {
						get: function get(elem, computed) {
							if (computed) {
								var ret = curCSS(elem, "opacity");
								return ret === "" ? "1" : ret
							}
						}
					}
				},
				cssNumber: {
					"animationIterationCount": !0,
					"columnCount": !0,
					"fillOpacity": !0,
					"flexGrow": !0,
					"flexShrink": !0,
					"fontWeight": !0,
					"lineHeight": !0,
					"opacity": !0,
					"order": !0,
					"orphans": !0,
					"widows": !0,
					"zIndex": !0,
					"zoom": !0
				},
				cssProps: {
					"float": "cssFloat"
				},
				style: function style(elem, name, value, extra) {
					if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
						return
					}
					var ret, type, hooks, origName = jQuery.camelCase(name),
						style = elem.style;
					name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(origName) || origName);
					hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
					if (value !== undefined) {
						type = typeof value;
						if (type === "string" && (ret = rcssNum.exec(value)) && ret[1]) {
							value = adjustCSS(elem, name, ret);
							type = "number"
						}
						if (value == null || value !== value) {
							return
						}
						if (type === "number") {
							value += ret && ret[3] || (jQuery.cssNumber[origName] ? "" : "px")
						}
						if (!support.clearCloneStyle && value === "" && name.indexOf("background") === 0) {
							style[name] = "inherit"
						}
						if (!hooks || !("set" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {
							style[name] = value
						}
					} else {
						if (hooks && "get" in hooks && (ret = hooks.get(elem, !1, extra)) !== undefined) {
							return ret
						}
						return style[name]
					}
				},
				css: function css(elem, name, extra, styles) {
					var val, num, hooks, origName = jQuery.camelCase(name);
					name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(origName) || origName);
					hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
					if (hooks && "get" in hooks) {
						val = hooks.get(elem, !0, extra)
					}
					if (val === undefined) {
						val = curCSS(elem, name, styles)
					}
					if (val === "normal" && name in cssNormalTransform) {
						val = cssNormalTransform[name]
					}
					if (extra === "" || extra) {
						num = parseFloat(val);
						return extra === !0 || isFinite(num) ? num || 0 : val
					}
					return val
				}
			});
			jQuery.each(["height", "width"], function(i, name) {
				jQuery.cssHooks[name] = {
					get: function get(elem, computed, extra) {
						if (computed) {
							return rdisplayswap.test(jQuery.css(elem, "display")) && elem.offsetWidth === 0 ? swap(elem, cssShow, function() {
								return getWidthOrHeight(elem, name, extra)
							}) : getWidthOrHeight(elem, name, extra)
						}
					},
					set: function set(elem, value, extra) {
						var matches, styles = extra && getStyles(elem),
							subtract = extra && augmentWidthOrHeight(elem, name, extra, jQuery.css(elem, "boxSizing", !1, styles) === "border-box", styles);
						if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || "px") !== "px") {
							elem.style[name] = value;
							value = jQuery.css(elem, name)
						}
						return setPositiveNumber(elem, value, subtract)
					}
				}
			});
			jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function(elem, computed) {
				if (computed) {
					return (parseFloat(curCSS(elem, "marginLeft")) || elem.getBoundingClientRect().left - swap(elem, {
						marginLeft: 0
					}, function() {
						return elem.getBoundingClientRect().left
					})) + "px"
				}
			});
			jQuery.cssHooks.marginRight = addGetHookIf(support.reliableMarginRight, function(elem, computed) {
				if (computed) {
					return swap(elem, {
						"display": "inline-block"
					}, curCSS, [elem, "marginRight"])
				}
			});
			jQuery.each({
				margin: "",
				padding: "",
				border: "Width"
			}, function(prefix, suffix) {
				jQuery.cssHooks[prefix + suffix] = {
					expand: function expand(value) {
						var i = 0,
							expanded = {},
							parts = typeof value === "string" ? value.split(" ") : [value];
						for (; i < 4; i++) {
							expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0]
						}
						return expanded
					}
				};
				if (!rmargin.test(prefix)) {
					jQuery.cssHooks[prefix + suffix].set = setPositiveNumber
				}
			});
			jQuery.fn.extend({
				css: function css(name, value) {
					return access(this, function(elem, name, value) {
						var styles, len, map = {},
							i = 0;
						if (jQuery.isArray(name)) {
							styles = getStyles(elem);
							len = name.length;
							for (; i < len; i++) {
								map[name[i]] = jQuery.css(elem, name[i], !1, styles)
							}
							return map
						}
						return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name)
					}, name, value, arguments.length > 1)
				},
				show: function show() {
					return showHide(this, !0)
				},
				hide: function hide() {
					return showHide(this)
				},
				toggle: function toggle(state) {
					if (typeof state === "boolean") {
						return state ? this.show() : this.hide()
					}
					return this.each(function() {
						if (isHidden(this)) {
							jQuery(this).show()
						} else {
							jQuery(this).hide()
						}
					})
				}
			});

			function Tween(elem, options, prop, end, easing) {
				return new Tween.prototype.init(elem, options, prop, end, easing)
			}
			jQuery.Tween = Tween;
			Tween.prototype = {
				constructor: Tween,
				init: function init(elem, options, prop, end, easing, unit) {
					this.elem = elem;
					this.prop = prop;
					this.easing = easing || jQuery.easing._default;
					this.options = options;
					this.start = this.now = this.cur();
					this.end = end;
					this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px")
				},
				cur: function cur() {
					var hooks = Tween.propHooks[this.prop];
					return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this)
				},
				run: function run(percent) {
					var eased, hooks = Tween.propHooks[this.prop];
					if (this.options.duration) {
						this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration)
					} else {
						this.pos = eased = percent
					}
					this.now = (this.end - this.start) * eased + this.start;
					if (this.options.step) {
						this.options.step.call(this.elem, this.now, this)
					}
					if (hooks && hooks.set) {
						hooks.set(this)
					} else {
						Tween.propHooks._default.set(this)
					}
					return this
				}
			};
			Tween.prototype.init.prototype = Tween.prototype;
			Tween.propHooks = {
				_default: {
					get: function get(tween) {
						var result;
						if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {
							return tween.elem[tween.prop]
						}
						result = jQuery.css(tween.elem, tween.prop, "");
						return !result || result === "auto" ? 0 : result
					},
					set: function set(tween) {
						if (jQuery.fx.step[tween.prop]) {
							jQuery.fx.step[tween.prop](tween)
						} else if (tween.elem.nodeType === 1 && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {
							jQuery.style(tween.elem, tween.prop, tween.now + tween.unit)
						} else {
							tween.elem[tween.prop] = tween.now
						}
					}
				}
			};
			Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
				set: function set(tween) {
					if (tween.elem.nodeType && tween.elem.parentNode) {
						tween.elem[tween.prop] = tween.now
					}
				}
			};
			jQuery.easing = {
				linear: function linear(p) {
					return p
				},
				swing: function swing(p) {
					return 0.5 - Math.cos(p * Math.PI) / 2
				},
				_default: "swing"
			};
			jQuery.fx = Tween.prototype.init;
			jQuery.fx.step = {};
			var fxNow, timerId, rfxtypes = /^(?:toggle|show|hide)$/,
				rrun = /queueHooks$/;

			function createFxNow() {
				window.setTimeout(function() {
					fxNow = undefined
				});
				return fxNow = jQuery.now()
			}

			function genFx(type, includeWidth) {
				var which, i = 0,
					attrs = {
						height: type
					};
				includeWidth = includeWidth ? 1 : 0;
				for (; i < 4; i += 2 - includeWidth) {
					which = cssExpand[i];
					attrs["margin" + which] = attrs["padding" + which] = type
				}
				if (includeWidth) {
					attrs.opacity = attrs.width = type
				}
				return attrs
			}

			function createTween(value, prop, animation) {
				var tween, collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners["*"]),
					index = 0,
					length = collection.length;
				for (; index < length; index++) {
					if (tween = collection[index].call(animation, prop, value)) {
						return tween
					}
				}
			}

			function defaultPrefilter(elem, props, opts) {
				var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay, anim = this,
					orig = {},
					style = elem.style,
					hidden = elem.nodeType && isHidden(elem),
					dataShow = dataPriv.get(elem, "fxshow");
				if (!opts.queue) {
					hooks = jQuery._queueHooks(elem, "fx");
					if (hooks.unqueued == null) {
						hooks.unqueued = 0;
						oldfire = hooks.empty.fire;
						hooks.empty.fire = function() {
							if (!hooks.unqueued) {
								oldfire()
							}
						}
					}
					hooks.unqueued++;
					anim.always(function() {
						anim.always(function() {
							hooks.unqueued--;
							if (!jQuery.queue(elem, "fx").length) {
								hooks.empty.fire()
							}
						})
					})
				}
				if (elem.nodeType === 1 && ("height" in props || "width" in props)) {
					opts.overflow = [style.overflow, style.overflowX, style.overflowY];
					display = jQuery.css(elem, "display");
					checkDisplay = display === "none" ? dataPriv.get(elem, "olddisplay") || defaultDisplay(elem.nodeName) : display;
					if (checkDisplay === "inline" && jQuery.css(elem, "float") === "none") {
						style.display = "inline-block"
					}
				}
				if (opts.overflow) {
					style.overflow = "hidden";
					anim.always(function() {
						style.overflow = opts.overflow[0];
						style.overflowX = opts.overflow[1];
						style.overflowY = opts.overflow[2]
					})
				}
				for (prop in props) {
					value = props[prop];
					if (rfxtypes.exec(value)) {
						delete props[prop];
						toggle = toggle || value === "toggle";
						if (value === (hidden ? "hide" : "show")) {
							if (value === "show" && dataShow && dataShow[prop] !== undefined) {
								hidden = !0
							} else {
								continue
							}
						}
						orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop)
					} else {
						display = undefined
					}
				}
				if (!jQuery.isEmptyObject(orig)) {
					if (dataShow) {
						if ("hidden" in dataShow) {
							hidden = dataShow.hidden
						}
					} else {
						dataShow = dataPriv.access(elem, "fxshow", {})
					}
					if (toggle) {
						dataShow.hidden = !hidden
					}
					if (hidden) {
						jQuery(elem).show()
					} else {
						anim.done(function() {
							jQuery(elem).hide()
						})
					}
					anim.done(function() {
						var prop;
						dataPriv.remove(elem, "fxshow");
						for (prop in orig) {
							jQuery.style(elem, prop, orig[prop])
						}
					});
					for (prop in orig) {
						tween = createTween(hidden ? dataShow[prop] : 0, prop, anim);
						if (!(prop in dataShow)) {
							dataShow[prop] = tween.start;
							if (hidden) {
								tween.end = tween.start;
								tween.start = prop === "width" || prop === "height" ? 1 : 0
							}
						}
					}
				} else if ((display === "none" ? defaultDisplay(elem.nodeName) : display) === "inline") {
					style.display = display
				}
			}

			function propFilter(props, specialEasing) {
				var index, name, easing, value, hooks;
				for (index in props) {
					name = jQuery.camelCase(index);
					easing = specialEasing[name];
					value = props[index];
					if (jQuery.isArray(value)) {
						easing = value[1];
						value = props[index] = value[0]
					}
					if (index !== name) {
						props[name] = value;
						delete props[index]
					}
					hooks = jQuery.cssHooks[name];
					if (hooks && "expand" in hooks) {
						value = hooks.expand(value);
						delete props[name];
						for (index in value) {
							if (!(index in props)) {
								props[index] = value[index];
								specialEasing[index] = easing
							}
						}
					} else {
						specialEasing[name] = easing
					}
				}
			}

			function Animation(elem, properties, options) {
				var result, stopped, index = 0,
					length = Animation.prefilters.length,
					deferred = jQuery.Deferred().always(function() {
						delete tick.elem
					}),
					tick = function tick() {
						if (stopped) {
							return !1
						}
						var currentTime = fxNow || createFxNow(),
							remaining = Math.max(0, animation.startTime + animation.duration - currentTime),
							temp = remaining / animation.duration || 0,
							percent = 1 - temp,
							index = 0,
							length = animation.tweens.length;
						for (; index < length; index++) {
							animation.tweens[index].run(percent)
						}
						deferred.notifyWith(elem, [animation, percent, remaining]);
						if (percent < 1 && length) {
							return remaining
						} else {
							deferred.resolveWith(elem, [animation]);
							return !1
						}
					},
					animation = deferred.promise({
						elem: elem,
						props: jQuery.extend({}, properties),
						opts: jQuery.extend(!0, {
							specialEasing: {},
							easing: jQuery.easing._default
						}, options),
						originalProperties: properties,
						originalOptions: options,
						startTime: fxNow || createFxNow(),
						duration: options.duration,
						tweens: [],
						createTween: function createTween(prop, end) {
							var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
							animation.tweens.push(tween);
							return tween
						},
						stop: function stop(gotoEnd) {
							var index = 0,
								length = gotoEnd ? animation.tweens.length : 0;
							if (stopped) {
								return this
							}
							stopped = !0;
							for (; index < length; index++) {
								animation.tweens[index].run(1)
							}
							if (gotoEnd) {
								deferred.notifyWith(elem, [animation, 1, 0]);
								deferred.resolveWith(elem, [animation, gotoEnd])
							} else {
								deferred.rejectWith(elem, [animation, gotoEnd])
							}
							return this
						}
					}),
					props = animation.props;
				propFilter(props, animation.opts.specialEasing);
				for (; index < length; index++) {
					result = Animation.prefilters[index].call(animation, elem, props, animation.opts);
					if (result) {
						if (jQuery.isFunction(result.stop)) {
							jQuery._queueHooks(animation.elem, animation.opts.queue).stop = jQuery.proxy(result.stop, result)
						}
						return result
					}
				}
				jQuery.map(props, createTween, animation);
				if (jQuery.isFunction(animation.opts.start)) {
					animation.opts.start.call(elem, animation)
				}
				jQuery.fx.timer(jQuery.extend(tick, {
					elem: elem,
					anim: animation,
					queue: animation.opts.queue
				}));
				return animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always)
			}
			jQuery.Animation = jQuery.extend(Animation, {
				tweeners: {
					"*": [function(prop, value) {
						var tween = this.createTween(prop, value);
						adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
						return tween
					}]
				},
				tweener: function tweener(props, callback) {
					if (jQuery.isFunction(props)) {
						callback = props;
						props = ["*"]
					} else {
						props = props.match(rnotwhite)
					}
					var prop, index = 0,
						length = props.length;
					for (; index < length; index++) {
						prop = props[index];
						Animation.tweeners[prop] = Animation.tweeners[prop] || [];
						Animation.tweeners[prop].unshift(callback)
					}
				},
				prefilters: [defaultPrefilter],
				prefilter: function prefilter(callback, prepend) {
					if (prepend) {
						Animation.prefilters.unshift(callback)
					} else {
						Animation.prefilters.push(callback)
					}
				}
			});
			jQuery.speed = function(speed, easing, fn) {
				var opt = speed && typeof speed === "object" ? jQuery.extend({}, speed) : {
					complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,
					duration: speed,
					easing: fn && easing || easing && !jQuery.isFunction(easing) && easing
				};
				opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration : opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default;
				if (opt.queue == null || opt.queue === !0) {
					opt.queue = "fx"
				}
				opt.old = opt.complete;
				opt.complete = function() {
					if (jQuery.isFunction(opt.old)) {
						opt.old.call(this)
					}
					if (opt.queue) {
						jQuery.dequeue(this, opt.queue)
					}
				};
				return opt
			};
			jQuery.fn.extend({
				fadeTo: function fadeTo(speed, to, easing, callback) {
					return this.filter(isHidden).css("opacity", 0).show().end().animate({
						opacity: to
					}, speed, easing, callback)
				},
				animate: function animate(prop, speed, easing, callback) {
					var empty = jQuery.isEmptyObject(prop),
						optall = jQuery.speed(speed, easing, callback),
						doAnimation = function doAnimation() {
							var anim = Animation(this, jQuery.extend({}, prop), optall);
							if (empty || dataPriv.get(this, "finish")) {
								anim.stop(!0)
							}
						};
					doAnimation.finish = doAnimation;
					return empty || optall.queue === !1 ? this.each(doAnimation) : this.queue(optall.queue, doAnimation)
				},
				stop: function stop(type, clearQueue, gotoEnd) {
					var stopQueue = function stopQueue(hooks) {
						var stop = hooks.stop;
						delete hooks.stop;
						stop(gotoEnd)
					};
					if (typeof type !== "string") {
						gotoEnd = clearQueue;
						clearQueue = type;
						type = undefined
					}
					if (clearQueue && type !== !1) {
						this.queue(type || "fx", [])
					}
					return this.each(function() {
						var dequeue = !0,
							index = type != null && type + "queueHooks",
							timers = jQuery.timers,
							data = dataPriv.get(this);
						if (index) {
							if (data[index] && data[index].stop) {
								stopQueue(data[index])
							}
						} else {
							for (index in data) {
								if (data[index] && data[index].stop && rrun.test(index)) {
									stopQueue(data[index])
								}
							}
						}
						for (index = timers.length; index--;) {
							if (timers[index].elem === this && (type == null || timers[index].queue === type)) {
								timers[index].anim.stop(gotoEnd);
								dequeue = !1;
								timers.splice(index, 1)
							}
						}
						if (dequeue || !gotoEnd) {
							jQuery.dequeue(this, type)
						}
					})
				},
				finish: function finish(type) {
					if (type !== !1) {
						type = type || "fx"
					}
					return this.each(function() {
						var index, data = dataPriv.get(this),
							queue = data[type + "queue"],
							hooks = data[type + "queueHooks"],
							timers = jQuery.timers,
							length = queue ? queue.length : 0;
						data.finish = !0;
						jQuery.queue(this, type, []);
						if (hooks && hooks.stop) {
							hooks.stop.call(this, !0)
						}
						for (index = timers.length; index--;) {
							if (timers[index].elem === this && timers[index].queue === type) {
								timers[index].anim.stop(!0);
								timers.splice(index, 1)
							}
						}
						for (index = 0; index < length; index++) {
							if (queue[index] && queue[index].finish) {
								queue[index].finish.call(this)
							}
						}
						delete data.finish
					})
				}
			});
			jQuery.each(["toggle", "show", "hide"], function(i, name) {
				var cssFn = jQuery.fn[name];
				jQuery.fn[name] = function(speed, easing, callback) {
					return speed == null || typeof speed === "boolean" ? cssFn.apply(this, arguments) : this.animate(genFx(name, !0), speed, easing, callback)
				}
			});
			jQuery.each({
				slideDown: genFx("show"),
				slideUp: genFx("hide"),
				slideToggle: genFx("toggle"),
				fadeIn: {
					opacity: "show"
				},
				fadeOut: {
					opacity: "hide"
				},
				fadeToggle: {
					opacity: "toggle"
				}
			}, function(name, props) {
				jQuery.fn[name] = function(speed, easing, callback) {
					return this.animate(props, speed, easing, callback)
				}
			});
			jQuery.timers = [];
			jQuery.fx.tick = function() {
				var timer, i = 0,
					timers = jQuery.timers;
				fxNow = jQuery.now();
				for (; i < timers.length; i++) {
					timer = timers[i];
					if (!timer() && timers[i] === timer) {
						timers.splice(i--, 1)
					}
				}
				if (!timers.length) {
					jQuery.fx.stop()
				}
				fxNow = undefined
			};
			jQuery.fx.timer = function(timer) {
				jQuery.timers.push(timer);
				if (timer()) {
					jQuery.fx.start()
				} else {
					jQuery.timers.pop()
				}
			};
			jQuery.fx.interval = 13;
			jQuery.fx.start = function() {
				if (!timerId) {
					timerId = window.setInterval(jQuery.fx.tick, jQuery.fx.interval)
				}
			};
			jQuery.fx.stop = function() {
				window.clearInterval(timerId);
				timerId = null
			};
			jQuery.fx.speeds = {
				slow: 600,
				fast: 200,
				_default: 400
			};
			jQuery.fn.delay = function(time, type) {
				time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
				type = type || "fx";
				return this.queue(type, function(next, hooks) {
					var timeout = window.setTimeout(next, time);
					hooks.stop = function() {
						window.clearTimeout(timeout)
					}
				})
			};
			(function() {
				var input = document.createElement("input"),
					select = document.createElement("select"),
					opt = select.appendChild(document.createElement("option"));
				input.type = "checkbox";
				support.checkOn = input.value !== "";
				support.optSelected = opt.selected;
				select.disabled = !0;
				support.optDisabled = !opt.disabled;
				input = document.createElement("input");
				input.value = "t";
				input.type = "radio";
				support.radioValue = input.value === "t"
			})();
			var boolHook, attrHandle = jQuery.expr.attrHandle;
			jQuery.fn.extend({
				attr: function attr(name, value) {
					return access(this, jQuery.attr, name, value, arguments.length > 1)
				},
				removeAttr: function removeAttr(name) {
					return this.each(function() {
						jQuery.removeAttr(this, name)
					})
				}
			});
			jQuery.extend({
				attr: function attr(elem, name, value) {
					var ret, hooks, nType = elem.nodeType;
					if (nType === 3 || nType === 8 || nType === 2) {
						return
					}
					if (typeof elem.getAttribute === "undefined") {
						return jQuery.prop(elem, name, value)
					}
					if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
						name = name.toLowerCase();
						hooks = jQuery.attrHooks[name] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined)
					}
					if (value !== undefined) {
						if (value === null) {
							jQuery.removeAttr(elem, name);
							return
						}
						if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
							return ret
						}
						elem.setAttribute(name, value + "");
						return value
					}
					if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
						return ret
					}
					ret = jQuery.find.attr(elem, name);
					return ret == null ? undefined : ret
				},
				attrHooks: {
					type: {
						set: function set(elem, value) {
							if (!support.radioValue && value === "radio" && jQuery.nodeName(elem, "input")) {
								var val = elem.value;
								elem.setAttribute("type", value);
								if (val) {
									elem.value = val
								}
								return value
							}
						}
					}
				},
				removeAttr: function removeAttr(elem, value) {
					var name, propName, i = 0,
						attrNames = value && value.match(rnotwhite);
					if (attrNames && elem.nodeType === 1) {
						while (name = attrNames[i++]) {
							propName = jQuery.propFix[name] || name;
							if (jQuery.expr.match.bool.test(name)) {
								elem[propName] = !1
							}
							elem.removeAttribute(name)
						}
					}
				}
			});
			boolHook = {
				set: function set(elem, value, name) {
					if (value === !1) {
						jQuery.removeAttr(elem, name)
					} else {
						elem.setAttribute(name, name)
					}
					return name
				}
			};
			jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function(i, name) {
				var getter = attrHandle[name] || jQuery.find.attr;
				attrHandle[name] = function(elem, name, isXML) {
					var ret, handle;
					if (!isXML) {
						handle = attrHandle[name];
						attrHandle[name] = ret;
						ret = getter(elem, name, isXML) != null ? name.toLowerCase() : null;
						attrHandle[name] = handle
					}
					return ret
				}
			});
			var rfocusable = /^(?:input|select|textarea|button)$/i,
				rclickable = /^(?:a|area)$/i;
			jQuery.fn.extend({
				prop: function prop(name, value) {
					return access(this, jQuery.prop, name, value, arguments.length > 1)
				},
				removeProp: function removeProp(name) {
					return this.each(function() {
						delete this[jQuery.propFix[name] || name]
					})
				}
			});
			jQuery.extend({
				prop: function prop(elem, name, value) {
					var ret, hooks, nType = elem.nodeType;
					if (nType === 3 || nType === 8 || nType === 2) {
						return
					}
					if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
						name = jQuery.propFix[name] || name;
						hooks = jQuery.propHooks[name]
					}
					if (value !== undefined) {
						if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
							return ret
						}
						return elem[name] = value
					}
					if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
						return ret
					}
					return elem[name]
				},
				propHooks: {
					tabIndex: {
						get: function get(elem) {
							var tabindex = jQuery.find.attr(elem, "tabindex");
							return tabindex ? parseInt(tabindex, 10) : rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href ? 0 : -1
						}
					}
				},
				propFix: {
					"for": "htmlFor",
					"class": "className"
				}
			});
			if (!support.optSelected) {
				jQuery.propHooks.selected = {
					get: function get(elem) {
						var parent = elem.parentNode;
						if (parent && parent.parentNode) {
							parent.parentNode.selectedIndex
						}
						return null
					},
					set: function set(elem) {
						var parent = elem.parentNode;
						if (parent) {
							parent.selectedIndex;
							if (parent.parentNode) {
								parent.parentNode.selectedIndex
							}
						}
					}
				}
			}
			jQuery.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
				jQuery.propFix[this.toLowerCase()] = this
			});
			var rclass = /[\t\r\n\f]/g;

			function getClass(elem) {
				return elem.getAttribute && elem.getAttribute("class") || ""
			}
			jQuery.fn.extend({
				addClass: function addClass(value) {
					var classes, elem, cur, curValue, clazz, j, finalValue, i = 0;
					if (jQuery.isFunction(value)) {
						return this.each(function(j) {
							jQuery(this).addClass(value.call(this, j, getClass(this)))
						})
					}
					if (typeof value === "string" && value) {
						classes = value.match(rnotwhite) || [];
						while (elem = this[i++]) {
							curValue = getClass(elem);
							cur = elem.nodeType === 1 && (" " + curValue + " ").replace(rclass, " ");
							if (cur) {
								j = 0;
								while (clazz = classes[j++]) {
									if (cur.indexOf(" " + clazz + " ") < 0) {
										cur += clazz + " "
									}
								}
								finalValue = jQuery.trim(cur);
								if (curValue !== finalValue) {
									elem.setAttribute("class", finalValue)
								}
							}
						}
					}
					return this
				},
				removeClass: function removeClass(value) {
					var classes, elem, cur, curValue, clazz, j, finalValue, i = 0;
					if (jQuery.isFunction(value)) {
						return this.each(function(j) {
							jQuery(this).removeClass(value.call(this, j, getClass(this)))
						})
					}
					if (!arguments.length) {
						return this.attr("class", "")
					}
					if (typeof value === "string" && value) {
						classes = value.match(rnotwhite) || [];
						while (elem = this[i++]) {
							curValue = getClass(elem);
							cur = elem.nodeType === 1 && (" " + curValue + " ").replace(rclass, " ");
							if (cur) {
								j = 0;
								while (clazz = classes[j++]) {
									while (cur.indexOf(" " + clazz + " ") > -1) {
										cur = cur.replace(" " + clazz + " ", " ")
									}
								}
								finalValue = jQuery.trim(cur);
								if (curValue !== finalValue) {
									elem.setAttribute("class", finalValue)
								}
							}
						}
					}
					return this
				},
				toggleClass: function toggleClass(value, stateVal) {
					var type = typeof value;
					if (typeof stateVal === "boolean" && type === "string") {
						return stateVal ? this.addClass(value) : this.removeClass(value)
					}
					if (jQuery.isFunction(value)) {
						return this.each(function(i) {
							jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal)
						})
					}
					return this.each(function() {
						var className, i, self, classNames;
						if (type === "string") {
							i = 0;
							self = jQuery(this);
							classNames = value.match(rnotwhite) || [];
							while (className = classNames[i++]) {
								if (self.hasClass(className)) {
									self.removeClass(className)
								} else {
									self.addClass(className)
								}
							}
						} else if (value === undefined || type === "boolean") {
							className = getClass(this);
							if (className) {
								dataPriv.set(this, "__className__", className)
							}
							if (this.setAttribute) {
								this.setAttribute("class", className || value === !1 ? "" : dataPriv.get(this, "__className__") || "")
							}
						}
					})
				},
				hasClass: function hasClass(selector) {
					var className, elem, i = 0;
					className = " " + selector + " ";
					while (elem = this[i++]) {
						if (elem.nodeType === 1 && (" " + getClass(elem) + " ").replace(rclass, " ").indexOf(className) > -1) {
							return !0
						}
					}
					return !1
				}
			});
			var rreturn = /\r/g,
				rspaces = /[\x20\t\r\n\f]+/g;
			jQuery.fn.extend({
				val: function val(value) {
					var hooks, ret, isFunction, elem = this[0];
					if (!arguments.length) {
						if (elem) {
							hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];
							if (hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== undefined) {
								return ret
							}
							ret = elem.value;
							return typeof ret === "string" ? ret.replace(rreturn, "") : ret == null ? "" : ret
						}
						return
					}
					isFunction = jQuery.isFunction(value);
					return this.each(function(i) {
						var val;
						if (this.nodeType !== 1) {
							return
						}
						if (isFunction) {
							val = value.call(this, i, jQuery(this).val())
						} else {
							val = value
						}
						if (val == null) {
							val = ""
						} else if (typeof val === "number") {
							val += ""
						} else if (jQuery.isArray(val)) {
							val = jQuery.map(val, function(value) {
								return value == null ? "" : value + ""
							})
						}
						hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];
						if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === undefined) {
							this.value = val
						}
					})
				}
			});
			jQuery.extend({
				valHooks: {
					option: {
						get: function get(elem) {
							var val = jQuery.find.attr(elem, "value");
							return val != null ? val : jQuery.trim(jQuery.text(elem)).replace(rspaces, " ")
						}
					},
					select: {
						get: function get(elem) {
							var value, option, options = elem.options,
								index = elem.selectedIndex,
								one = elem.type === "select-one" || index < 0,
								values = one ? null : [],
								max = one ? index + 1 : options.length,
								i = index < 0 ? max : one ? index : 0;
							for (; i < max; i++) {
								option = options[i];
								if ((option.selected || i === index) && (support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null) && (!option.parentNode.disabled || !jQuery.nodeName(option.parentNode, "optgroup"))) {
									value = jQuery(option).val();
									if (one) {
										return value
									}
									values.push(value)
								}
							}
							return values
						},
						set: function set(elem, value) {
							var optionSet, option, options = elem.options,
								values = jQuery.makeArray(value),
								i = options.length;
							while (i--) {
								option = options[i];
								if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {
									optionSet = !0
								}
							}
							if (!optionSet) {
								elem.selectedIndex = -1
							}
							return values
						}
					}
				}
			});
			jQuery.each(["radio", "checkbox"], function() {
				jQuery.valHooks[this] = {
					set: function set(elem, value) {
						if (jQuery.isArray(value)) {
							return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1
						}
					}
				};
				if (!support.checkOn) {
					jQuery.valHooks[this].get = function(elem) {
						return elem.getAttribute("value") === null ? "on" : elem.value
					}
				}
			});
			var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;
			jQuery.extend(jQuery.event, {
				trigger: function trigger(event, data, elem, onlyHandlers) {
					var i, cur, tmp, bubbleType, ontype, handle, special, eventPath = [elem || document],
						type = hasOwn.call(event, "type") ? event.type : event,
						namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];
					cur = tmp = elem = elem || document;
					if (elem.nodeType === 3 || elem.nodeType === 8) {
						return
					}
					if (rfocusMorph.test(type + jQuery.event.triggered)) {
						return
					}
					if (type.indexOf(".") > -1) {
						namespaces = type.split(".");
						type = namespaces.shift();
						namespaces.sort()
					}
					ontype = type.indexOf(":") < 0 && "on" + type;
					event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === "object" && event);
					event.isTrigger = onlyHandlers ? 2 : 3;
					event.namespace = namespaces.join(".");
					event.rnamespace = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
					event.result = undefined;
					if (!event.target) {
						event.target = elem
					}
					data = data == null ? [event] : jQuery.makeArray(data, [event]);
					special = jQuery.event.special[type] || {};
					if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === !1) {
						return
					}
					if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {
						bubbleType = special.delegateType || type;
						if (!rfocusMorph.test(bubbleType + type)) {
							cur = cur.parentNode
						}
						for (; cur; cur = cur.parentNode) {
							eventPath.push(cur);
							tmp = cur
						}
						if (tmp === (elem.ownerDocument || document)) {
							eventPath.push(tmp.defaultView || tmp.parentWindow || window)
						}
					}
					i = 0;
					while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {
						event.type = i > 1 ? bubbleType : special.bindType || type;
						handle = (dataPriv.get(cur, "events") || {})[event.type] && dataPriv.get(cur, "handle");
						if (handle) {
							handle.apply(cur, data)
						}
						handle = ontype && cur[ontype];
						if (handle && handle.apply && acceptData(cur)) {
							event.result = handle.apply(cur, data);
							if (event.result === !1) {
								event.preventDefault()
							}
						}
					}
					event.type = type;
					if (!onlyHandlers && !event.isDefaultPrevented()) {
						if ((!special._default || special._default.apply(eventPath.pop(), data) === !1) && acceptData(elem)) {
							if (ontype && jQuery.isFunction(elem[type]) && !jQuery.isWindow(elem)) {
								tmp = elem[ontype];
								if (tmp) {
									elem[ontype] = null
								}
								jQuery.event.triggered = type;
								elem[type]();
								jQuery.event.triggered = undefined;
								if (tmp) {
									elem[ontype] = tmp
								}
							}
						}
					}
					return event.result
				},
				simulate: function simulate(type, elem, event) {
					var e = jQuery.extend(new jQuery.Event(), event, {
						type: type,
						isSimulated: !0
					});
					jQuery.event.trigger(e, null, elem)
				}
			});
			jQuery.fn.extend({
				trigger: function trigger(type, data) {
					return this.each(function() {
						jQuery.event.trigger(type, data, this)
					})
				},
				triggerHandler: function triggerHandler(type, data) {
					var elem = this[0];
					if (elem) {
						return jQuery.event.trigger(type, data, elem, !0)
					}
				}
			});
			jQuery.each(("blur focus focusin focusout load resize scroll unload click dblclick " + "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " + "change select submit keydown keypress keyup error contextmenu").split(" "), function(i, name) {
				jQuery.fn[name] = function(data, fn) {
					return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name)
				}
			});
			jQuery.fn.extend({
				hover: function hover(fnOver, fnOut) {
					return this.mouseenter(fnOver).mouseleave(fnOut || fnOver)
				}
			});
			support.focusin = "onfocusin" in window;
			if (!support.focusin) {
				jQuery.each({
					focus: "focusin",
					blur: "focusout"
				}, function(orig, fix) {
					var handler = function handler(event) {
						jQuery.event.simulate(fix, event.target, jQuery.event.fix(event))
					};
					jQuery.event.special[fix] = {
						setup: function setup() {
							var doc = this.ownerDocument || this,
								attaches = dataPriv.access(doc, fix);
							if (!attaches) {
								doc.addEventListener(orig, handler, !0)
							}
							dataPriv.access(doc, fix, (attaches || 0) + 1)
						},
						teardown: function teardown() {
							var doc = this.ownerDocument || this,
								attaches = dataPriv.access(doc, fix) - 1;
							if (!attaches) {
								doc.removeEventListener(orig, handler, !0);
								dataPriv.remove(doc, fix)
							} else {
								dataPriv.access(doc, fix, attaches)
							}
						}
					}
				})
			}
			var location = window.location;
			var nonce = jQuery.now();
			var rquery = /\?/;
			jQuery.parseJSON = function(data) {
				return JSON.parse(data + "")
			};
			jQuery.parseXML = function(data) {
				var xml;
				if (!data || typeof data !== "string") {
					return null
				}
				try {
					xml = new window.DOMParser().parseFromString(data, "text/xml")
				} catch (e) {
					xml = undefined
				}
				if (!xml || xml.getElementsByTagName("parsererror").length) {
					jQuery.error("Invalid XML: " + data)
				}
				return xml
			};
			var rhash = /#.*$/,
				rts = /([?&])_=[^&]*/,
				rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
				rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
				rnoContent = /^(?:GET|HEAD)$/,
				rprotocol = /^\/\//,
				prefilters = {},
				transports = {},
				allTypes = "*/".concat("*"),
				originAnchor = document.createElement("a");
			originAnchor.href = location.href;

			function addToPrefiltersOrTransports(structure) {
				return function(dataTypeExpression, func) {
					if (typeof dataTypeExpression !== "string") {
						func = dataTypeExpression;
						dataTypeExpression = "*"
					}
					var dataType, i = 0,
						dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];
					if (jQuery.isFunction(func)) {
						while (dataType = dataTypes[i++]) {
							if (dataType[0] === "+") {
								dataType = dataType.slice(1) || "*";
								(structure[dataType] = structure[dataType] || []).unshift(func)
							} else {
								(structure[dataType] = structure[dataType] || []).push(func)
							}
						}
					}
				}
			}

			function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
				var inspected = {},
					seekingTransport = structure === transports;

				function inspect(dataType) {
					var selected;
					inspected[dataType] = !0;
					jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {
						var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
						if (typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[dataTypeOrTransport]) {
							options.dataTypes.unshift(dataTypeOrTransport);
							inspect(dataTypeOrTransport);
							return !1
						} else if (seekingTransport) {
							return !(selected = dataTypeOrTransport)
						}
					});
					return selected
				}
				return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*")
			}

			function ajaxExtend(target, src) {
				var key, deep, flatOptions = jQuery.ajaxSettings.flatOptions || {};
				for (key in src) {
					if (src[key] !== undefined) {
						(flatOptions[key] ? target : deep || (deep = {}))[key] = src[key]
					}
				}
				if (deep) {
					jQuery.extend(!0, target, deep)
				}
				return target
			}

			function ajaxHandleResponses(s, jqXHR, responses) {
				var ct, type, finalDataType, firstDataType, contents = s.contents,
					dataTypes = s.dataTypes;
				while (dataTypes[0] === "*") {
					dataTypes.shift();
					if (ct === undefined) {
						ct = s.mimeType || jqXHR.getResponseHeader("Content-Type")
					}
				}
				if (ct) {
					for (type in contents) {
						if (contents[type] && contents[type].test(ct)) {
							dataTypes.unshift(type);
							break
						}
					}
				}
				if (dataTypes[0] in responses) {
					finalDataType = dataTypes[0]
				} else {
					for (type in responses) {
						if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
							finalDataType = type;
							break
						}
						if (!firstDataType) {
							firstDataType = type
						}
					}
					finalDataType = finalDataType || firstDataType
				}
				if (finalDataType) {
					if (finalDataType !== dataTypes[0]) {
						dataTypes.unshift(finalDataType)
					}
					return responses[finalDataType]
				}
			}

			function ajaxConvert(s, response, jqXHR, isSuccess) {
				var conv2, current, conv, tmp, prev, converters = {},
					dataTypes = s.dataTypes.slice();
				if (dataTypes[1]) {
					for (conv in s.converters) {
						converters[conv.toLowerCase()] = s.converters[conv]
					}
				}
				current = dataTypes.shift();
				while (current) {
					if (s.responseFields[current]) {
						jqXHR[s.responseFields[current]] = response
					}
					if (!prev && isSuccess && s.dataFilter) {
						response = s.dataFilter(response, s.dataType)
					}
					prev = current;
					current = dataTypes.shift();
					if (current) {
						if (current === "*") {
							current = prev
						} else if (prev !== "*" && prev !== current) {
							conv = converters[prev + " " + current] || converters["* " + current];
							if (!conv) {
								for (conv2 in converters) {
									tmp = conv2.split(" ");
									if (tmp[1] === current) {
										conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]];
										if (conv) {
											if (conv === !0) {
												conv = converters[conv2]
											} else if (converters[conv2] !== !0) {
												current = tmp[0];
												dataTypes.unshift(tmp[1])
											}
											break
										}
									}
								}
							}
							if (conv !== !0) {
								if (conv && s.throws) {
									response = conv(response)
								} else {
									try {
										response = conv(response)
									} catch (e) {
										return {
											state: "parsererror",
											error: conv ? e : "No conversion from " + prev + " to " + current
										}
									}
								}
							}
						}
					}
				}
				return {
					state: "success",
					data: response
				}
			}
			jQuery.extend({
				active: 0,
				lastModified: {},
				etag: {},
				ajaxSettings: {
					url: location.href,
					type: "GET",
					isLocal: rlocalProtocol.test(location.protocol),
					global: !0,
					processData: !0,
					async: !0,
					contentType: "application/x-www-form-urlencoded; charset=UTF-8",
					accepts: {
						"*": allTypes,
						text: "text/plain",
						html: "text/html",
						xml: "application/xml, text/xml",
						json: "application/json, text/javascript"
					},
					contents: {
						xml: /\bxml\b/,
						html: /\bhtml/,
						json: /\bjson\b/
					},
					responseFields: {
						xml: "responseXML",
						text: "responseText",
						json: "responseJSON"
					},
					converters: {
						"* text": String,
						"text html": !0,
						"text json": jQuery.parseJSON,
						"text xml": jQuery.parseXML
					},
					flatOptions: {
						url: !0,
						context: !0
					}
				},
				ajaxSetup: function ajaxSetup(target, settings) {
					return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target)
				},
				ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
				ajaxTransport: addToPrefiltersOrTransports(transports),
				ajax: function ajax(url, options) {
					if (typeof url === "object") {
						options = url;
						url = undefined
					}
					options = options || {};
					var transport, cacheURL, responseHeadersString, responseHeaders, timeoutTimer, urlAnchor, fireGlobals, i, s = jQuery.ajaxSetup({}, options),
						callbackContext = s.context || s,
						globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,
						deferred = jQuery.Deferred(),
						completeDeferred = jQuery.Callbacks("once memory"),
						_statusCode = s.statusCode || {},
						requestHeaders = {},
						requestHeadersNames = {},
						state = 0,
						strAbort = "canceled",
						jqXHR = {
							readyState: 0,
							getResponseHeader: function getResponseHeader(key) {
								var match;
								if (state === 2) {
									if (!responseHeaders) {
										responseHeaders = {};
										while (match = rheaders.exec(responseHeadersString)) {
											responseHeaders[match[1].toLowerCase()] = match[2]
										}
									}
									match = responseHeaders[key.toLowerCase()]
								}
								return match == null ? null : match
							},
							getAllResponseHeaders: function getAllResponseHeaders() {
								return state === 2 ? responseHeadersString : null
							},
							setRequestHeader: function setRequestHeader(name, value) {
								var lname = name.toLowerCase();
								if (!state) {
									name = requestHeadersNames[lname] = requestHeadersNames[lname] || name;
									requestHeaders[name] = value
								}
								return this
							},
							overrideMimeType: function overrideMimeType(type) {
								if (!state) {
									s.mimeType = type
								}
								return this
							},
							statusCode: function statusCode(map) {
								var code;
								if (map) {
									if (state < 2) {
										for (code in map) {
											_statusCode[code] = [_statusCode[code], map[code]]
										}
									} else {
										jqXHR.always(map[jqXHR.status])
									}
								}
								return this
							},
							abort: function abort(statusText) {
								var finalText = statusText || strAbort;
								if (transport) {
									transport.abort(finalText)
								}
								done(0, finalText);
								return this
							}
						};
					deferred.promise(jqXHR).complete = completeDeferred.add;
					jqXHR.success = jqXHR.done;
					jqXHR.error = jqXHR.fail;
					s.url = ((url || s.url || location.href) + "").replace(rhash, "").replace(rprotocol, location.protocol + "//");
					s.type = options.method || options.type || s.method || s.type;
					s.dataTypes = jQuery.trim(s.dataType || "*").toLowerCase().match(rnotwhite) || [""];
					if (s.crossDomain == null) {
						urlAnchor = document.createElement("a");
						try {
							urlAnchor.href = s.url;
							urlAnchor.href = urlAnchor.href;
							s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !== urlAnchor.protocol + "//" + urlAnchor.host
						} catch (e) {
							s.crossDomain = !0
						}
					}
					if (s.data && s.processData && typeof s.data !== "string") {
						s.data = jQuery.param(s.data, s.traditional)
					}
					inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);
					if (state === 2) {
						return jqXHR
					}
					fireGlobals = jQuery.event && s.global;
					if (fireGlobals && jQuery.active++ === 0) {
						jQuery.event.trigger("ajaxStart")
					}
					s.type = s.type.toUpperCase();
					s.hasContent = !rnoContent.test(s.type);
					cacheURL = s.url;
					if (!s.hasContent) {
						if (s.data) {
							cacheURL = s.url += (rquery.test(cacheURL) ? "&" : "?") + s.data;
							delete s.data
						}
						if (s.cache === !1) {
							s.url = rts.test(cacheURL) ? cacheURL.replace(rts, "$1_=" + nonce++) : cacheURL + (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce++
						}
					}
					if (s.ifModified) {
						if (jQuery.lastModified[cacheURL]) {
							jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL])
						}
						if (jQuery.etag[cacheURL]) {
							jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL])
						}
					}
					if (s.data && s.hasContent && s.contentType !== !1 || options.contentType) {
						jqXHR.setRequestHeader("Content-Type", s.contentType)
					}
					jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]);
					for (i in s.headers) {
						jqXHR.setRequestHeader(i, s.headers[i])
					}
					if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === !1 || state === 2)) {
						return jqXHR.abort()
					}
					strAbort = "abort";
					for (i in {
						success: 1,
						error: 1,
						complete: 1
					}) {
						jqXHR[i](s[i])
					}
					transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);
					if (!transport) {
						done(-1, "No Transport")
					} else {
						jqXHR.readyState = 1;
						if (fireGlobals) {
							globalEventContext.trigger("ajaxSend", [jqXHR, s])
						}
						if (state === 2) {
							return jqXHR
						}
						if (s.async && s.timeout > 0) {
							timeoutTimer = window.setTimeout(function() {
								jqXHR.abort("timeout")
							}, s.timeout)
						}
						try {
							state = 1;
							transport.send(requestHeaders, done)
						} catch (e) {
							if (state < 2) {
								done(-1, e)
							} else {
								throw e
							}
						}
					}

					function done(status, nativeStatusText, responses, headers) {
						var isSuccess, success, error, response, modified, statusText = nativeStatusText;
						if (state === 2) {
							return
						}
						state = 2;
						if (timeoutTimer) {
							window.clearTimeout(timeoutTimer)
						}
						transport = undefined;
						responseHeadersString = headers || "";
						jqXHR.readyState = status > 0 ? 4 : 0;
						isSuccess = status >= 200 && status < 300 || status === 304;
						if (responses) {
							response = ajaxHandleResponses(s, jqXHR, responses)
						}
						response = ajaxConvert(s, response, jqXHR, isSuccess);
						if (isSuccess) {
							if (s.ifModified) {
								modified = jqXHR.getResponseHeader("Last-Modified");
								if (modified) {
									jQuery.lastModified[cacheURL] = modified
								}
								modified = jqXHR.getResponseHeader("etag");
								if (modified) {
									jQuery.etag[cacheURL] = modified
								}
							}
							if (status === 204 || s.type === "HEAD") {
								statusText = "nocontent"
							} else if (status === 304) {
								statusText = "notmodified"
							} else {
								statusText = response.state;
								success = response.data;
								error = response.error;
								isSuccess = !error
							}
						} else {
							error = statusText;
							if (status || !statusText) {
								statusText = "error";
								if (status < 0) {
									status = 0
								}
							}
						}
						jqXHR.status = status;
						jqXHR.statusText = (nativeStatusText || statusText) + "";
						if (isSuccess) {
							deferred.resolveWith(callbackContext, [success, statusText, jqXHR])
						} else {
							deferred.rejectWith(callbackContext, [jqXHR, statusText, error])
						}
						jqXHR.statusCode(_statusCode);
						_statusCode = undefined;
						if (fireGlobals) {
							globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [jqXHR, s, isSuccess ? success : error])
						}
						completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);
						if (fireGlobals) {
							globalEventContext.trigger("ajaxComplete", [jqXHR, s]);
							if (!--jQuery.active) {
								jQuery.event.trigger("ajaxStop")
							}
						}
					}
					return jqXHR
				},
				getJSON: function getJSON(url, data, callback) {
					return jQuery.get(url, data, callback, "json")
				},
				getScript: function getScript(url, callback) {
					return jQuery.get(url, undefined, callback, "script")
				}
			});
			jQuery.each(["get", "post"], function(i, method) {
				jQuery[method] = function(url, data, callback, type) {
					if (jQuery.isFunction(data)) {
						type = type || callback;
						callback = data;
						data = undefined
					}
					return jQuery.ajax(jQuery.extend({
						url: url,
						type: method,
						dataType: type,
						data: data,
						success: callback
					}, jQuery.isPlainObject(url) && url))
				}
			});
			jQuery._evalUrl = function(url) {
				return jQuery.ajax({
					url: url,
					type: "GET",
					dataType: "script",
					async: !1,
					global: !1,
					"throws": !0
				})
			};
			jQuery.fn.extend({
				wrapAll: function wrapAll(html) {
					var wrap;
					if (jQuery.isFunction(html)) {
						return this.each(function(i) {
							jQuery(this).wrapAll(html.call(this, i))
						})
					}
					if (this[0]) {
						wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(!0);
						if (this[0].parentNode) {
							wrap.insertBefore(this[0])
						}
						wrap.map(function() {
							var elem = this;
							while (elem.firstElementChild) {
								elem = elem.firstElementChild
							}
							return elem
						}).append(this)
					}
					return this
				},
				wrapInner: function wrapInner(html) {
					if (jQuery.isFunction(html)) {
						return this.each(function(i) {
							jQuery(this).wrapInner(html.call(this, i))
						})
					}
					return this.each(function() {
						var self = jQuery(this),
							contents = self.contents();
						if (contents.length) {
							contents.wrapAll(html)
						} else {
							self.append(html)
						}
					})
				},
				wrap: function wrap(html) {
					var isFunction = jQuery.isFunction(html);
					return this.each(function(i) {
						jQuery(this).wrapAll(isFunction ? html.call(this, i) : html)
					})
				},
				unwrap: function unwrap() {
					return this.parent().each(function() {
						if (!jQuery.nodeName(this, "body")) {
							jQuery(this).replaceWith(this.childNodes)
						}
					}).end()
				}
			});
			jQuery.expr.filters.hidden = function(elem) {
				return !jQuery.expr.filters.visible(elem)
			};
			jQuery.expr.filters.visible = function(elem) {
				return elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0
			};
			var r20 = /%20/g,
				rbracket = /\[\]$/,
				rCRLF = /\r?\n/g,
				rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
				rsubmittable = /^(?:input|select|textarea|keygen)/i;

			function buildParams(prefix, obj, traditional, add) {
				var name;
				if (jQuery.isArray(obj)) {
					jQuery.each(obj, function(i, v) {
						if (traditional || rbracket.test(prefix)) {
							add(prefix, v)
						} else {
							buildParams(prefix + "[" + (typeof v === "object" && v != null ? i : "") + "]", v, traditional, add)
						}
					})
				} else if (!traditional && jQuery.type(obj) === "object") {
					for (name in obj) {
						buildParams(prefix + "[" + name + "]", obj[name], traditional, add)
					}
				} else {
					add(prefix, obj)
				}
			}
			jQuery.param = function(a, traditional) {
				var prefix, s = [],
					add = function add(key, value) {
						value = jQuery.isFunction(value) ? value() : value == null ? "" : value;
						s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value)
					};
				if (traditional === undefined) {
					traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional
				}
				if (jQuery.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {
					jQuery.each(a, function() {
						add(this.name, this.value)
					})
				} else {
					for (prefix in a) {
						buildParams(prefix, a[prefix], traditional, add)
					}
				}
				return s.join("&").replace(r20, "+")
			};
			jQuery.fn.extend({
				serialize: function serialize() {
					return jQuery.param(this.serializeArray())
				},
				serializeArray: function serializeArray() {
					return this.map(function() {
						var elements = jQuery.prop(this, "elements");
						return elements ? jQuery.makeArray(elements) : this
					}).filter(function() {
							var type = this.type;
							return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type))
						}).map(function(i, elem) {
							var val = jQuery(this).val();
							return val == null ? null : jQuery.isArray(val) ? jQuery.map(val, function(val) {
								return {
									name: elem.name,
									value: val.replace(rCRLF, "\r\n")
								}
							}) : {
								name: elem.name,
								value: val.replace(rCRLF, "\r\n")
							}
						}).get()
				}
			});
			jQuery.ajaxSettings.xhr = function() {
				try {
					return new window.XMLHttpRequest()
				} catch (e) {}
			};
			var xhrSuccessStatus = {
					0: 200,
					1223: 204
				},
				xhrSupported = jQuery.ajaxSettings.xhr();
			support.cors = !!xhrSupported && "withCredentials" in xhrSupported;
			support.ajax = xhrSupported = !!xhrSupported;
			jQuery.ajaxTransport(function(options) {
				var callback, errorCallback;
				if (support.cors || xhrSupported && !options.crossDomain) {
					return {
						send: function send(headers, complete) {
							var i, xhr = options.xhr();
							xhr.open(options.type, options.url, options.async, options.username, options.password);
							if (options.xhrFields) {
								for (i in options.xhrFields) {
									xhr[i] = options.xhrFields[i]
								}
							}
							if (options.mimeType && xhr.overrideMimeType) {
								xhr.overrideMimeType(options.mimeType)
							}
							if (!options.crossDomain && !headers["X-Requested-With"]) {
								headers["X-Requested-With"] = "XMLHttpRequest"
							}
							for (i in headers) {
								xhr.setRequestHeader(i, headers[i])
							}
							callback = function(type) {
								return function() {
									if (callback) {
										callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;
										if (type === "abort") {
											xhr.abort()
										} else if (type === "error") {
											if (typeof xhr.status !== "number") {
												complete(0, "error")
											} else {
												complete(xhr.status, xhr.statusText)
											}
										} else {
											complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, (xhr.responseType || "text") !== "text" || typeof xhr.responseText !== "string" ? {
												binary: xhr.response
											} : {
												text: xhr.responseText
											}, xhr.getAllResponseHeaders())
										}
									}
								}
							};
							xhr.onload = callback();
							errorCallback = xhr.onerror = callback("error");
							if (xhr.onabort !== undefined) {
								xhr.onabort = errorCallback
							} else {
								xhr.onreadystatechange = function() {
									if (xhr.readyState === 4) {
										window.setTimeout(function() {
											if (callback) {
												errorCallback()
											}
										})
									}
								}
							}
							callback = callback("abort");
							try {
								xhr.send(options.hasContent && options.data || null)
							} catch (e) {
								if (callback) {
									throw e
								}
							}
						},
						abort: function abort() {
							if (callback) {
								callback()
							}
						}
					}
				}
			});
			jQuery.ajaxSetup({
				accepts: {
					script: "text/javascript, application/javascript, " + "application/ecmascript, application/x-ecmascript"
				},
				contents: {
					script: /\b(?:java|ecma)script\b/
				},
				converters: {
					"text script": function textScript(text) {
						jQuery.globalEval(text);
						return text
					}
				}
			});
			jQuery.ajaxPrefilter("script", function(s) {
				if (s.cache === undefined) {
					s.cache = !1
				}
				if (s.crossDomain) {
					s.type = "GET"
				}
			});
			jQuery.ajaxTransport("script", function(s) {
				if (s.crossDomain) {
					var script, callback;
					return {
						send: function send(_, complete) {
							script = jQuery("<script>").prop({
								charset: s.scriptCharset,
								src: s.url
							}).on("load error", callback = function(evt) {
									script.remove();
									callback = null;
									if (evt) {
										complete(evt.type === "error" ? 404 : 200, evt.type)
									}
								});
							document.head.appendChild(script[0])
						},
						abort: function abort() {
							if (callback) {
								callback()
							}
						}
					}
				}
			});
			var oldCallbacks = [],
				rjsonp = /(=)\?(?=&|$)|\?\?/;
			jQuery.ajaxSetup({
				jsonp: "callback",
				jsonpCallback: function jsonpCallback() {
					var callback = oldCallbacks.pop() || jQuery.expando + "_" + nonce++;
					this[callback] = !0;
					return callback
				}
			});
			jQuery.ajaxPrefilter("json jsonp", function(s, originalSettings, jqXHR) {
				var callbackName, overwritten, responseContainer, jsonProp = s.jsonp !== !1 && (rjsonp.test(s.url) ? "url" : typeof s.data === "string" && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && rjsonp.test(s.data) && "data");
				if (jsonProp || s.dataTypes[0] === "jsonp") {
					callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;
					if (jsonProp) {
						s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName)
					} else if (s.jsonp !== !1) {
						s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName
					}
					s.converters["script json"] = function() {
						if (!responseContainer) {
							jQuery.error(callbackName + " was not called")
						}
						return responseContainer[0]
					};
					s.dataTypes[0] = "json";
					overwritten = window[callbackName];
					window[callbackName] = function() {
						responseContainer = arguments
					};
					jqXHR.always(function() {
						if (overwritten === undefined) {
							jQuery(window).removeProp(callbackName)
						} else {
							window[callbackName] = overwritten
						}
						if (s[callbackName]) {
							s.jsonpCallback = originalSettings.jsonpCallback;
							oldCallbacks.push(callbackName)
						}
						if (responseContainer && jQuery.isFunction(overwritten)) {
							overwritten(responseContainer[0])
						}
						responseContainer = overwritten = undefined
					});
					return "script"
				}
			});
			jQuery.parseHTML = function(data, context, keepScripts) {
				if (!data || typeof data !== "string") {
					return null
				}
				if (typeof context === "boolean") {
					keepScripts = context;
					context = !1
				}
				context = context || document;
				var parsed = rsingleTag.exec(data),
					scripts = !keepScripts && [];
				if (parsed) {
					return [context.createElement(parsed[1])]
				}
				parsed = buildFragment([data], context, scripts);
				if (scripts && scripts.length) {
					jQuery(scripts).remove()
				}
				return jQuery.merge([], parsed.childNodes)
			};
			var _load = jQuery.fn.load;
			jQuery.fn.load = function(url, params, callback) {
				if (typeof url !== "string" && _load) {
					return _load.apply(this, arguments)
				}
				var selector, type, response, self = this,
					off = url.indexOf(" ");
				if (off > -1) {
					selector = jQuery.trim(url.slice(off));
					url = url.slice(0, off)
				}
				if (jQuery.isFunction(params)) {
					callback = params;
					params = undefined
				} else if (params && typeof params === "object") {
					type = "POST"
				}
				if (self.length > 0) {
					jQuery.ajax({
						url: url,
						type: type || "GET",
						dataType: "html",
						data: params
					}).done(function(responseText) {
							response = arguments;
							self.html(selector ? jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) : responseText)
						}).always(callback && function(jqXHR, status) {
							self.each(function() {
								callback.apply(this, response || [jqXHR.responseText, status, jqXHR])
							})
						})
				}
				return this
			};
			jQuery.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(i, type) {
				jQuery.fn[type] = function(fn) {
					return this.on(type, fn)
				}
			});
			jQuery.expr.filters.animated = function(elem) {
				return jQuery.grep(jQuery.timers, function(fn) {
					return elem === fn.elem
				}).length
			};

			function getWindow(elem) {
				return jQuery.isWindow(elem) ? elem : elem.nodeType === 9 && elem.defaultView
			}
			jQuery.offset = {
				setOffset: function setOffset(elem, options, i) {
					var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, position = jQuery.css(elem, "position"),
						curElem = jQuery(elem),
						props = {};
					if (position === "static") {
						elem.style.position = "relative"
					}
					curOffset = curElem.offset();
					curCSSTop = jQuery.css(elem, "top");
					curCSSLeft = jQuery.css(elem, "left");
					calculatePosition = (position === "absolute" || position === "fixed") && (curCSSTop + curCSSLeft).indexOf("auto") > -1;
					if (calculatePosition) {
						curPosition = curElem.position();
						curTop = curPosition.top;
						curLeft = curPosition.left
					} else {
						curTop = parseFloat(curCSSTop) || 0;
						curLeft = parseFloat(curCSSLeft) || 0
					}
					if (jQuery.isFunction(options)) {
						options = options.call(elem, i, jQuery.extend({}, curOffset))
					}
					if (options.top != null) {
						props.top = options.top - curOffset.top + curTop
					}
					if (options.left != null) {
						props.left = options.left - curOffset.left + curLeft
					}
					if ("using" in options) {
						options.using.call(elem, props)
					} else {
						curElem.css(props)
					}
				}
			};
			jQuery.fn.extend({
				offset: function offset(options) {
					if (arguments.length) {
						return options === undefined ? this : this.each(function(i) {
							jQuery.offset.setOffset(this, options, i)
						})
					}
					var docElem, win, elem = this[0],
						box = {
							top: 0,
							left: 0
						},
						doc = elem && elem.ownerDocument;
					if (!doc) {
						return
					}
					docElem = doc.documentElement;
					if (!jQuery.contains(docElem, elem)) {
						return box
					}
					box = elem.getBoundingClientRect();
					win = getWindow(doc);
					return {
						top: box.top + win.pageYOffset - docElem.clientTop,
						left: box.left + win.pageXOffset - docElem.clientLeft
					}
				},
				position: function position() {
					if (!this[0]) {
						return
					}
					var offsetParent, offset, elem = this[0],
						parentOffset = {
							top: 0,
							left: 0
						};
					if (jQuery.css(elem, "position") === "fixed") {
						offset = elem.getBoundingClientRect()
					} else {
						offsetParent = this.offsetParent();
						offset = this.offset();
						if (!jQuery.nodeName(offsetParent[0], "html")) {
							parentOffset = offsetParent.offset()
						}
						parentOffset.top += jQuery.css(offsetParent[0], "borderTopWidth", !0);
						parentOffset.left += jQuery.css(offsetParent[0], "borderLeftWidth", !0)
					}
					return {
						top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", !0),
						left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", !0)
					}
				},
				offsetParent: function offsetParent() {
					return this.map(function() {
						var offsetParent = this.offsetParent;
						while (offsetParent && jQuery.css(offsetParent, "position") === "static") {
							offsetParent = offsetParent.offsetParent
						}
						return offsetParent || documentElement
					})
				}
			});
			jQuery.each({
				scrollLeft: "pageXOffset",
				scrollTop: "pageYOffset"
			}, function(method, prop) {
				var top = "pageYOffset" === prop;
				jQuery.fn[method] = function(val) {
					return access(this, function(elem, method, val) {
						var win = getWindow(elem);
						if (val === undefined) {
							return win ? win[prop] : elem[method]
						}
						if (win) {
							win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset)
						} else {
							elem[method] = val
						}
					}, method, val, arguments.length)
				}
			});
			jQuery.each(["top", "left"], function(i, prop) {
				jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function(elem, computed) {
					if (computed) {
						computed = curCSS(elem, prop);
						return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed
					}
				})
			});
			jQuery.each({
				Height: "height",
				Width: "width"
			}, function(name, type) {
				jQuery.each({
					padding: "inner" + name,
					content: type,
					"": "outer" + name
				}, function(defaultExtra, funcName) {
					jQuery.fn[funcName] = function(margin, value) {
						var chainable = arguments.length && (defaultExtra || typeof margin !== "boolean"),
							extra = defaultExtra || (margin === !0 || value === !0 ? "margin" : "border");
						return access(this, function(elem, type, value) {
							var doc;
							if (jQuery.isWindow(elem)) {
								return elem.document.documentElement["client" + name]
							}
							if (elem.nodeType === 9) {
								doc = elem.documentElement;
								return Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name])
							}
							return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra)
						}, type, chainable ? margin : undefined, chainable, null)
					}
				})
			});
			jQuery.fn.extend({
				bind: function bind(types, data, fn) {
					return this.on(types, null, data, fn)
				},
				unbind: function unbind(types, fn) {
					return this.off(types, null, fn)
				},
				delegate: function delegate(selector, types, data, fn) {
					return this.on(types, selector, data, fn)
				},
				undelegate: function undelegate(selector, types, fn) {
					return arguments.length === 1 ? this.off(selector, "**") : this.off(types, selector || "**", fn)
				},
				size: function size() {
					return this.length
				}
			});
			jQuery.fn.andSelf = jQuery.fn.addBack;
			if (!0) {
				!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
					return jQuery
				}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
			}
			var _jQuery = window.jQuery,
				_$ = window.$;
			jQuery.noConflict = function(deep) {
				if (window.$ === jQuery) {
					window.$ = _$
				}
				if (deep && window.jQuery === jQuery) {
					window.jQuery = _jQuery
				}
				return jQuery
			};
			if (!noGlobal) {
				window.jQuery = window.$ = jQuery
			}
			return jQuery
		})
	}, function(module, exports, __webpack_require__) {
		'use strict';

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}
		var _jquery = __webpack_require__(2);
		var _jquery2 = _interopRequireDefault(_jquery);
		var _prestashop = __webpack_require__(4);
		var _prestashop2 = _interopRequireDefault(_prestashop);
		(0, _jquery2['default'])(document).ready(function() {
			_prestashop2['default'].on('updateCart', function(event) {
				var getCartViewUrl = (0, _jquery2['default'])('.js-cart').data('refresh-url');
				var requestData = {};
				if (event && event.reason) {
					requestData = {
						id_product_attribute: event.reason.idProductAttribute,
						id_product: event.reason.idProduct
					}
				}
				var productPriceSelector = '.product-price strong';
				var updatePrices = function updatePrices(pricesInCart, $cartOverview, $newCart) {
					_jquery2['default'].each(pricesInCart, function(index, priceInCart) {
						var productUrl = (0, _jquery2['default'])((0, _jquery2['default'])(priceInCart).parents('.product-line-grid')[0]).find('a.label').attr('href');
						var productAnchorSelector = '.label[href="' + productUrl + '"]';
						var newProductAnchor = $newCart.find(productAnchorSelector);
						var $cartItem = (0, _jquery2['default'])($cartOverview.find(productAnchorSelector).parents('.cart-item')[0]);
						if (newProductAnchor.length > 0) {
							(function() {
								var $newCartItem = newProductAnchor.parents('.cart-item');
								var $productCartItems = $cartOverview.find(productAnchorSelector).parents('.cart-item');
								_jquery2['default'].each($productCartItems, function(index, productCartItem) {
									var $productCartItem = (0, _jquery2['default'])(productCartItem);
									if ($productCartItem.find('.gift').length > 0 && 0 === $newCartItem.find('.gift').length) {
										$productCartItem.remove()
									}
								});
								if ($newCartItem.find('.gift').length === 1 && $productCartItems.find('.gift').length === 1 && $productCartItems.length > 1) {
									var $manuallyAddedProducts = $productCartItems.filter(function(index, productCartItem) {
										return (0, _jquery2['default'])(productCartItem).find('.gift').length === 0
									});
									$manuallyAddedProducts.remove()
								}
							})()
						}
						if (0 === newProductAnchor.length) {
							$cartItem.remove();
							return
						}
						var $newCartItem = (0, _jquery2['default'])($newCart.find(productAnchorSelector).parents('.cart-item')[0]);
						var newPrice;
						if ($newCartItem.find(productPriceSelector).find('.gift').length > 0) {
							newPrice = $newCartItem.find(productPriceSelector).html();
							$cartItem.find(productPriceSelector).html(newPrice)
						} else {
							newPrice = $newCartItem.find(productPriceSelector).text();
							$cartItem.find(productPriceSelector).text(newPrice)
						}
					})
				};
				var appendGiftProducts = function appendGiftProducts($cartOverview, $newCart) {
					$newCart = $newCart.filter('.js-cart');
					var $productAnchors = $newCart.find('.label[href]');
					_jquery2['default'].each($productAnchors, function(index, productAnchor) {
						var $productAnchor = (0, _jquery2['default'])(productAnchor);
						var productUrl = $productAnchor.attr('href');
						var $cartItems = $cartOverview.find('.cart-items');
						var $newCartItem = $productAnchor.parents('.cart-item');
						if (0 === $cartItems.find('.label[href="' + productUrl + '"]').length) {
							$cartItems.append($productAnchor.parents('.cart-item'))
						} else {
							var $cartItem = $cartItems.find('.label[href="' + productUrl + '"]').parents('.cart-item');
							if ($cartItem.find('.gift').length === 0 && $newCartItem.find('.gift').length > 0) {
								$cartItems.append($newCartItem)
							}
						}
					})
				};
				_jquery2['default'].post(getCartViewUrl, requestData).then(function(resp) {
					var $newCart = (0, _jquery2['default'])(resp.cart_detailed);
					var $cartOverview = (0, _jquery2['default'])('.cart-overview');
					var pricesInCart = $cartOverview.find(productPriceSelector);
					if ($newCart.find('.no-items').length > 0) {
						$cartOverview.replaceWith(resp.cart_detailed)
					} else {
						updatePrices(pricesInCart, $cartOverview, $newCart);
						appendGiftProducts($cartOverview, $newCart)
					}(0, _jquery2['default'])('.cart-detailed-totals').replaceWith(resp.cart_detailed_totals);
					(0, _jquery2['default'])('.cart-summary-items-subtotal').replaceWith(resp.cart_summary_items_subtotal);
					(0, _jquery2['default'])('.cart-summary-totals').replaceWith(resp.cart_summary_totals);
					(0, _jquery2['default'])('.cart-detailed-actions').replaceWith(resp.cart_detailed_actions);
					(0, _jquery2['default'])('.cart-voucher').replaceWith(resp.cart_voucher);
					(0, _jquery2['default'])('.js-cart-line-product-quantity').each(function(index, input) {
						var $input = (0, _jquery2['default'])(input);
						$input.attr('value', $input.val())
					});
					_prestashop2['default'].emit('updatedCart')
				}).fail(function(resp) {
						_prestashop2['default'].emit('handleError', {
							eventType: 'updateCart',
							resp: resp
						})
					})
			});
			var $body = (0, _jquery2['default'])('body');
			$body.on('click', '[data-button-action="add-to-cart"]', function(event) {
				event.preventDefault();
				var $form = (0, _jquery2['default'])((0, _jquery2['default'])(event.target).closest('form'));
				var query = $form.serialize() + '&add=1&action=update';
				var actionURL = $form.attr('action');
				var isQuantityInputValid = function isQuantityInputValid($input) {
					var validInput = !0;
					$input.each(function(index, input) {
						var $input = (0, _jquery2['default'])(input);
						var minimalValue = parseInt($input.attr('min'), 10);
						if (minimalValue && $input.val() < minimalValue) {
							onInvalidQuantity($input);
							validInput = !1
						}
					});
					return validInput
				};
				var onInvalidQuantity = function onInvalidQuantity($input) {
					(0, _jquery2['default'])($input.parents('.product-add-to-cart')[0]).find('.product-minimal-quantity').addClass('error');
					$input.parent().find('label').addClass('error')
				};
				var $quantityInput = $form.find('input[min]');
				if (!isQuantityInputValid($quantityInput)) {
					onInvalidQuantity($quantityInput);
					return
				}
				_jquery2['default'].post(actionURL, query, null, 'json').then(function(resp) {
					_prestashop2['default'].emit('updateCart', {
						reason: {
							idProduct: resp.id_product,
							idProductAttribute: resp.id_product_attribute,
							linkAction: 'add-to-cart'
						}
					})
				}).fail(function(resp) {
						_prestashop2['default'].emit('handleError', {
							eventType: 'addProductToCart',
							resp: resp
						})
					})
			});
			$body.on('submit', '[data-link-action="add-voucher"]', function(event) {
				event.preventDefault();
				var $addVoucherForm = (0, _jquery2['default'])(event.currentTarget);
				var getCartViewUrl = $addVoucherForm.attr('action');
				if (0 === $addVoucherForm.find('[name=action]').length) {
					$addVoucherForm.append((0, _jquery2['default'])('<input>', {
						'type': 'hidden',
						'name': 'ajax',
						"value": 1
					}))
				}
				if (0 === $addVoucherForm.find('[name=action]').length) {
					$addVoucherForm.append((0, _jquery2['default'])('<input>', {
						'type': 'hidden',
						'name': 'action',
						"value": "update"
					}))
				}
				_jquery2['default'].post(getCartViewUrl, $addVoucherForm.serialize(), null, 'json').then(function(resp) {
					if (resp.hasError) {
						(0, _jquery2['default'])('.js-error').show().find('.js-error-text').text(resp.errors[0]);
						return
					}
					_prestashop2['default'].emit('updateCart', {
						reason: event.target.dataset
					})
				}).fail(function(resp) {
						_prestashop2['default'].emit('handleError', {
							eventType: 'addVoucher',
							resp: resp
						})
					})
			})
		})
	}, function(module, exports) {
		module.exports = prestashop
	}, function(module, exports, __webpack_require__) {
		'use strict';

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}
		var _jquery = __webpack_require__(2);
		var _jquery2 = _interopRequireDefault(_jquery);
		var _prestashop = __webpack_require__(4);
		var _prestashop2 = _interopRequireDefault(_prestashop);
		var _checkoutPayment = __webpack_require__(6);
		var _checkoutPayment2 = _interopRequireDefault(_checkoutPayment);
		var _checkoutDelivery = __webpack_require__(7);
		var _checkoutDelivery2 = _interopRequireDefault(_checkoutDelivery);
		var _checkoutPayment3 = _interopRequireDefault(_checkoutPayment);

		function setUpCheckout() {
			(0, _checkoutPayment2['default'])();
			(0, _checkoutDelivery2['default'])();
			(0, _checkoutPayment3['default'])();
			handleCheckoutStepChange()
		}

		function handleCheckoutStepChange() {
			(0, _jquery2['default'])('.checkout-step').off('click');
			var currentStepClass = 'js-current-step';
			var currentStepSelector = '.' + currentStepClass;
			var stepsAfterPersonalInformation = (0, _jquery2['default'])('#checkout-personal-information-step').nextAll();
			(0, _jquery2['default'])(currentStepSelector).prevAll().add(stepsAfterPersonalInformation).on('click', function(event) {
				var $nextStep = (0, _jquery2['default'])(event.target).closest('.checkout-step');
				if (!$nextStep.hasClass('-unreachable')) {
					(0, _jquery2['default'])(currentStepSelector + ', .-current').removeClass(currentStepClass + ' -current');
					$nextStep.toggleClass('-current');
					$nextStep.toggleClass(currentStepClass)
				}
				_prestashop2['default'].emit('changedCheckoutStep', {
					event: event
				})
			});
			(0, _jquery2['default'])(currentStepSelector + ':not(#checkout-personal-information-step)').nextAll().on('click', function(event) {
				(0, _jquery2['default'])(currentStepSelector + ' button.continue').click();
				_prestashop2['default'].emit('changedCheckoutStep', {
					event: event
				})
			})
		}(0, _jquery2['default'])(document).ready(function() {
			if ((0, _jquery2['default'])('#checkout').length === 1) {
				setUpCheckout()
			}
		})
	}, function(module, exports, __webpack_require__) {
		'use strict';
		Object.defineProperty(exports, '__esModule', {
			value: !0
		});
		var _createClass = (function() {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];
					descriptor.enumerable = descriptor.enumerable || !1;
					descriptor.configurable = !0;
					if ('value' in descriptor) descriptor.writable = !0;
					Object.defineProperty(target, descriptor.key, descriptor)
				}
			}
			return function(Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);
				if (staticProps) defineProperties(Constructor, staticProps);
				return Constructor
			}
		})();

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function')
			}
		}
		var _jquery = __webpack_require__(2);
		var _jquery2 = _interopRequireDefault(_jquery);
		var Payment = (function() {
			function Payment() {
				_classCallCheck(this, Payment);
				this.confirmationSelector = '#payment-confirmation';
				this.paymentSelector = '#payment-section';
				this.conditionsSelector = '#conditions-to-approve';
				this.conditionAlertSelector = '.js-alert-payment-conditions';
				this.additionalInformatonSelector = '.js-additional-information';
				this.optionsForm = '.js-payment-option-form'
			}
			_createClass(Payment, [{
				key: 'init',
				value: function init() {
					(0, _jquery2['default'])(this.paymentSelector + ' input[type="checkbox"][disabled]').attr('disabled', !1);
					var $body = (0, _jquery2['default'])('body');
					$body.on('change', this.conditionsSelector + ' input[type="checkbox"]', _jquery2['default'].proxy(this.toggleOrderButton, this));
					$body.on('change', 'input[name="payment-option"]', _jquery2['default'].proxy(this.toggleOrderButton, this));
					$body.on('click', this.confirmationSelector + ' button', _jquery2['default'].proxy(this.confirm, this));
					this.collapseOptions()
				}
			}, {
				key: 'collapseOptions',
				value: function collapseOptions() {
					(0, _jquery2['default'])(this.additionalInformatonSelector + ', ' + this.optionsForm).hide()
				}
			}, {
				key: 'getSelectedOption',
				value: function getSelectedOption() {
					return (0, _jquery2['default'])('input[name="payment-option"]:checked').attr('id')
				}
			}, {
				key: 'hideConfirmation',
				value: function hideConfirmation() {
					(0, _jquery2['default'])(this.confirmationSelector).hide()
				}
			}, {
				key: 'showConfirmation',
				value: function showConfirmation() {
					(0, _jquery2['default'])(this.confirmationSelector).show()
				}
			}, {
				key: 'toggleOrderButton',
				value: function toggleOrderButton() {
					var show = !0;
					(0, _jquery2['default'])(this.conditionsSelector + ' input[type="checkbox"]').each(function(_, checkbox) {
						if (!checkbox.checked) {
							show = !1
						}
					});
					this.collapseOptions();
					var selectedOption = this.getSelectedOption();
					if (!selectedOption) {
						show = !1
					}(0, _jquery2['default'])('#' + selectedOption + '-additional-information').show();
					(0, _jquery2['default'])('#pay-with-' + selectedOption + '-form').show();
					(0, _jquery2['default'])('.js-payment-binary').hide();
					if ((0, _jquery2['default'])('#' + selectedOption).hasClass('binary')) {
						var paymentOption = this.getPaymentOptionSelector(selectedOption);
						this.hideConfirmation();
						(0, _jquery2['default'])(paymentOption).show();
						if (show) {
							(0, _jquery2['default'])(paymentOption).removeClass('disabled')
						} else {
							(0, _jquery2['default'])(paymentOption).addClass('disabled')
						}
					} else {
						this.showConfirmation();
						(0, _jquery2['default'])(this.confirmationSelector + ' button').attr('disabled', !show);
						if (show) {
							(0, _jquery2['default'])(this.conditionAlertSelector).hide()
						} else {
							(0, _jquery2['default'])(this.conditionAlertSelector).show()
						}
					}
				}
			}, {
				key: 'getPaymentOptionSelector',
				value: function getPaymentOptionSelector(option) {
					var moduleName = (0, _jquery2['default'])('#' + option).data('module-name');
					return '.js-payment-' + moduleName
				}
			}, {
				key: 'confirm',
				value: function confirm() {
					var option = this.getSelectedOption();
					if (option) {
						(0, _jquery2['default'])('#pay-with-' + option + '-form form').submit()
					}
				}
			}]);
			return Payment
		})();
		exports['default'] = function() {
			var payment = new Payment();
			payment.init();
			return payment
		};
		module.exports = exports['default']
	}, function(module, exports, __webpack_require__) {
		'use strict';
		Object.defineProperty(exports, '__esModule', {
			value: !0
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}
		var _jquery = __webpack_require__(2);
		var _jquery2 = _interopRequireDefault(_jquery);
		var _prestashop = __webpack_require__(4);
		var _prestashop2 = _interopRequireDefault(_prestashop);
		exports['default'] = function() {
			var $body = (0, _jquery2['default'])('body');
			var deliveryFormSelector = '#js-delivery';
			var summarySelector = '#js-checkout-summary';
			var deliveryStepSelector = '#checkout-delivery-step';
			var editDeliveryButtonSelector = '.js-edit-delivery';
			var updateDeliveryForm = function updateDeliveryForm(event) {
				var $deliveryMethodForm = (0, _jquery2['default'])(deliveryFormSelector);
				var requestData = $deliveryMethodForm.serialize();
				var $inputChecked = (0, _jquery2['default'])(event.currentTarget);
				var $newDeliveryOption = $inputChecked.parents("div.delivery-option");
				_jquery2['default'].post($deliveryMethodForm.data('url-update'), requestData).then(function(resp) {
					(0, _jquery2['default'])(summarySelector).replaceWith(resp.preview);
					_prestashop2['default'].emit('updatedDeliveryForm', {
						dataForm: $deliveryMethodForm.serializeArray(),
						deliveryOption: $newDeliveryOption
					})
				}).fail(function(resp) {
						_prestashop2['default'].trigger('handleError', {
							eventType: 'updateDeliveryOptions',
							resp: resp
						})
					})
			};
			$body.on('change', deliveryFormSelector + ' input', updateDeliveryForm);
			$body.on('click', editDeliveryButtonSelector, function(event) {
				event.stopPropagation();
				(0, _jquery2['default'])(deliveryStepSelector).trigger('click');
				_prestashop2['default'].emit('editDelivery')
			})
		};
		module.exports = exports['default']
	}, function(module, exports, __webpack_require__) {
		'use strict';

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}
		var _jquery = __webpack_require__(2);
		var _jquery2 = _interopRequireDefault(_jquery);
		var pendingQuery = !1;

		function updateResults(data) {
			pendingQuery = !1;
			prestashop.emit('updateProductList', data);
			window.history.pushState(data, undefined, data.current_url)
		}

		function handleError() {
			pendingQuery = !1
		}

		function makeQuery(url) {
			if (pendingQuery) {} else {
				var slightlyDifferentURL = [url, url.indexOf('?') >= 0 ? '&' : '?', 'from-xhr'].join('');
				_jquery2['default'].get(slightlyDifferentURL, null, null, 'json').then(updateResults).fail(handleError)
			}
		}(0, _jquery2['default'])(document).ready(function() {
			prestashop.on('updateFacets', function(param) {
				makeQuery(param)
			})
		})
	}, function(module, exports, __webpack_require__) {
		'use strict';

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}
		var _jquery = __webpack_require__(2);
		var _jquery2 = _interopRequireDefault(_jquery);
		var _prestashop = __webpack_require__(4);
		var _prestashop2 = _interopRequireDefault(_prestashop);
		(0, _jquery2['default'])(document).ready(function() {
			(0, _jquery2['default'])('body').on('click', '.quick-view', function(event) {
				_prestashop2['default'].emit('clickQuickView', {
					dataset: event.target.closest('.js-product-miniature').dataset
				});
				event.preventDefault()
			})
		})
	}, function(module, exports, __webpack_require__) {
		'use strict';

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}
		var _jquery = __webpack_require__(2);
		var _jquery2 = _interopRequireDefault(_jquery);
		var _prestashop = __webpack_require__(4);
		var _prestashop2 = _interopRequireDefault(_prestashop);
		(0, _jquery2['default'])(document).ready(function() {
			(0, _jquery2['default'])('body').on('change', '.product-variants [data-product-attribute]', function() {
				(0, _jquery2['default'])("input[name$='refresh']").click()
			});
			(0, _jquery2['default'])('body').on('click', '.product-refresh', function(event, extraParameters) {
				var $productRefresh = (0, _jquery2['default'])(this);
				event.preventDefault();
				var eventType = 'updatedProductCombination';
				if (typeof extraParameters !== 'undefined' && extraParameters.eventType) {
					eventType = extraParameters.eventType
				}
				var query = (0, _jquery2['default'])(event.target.form).serialize() + '&ajax=1&action=productrefresh';
				var actionURL = (0, _jquery2['default'])(event.target.form).attr('action');
				_jquery2['default'].post(actionURL, query, null, 'json').then(function(resp) {
					_prestashop2['default'].emit('updateProduct', {
						reason: {
							productUrl: resp.productUrl
						},
						refreshUrl: $productRefresh.data('url-update'),
						eventType: eventType
					})
				})
			});
			_prestashop2['default'].on('updateProduct', function(event) {
				if (typeof event.refreshUrl == "undefined") {
					event.refreshUrl = !0
				}
				var eventType = event.eventType;
				var replaceAddToCartSections = function replaceAddToCartSections(addCartHtml) {
					var $addToCartSnippet = (0, _jquery2['default'])(addCartHtml);
					var $addProductToCart = (0, _jquery2['default'])('.product-add-to-cart');

					function replaceAddToCartSection(replacement) {
						var replace = replacement.$addToCartSnippet.find(replacement.targetSelector);
						if ((0, _jquery2['default'])(replacement.$targetParent.find(replacement.targetSelector)).length > 0) {
							if (replace.length > 0) {
								(0, _jquery2['default'])(replacement.$targetParent.find(replacement.targetSelector)).replaceWith(replace[0].outerHTML)
							} else {
								(0, _jquery2['default'])(replacement.$targetParent.find(replacement.targetSelector)).html('')
							}
						}
					}
					var productAvailabilitySelector = '.add';
					replaceAddToCartSection({
						$addToCartSnippet: $addToCartSnippet,
						$targetParent: $addProductToCart,
						targetSelector: productAvailabilitySelector
					});
					var productMinimalQuantitySelector = '.product-minimal-quantity';
					replaceAddToCartSection({
						$addToCartSnippet: $addToCartSnippet,
						$targetParent: $addProductToCart,
						targetSelector: productMinimalQuantitySelector
					})
				};
				_jquery2['default'].post(event.reason.productUrl, {
					ajax: '1',
					action: 'refresh'
				}, null, 'json').then(function(resp) {
						(0, _jquery2['default'])('.product-prices').replaceWith(resp.product_prices);
						(0, _jquery2['default'])('.product-customization').replaceWith(resp.product_customization);
						(0, _jquery2['default'])('.product-variants').replaceWith(resp.product_variants);
						(0, _jquery2['default'])('.product-discounts').replaceWith(resp.product_discounts);
						(0, _jquery2['default'])('.images-container').replaceWith(resp.product_cover_thumbnails);
						(0, _jquery2['default'])('#product-details').replaceWith(resp.product_details);
						var $productAddToCart = undefined;
						(0, _jquery2['default'])(resp.product_add_to_cart).each(function(index, value) {
							if ((0, _jquery2['default'])(value).hasClass('product-add-to-cart')) {
								$productAddToCart = (0, _jquery2['default'])(value)
							}
						});
						replaceAddToCartSections($productAddToCart);
						var minimalProductQuantity = parseInt(resp.product_minimal_quantity, 10);
						var quantityInputSelector = '#quantity_wanted';
						var quantityInput = (0, _jquery2['default'])(quantityInputSelector);
						var quantity_wanted = quantityInput.val();
						if (!isNaN(minimalProductQuantity) && quantity_wanted < minimalProductQuantity && eventType !== 'updatedProductQuantity') {
							quantityInput.attr('min', minimalProductQuantity);
							quantityInput.val(minimalProductQuantity)
						}
						if (event.refreshUrl) {
							window.history.pushState({
								id_product_attribute: resp.id_product_attribute
							}, undefined, resp.product_url)
						}
						_prestashop2['default'].emit('updatedProduct', resp)
					})
			})
		})
	}, function(module, exports, __webpack_require__) {
		'use strict';

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}
		var _jquery = __webpack_require__(2);
		var _jquery2 = _interopRequireDefault(_jquery);
		var _prestashop = __webpack_require__(4);
		var _prestashop2 = _interopRequireDefault(_prestashop);

		function handleCountryChange(selectors) {
			(0, _jquery2['default'])('body').on('change', selectors.country, function() {
				var requestData = {
					id_country: (0, _jquery2['default'])(selectors.country).val(),
					id_address: (0, _jquery2['default'])(selectors.address + ' form').data('id-address')
				};
				var getFormViewUrl = (0, _jquery2['default'])(selectors.address + ' form').data('refresh-url');
				var formFieldsSelector = selectors.address + ' input';
				_jquery2['default'].post(getFormViewUrl, requestData).then(function(resp) {
					var inputs = [];
					(0, _jquery2['default'])(formFieldsSelector).each(function() {
						inputs[(0, _jquery2['default'])(this).prop('name')] = (0, _jquery2['default'])(this).val()
					});
					(0, _jquery2['default'])(selectors.address).replaceWith(resp.address_form);
					(0, _jquery2['default'])(formFieldsSelector).each(function() {
						(0, _jquery2['default'])(this).val(inputs[(0, _jquery2['default'])(this).prop('name')])
					});
					_prestashop2['default'].emit('updatedAddressForm', {
						target: (0, _jquery2['default'])(selectors.address)
					})
				}).fail(function(resp) {
						_prestashop2['default'].emit('handleError', {
							eventType: 'updateAddressForm',
							resp: resp
						})
					})
			})
		}(0, _jquery2['default'])(document).ready(function() {
			handleCountryChange({
				'country': '.js-country',
				'address': '.js-address-form'
			})
		})
	}, function(module, exports) {
		'use strict';

		function EventEmitter() {
			this._events = this._events || {};
			this._maxListeners = this._maxListeners || undefined
		}
		module.exports = EventEmitter;
		EventEmitter.EventEmitter = EventEmitter;
		EventEmitter.prototype._events = undefined;
		EventEmitter.prototype._maxListeners = undefined;
		EventEmitter.defaultMaxListeners = 10;
		EventEmitter.prototype.setMaxListeners = function(n) {
			if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError('n must be a positive number');
			this._maxListeners = n;
			return this
		};
		EventEmitter.prototype.emit = function(type) {
			var er, handler, len, args, i, listeners;
			if (!this._events) this._events = {};
			if (type === 'error') {
				if (!this._events.error || isObject(this._events.error) && !this._events.error.length) {
					er = arguments[1];
					if (er instanceof Error) {
						throw er
					} else {
						var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
						err.context = er;
						throw err
					}
				}
			}
			handler = this._events[type];
			if (isUndefined(handler)) return !1;
			if (isFunction(handler)) {
				switch (arguments.length) {
					case 1:
						handler.call(this);
						break;
					case 2:
						handler.call(this, arguments[1]);
						break;
					case 3:
						handler.call(this, arguments[1], arguments[2]);
						break;
					default:
						args = Array.prototype.slice.call(arguments, 1);
						handler.apply(this, args)
				}
			} else if (isObject(handler)) {
				args = Array.prototype.slice.call(arguments, 1);
				listeners = handler.slice();
				len = listeners.length;
				for (i = 0; i < len; i++) listeners[i].apply(this, args);
			}
			return !0
		};
		EventEmitter.prototype.addListener = function(type, listener) {
			var m;
			if (!isFunction(listener)) throw TypeError('listener must be a function');
			if (!this._events) this._events = {};
			if (this._events.newListener) this.emit('newListener', type, isFunction(listener.listener) ? listener.listener : listener);
			if (!this._events[type])
				this._events[type] = listener;
			else if (isObject(this._events[type]))
				this._events[type].push(listener);
			else this._events[type] = [this._events[type], listener];
			if (isObject(this._events[type]) && !this._events[type].warned) {
				if (!isUndefined(this._maxListeners)) {
					m = this._maxListeners
				} else {
					m = EventEmitter.defaultMaxListeners
				}
				if (m && m > 0 && this._events[type].length > m) {
					this._events[type].warned = !0;
					console.error('(node) warning: possible EventEmitter memory ' + 'leak detected. %d listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.', this._events[type].length);
					if (typeof console.trace === 'function') {
						console.trace()
					}
				}
			}
			return this
		};
		EventEmitter.prototype.on = EventEmitter.prototype.addListener;
		EventEmitter.prototype.once = function(type, listener) {
			if (!isFunction(listener)) throw TypeError('listener must be a function');
			var fired = !1;

			function g() {
				this.removeListener(type, g);
				if (!fired) {
					fired = !0;
					listener.apply(this, arguments)
				}
			}
			g.listener = listener;
			this.on(type, g);
			return this
		};
		EventEmitter.prototype.removeListener = function(type, listener) {
			var list, position, length, i;
			if (!isFunction(listener)) throw TypeError('listener must be a function');
			if (!this._events || !this._events[type]) return this;
			list = this._events[type];
			length = list.length;
			position = -1;
			if (list === listener || isFunction(list.listener) && list.listener === listener) {
				delete this._events[type];
				if (this._events.removeListener) this.emit('removeListener', type, listener)
			} else if (isObject(list)) {
				for (i = length; i-- > 0;) {
					if (list[i] === listener || list[i].listener && list[i].listener === listener) {
						position = i;
						break
					}
				}
				if (position < 0) return this;
				if (list.length === 1) {
					list.length = 0;
					delete this._events[type]
				} else {
					list.splice(position, 1)
				}
				if (this._events.removeListener) this.emit('removeListener', type, listener)
			}
			return this
		};
		EventEmitter.prototype.removeAllListeners = function(type) {
			var key, listeners;
			if (!this._events) return this;
			if (!this._events.removeListener) {
				if (arguments.length === 0) this._events = {};
				else if (this._events[type]) delete this._events[type];
				return this
			}
			if (arguments.length === 0) {
				for (key in this._events) {
					if (key === 'removeListener') continue;
					this.removeAllListeners(key)
				}
				this.removeAllListeners('removeListener');
				this._events = {};
				return this
			}
			listeners = this._events[type];
			if (isFunction(listeners)) {
				this.removeListener(type, listeners)
			} else if (listeners) {
				while (listeners.length) this.removeListener(type, listeners[listeners.length - 1])
			}
			delete this._events[type];
			return this
		};
		EventEmitter.prototype.listeners = function(type) {
			var ret;
			if (!this._events || !this._events[type]) ret = [];
			else if (isFunction(this._events[type])) ret = [this._events[type]];
			else ret = this._events[type].slice();
			return ret
		};
		EventEmitter.prototype.listenerCount = function(type) {
			if (this._events) {
				var evlistener = this._events[type];
				if (isFunction(evlistener)) return 1;
				else if (evlistener) return evlistener.length
			}
			return 0
		};
		EventEmitter.listenerCount = function(emitter, type) {
			return emitter.listenerCount(type)
		};

		function isFunction(arg) {
			return typeof arg === 'function'
		}

		function isNumber(arg) {
			return typeof arg === 'number'
		}

		function isObject(arg) {
			return typeof arg === 'object' && arg !== null
		}

		function isUndefined(arg) {
			return arg === void 0
		}
	}, function(module, exports, __webpack_require__) {
		'use strict';
		Object.defineProperty(exports, '__esModule', {
			value: !0
		});
		exports.psShowHide = psShowHide;

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}
		var _jquery = __webpack_require__(2);
		var _jquery2 = _interopRequireDefault(_jquery);

		function psShowHide() {
			(0, _jquery2['default'])('.ps-shown-by-js').show();
			(0, _jquery2['default'])('.ps-hidden-by-js').hide()
		}
	}]);
(function(modules) {
	var installedModules = {};

	function __webpack_require__(moduleId) {
		if (installedModules[moduleId])
			return installedModules[moduleId].exports;
		var module = installedModules[moduleId] = {
			exports: {},
			id: moduleId,
			loaded: !1
		};
		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		module.loaded = !0;
		return module.exports
	}
	__webpack_require__.m = modules;
	__webpack_require__.c = installedModules;
	__webpack_require__.p = "";
	return __webpack_require__(0)
})([function(module, exports, __webpack_require__) {
		module.exports = __webpack_require__(1)
	}, function(module, exports, __webpack_require__) {
		'use strict';

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}
		var _expose$ExposeJQueryJquery = __webpack_require__(2);
		var _expose$ExposeJQueryJquery2 = _interopRequireDefault(_expose$ExposeJQueryJquery);
		__webpack_require__(5);
		__webpack_require__(7);
		__webpack_require__(8);
		__webpack_require__(9);
		__webpack_require__(10);
		__webpack_require__(65);
		__webpack_require__(67);
		__webpack_require__(68);
		__webpack_require__(69);
		__webpack_require__(72);
		__webpack_require__(73);
		var _componentsDropDown = __webpack_require__(74);
		var _componentsDropDown2 = _interopRequireDefault(_componentsDropDown);
		var _componentsForm = __webpack_require__(75);
		var _componentsForm2 = _interopRequireDefault(_componentsForm);
		var _componentsProductMiniature = __webpack_require__(71);
		var _componentsProductMiniature2 = _interopRequireDefault(_componentsProductMiniature);
		var _componentsProductSelect = __webpack_require__(76);
		var _componentsProductSelect2 = _interopRequireDefault(_componentsProductSelect);
		var _componentsTopMenu = __webpack_require__(77);
		var _componentsTopMenu2 = _interopRequireDefault(_componentsTopMenu);
		var _prestashop = __webpack_require__(66);
		var _prestashop2 = _interopRequireDefault(_prestashop);
		var _events = __webpack_require__(78);
		var _events2 = _interopRequireDefault(_events);
		__webpack_require__(79);
		__webpack_require__(80);
		__webpack_require__(81);
		for (var i in _events2['default'].prototype) {
			_prestashop2['default'][i] = _events2['default'].prototype[i]
		}(0, _expose$ExposeJQueryJquery2['default'])(document).ready(function() {
			var dropDownEl = (0, _expose$ExposeJQueryJquery2['default'])('.js-dropdown');
			var form = new _componentsForm2['default']();
			var topMenuEl = (0, _expose$ExposeJQueryJquery2['default'])('.js-top-menu ul[data-depth="0"]');
			var dropDown = new _componentsDropDown2['default'](dropDownEl);
			var topMenu = new _componentsTopMenu2['default'](topMenuEl);
			var productMinitature = new _componentsProductMiniature2['default']();
			var productSelect = new _componentsProductSelect2['default']();
			dropDown.init();
			form.init();
			topMenu.init();
			productMinitature.init();
			productSelect.init()
		})
	}, function(module, exports, __webpack_require__) {
		(function(global) {
			module.exports = global["$"] = __webpack_require__(3)
		}.call(exports, (function() {
				return this
			}())))
	}, function(module, exports, __webpack_require__) {
		(function(global) {
			module.exports = global.jQuery = __webpack_require__(4)
		}.call(exports, (function() {
				return this
			}())))
	}, function(module, exports, __webpack_require__) {
		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
		(function(global, factory) {
			if (typeof module === "object" && typeof module.exports === "object") {
				module.exports = global.document ? factory(global, !0) : function(w) {
					if (!w.document) {
						throw new Error("jQuery requires a window with a document")
					}
					return factory(w)
				}
			} else {
				factory(global)
			}
		}(typeof window !== "undefined" ? window : this, function(window, noGlobal) {
			var arr = [];
			var document = window.document;
			var slice = arr.slice;
			var concat = arr.concat;
			var push = arr.push;
			var indexOf = arr.indexOf;
			var class2type = {};
			var toString = class2type.toString;
			var hasOwn = class2type.hasOwnProperty;
			var support = {};
			var version = "2.2.4",
				jQuery = function(selector, context) {
					return new jQuery.fn.init(selector, context)
				},
				rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
				rmsPrefix = /^-ms-/,
				rdashAlpha = /-([\da-z])/gi,
				fcamelCase = function(all, letter) {
					return letter.toUpperCase()
				};
			jQuery.fn = jQuery.prototype = {
				jquery: version,
				constructor: jQuery,
				selector: "",
				length: 0,
				toArray: function() {
					return slice.call(this)
				},
				get: function(num) {
					return num != null ? (num < 0 ? this[num + this.length] : this[num]) : slice.call(this)
				},
				pushStack: function(elems) {
					var ret = jQuery.merge(this.constructor(), elems);
					ret.prevObject = this;
					ret.context = this.context;
					return ret
				},
				each: function(callback) {
					return jQuery.each(this, callback)
				},
				map: function(callback) {
					return this.pushStack(jQuery.map(this, function(elem, i) {
						return callback.call(elem, i, elem)
					}))
				},
				slice: function() {
					return this.pushStack(slice.apply(this, arguments))
				},
				first: function() {
					return this.eq(0)
				},
				last: function() {
					return this.eq(-1)
				},
				eq: function(i) {
					var len = this.length,
						j = +i + (i < 0 ? len : 0);
					return this.pushStack(j >= 0 && j < len ? [this[j]] : [])
				},
				end: function() {
					return this.prevObject || this.constructor()
				},
				push: push,
				sort: arr.sort,
				splice: arr.splice
			};
			jQuery.extend = jQuery.fn.extend = function() {
				var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {},
					i = 1,
					length = arguments.length,
					deep = !1;
				if (typeof target === "boolean") {
					deep = target;
					target = arguments[i] || {};
					i++
				}
				if (typeof target !== "object" && !jQuery.isFunction(target)) {
					target = {}
				}
				if (i === length) {
					target = this;
					i--
				}
				for (; i < length; i++) {
					if ((options = arguments[i]) != null) {
						for (name in options) {
							src = target[name];
							copy = options[name];
							if (target === copy) {
								continue
							}
							if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))) {
								if (copyIsArray) {
									copyIsArray = !1;
									clone = src && jQuery.isArray(src) ? src : []
								} else {
									clone = src && jQuery.isPlainObject(src) ? src : {}
								}
								target[name] = jQuery.extend(deep, clone, copy)
							} else if (copy !== undefined) {
								target[name] = copy
							}
						}
					}
				}
				return target
			};
			jQuery.extend({
				expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),
				isReady: !0,
				error: function(msg) {
					throw new Error(msg)
				},
				noop: function() {},
				isFunction: function(obj) {
					return jQuery.type(obj) === "function"
				},
				isArray: Array.isArray,
				isWindow: function(obj) {
					return obj != null && obj === obj.window
				},
				isNumeric: function(obj) {
					var realStringObj = obj && obj.toString();
					return !jQuery.isArray(obj) && (realStringObj - parseFloat(realStringObj) + 1) >= 0
				},
				isPlainObject: function(obj) {
					var key;
					if (jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow(obj)) {
						return !1
					}
					if (obj.constructor && !hasOwn.call(obj, "constructor") && !hasOwn.call(obj.constructor.prototype || {}, "isPrototypeOf")) {
						return !1
					}
					for (key in obj) {}
					return key === undefined || hasOwn.call(obj, key)
				},
				isEmptyObject: function(obj) {
					var name;
					for (name in obj) {
						return !1
					}
					return !0
				},
				type: function(obj) {
					if (obj == null) {
						return obj + ""
					}
					return typeof obj === "object" || typeof obj === "function" ? class2type[toString.call(obj)] || "object" : typeof obj
				},
				globalEval: function(code) {
					var script, indirect = eval;
					code = jQuery.trim(code);
					if (code) {
						if (code.indexOf("use strict") === 1) {
							script = document.createElement("script");
							script.text = code;
							document.head.appendChild(script).parentNode.removeChild(script)
						} else {
							indirect(code)
						}
					}
				},
				camelCase: function(string) {
					return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase)
				},
				nodeName: function(elem, name) {
					return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase()
				},
				each: function(obj, callback) {
					var length, i = 0;
					if (isArrayLike(obj)) {
						length = obj.length;
						for (; i < length; i++) {
							if (callback.call(obj[i], i, obj[i]) === !1) {
								break
							}
						}
					} else {
						for (i in obj) {
							if (callback.call(obj[i], i, obj[i]) === !1) {
								break
							}
						}
					}
					return obj
				},
				trim: function(text) {
					return text == null ? "" : (text + "").replace(rtrim, "")
				},
				makeArray: function(arr, results) {
					var ret = results || [];
					if (arr != null) {
						if (isArrayLike(Object(arr))) {
							jQuery.merge(ret, typeof arr === "string" ? [arr] : arr)
						} else {
							push.call(ret, arr)
						}
					}
					return ret
				},
				inArray: function(elem, arr, i) {
					return arr == null ? -1 : indexOf.call(arr, elem, i)
				},
				merge: function(first, second) {
					var len = +second.length,
						j = 0,
						i = first.length;
					for (; j < len; j++) {
						first[i++] = second[j]
					}
					first.length = i;
					return first
				},
				grep: function(elems, callback, invert) {
					var callbackInverse, matches = [],
						i = 0,
						length = elems.length,
						callbackExpect = !invert;
					for (; i < length; i++) {
						callbackInverse = !callback(elems[i], i);
						if (callbackInverse !== callbackExpect) {
							matches.push(elems[i])
						}
					}
					return matches
				},
				map: function(elems, callback, arg) {
					var length, value, i = 0,
						ret = [];
					if (isArrayLike(elems)) {
						length = elems.length;
						for (; i < length; i++) {
							value = callback(elems[i], i, arg);
							if (value != null) {
								ret.push(value)
							}
						}
					} else {
						for (i in elems) {
							value = callback(elems[i], i, arg);
							if (value != null) {
								ret.push(value)
							}
						}
					}
					return concat.apply([], ret);
				},
				guid: 1,
				proxy: function(fn, context) {
					var tmp, args, proxy;
					if (typeof context === "string") {
						tmp = fn[context];
						context = fn;
						fn = tmp
					}
					if (!jQuery.isFunction(fn)) {
						return undefined
					}
					args = slice.call(arguments, 2);
					proxy = function() {
						return fn.apply(context || this, args.concat(slice.call(arguments)))
					};
					proxy.guid = fn.guid = fn.guid || jQuery.guid++;
					return proxy
				},
				now: Date.now,
				support: support
			});
			if (typeof Symbol === "function") {
				jQuery.fn[Symbol.iterator] = arr[Symbol.iterator]
			}
			jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(i, name) {
				class2type["[object " + name + "]"] = name.toLowerCase()
			});

			function isArrayLike(obj) {
				var length = !!obj && "length" in obj && obj.length,
					type = jQuery.type(obj);
				if (type === "function" || jQuery.isWindow(obj)) {
					return !1
				}
				return type === "array" || length === 0 || typeof length === "number" && length > 0 && (length - 1) in obj
			}
			var Sizzle = (function(window) {
				var i, support, Expr, getText, isXML, tokenize, compile, select, outermostContext, sortInput, hasDuplicate, setDocument, document, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains, expando = "sizzle" + 1 * new Date(),
					preferredDoc = window.document,
					dirruns = 0,
					done = 0,
					classCache = createCache(),
					tokenCache = createCache(),
					compilerCache = createCache(),
					sortOrder = function(a, b) {
						if (a === b) {
							hasDuplicate = !0
						}
						return 0
					},
					MAX_NEGATIVE = 1 << 31,
					hasOwn = ({}).hasOwnProperty,
					arr = [],
					pop = arr.pop,
					push_native = arr.push,
					push = arr.push,
					slice = arr.slice,
					indexOf = function(list, elem) {
						var i = 0,
							len = list.length;
						for (; i < len; i++) {
							if (list[i] === elem) {
								return i
							}
						}
						return -1
					},
					booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
					whitespace = "[\\x20\\t\\r\\n\\f]",
					identifier = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
					attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace + "*([*^$|!~]?=)" + whitespace + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace + "*\\]",
					pseudos = ":(" + identifier + ")(?:\\((" + "('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" + "((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" + ".*" + ")\\)|)",
					rwhitespace = new RegExp(whitespace + "+", "g"),
					rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"),
					rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"),
					rcombinators = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"),
					rattributeQuotes = new RegExp("=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g"),
					rpseudo = new RegExp(pseudos),
					ridentifier = new RegExp("^" + identifier + "$"),
					matchExpr = {
						"ID": new RegExp("^#(" + identifier + ")"),
						"CLASS": new RegExp("^\\.(" + identifier + ")"),
						"TAG": new RegExp("^(" + identifier + "|[*])"),
						"ATTR": new RegExp("^" + attributes),
						"PSEUDO": new RegExp("^" + pseudos),
						"CHILD": new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
						"bool": new RegExp("^(?:" + booleans + ")$", "i"),
						"needsContext": new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
					},
					rinputs = /^(?:input|select|textarea|button)$/i,
					rheader = /^h\d$/i,
					rnative = /^[^{]+\{\s*\[native \w/,
					rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
					rsibling = /[+~]/,
					rescape = /'|\\/g,
					runescape = new RegExp("\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig"),
					funescape = function(_, escaped, escapedWhitespace) {
						var high = "0x" + escaped - 0x10000;
						return high !== high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00)
					},
					unloadHandler = function() {
						setDocument()
					};
				try {
					push.apply((arr = slice.call(preferredDoc.childNodes)), preferredDoc.childNodes);
					arr[preferredDoc.childNodes.length].nodeType
				} catch (e) {
					push = {
						apply: arr.length ? function(target, els) {
							push_native.apply(target, slice.call(els))
						} : function(target, els) {
							var j = target.length,
								i = 0;
							while ((target[j++] = els[i++])) {}
							target.length = j - 1
						}
					}
				}

				function Sizzle(selector, context, results, seed) {
					var m, i, elem, nid, nidselect, match, groups, newSelector, newContext = context && context.ownerDocument,
						nodeType = context ? context.nodeType : 9;
					results = results || [];
					if (typeof selector !== "string" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {
						return results
					}
					if (!seed) {
						if ((context ? context.ownerDocument || context : preferredDoc) !== document) {
							setDocument(context)
						}
						context = context || document;
						if (documentIsHTML) {
							if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {
								if ((m = match[1])) {
									if (nodeType === 9) {
										if ((elem = context.getElementById(m))) {
											if (elem.id === m) {
												results.push(elem);
												return results
											}
										} else {
											return results
										}
									} else {
										if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {
											results.push(elem);
											return results
										}
									}
								} else if (match[2]) {
									push.apply(results, context.getElementsByTagName(selector));
									return results
								} else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {
									push.apply(results, context.getElementsByClassName(m));
									return results
								}
							}
							if (support.qsa && !compilerCache[selector + " "] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {
								if (nodeType !== 1) {
									newContext = context;
									newSelector = selector
								} else if (context.nodeName.toLowerCase() !== "object") {
									if ((nid = context.getAttribute("id"))) {
										nid = nid.replace(rescape, "\\$&")
									} else {
										context.setAttribute("id", (nid = expando))
									}
									groups = tokenize(selector);
									i = groups.length;
									nidselect = ridentifier.test(nid) ? "#" + nid : "[id='" + nid + "']";
									while (i--) {
										groups[i] = nidselect + " " + toSelector(groups[i])
									}
									newSelector = groups.join(",");
									newContext = rsibling.test(selector) && testContext(context.parentNode) || context
								}
								if (newSelector) {
									try {
										push.apply(results, newContext.querySelectorAll(newSelector));
										return results
									} catch (qsaError) {} finally {
										if (nid === expando) {
											context.removeAttribute("id")
										}
									}
								}
							}
						}
					}
					return select(selector.replace(rtrim, "$1"), context, results, seed)
				}

				function createCache() {
					var keys = [];

					function cache(key, value) {
						if (keys.push(key + " ") > Expr.cacheLength) {
							delete cache[keys.shift()]
						}
						return (cache[key + " "] = value)
					}
					return cache
				}

				function markFunction(fn) {
					fn[expando] = !0;
					return fn
				}

				function assert(fn) {
					var div = document.createElement("div");
					try {
						return !!fn(div)
					} catch (e) {
						return !1
					} finally {
						if (div.parentNode) {
							div.parentNode.removeChild(div)
						}
						div = null
					}
				}

				function addHandle(attrs, handler) {
					var arr = attrs.split("|"),
						i = arr.length;
					while (i--) {
						Expr.attrHandle[arr[i]] = handler
					}
				}

				function siblingCheck(a, b) {
					var cur = b && a,
						diff = cur && a.nodeType === 1 && b.nodeType === 1 && (~b.sourceIndex || MAX_NEGATIVE) - (~a.sourceIndex || MAX_NEGATIVE);
					if (diff) {
						return diff
					}
					if (cur) {
						while ((cur = cur.nextSibling)) {
							if (cur === b) {
								return -1
							}
						}
					}
					return a ? 1 : -1
				}

				function createInputPseudo(type) {
					return function(elem) {
						var name = elem.nodeName.toLowerCase();
						return name === "input" && elem.type === type
					}
				}

				function createButtonPseudo(type) {
					return function(elem) {
						var name = elem.nodeName.toLowerCase();
						return (name === "input" || name === "button") && elem.type === type
					}
				}

				function createPositionalPseudo(fn) {
					return markFunction(function(argument) {
						argument = +argument;
						return markFunction(function(seed, matches) {
							var j, matchIndexes = fn([], seed.length, argument),
								i = matchIndexes.length;
							while (i--) {
								if (seed[(j = matchIndexes[i])]) {
									seed[j] = !(matches[j] = seed[j])
								}
							}
						})
					})
				}

				function testContext(context) {
					return context && typeof context.getElementsByTagName !== "undefined" && context
				}
				support = Sizzle.support = {};
				isXML = Sizzle.isXML = function(elem) {
					var documentElement = elem && (elem.ownerDocument || elem).documentElement;
					return documentElement ? documentElement.nodeName !== "HTML" : !1
				};
				setDocument = Sizzle.setDocument = function(node) {
					var hasCompare, parent, doc = node ? node.ownerDocument || node : preferredDoc;
					if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {
						return document
					}
					document = doc;
					docElem = document.documentElement;
					documentIsHTML = !isXML(document);
					if ((parent = document.defaultView) && parent.top !== parent) {
						if (parent.addEventListener) {
							parent.addEventListener("unload", unloadHandler, !1)
						} else if (parent.attachEvent) {
							parent.attachEvent("onunload", unloadHandler)
						}
					}
					support.attributes = assert(function(div) {
						div.className = "i";
						return !div.getAttribute("className")
					});
					support.getElementsByTagName = assert(function(div) {
						div.appendChild(document.createComment(""));
						return !div.getElementsByTagName("*").length
					});
					support.getElementsByClassName = rnative.test(document.getElementsByClassName);
					support.getById = assert(function(div) {
						docElem.appendChild(div).id = expando;
						return !document.getElementsByName || !document.getElementsByName(expando).length
					});
					if (support.getById) {
						Expr.find.ID = function(id, context) {
							if (typeof context.getElementById !== "undefined" && documentIsHTML) {
								var m = context.getElementById(id);
								return m ? [m] : []
							}
						};
						Expr.filter.ID = function(id) {
							var attrId = id.replace(runescape, funescape);
							return function(elem) {
								return elem.getAttribute("id") === attrId
							}
						}
					} else {
						delete Expr.find.ID;
						Expr.filter.ID = function(id) {
							var attrId = id.replace(runescape, funescape);
							return function(elem) {
								var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
								return node && node.value === attrId
							}
						}
					}
					Expr.find.TAG = support.getElementsByTagName ? function(tag, context) {
						if (typeof context.getElementsByTagName !== "undefined") {
							return context.getElementsByTagName(tag)
						} else if (support.qsa) {
							return context.querySelectorAll(tag)
						}
					} : function(tag, context) {
						var elem, tmp = [],
							i = 0,
							results = context.getElementsByTagName(tag);
						if (tag === "*") {
							while ((elem = results[i++])) {
								if (elem.nodeType === 1) {
									tmp.push(elem)
								}
							}
							return tmp
						}
						return results
					};
					Expr.find.CLASS = support.getElementsByClassName && function(className, context) {
						if (typeof context.getElementsByClassName !== "undefined" && documentIsHTML) {
							return context.getElementsByClassName(className)
						}
					};
					rbuggyMatches = [];
					rbuggyQSA = [];
					if ((support.qsa = rnative.test(document.querySelectorAll))) {
						assert(function(div) {
							docElem.appendChild(div).innerHTML = "<a id='" + expando + "'></a>" + "<select id='" + expando + "-\r\\' msallowcapture=''>" + "<option selected=''></option></select>";
							if (div.querySelectorAll("[msallowcapture^='']").length) {
								rbuggyQSA.push("[*^$]=" + whitespace + "*(?:''|\"\")")
							}
							if (!div.querySelectorAll("[selected]").length) {
								rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")")
							}
							if (!div.querySelectorAll("[id~=" + expando + "-]").length) {
								rbuggyQSA.push("~=")
							}
							if (!div.querySelectorAll(":checked").length) {
								rbuggyQSA.push(":checked")
							}
							if (!div.querySelectorAll("a#" + expando + "+*").length) {
								rbuggyQSA.push(".#.+[+~]")
							}
						});
						assert(function(div) {
							var input = document.createElement("input");
							input.setAttribute("type", "hidden");
							div.appendChild(input).setAttribute("name", "D");
							if (div.querySelectorAll("[name=d]").length) {
								rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?=")
							}
							if (!div.querySelectorAll(":enabled").length) {
								rbuggyQSA.push(":enabled", ":disabled")
							}
							div.querySelectorAll("*,:x");
							rbuggyQSA.push(",.*:")
						})
					}
					if ((support.matchesSelector = rnative.test((matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)))) {
						assert(function(div) {
							support.disconnectedMatch = matches.call(div, "div");
							matches.call(div, "[s!='']:x");
							rbuggyMatches.push("!=", pseudos)
						})
					}
					rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));
					rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|"));
					hasCompare = rnative.test(docElem.compareDocumentPosition);
					contains = hasCompare || rnative.test(docElem.contains) ? function(a, b) {
						var adown = a.nodeType === 9 ? a.documentElement : a,
							bup = b && b.parentNode;
						return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16))
					} : function(a, b) {
						if (b) {
							while ((b = b.parentNode)) {
								if (b === a) {
									return !0
								}
							}
						}
						return !1
					};
					sortOrder = hasCompare ? function(a, b) {
						if (a === b) {
							hasDuplicate = !0;
							return 0
						}
						var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
						if (compare) {
							return compare
						}
						compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1;
						if (compare & 1 || (!support.sortDetached && b.compareDocumentPosition(a) === compare)) {
							if (a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {
								return -1
							}
							if (b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {
								return 1
							}
							return sortInput ? (indexOf(sortInput, a) - indexOf(sortInput, b)) : 0
						}
						return compare & 4 ? -1 : 1
					} : function(a, b) {
						if (a === b) {
							hasDuplicate = !0;
							return 0
						}
						var cur, i = 0,
							aup = a.parentNode,
							bup = b.parentNode,
							ap = [a],
							bp = [b];
						if (!aup || !bup) {
							return a === document ? -1 : b === document ? 1 : aup ? -1 : bup ? 1 : sortInput ? (indexOf(sortInput, a) - indexOf(sortInput, b)) : 0
						} else if (aup === bup) {
							return siblingCheck(a, b)
						}
						cur = a;
						while ((cur = cur.parentNode)) {
							ap.unshift(cur)
						}
						cur = b;
						while ((cur = cur.parentNode)) {
							bp.unshift(cur)
						}
						while (ap[i] === bp[i]) {
							i++
						}
						return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0
					};
					return document
				};
				Sizzle.matches = function(expr, elements) {
					return Sizzle(expr, null, null, elements)
				};
				Sizzle.matchesSelector = function(elem, expr) {
					if ((elem.ownerDocument || elem) !== document) {
						setDocument(elem)
					}
					expr = expr.replace(rattributeQuotes, "='$1']");
					if (support.matchesSelector && documentIsHTML && !compilerCache[expr + " "] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {
						try {
							var ret = matches.call(elem, expr);
							if (ret || support.disconnectedMatch || elem.document && elem.document.nodeType !== 11) {
								return ret
							}
						} catch (e) {}
					}
					return Sizzle(expr, document, null, [elem]).length > 0
				};
				Sizzle.contains = function(context, elem) {
					if ((context.ownerDocument || context) !== document) {
						setDocument(context)
					}
					return contains(context, elem)
				};
				Sizzle.attr = function(elem, name) {
					if ((elem.ownerDocument || elem) !== document) {
						setDocument(elem)
					}
					var fn = Expr.attrHandle[name.toLowerCase()],
						val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;
					return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null
				};
				Sizzle.error = function(msg) {
					throw new Error("Syntax error, unrecognized expression: " + msg)
				};
				Sizzle.uniqueSort = function(results) {
					var elem, duplicates = [],
						j = 0,
						i = 0;
					hasDuplicate = !support.detectDuplicates;
					sortInput = !support.sortStable && results.slice(0);
					results.sort(sortOrder);
					if (hasDuplicate) {
						while ((elem = results[i++])) {
							if (elem === results[i]) {
								j = duplicates.push(i)
							}
						}
						while (j--) {
							results.splice(duplicates[j], 1)
						}
					}
					sortInput = null;
					return results
				};
				getText = Sizzle.getText = function(elem) {
					var node, ret = "",
						i = 0,
						nodeType = elem.nodeType;
					if (!nodeType) {
						while ((node = elem[i++])) {
							ret += getText(node)
						}
					} else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
						if (typeof elem.textContent === "string") {
							return elem.textContent
						} else {
							for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
								ret += getText(elem)
							}
						}
					} else if (nodeType === 3 || nodeType === 4) {
						return elem.nodeValue
					}
					return ret
				};
				Expr = Sizzle.selectors = {
					cacheLength: 50,
					createPseudo: markFunction,
					match: matchExpr,
					attrHandle: {},
					find: {},
					relative: {
						">": {
							dir: "parentNode",
							first: !0
						},
						" ": {
							dir: "parentNode"
						},
						"+": {
							dir: "previousSibling",
							first: !0
						},
						"~": {
							dir: "previousSibling"
						}
					},
					preFilter: {
						"ATTR": function(match) {
							match[1] = match[1].replace(runescape, funescape);
							match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape);
							if (match[2] === "~=") {
								match[3] = " " + match[3] + " "
							}
							return match.slice(0, 4)
						},
						"CHILD": function(match) {
							match[1] = match[1].toLowerCase();
							if (match[1].slice(0, 3) === "nth") {
								if (!match[3]) {
									Sizzle.error(match[0])
								}
								match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === "even" || match[3] === "odd"));
								match[5] = +((match[7] + match[8]) || match[3] === "odd")
							} else if (match[3]) {
								Sizzle.error(match[0])
							}
							return match
						},
						"PSEUDO": function(match) {
							var excess, unquoted = !match[6] && match[2];
							if (matchExpr.CHILD.test(match[0])) {
								return null
							}
							if (match[3]) {
								match[2] = match[4] || match[5] || ""
							} else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, !0)) && (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {
								match[0] = match[0].slice(0, excess);
								match[2] = unquoted.slice(0, excess)
							}
							return match.slice(0, 3)
						}
					},
					filter: {
						"TAG": function(nodeNameSelector) {
							var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
							return nodeNameSelector === "*" ? function() {
								return !0
							} : function(elem) {
								return elem.nodeName && elem.nodeName.toLowerCase() === nodeName
							}
						},
						"CLASS": function(className) {
							var pattern = classCache[className + " "];
							return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function(elem) {
								return pattern.test(typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "")
							})
						},
						"ATTR": function(name, operator, check) {
							return function(elem) {
								var result = Sizzle.attr(elem, name);
								if (result == null) {
									return operator === "!="
								}
								if (!operator) {
									return !0
								}
								result += "";
								return operator === "=" ? result === check : operator === "!=" ? result !== check : operator === "^=" ? check && result.indexOf(check) === 0 : operator === "*=" ? check && result.indexOf(check) > -1 : operator === "$=" ? check && result.slice(-check.length) === check : operator === "~=" ? (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1 : operator === "|=" ? result === check || result.slice(0, check.length + 1) === check + "-" : !1
							}
						},
						"CHILD": function(type, what, argument, first, last) {
							var simple = type.slice(0, 3) !== "nth",
								forward = type.slice(-4) !== "last",
								ofType = what === "of-type";
							return first === 1 && last === 0 ? function(elem) {
								return !!elem.parentNode
							} : function(elem, context, xml) {
								var cache, uniqueCache, outerCache, node, nodeIndex, start, dir = simple !== forward ? "nextSibling" : "previousSibling",
									parent = elem.parentNode,
									name = ofType && elem.nodeName.toLowerCase(),
									useCache = !xml && !ofType,
									diff = !1;
								if (parent) {
									if (simple) {
										while (dir) {
											node = elem;
											while ((node = node[dir])) {
												if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {
													return !1
												}
											}
											start = dir = type === "only" && !start && "nextSibling"
										}
										return !0
									}
									start = [forward ? parent.firstChild : parent.lastChild];
									if (forward && useCache) {
										node = parent;
										outerCache = node[expando] || (node[expando] = {});
										uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
										cache = uniqueCache[type] || [];
										nodeIndex = cache[0] === dirruns && cache[1];
										diff = nodeIndex && cache[2];
										node = nodeIndex && parent.childNodes[nodeIndex];
										while ((node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop())) {
											if (node.nodeType === 1 && ++diff && node === elem) {
												uniqueCache[type] = [dirruns, nodeIndex, diff];
												break
											}
										}
									} else {
										if (useCache) {
											node = elem;
											outerCache = node[expando] || (node[expando] = {});
											uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
											cache = uniqueCache[type] || [];
											nodeIndex = cache[0] === dirruns && cache[1];
											diff = nodeIndex
										}
										if (diff === !1) {
											while ((node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop())) {
												if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {
													if (useCache) {
														outerCache = node[expando] || (node[expando] = {});
														uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
														uniqueCache[type] = [dirruns, diff]
													}
													if (node === elem) {
														break
													}
												}
											}
										}
									}
									diff -= last;
									return diff === first || (diff % first === 0 && diff / first >= 0)
								}
							}
						},
						"PSEUDO": function(pseudo, argument) {
							var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error("unsupported pseudo: " + pseudo);
							if (fn[expando]) {
								return fn(argument)
							}
							if (fn.length > 1) {
								args = [pseudo, pseudo, "", argument];
								return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches) {
									var idx, matched = fn(seed, argument),
										i = matched.length;
									while (i--) {
										idx = indexOf(seed, matched[i]);
										seed[idx] = !(matches[idx] = matched[i])
									}
								}) : function(elem) {
									return fn(elem, 0, args)
								}
							}
							return fn
						}
					},
					pseudos: {
						"not": markFunction(function(selector) {
							var input = [],
								results = [],
								matcher = compile(selector.replace(rtrim, "$1"));
							return matcher[expando] ? markFunction(function(seed, matches, context, xml) {
								var elem, unmatched = matcher(seed, null, xml, []),
									i = seed.length;
								while (i--) {
									if ((elem = unmatched[i])) {
										seed[i] = !(matches[i] = elem)
									}
								}
							}) : function(elem, context, xml) {
								input[0] = elem;
								matcher(input, null, xml, results);
								input[0] = null;
								return !results.pop()
							}
						}),
						"has": markFunction(function(selector) {
							return function(elem) {
								return Sizzle(selector, elem).length > 0
							}
						}),
						"contains": markFunction(function(text) {
							text = text.replace(runescape, funescape);
							return function(elem) {
								return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1
							}
						}),
						"lang": markFunction(function(lang) {
							if (!ridentifier.test(lang || "")) {
								Sizzle.error("unsupported lang: " + lang)
							}
							lang = lang.replace(runescape, funescape).toLowerCase();
							return function(elem) {
								var elemLang;
								do {
									if ((elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang"))) {
										elemLang = elemLang.toLowerCase();
										return elemLang === lang || elemLang.indexOf(lang + "-") === 0
									}
								} while ((elem = elem.parentNode) && elem.nodeType === 1);
								return !1
							}
						}),
						"target": function(elem) {
							var hash = window.location && window.location.hash;
							return hash && hash.slice(1) === elem.id
						},
						"root": function(elem) {
							return elem === docElem
						},
						"focus": function(elem) {
							return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex)
						},
						"enabled": function(elem) {
							return elem.disabled === !1
						},
						"disabled": function(elem) {
							return elem.disabled === !0
						},
						"checked": function(elem) {
							var nodeName = elem.nodeName.toLowerCase();
							return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected)
						},
						"selected": function(elem) {
							if (elem.parentNode) {
								elem.parentNode.selectedIndex
							}
							return elem.selected === !0
						},
						"empty": function(elem) {
							for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
								if (elem.nodeType < 6) {
									return !1
								}
							}
							return !0
						},
						"parent": function(elem) {
							return !Expr.pseudos.empty(elem)
						},
						"header": function(elem) {
							return rheader.test(elem.nodeName)
						},
						"input": function(elem) {
							return rinputs.test(elem.nodeName)
						},
						"button": function(elem) {
							var name = elem.nodeName.toLowerCase();
							return name === "input" && elem.type === "button" || name === "button"
						},
						"text": function(elem) {
							var attr;
							return elem.nodeName.toLowerCase() === "input" && elem.type === "text" && ((attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text")
						},
						"first": createPositionalPseudo(function() {
							return [0]
						}),
						"last": createPositionalPseudo(function(matchIndexes, length) {
							return [length - 1]
						}),
						"eq": createPositionalPseudo(function(matchIndexes, length, argument) {
							return [argument < 0 ? argument + length : argument]
						}),
						"even": createPositionalPseudo(function(matchIndexes, length) {
							var i = 0;
							for (; i < length; i += 2) {
								matchIndexes.push(i)
							}
							return matchIndexes
						}),
						"odd": createPositionalPseudo(function(matchIndexes, length) {
							var i = 1;
							for (; i < length; i += 2) {
								matchIndexes.push(i)
							}
							return matchIndexes
						}),
						"lt": createPositionalPseudo(function(matchIndexes, length, argument) {
							var i = argument < 0 ? argument + length : argument;
							for (; --i >= 0;) {
								matchIndexes.push(i)
							}
							return matchIndexes
						}),
						"gt": createPositionalPseudo(function(matchIndexes, length, argument) {
							var i = argument < 0 ? argument + length : argument;
							for (; ++i < length;) {
								matchIndexes.push(i)
							}
							return matchIndexes
						})
					}
				};
				Expr.pseudos.nth = Expr.pseudos.eq;
				for (i in {
					radio: !0,
					checkbox: !0,
					file: !0,
					password: !0,
					image: !0
				}) {
					Expr.pseudos[i] = createInputPseudo(i)
				}
				for (i in {
					submit: !0,
					reset: !0
				}) {
					Expr.pseudos[i] = createButtonPseudo(i)
				}

				function setFilters() {}
				setFilters.prototype = Expr.filters = Expr.pseudos;
				Expr.setFilters = new setFilters();
				tokenize = Sizzle.tokenize = function(selector, parseOnly) {
					var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + " "];
					if (cached) {
						return parseOnly ? 0 : cached.slice(0)
					}
					soFar = selector;
					groups = [];
					preFilters = Expr.preFilter;
					while (soFar) {
						if (!matched || (match = rcomma.exec(soFar))) {
							if (match) {
								soFar = soFar.slice(match[0].length) || soFar
							}
							groups.push((tokens = []))
						}
						matched = !1;
						if ((match = rcombinators.exec(soFar))) {
							matched = match.shift();
							tokens.push({
								value: matched,
								type: match[0].replace(rtrim, " ")
							});
							soFar = soFar.slice(matched.length)
						}
						for (type in Expr.filter) {
							if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
								matched = match.shift();
								tokens.push({
									value: matched,
									type: type,
									matches: match
								});
								soFar = soFar.slice(matched.length);
							}
						}
						if (!matched) {
							break
						}
					}
					return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0)
				};

				function toSelector(tokens) {
					var i = 0,
						len = tokens.length,
						selector = "";
					for (; i < len; i++) {
						selector += tokens[i].value
					}
					return selector
				}

				function addCombinator(matcher, combinator, base) {
					var dir = combinator.dir,
						checkNonElements = base && dir === "parentNode",
						doneName = done++;
					return combinator.first ? function(elem, context, xml) {
						while ((elem = elem[dir])) {
							if (elem.nodeType === 1 || checkNonElements) {
								return matcher(elem, context, xml)
							}
						}
					} : function(elem, context, xml) {
						var oldCache, uniqueCache, outerCache, newCache = [dirruns, doneName];
						if (xml) {
							while ((elem = elem[dir])) {
								if (elem.nodeType === 1 || checkNonElements) {
									if (matcher(elem, context, xml)) {
										return !0
									}
								}
							}
						} else {
							while ((elem = elem[dir])) {
								if (elem.nodeType === 1 || checkNonElements) {
									outerCache = elem[expando] || (elem[expando] = {});
									uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});
									if ((oldCache = uniqueCache[dir]) && oldCache[0] === dirruns && oldCache[1] === doneName) {
										return (newCache[2] = oldCache[2])
									} else {
										uniqueCache[dir] = newCache;
										if ((newCache[2] = matcher(elem, context, xml))) {
											return !0
										}
									}
								}
							}
						}
					}
				}

				function elementMatcher(matchers) {
					return matchers.length > 1 ? function(elem, context, xml) {
						var i = matchers.length;
						while (i--) {
							if (!matchers[i](elem, context, xml)) {
								return !1
							}
						}
						return !0
					} : matchers[0]
				}

				function multipleContexts(selector, contexts, results) {
					var i = 0,
						len = contexts.length;
					for (; i < len; i++) {
						Sizzle(selector, contexts[i], results)
					}
					return results
				}

				function condense(unmatched, map, filter, context, xml) {
					var elem, newUnmatched = [],
						i = 0,
						len = unmatched.length,
						mapped = map != null;
					for (; i < len; i++) {
						if ((elem = unmatched[i])) {
							if (!filter || filter(elem, context, xml)) {
								newUnmatched.push(elem);
								if (mapped) {
									map.push(i)
								}
							}
						}
					}
					return newUnmatched
				}

				function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
					if (postFilter && !postFilter[expando]) {
						postFilter = setMatcher(postFilter)
					}
					if (postFinder && !postFinder[expando]) {
						postFinder = setMatcher(postFinder, postSelector)
					}
					return markFunction(function(seed, results, context, xml) {
						var temp, i, elem, preMap = [],
							postMap = [],
							preexisting = results.length,
							elems = seed || multipleContexts(selector || "*", context.nodeType ? [context] : context, []),
							matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,
							matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;
						if (matcher) {
							matcher(matcherIn, matcherOut, context, xml)
						}
						if (postFilter) {
							temp = condense(matcherOut, postMap);
							postFilter(temp, [], context, xml);
							i = temp.length;
							while (i--) {
								if ((elem = temp[i])) {
									matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem)
								}
							}
						}
						if (seed) {
							if (postFinder || preFilter) {
								if (postFinder) {
									temp = [];
									i = matcherOut.length;
									while (i--) {
										if ((elem = matcherOut[i])) {
											temp.push((matcherIn[i] = elem))
										}
									}
									postFinder(null, (matcherOut = []), temp, xml)
								}
								i = matcherOut.length;
								while (i--) {
									if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {
										seed[temp] = !(results[temp] = elem)
									}
								}
							}
						} else {
							matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);
							if (postFinder) {
								postFinder(null, results, matcherOut, xml)
							} else {
								push.apply(results, matcherOut)
							}
						}
					})
				}

				function matcherFromTokens(tokens) {
					var checkContext, matcher, j, len = tokens.length,
						leadingRelative = Expr.relative[tokens[0].type],
						implicitRelative = leadingRelative || Expr.relative[" "],
						i = leadingRelative ? 1 : 0,
						matchContext = addCombinator(function(elem) {
							return elem === checkContext
						}, implicitRelative, !0),
						matchAnyContext = addCombinator(function(elem) {
							return indexOf(checkContext, elem) > -1
						}, implicitRelative, !0),
						matchers = [function(elem, context, xml) {
							var ret = (!leadingRelative && (xml || context !== outermostContext)) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
							checkContext = null;
							return ret
						}];
					for (; i < len; i++) {
						if ((matcher = Expr.relative[tokens[i].type])) {
							matchers = [addCombinator(elementMatcher(matchers), matcher)]
						} else {
							matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);
							if (matcher[expando]) {
								j = ++i;
								for (; j < len; j++) {
									if (Expr.relative[tokens[j].type]) {
										break
									}
								}
								return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(tokens.slice(0, i - 1).concat({
									value: tokens[i - 2].type === " " ? "*" : ""
								})).replace(rtrim, "$1"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens((tokens = tokens.slice(j))), j < len && toSelector(tokens))
							}
							matchers.push(matcher)
						}
					}
					return elementMatcher(matchers)
				}

				function matcherFromGroupMatchers(elementMatchers, setMatchers) {
					var bySet = setMatchers.length > 0,
						byElement = elementMatchers.length > 0,
						superMatcher = function(seed, context, xml, results, outermost) {
							var elem, j, matcher, matchedCount = 0,
								i = "0",
								unmatched = seed && [],
								setMatched = [],
								contextBackup = outermostContext,
								elems = seed || byElement && Expr.find.TAG("*", outermost),
								dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
								len = elems.length;
							if (outermost) {
								outermostContext = context === document || context || outermost
							}
							for (; i !== len && (elem = elems[i]) != null; i++) {
								if (byElement && elem) {
									j = 0;
									if (!context && elem.ownerDocument !== document) {
										setDocument(elem);
										xml = !documentIsHTML
									}
									while ((matcher = elementMatchers[j++])) {
										if (matcher(elem, context || document, xml)) {
											results.push(elem);
											break
										}
									}
									if (outermost) {
										dirruns = dirrunsUnique
									}
								}
								if (bySet) {
									if ((elem = !matcher && elem)) {
										matchedCount--
									}
									if (seed) {
										unmatched.push(elem)
									}
								}
							}
							matchedCount += i;
							if (bySet && i !== matchedCount) {
								j = 0;
								while ((matcher = setMatchers[j++])) {
									matcher(unmatched, setMatched, context, xml)
								}
								if (seed) {
									if (matchedCount > 0) {
										while (i--) {
											if (!(unmatched[i] || setMatched[i])) {
												setMatched[i] = pop.call(results)
											}
										}
									}
									setMatched = condense(setMatched)
								}
								push.apply(results, setMatched);
								if (outermost && !seed && setMatched.length > 0 && (matchedCount + setMatchers.length) > 1) {
									Sizzle.uniqueSort(results)
								}
							}
							if (outermost) {
								dirruns = dirrunsUnique;
								outermostContext = contextBackup
							}
							return unmatched
						};
					return bySet ? markFunction(superMatcher) : superMatcher
				}
				compile = Sizzle.compile = function(selector, match) {
					var i, setMatchers = [],
						elementMatchers = [],
						cached = compilerCache[selector + " "];
					if (!cached) {
						if (!match) {
							match = tokenize(selector)
						}
						i = match.length;
						while (i--) {
							cached = matcherFromTokens(match[i]);
							if (cached[expando]) {
								setMatchers.push(cached)
							} else {
								elementMatchers.push(cached)
							}
						}
						cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));
						cached.selector = selector
					}
					return cached
				};
				select = Sizzle.select = function(selector, context, results, seed) {
					var i, tokens, token, type, find, compiled = typeof selector === "function" && selector,
						match = !seed && tokenize((selector = compiled.selector || selector));
					results = results || [];
					if (match.length === 1) {
						tokens = match[0] = match[0].slice(0);
						if (tokens.length > 2 && (token = tokens[0]).type === "ID" && support.getById && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {
							context = (Expr.find.ID(token.matches[0].replace(runescape, funescape), context) || [])[0];
							if (!context) {
								return results
							} else if (compiled) {
								context = context.parentNode
							}
							selector = selector.slice(tokens.shift().value.length)
						}
						i = matchExpr.needsContext.test(selector) ? 0 : tokens.length;
						while (i--) {
							token = tokens[i];
							if (Expr.relative[(type = token.type)]) {
								break
							}
							if ((find = Expr.find[type])) {
								if ((seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context))) {
									tokens.splice(i, 1);
									selector = seed.length && toSelector(tokens);
									if (!selector) {
										push.apply(results, seed);
										return results
									}
									break
								}
							}
						}
					}(compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);
					return results
				};
				support.sortStable = expando.split("").sort(sortOrder).join("") === expando;
				support.detectDuplicates = !!hasDuplicate;
				setDocument();
				support.sortDetached = assert(function(div1) {
					return div1.compareDocumentPosition(document.createElement("div")) & 1
				});
				if (!assert(function(div) {
					div.innerHTML = "<a href='#'></a>";
					return div.firstChild.getAttribute("href") === "#"
				})) {
					addHandle("type|href|height|width", function(elem, name, isXML) {
						if (!isXML) {
							return elem.getAttribute(name, name.toLowerCase() === "type" ? 1 : 2)
						}
					})
				}
				if (!support.attributes || !assert(function(div) {
					div.innerHTML = "<input/>";
					div.firstChild.setAttribute("value", "");
					return div.firstChild.getAttribute("value") === ""
				})) {
					addHandle("value", function(elem, name, isXML) {
						if (!isXML && elem.nodeName.toLowerCase() === "input") {
							return elem.defaultValue
						}
					})
				}
				if (!assert(function(div) {
					return div.getAttribute("disabled") == null
				})) {
					addHandle(booleans, function(elem, name, isXML) {
						var val;
						if (!isXML) {
							return elem[name] === !0 ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null
						}
					})
				}
				return Sizzle
			})(window);
			jQuery.find = Sizzle;
			jQuery.expr = Sizzle.selectors;
			jQuery.expr[":"] = jQuery.expr.pseudos;
			jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
			jQuery.text = Sizzle.getText;
			jQuery.isXMLDoc = Sizzle.isXML;
			jQuery.contains = Sizzle.contains;
			var dir = function(elem, dir, until) {
				var matched = [],
					truncate = until !== undefined;
				while ((elem = elem[dir]) && elem.nodeType !== 9) {
					if (elem.nodeType === 1) {
						if (truncate && jQuery(elem).is(until)) {
							break
						}
						matched.push(elem)
					}
				}
				return matched
			};
			var siblings = function(n, elem) {
				var matched = [];
				for (; n; n = n.nextSibling) {
					if (n.nodeType === 1 && n !== elem) {
						matched.push(n)
					}
				}
				return matched
			};
			var rneedsContext = jQuery.expr.match.needsContext;
			var rsingleTag = (/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/);
			var risSimple = /^.[^:#\[\.,]*$/;

			function winnow(elements, qualifier, not) {
				if (jQuery.isFunction(qualifier)) {
					return jQuery.grep(elements, function(elem, i) {
						return !!qualifier.call(elem, i, elem) !== not
					})
				}
				if (qualifier.nodeType) {
					return jQuery.grep(elements, function(elem) {
						return (elem === qualifier) !== not
					})
				}
				if (typeof qualifier === "string") {
					if (risSimple.test(qualifier)) {
						return jQuery.filter(qualifier, elements, not)
					}
					qualifier = jQuery.filter(qualifier, elements)
				}
				return jQuery.grep(elements, function(elem) {
					return (indexOf.call(qualifier, elem) > -1) !== not
				})
			}
			jQuery.filter = function(expr, elems, not) {
				var elem = elems[0];
				if (not) {
					expr = ":not(" + expr + ")"
				}
				return elems.length === 1 && elem.nodeType === 1 ? jQuery.find.matchesSelector(elem, expr) ? [elem] : [] : jQuery.find.matches(expr, jQuery.grep(elems, function(elem) {
					return elem.nodeType === 1
				}))
			};
			jQuery.fn.extend({
				find: function(selector) {
					var i, len = this.length,
						ret = [],
						self = this;
					if (typeof selector !== "string") {
						return this.pushStack(jQuery(selector).filter(function() {
							for (i = 0; i < len; i++) {
								if (jQuery.contains(self[i], this)) {
									return !0
								}
							}
						}))
					}
					for (i = 0; i < len; i++) {
						jQuery.find(selector, self[i], ret)
					}
					ret = this.pushStack(len > 1 ? jQuery.unique(ret) : ret);
					ret.selector = this.selector ? this.selector + " " + selector : selector;
					return ret
				},
				filter: function(selector) {
					return this.pushStack(winnow(this, selector || [], !1))
				},
				not: function(selector) {
					return this.pushStack(winnow(this, selector || [], !0))
				},
				is: function(selector) {
					return !!winnow(this, typeof selector === "string" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], !1).length
				}
			});
			var rootjQuery, rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
				init = jQuery.fn.init = function(selector, context, root) {
					var match, elem;
					if (!selector) {
						return this
					}
					root = root || rootjQuery;
					if (typeof selector === "string") {
						if (selector[0] === "<" && selector[selector.length - 1] === ">" && selector.length >= 3) {
							match = [null, selector, null]
						} else {
							match = rquickExpr.exec(selector)
						}
						if (match && (match[1] || !context)) {
							if (match[1]) {
								context = context instanceof jQuery ? context[0] : context;
								jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, !0));
								if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {
									for (match in context) {
										if (jQuery.isFunction(this[match])) {
											this[match](context[match])
										} else {
											this.attr(match, context[match])
										}
									}
								}
								return this
							} else {
								elem = document.getElementById(match[2]);
								if (elem && elem.parentNode) {
									this.length = 1;
									this[0] = elem
								}
								this.context = document;
								this.selector = selector;
								return this
							}
						} else if (!context || context.jquery) {
							return (context || root).find(selector)
						} else {
							return this.constructor(context).find(selector)
						}
					} else if (selector.nodeType) {
						this.context = this[0] = selector;
						this.length = 1;
						return this
					} else if (jQuery.isFunction(selector)) {
						return root.ready !== undefined ? root.ready(selector) : selector(jQuery)
					}
					if (selector.selector !== undefined) {
						this.selector = selector.selector;
						this.context = selector.context
					}
					return jQuery.makeArray(selector, this)
				};
			init.prototype = jQuery.fn;
			rootjQuery = jQuery(document);
			var rparentsprev = /^(?:parents|prev(?:Until|All))/,
				guaranteedUnique = {
					children: !0,
					contents: !0,
					next: !0,
					prev: !0
				};
			jQuery.fn.extend({
				has: function(target) {
					var targets = jQuery(target, this),
						l = targets.length;
					return this.filter(function() {
						var i = 0;
						for (; i < l; i++) {
							if (jQuery.contains(this, targets[i])) {
								return !0
							}
						}
					})
				},
				closest: function(selectors, context) {
					var cur, i = 0,
						l = this.length,
						matched = [],
						pos = rneedsContext.test(selectors) || typeof selectors !== "string" ? jQuery(selectors, context || this.context) : 0;
					for (; i < l; i++) {
						for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {
							if (cur.nodeType < 11 && (pos ? pos.index(cur) > -1 : cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {
								matched.push(cur);
								break
							}
						}
					}
					return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched)
				},
				index: function(elem) {
					if (!elem) {
						return (this[0] && this[0].parentNode) ? this.first().prevAll().length : -1
					}
					if (typeof elem === "string") {
						return indexOf.call(jQuery(elem), this[0])
					}
					return indexOf.call(this, elem.jquery ? elem[0] : elem)
				},
				add: function(selector, context) {
					return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))))
				},
				addBack: function(selector) {
					return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector))
				}
			});

			function sibling(cur, dir) {
				while ((cur = cur[dir]) && cur.nodeType !== 1) {}
				return cur
			}
			jQuery.each({
				parent: function(elem) {
					var parent = elem.parentNode;
					return parent && parent.nodeType !== 11 ? parent : null
				},
				parents: function(elem) {
					return dir(elem, "parentNode")
				},
				parentsUntil: function(elem, i, until) {
					return dir(elem, "parentNode", until)
				},
				next: function(elem) {
					return sibling(elem, "nextSibling")
				},
				prev: function(elem) {
					return sibling(elem, "previousSibling")
				},
				nextAll: function(elem) {
					return dir(elem, "nextSibling")
				},
				prevAll: function(elem) {
					return dir(elem, "previousSibling")
				},
				nextUntil: function(elem, i, until) {
					return dir(elem, "nextSibling", until)
				},
				prevUntil: function(elem, i, until) {
					return dir(elem, "previousSibling", until)
				},
				siblings: function(elem) {
					return siblings((elem.parentNode || {}).firstChild, elem)
				},
				children: function(elem) {
					return siblings(elem.firstChild)
				},
				contents: function(elem) {
					return elem.contentDocument || jQuery.merge([], elem.childNodes)
				}
			}, function(name, fn) {
				jQuery.fn[name] = function(until, selector) {
					var matched = jQuery.map(this, fn, until);
					if (name.slice(-5) !== "Until") {
						selector = until
					}
					if (selector && typeof selector === "string") {
						matched = jQuery.filter(selector, matched)
					}
					if (this.length > 1) {
						if (!guaranteedUnique[name]) {
							jQuery.uniqueSort(matched)
						}
						if (rparentsprev.test(name)) {
							matched.reverse()
						}
					}
					return this.pushStack(matched)
				}
			});
			var rnotwhite = (/\S+/g);

			function createOptions(options) {
				var object = {};
				jQuery.each(options.match(rnotwhite) || [], function(_, flag) {
					object[flag] = !0
				});
				return object
			}
			jQuery.Callbacks = function(options) {
				options = typeof options === "string" ? createOptions(options) : jQuery.extend({}, options);
				var firing, memory, fired, locked, list = [],
					queue = [],
					firingIndex = -1,
					fire = function() {
						locked = options.once;
						fired = firing = !0;
						for (; queue.length; firingIndex = -1) {
							memory = queue.shift();
							while (++firingIndex < list.length) {
								if (list[firingIndex].apply(memory[0], memory[1]) === !1 && options.stopOnFalse) {
									firingIndex = list.length;
									memory = !1
								}
							}
						}
						if (!options.memory) {
							memory = !1
						}
						firing = !1;
						if (locked) {
							if (memory) {
								list = []
							} else {
								list = ""
							}
						}
					},
					self = {
						add: function() {
							if (list) {
								if (memory && !firing) {
									firingIndex = list.length - 1;
									queue.push(memory)
								}(function add(args) {
									jQuery.each(args, function(_, arg) {
										if (jQuery.isFunction(arg)) {
											if (!options.unique || !self.has(arg)) {
												list.push(arg)
											}
										} else if (arg && arg.length && jQuery.type(arg) !== "string") {
											add(arg)
										}
									})
								})(arguments);
								if (memory && !firing) {
									fire()
								}
							}
							return this
						},
						remove: function() {
							jQuery.each(arguments, function(_, arg) {
								var index;
								while ((index = jQuery.inArray(arg, list, index)) > -1) {
									list.splice(index, 1);
									if (index <= firingIndex) {
										firingIndex--
									}
								}
							});
							return this
						},
						has: function(fn) {
							return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0
						},
						empty: function() {
							if (list) {
								list = []
							}
							return this
						},
						disable: function() {
							locked = queue = [];
							list = memory = "";
							return this
						},
						disabled: function() {
							return !list
						},
						lock: function() {
							locked = queue = [];
							if (!memory) {
								list = memory = ""
							}
							return this
						},
						locked: function() {
							return !!locked
						},
						fireWith: function(context, args) {
							if (!locked) {
								args = args || [];
								args = [context, args.slice ? args.slice() : args];
								queue.push(args);
								if (!firing) {
									fire()
								}
							}
							return this
						},
						fire: function() {
							self.fireWith(this, arguments);
							return this
						},
						fired: function() {
							return !!fired
						}
					};
				return self
			};
			jQuery.extend({
				Deferred: function(func) {
					var tuples = [
							["resolve", "done", jQuery.Callbacks("once memory"), "resolved"],
							["reject", "fail", jQuery.Callbacks("once memory"), "rejected"],
							["notify", "progress", jQuery.Callbacks("memory")]
						],
						state = "pending",
						promise = {
							state: function() {
								return state
							},
							always: function() {
								deferred.done(arguments).fail(arguments);
								return this
							},
							then: function() {
								var fns = arguments;
								return jQuery.Deferred(function(newDefer) {
									jQuery.each(tuples, function(i, tuple) {
										var fn = jQuery.isFunction(fns[i]) && fns[i];
										deferred[tuple[1]](function() {
											var returned = fn && fn.apply(this, arguments);
											if (returned && jQuery.isFunction(returned.promise)) {
												returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject)
											} else {
												newDefer[tuple[0] + "With"](this === promise ? newDefer.promise() : this, fn ? [returned] : arguments)
											}
										})
									});
									fns = null
								}).promise()
							},
							promise: function(obj) {
								return obj != null ? jQuery.extend(obj, promise) : promise
							}
						},
						deferred = {};
					promise.pipe = promise.then;
					jQuery.each(tuples, function(i, tuple) {
						var list = tuple[2],
							stateString = tuple[3];
						promise[tuple[1]] = list.add;
						if (stateString) {
							list.add(function() {
								state = stateString
							}, tuples[i ^ 1][2].disable, tuples[2][2].lock)
						}
						deferred[tuple[0]] = function() {
							deferred[tuple[0] + "With"](this === deferred ? promise : this, arguments);
							return this
						};
						deferred[tuple[0] + "With"] = list.fireWith
					});
					promise.promise(deferred);
					if (func) {
						func.call(deferred, deferred)
					}
					return deferred
				},
				when: function(subordinate) {
					var i = 0,
						resolveValues = slice.call(arguments),
						length = resolveValues.length,
						remaining = length !== 1 || (subordinate && jQuery.isFunction(subordinate.promise)) ? length : 0,
						deferred = remaining === 1 ? subordinate : jQuery.Deferred(),
						updateFunc = function(i, contexts, values) {
							return function(value) {
								contexts[i] = this;
								values[i] = arguments.length > 1 ? slice.call(arguments) : value;
								if (values === progressValues) {
									deferred.notifyWith(contexts, values)
								} else if (!(--remaining)) {
									deferred.resolveWith(contexts, values)
								}
							}
						},
						progressValues, progressContexts, resolveContexts;
					if (length > 1) {
						progressValues = new Array(length);
						progressContexts = new Array(length);
						resolveContexts = new Array(length);
						for (; i < length; i++) {
							if (resolveValues[i] && jQuery.isFunction(resolveValues[i].promise)) {
								resolveValues[i].promise().progress(updateFunc(i, progressContexts, progressValues)).done(updateFunc(i, resolveContexts, resolveValues)).fail(deferred.reject)
							} else {
								--remaining
							}
						}
					}
					if (!remaining) {
						deferred.resolveWith(resolveContexts, resolveValues)
					}
					return deferred.promise()
				}
			});
			var readyList;
			jQuery.fn.ready = function(fn) {
				jQuery.ready.promise().done(fn);
				return this
			};
			jQuery.extend({
				isReady: !1,
				readyWait: 1,
				holdReady: function(hold) {
					if (hold) {
						jQuery.readyWait++
					} else {
						jQuery.ready(!0)
					}
				},
				ready: function(wait) {
					if (wait === !0 ? --jQuery.readyWait : jQuery.isReady) {
						return
					}
					jQuery.isReady = !0;
					if (wait !== !0 && --jQuery.readyWait > 0) {
						return
					}
					readyList.resolveWith(document, [jQuery]);
					if (jQuery.fn.triggerHandler) {
						jQuery(document).triggerHandler("ready");
						jQuery(document).off("ready")
					}
				}
			});

			function completed() {
				document.removeEventListener("DOMContentLoaded", completed);
				window.removeEventListener("load", completed);
				jQuery.ready()
			}
			jQuery.ready.promise = function(obj) {
				if (!readyList) {
					readyList = jQuery.Deferred();
					if (document.readyState === "complete" || (document.readyState !== "loading" && !document.documentElement.doScroll)) {
						window.setTimeout(jQuery.ready)
					} else {
						document.addEventListener("DOMContentLoaded", completed);
						window.addEventListener("load", completed)
					}
				}
				return readyList.promise(obj)
			};
			jQuery.ready.promise();
			var access = function(elems, fn, key, value, chainable, emptyGet, raw) {
				var i = 0,
					len = elems.length,
					bulk = key == null;
				if (jQuery.type(key) === "object") {
					chainable = !0;
					for (i in key) {
						access(elems, fn, i, key[i], !0, emptyGet, raw)
					}
				} else if (value !== undefined) {
					chainable = !0;
					if (!jQuery.isFunction(value)) {
						raw = !0
					}
					if (bulk) {
						if (raw) {
							fn.call(elems, value);
							fn = null
						} else {
							bulk = fn;
							fn = function(elem, key, value) {
								return bulk.call(jQuery(elem), value)
							}
						}
					}
					if (fn) {
						for (; i < len; i++) {
							fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)))
						}
					}
				}
				return chainable ? elems : bulk ? fn.call(elems) : len ? fn(elems[0], key) : emptyGet
			};
			var acceptData = function(owner) {
				return owner.nodeType === 1 || owner.nodeType === 9 || !(+owner.nodeType)
			};

			function Data() {
				this.expando = jQuery.expando + Data.uid++
			}
			Data.uid = 1;
			Data.prototype = {
				register: function(owner, initial) {
					var value = initial || {};
					if (owner.nodeType) {
						owner[this.expando] = value
					} else {
						Object.defineProperty(owner, this.expando, {
							value: value,
							writable: !0,
							configurable: !0
						})
					}
					return owner[this.expando]
				},
				cache: function(owner) {
					if (!acceptData(owner)) {
						return {}
					}
					var value = owner[this.expando];
					if (!value) {
						value = {};
						if (acceptData(owner)) {
							if (owner.nodeType) {
								owner[this.expando] = value
							} else {
								Object.defineProperty(owner, this.expando, {
									value: value,
									configurable: !0
								})
							}
						}
					}
					return value
				},
				set: function(owner, data, value) {
					var prop, cache = this.cache(owner);
					if (typeof data === "string") {
						cache[data] = value
					} else {
						for (prop in data) {
							cache[prop] = data[prop]
						}
					}
					return cache
				},
				get: function(owner, key) {
					return key === undefined ? this.cache(owner) : owner[this.expando] && owner[this.expando][key]
				},
				access: function(owner, key, value) {
					var stored;
					if (key === undefined || ((key && typeof key === "string") && value === undefined)) {
						stored = this.get(owner, key);
						return stored !== undefined ? stored : this.get(owner, jQuery.camelCase(key))
					}
					this.set(owner, key, value);
					return value !== undefined ? value : key
				},
				remove: function(owner, key) {
					var i, name, camel, cache = owner[this.expando];
					if (cache === undefined) {
						return
					}
					if (key === undefined) {
						this.register(owner)
					} else {
						if (jQuery.isArray(key)) {
							name = key.concat(key.map(jQuery.camelCase))
						} else {
							camel = jQuery.camelCase(key);
							if (key in cache) {
								name = [key, camel]
							} else {
								name = camel;
								name = name in cache ? [name] : (name.match(rnotwhite) || [])
							}
						}
						i = name.length;
						while (i--) {
							delete cache[name[i]]
						}
					}
					if (key === undefined || jQuery.isEmptyObject(cache)) {
						if (owner.nodeType) {
							owner[this.expando] = undefined
						} else {
							delete owner[this.expando]
						}
					}
				},
				hasData: function(owner) {
					var cache = owner[this.expando];
					return cache !== undefined && !jQuery.isEmptyObject(cache)
				}
			};
			var dataPriv = new Data();
			var dataUser = new Data();
			var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
				rmultiDash = /[A-Z]/g;

			function dataAttr(elem, key, data) {
				var name;
				if (data === undefined && elem.nodeType === 1) {
					name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase();
					data = elem.getAttribute(name);
					if (typeof data === "string") {
						try {
							data = data === "true" ? !0 : data === "false" ? !1 : data === "null" ? null : +data + "" === data ? +data : rbrace.test(data) ? jQuery.parseJSON(data) : data
						} catch (e) {}
						dataUser.set(elem, key, data)
					} else {
						data = undefined
					}
				}
				return data
			}
			jQuery.extend({
				hasData: function(elem) {
					return dataUser.hasData(elem) || dataPriv.hasData(elem)
				},
				data: function(elem, name, data) {
					return dataUser.access(elem, name, data)
				},
				removeData: function(elem, name) {
					dataUser.remove(elem, name)
				},
				_data: function(elem, name, data) {
					return dataPriv.access(elem, name, data)
				},
				_removeData: function(elem, name) {
					dataPriv.remove(elem, name)
				}
			});
			jQuery.fn.extend({
				data: function(key, value) {
					var i, name, data, elem = this[0],
						attrs = elem && elem.attributes;
					if (key === undefined) {
						if (this.length) {
							data = dataUser.get(elem);
							if (elem.nodeType === 1 && !dataPriv.get(elem, "hasDataAttrs")) {
								i = attrs.length;
								while (i--) {
									if (attrs[i]) {
										name = attrs[i].name;
										if (name.indexOf("data-") === 0) {
											name = jQuery.camelCase(name.slice(5));
											dataAttr(elem, name, data[name])
										}
									}
								}
								dataPriv.set(elem, "hasDataAttrs", !0)
							}
						}
						return data
					}
					if (typeof key === "object") {
						return this.each(function() {
							dataUser.set(this, key)
						})
					}
					return access(this, function(value) {
						var data, camelKey;
						if (elem && value === undefined) {
							data = dataUser.get(elem, key) || dataUser.get(elem, key.replace(rmultiDash, "-$&").toLowerCase());
							if (data !== undefined) {
								return data
							}
							camelKey = jQuery.camelCase(key);
							data = dataUser.get(elem, camelKey);
							if (data !== undefined) {
								return data
							}
							data = dataAttr(elem, camelKey, undefined);
							if (data !== undefined) {
								return data
							}
							return
						}
						camelKey = jQuery.camelCase(key);
						this.each(function() {
							var data = dataUser.get(this, camelKey);
							dataUser.set(this, camelKey, value);
							if (key.indexOf("-") > -1 && data !== undefined) {
								dataUser.set(this, key, value)
							}
						})
					}, null, value, arguments.length > 1, null, !0)
				},
				removeData: function(key) {
					return this.each(function() {
						dataUser.remove(this, key)
					})
				}
			});
			jQuery.extend({
				queue: function(elem, type, data) {
					var queue;
					if (elem) {
						type = (type || "fx") + "queue";
						queue = dataPriv.get(elem, type);
						if (data) {
							if (!queue || jQuery.isArray(data)) {
								queue = dataPriv.access(elem, type, jQuery.makeArray(data))
							} else {
								queue.push(data)
							}
						}
						return queue || []
					}
				},
				dequeue: function(elem, type) {
					type = type || "fx";
					var queue = jQuery.queue(elem, type),
						startLength = queue.length,
						fn = queue.shift(),
						hooks = jQuery._queueHooks(elem, type),
						next = function() {
							jQuery.dequeue(elem, type)
						};
					if (fn === "inprogress") {
						fn = queue.shift();
						startLength--
					}
					if (fn) {
						if (type === "fx") {
							queue.unshift("inprogress")
						}
						delete hooks.stop;
						fn.call(elem, next, hooks)
					}
					if (!startLength && hooks) {
						hooks.empty.fire()
					}
				},
				_queueHooks: function(elem, type) {
					var key = type + "queueHooks";
					return dataPriv.get(elem, key) || dataPriv.access(elem, key, {
						empty: jQuery.Callbacks("once memory").add(function() {
							dataPriv.remove(elem, [type + "queue", key])
						})
					})
				}
			});
			jQuery.fn.extend({
				queue: function(type, data) {
					var setter = 2;
					if (typeof type !== "string") {
						data = type;
						type = "fx";
						setter--
					}
					if (arguments.length < setter) {
						return jQuery.queue(this[0], type)
					}
					return data === undefined ? this : this.each(function() {
						var queue = jQuery.queue(this, type, data);
						jQuery._queueHooks(this, type);
						if (type === "fx" && queue[0] !== "inprogress") {
							jQuery.dequeue(this, type)
						}
					})
				},
				dequeue: function(type) {
					return this.each(function() {
						jQuery.dequeue(this, type)
					})
				},
				clearQueue: function(type) {
					return this.queue(type || "fx", [])
				},
				promise: function(type, obj) {
					var tmp, count = 1,
						defer = jQuery.Deferred(),
						elements = this,
						i = this.length,
						resolve = function() {
							if (!(--count)) {
								defer.resolveWith(elements, [elements])
							}
						};
					if (typeof type !== "string") {
						obj = type;
						type = undefined
					}
					type = type || "fx";
					while (i--) {
						tmp = dataPriv.get(elements[i], type + "queueHooks");
						if (tmp && tmp.empty) {
							count++;
							tmp.empty.add(resolve)
						}
					}
					resolve();
					return defer.promise(obj)
				}
			});
			var pnum = (/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;
			var rcssNum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i");
			var cssExpand = ["Top", "Right", "Bottom", "Left"];
			var isHidden = function(elem, el) {
				elem = el || elem;
				return jQuery.css(elem, "display") === "none" || !jQuery.contains(elem.ownerDocument, elem)
			};

			function adjustCSS(elem, prop, valueParts, tween) {
				var adjusted, scale = 1,
					maxIterations = 20,
					currentValue = tween ? function() {
						return tween.cur()
					} : function() {
						return jQuery.css(elem, prop, "")
					},
					initial = currentValue(),
					unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? "" : "px"),
					initialInUnit = (jQuery.cssNumber[prop] || unit !== "px" && +initial) && rcssNum.exec(jQuery.css(elem, prop));
				if (initialInUnit && initialInUnit[3] !== unit) {
					unit = unit || initialInUnit[3];
					valueParts = valueParts || [];
					initialInUnit = +initial || 1;
					do {
						scale = scale || ".5";
						initialInUnit = initialInUnit / scale;
						jQuery.style(elem, prop, initialInUnit + unit)
					} while (scale !== (scale = currentValue() / initial) && scale !== 1 && --maxIterations)
				}
				if (valueParts) {
					initialInUnit = +initialInUnit || +initial || 0;
					adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];
					if (tween) {
						tween.unit = unit;
						tween.start = initialInUnit;
						tween.end = adjusted
					}
				}
				return adjusted
			}
			var rcheckableType = (/^(?:checkbox|radio)$/i);
			var rtagName = (/<([\w:-]+)/);
			var rscriptType = (/^$|\/(?:java|ecma)script/i);
			var wrapMap = {
				option: [1, "<select multiple='multiple'>", "</select>"],
				thead: [1, "<table>", "</table>"],
				col: [2, "<table><colgroup>", "</colgroup></table>"],
				tr: [2, "<table><tbody>", "</tbody></table>"],
				td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
				_default: [0, "", ""]
			};
			wrapMap.optgroup = wrapMap.option;
			wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
			wrapMap.th = wrapMap.td;

			function getAll(context, tag) {
				var ret = typeof context.getElementsByTagName !== "undefined" ? context.getElementsByTagName(tag || "*") : typeof context.querySelectorAll !== "undefined" ? context.querySelectorAll(tag || "*") : [];
				return tag === undefined || tag && jQuery.nodeName(context, tag) ? jQuery.merge([context], ret) : ret
			}

			function setGlobalEval(elems, refElements) {
				var i = 0,
					l = elems.length;
				for (; i < l; i++) {
					dataPriv.set(elems[i], "globalEval", !refElements || dataPriv.get(refElements[i], "globalEval"))
				}
			}
			var rhtml = /<|&#?\w+;/;

			function buildFragment(elems, context, scripts, selection, ignored) {
				var elem, tmp, tag, wrap, contains, j, fragment = context.createDocumentFragment(),
					nodes = [],
					i = 0,
					l = elems.length;
				for (; i < l; i++) {
					elem = elems[i];
					if (elem || elem === 0) {
						if (jQuery.type(elem) === "object") {
							jQuery.merge(nodes, elem.nodeType ? [elem] : elem)
						} else if (!rhtml.test(elem)) {
							nodes.push(context.createTextNode(elem))
						} else {
							tmp = tmp || fragment.appendChild(context.createElement("div"));
							tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();
							wrap = wrapMap[tag] || wrapMap._default;
							tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];
							j = wrap[0];
							while (j--) {
								tmp = tmp.lastChild
							}
							jQuery.merge(nodes, tmp.childNodes);
							tmp = fragment.firstChild;
							tmp.textContent = ""
						}
					}
				}
				fragment.textContent = "";
				i = 0;
				while ((elem = nodes[i++])) {
					if (selection && jQuery.inArray(elem, selection) > -1) {
						if (ignored) {
							ignored.push(elem)
						}
						continue
					}
					contains = jQuery.contains(elem.ownerDocument, elem);
					tmp = getAll(fragment.appendChild(elem), "script");
					if (contains) {
						setGlobalEval(tmp)
					}
					if (scripts) {
						j = 0;
						while ((elem = tmp[j++])) {
							if (rscriptType.test(elem.type || "")) {
								scripts.push(elem)
							}
						}
					}
				}
				return fragment
			}(function() {
				var fragment = document.createDocumentFragment(),
					div = fragment.appendChild(document.createElement("div")),
					input = document.createElement("input");
				input.setAttribute("type", "radio");
				input.setAttribute("checked", "checked");
				input.setAttribute("name", "t");
				div.appendChild(input);
				support.checkClone = div.cloneNode(!0).cloneNode(!0).lastChild.checked;
				div.innerHTML = "<textarea>x</textarea>";
				support.noCloneChecked = !!div.cloneNode(!0).lastChild.defaultValue
			})();
			var rkeyEvent = /^key/,
				rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
				rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

			function returnTrue() {
				return !0
			}

			function returnFalse() {
				return !1
			}

			function safeActiveElement() {
				try {
					return document.activeElement
				} catch (err) {}
			}

			function on(elem, types, selector, data, fn, one) {
				var origFn, type;
				if (typeof types === "object") {
					if (typeof selector !== "string") {
						data = data || selector;
						selector = undefined
					}
					for (type in types) {
						on(elem, type, selector, data, types[type], one)
					}
					return elem
				}
				if (data == null && fn == null) {
					fn = selector;
					data = selector = undefined
				} else if (fn == null) {
					if (typeof selector === "string") {
						fn = data;
						data = undefined
					} else {
						fn = data;
						data = selector;
						selector = undefined
					}
				}
				if (fn === !1) {
					fn = returnFalse
				} else if (!fn) {
					return elem
				}
				if (one === 1) {
					origFn = fn;
					fn = function(event) {
						jQuery().off(event);
						return origFn.apply(this, arguments)
					};
					fn.guid = origFn.guid || (origFn.guid = jQuery.guid++)
				}
				return elem.each(function() {
					jQuery.event.add(this, types, fn, data, selector)
				})
			}
			jQuery.event = {
				global: {},
				add: function(elem, types, handler, data, selector) {
					var handleObjIn, eventHandle, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.get(elem);
					if (!elemData) {
						return
					}
					if (handler.handler) {
						handleObjIn = handler;
						handler = handleObjIn.handler;
						selector = handleObjIn.selector
					}
					if (!handler.guid) {
						handler.guid = jQuery.guid++
					}
					if (!(events = elemData.events)) {
						events = elemData.events = {}
					}
					if (!(eventHandle = elemData.handle)) {
						eventHandle = elemData.handle = function(e) {
							return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined
						}
					}
					types = (types || "").match(rnotwhite) || [""];
					t = types.length;
					while (t--) {
						tmp = rtypenamespace.exec(types[t]) || [];
						type = origType = tmp[1];
						namespaces = (tmp[2] || "").split(".").sort();
						if (!type) {
							continue
						}
						special = jQuery.event.special[type] || {};
						type = (selector ? special.delegateType : special.bindType) || type;
						special = jQuery.event.special[type] || {};
						handleObj = jQuery.extend({
							type: type,
							origType: origType,
							data: data,
							handler: handler,
							guid: handler.guid,
							selector: selector,
							needsContext: selector && jQuery.expr.match.needsContext.test(selector),
							namespace: namespaces.join(".")
						}, handleObjIn);
						if (!(handlers = events[type])) {
							handlers = events[type] = [];
							handlers.delegateCount = 0;
							if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === !1) {
								if (elem.addEventListener) {
									elem.addEventListener(type, eventHandle)
								}
							}
						}
						if (special.add) {
							special.add.call(elem, handleObj);
							if (!handleObj.handler.guid) {
								handleObj.handler.guid = handler.guid
							}
						}
						if (selector) {
							handlers.splice(handlers.delegateCount++, 0, handleObj)
						} else {
							handlers.push(handleObj)
						}
						jQuery.event.global[type] = !0
					}
				},
				remove: function(elem, types, handler, selector, mappedTypes) {
					var j, origCount, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.hasData(elem) && dataPriv.get(elem);
					if (!elemData || !(events = elemData.events)) {
						return
					}
					types = (types || "").match(rnotwhite) || [""];
					t = types.length;
					while (t--) {
						tmp = rtypenamespace.exec(types[t]) || [];
						type = origType = tmp[1];
						namespaces = (tmp[2] || "").split(".").sort();
						if (!type) {
							for (type in events) {
								jQuery.event.remove(elem, type + types[t], handler, selector, !0)
							}
							continue
						}
						special = jQuery.event.special[type] || {};
						type = (selector ? special.delegateType : special.bindType) || type;
						handlers = events[type] || [];
						tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)");
						origCount = j = handlers.length;
						while (j--) {
							handleObj = handlers[j];
							if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === "**" && handleObj.selector)) {
								handlers.splice(j, 1);
								if (handleObj.selector) {
									handlers.delegateCount--
								}
								if (special.remove) {
									special.remove.call(elem, handleObj)
								}
							}
						}
						if (origCount && !handlers.length) {
							if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === !1) {
								jQuery.removeEvent(elem, type, elemData.handle)
							}
							delete events[type]
						}
					}
					if (jQuery.isEmptyObject(events)) {
						dataPriv.remove(elem, "handle events")
					}
				},
				dispatch: function(event) {
					event = jQuery.event.fix(event);
					var i, j, ret, matched, handleObj, handlerQueue = [],
						args = slice.call(arguments),
						handlers = (dataPriv.get(this, "events") || {})[event.type] || [],
						special = jQuery.event.special[event.type] || {};
					args[0] = event;
					event.delegateTarget = this;
					if (special.preDispatch && special.preDispatch.call(this, event) === !1) {
						return
					}
					handlerQueue = jQuery.event.handlers.call(this, event, handlers);
					i = 0;
					while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {
						event.currentTarget = matched.elem;
						j = 0;
						while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {
							if (!event.rnamespace || event.rnamespace.test(handleObj.namespace)) {
								event.handleObj = handleObj;
								event.data = handleObj.data;
								ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);
								if (ret !== undefined) {
									if ((event.result = ret) === !1) {
										event.preventDefault();
										event.stopPropagation()
									}
								}
							}
						}
					}
					if (special.postDispatch) {
						special.postDispatch.call(this, event)
					}
					return event.result
				},
				handlers: function(event, handlers) {
					var i, matches, sel, handleObj, handlerQueue = [],
						delegateCount = handlers.delegateCount,
						cur = event.target;
					if (delegateCount && cur.nodeType && (event.type !== "click" || isNaN(event.button) || event.button < 1)) {
						for (; cur !== this; cur = cur.parentNode || this) {
							if (cur.nodeType === 1 && (cur.disabled !== !0 || event.type !== "click")) {
								matches = [];
								for (i = 0; i < delegateCount; i++) {
									handleObj = handlers[i];
									sel = handleObj.selector + " ";
									if (matches[sel] === undefined) {
										matches[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length
									}
									if (matches[sel]) {
										matches.push(handleObj)
									}
								}
								if (matches.length) {
									handlerQueue.push({
										elem: cur,
										handlers: matches
									})
								}
							}
						}
					}
					if (delegateCount < handlers.length) {
						handlerQueue.push({
							elem: this,
							handlers: handlers.slice(delegateCount)
						})
					}
					return handlerQueue
				},
				props: ("altKey bubbles cancelable ctrlKey currentTarget detail eventPhase " + "metaKey relatedTarget shiftKey target timeStamp view which").split(" "),
				fixHooks: {},
				keyHooks: {
					props: "char charCode key keyCode".split(" "),
					filter: function(event, original) {
						if (event.which == null) {
							event.which = original.charCode != null ? original.charCode : original.keyCode
						}
						return event
					}
				},
				mouseHooks: {
					props: ("button buttons clientX clientY offsetX offsetY pageX pageY " + "screenX screenY toElement").split(" "),
					filter: function(event, original) {
						var eventDoc, doc, body, button = original.button;
						if (event.pageX == null && original.clientX != null) {
							eventDoc = event.target.ownerDocument || document;
							doc = eventDoc.documentElement;
							body = eventDoc.body;
							event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
							event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)
						}
						if (!event.which && button !== undefined) {
							event.which = (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)))
						}
						return event
					}
				},
				fix: function(event) {
					if (event[jQuery.expando]) {
						return event
					}
					var i, prop, copy, type = event.type,
						originalEvent = event,
						fixHook = this.fixHooks[type];
					if (!fixHook) {
						this.fixHooks[type] = fixHook = rmouseEvent.test(type) ? this.mouseHooks : rkeyEvent.test(type) ? this.keyHooks : {}
					}
					copy = fixHook.props ? this.props.concat(fixHook.props) : this.props;
					event = new jQuery.Event(originalEvent);
					i = copy.length;
					while (i--) {
						prop = copy[i];
						event[prop] = originalEvent[prop]
					}
					if (!event.target) {
						event.target = document
					}
					if (event.target.nodeType === 3) {
						event.target = event.target.parentNode
					}
					return fixHook.filter ? fixHook.filter(event, originalEvent) : event
				},
				special: {
					load: {
						noBubble: !0
					},
					focus: {
						trigger: function() {
							if (this !== safeActiveElement() && this.focus) {
								this.focus();
								return !1
							}
						},
						delegateType: "focusin"
					},
					blur: {
						trigger: function() {
							if (this === safeActiveElement() && this.blur) {
								this.blur();
								return !1
							}
						},
						delegateType: "focusout"
					},
					click: {
						trigger: function() {
							if (this.type === "checkbox" && this.click && jQuery.nodeName(this, "input")) {
								this.click();
								return !1
							}
						},
						_default: function(event) {
							return jQuery.nodeName(event.target, "a")
						}
					},
					beforeunload: {
						postDispatch: function(event) {
							if (event.result !== undefined && event.originalEvent) {
								event.originalEvent.returnValue = event.result
							}
						}
					}
				}
			};
			jQuery.removeEvent = function(elem, type, handle) {
				if (elem.removeEventListener) {
					elem.removeEventListener(type, handle)
				}
			};
			jQuery.Event = function(src, props) {
				if (!(this instanceof jQuery.Event)) {
					return new jQuery.Event(src, props)
				}
				if (src && src.type) {
					this.originalEvent = src;
					this.type = src.type;
					this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && src.returnValue === !1 ? returnTrue : returnFalse
				} else {
					this.type = src
				}
				if (props) {
					jQuery.extend(this, props)
				}
				this.timeStamp = src && src.timeStamp || jQuery.now();
				this[jQuery.expando] = !0
			};
			jQuery.Event.prototype = {
				constructor: jQuery.Event,
				isDefaultPrevented: returnFalse,
				isPropagationStopped: returnFalse,
				isImmediatePropagationStopped: returnFalse,
				isSimulated: !1,
				preventDefault: function() {
					var e = this.originalEvent;
					this.isDefaultPrevented = returnTrue;
					if (e && !this.isSimulated) {
						e.preventDefault()
					}
				},
				stopPropagation: function() {
					var e = this.originalEvent;
					this.isPropagationStopped = returnTrue;
					if (e && !this.isSimulated) {
						e.stopPropagation()
					}
				},
				stopImmediatePropagation: function() {
					var e = this.originalEvent;
					this.isImmediatePropagationStopped = returnTrue;
					if (e && !this.isSimulated) {
						e.stopImmediatePropagation()
					}
					this.stopPropagation()
				}
			};
			jQuery.each({
				mouseenter: "mouseover",
				mouseleave: "mouseout",
				pointerenter: "pointerover",
				pointerleave: "pointerout"
			}, function(orig, fix) {
				jQuery.event.special[orig] = {
					delegateType: fix,
					bindType: fix,
					handle: function(event) {
						var ret, target = this,
							related = event.relatedTarget,
							handleObj = event.handleObj;
						if (!related || (related !== target && !jQuery.contains(target, related))) {
							event.type = handleObj.origType;
							ret = handleObj.handler.apply(this, arguments);
							event.type = fix
						}
						return ret
					}
				}
			});
			jQuery.fn.extend({
				on: function(types, selector, data, fn) {
					return on(this, types, selector, data, fn)
				},
				one: function(types, selector, data, fn) {
					return on(this, types, selector, data, fn, 1)
				},
				off: function(types, selector, fn) {
					var handleObj, type;
					if (types && types.preventDefault && types.handleObj) {
						handleObj = types.handleObj;
						jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);
						return this
					}
					if (typeof types === "object") {
						for (type in types) {
							this.off(type, selector, types[type])
						}
						return this
					}
					if (selector === !1 || typeof selector === "function") {
						fn = selector;
						selector = undefined
					}
					if (fn === !1) {
						fn = returnFalse
					}
					return this.each(function() {
						jQuery.event.remove(this, types, fn, selector)
					})
				}
			});
			var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,
				rnoInnerhtml = /<script|<style|<link/i,
				rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
				rscriptTypeMasked = /^true\/(.*)/,
				rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

			function manipulationTarget(elem, content) {
				return jQuery.nodeName(elem, "table") && jQuery.nodeName(content.nodeType !== 11 ? content : content.firstChild, "tr") ? elem.getElementsByTagName("tbody")[0] || elem.appendChild(elem.ownerDocument.createElement("tbody")) : elem
			}

			function disableScript(elem) {
				elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
				return elem
			}

			function restoreScript(elem) {
				var match = rscriptTypeMasked.exec(elem.type);
				if (match) {
					elem.type = match[1]
				} else {
					elem.removeAttribute("type")
				}
				return elem
			}

			function cloneCopyEvent(src, dest) {
				var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;
				if (dest.nodeType !== 1) {
					return
				}
				if (dataPriv.hasData(src)) {
					pdataOld = dataPriv.access(src);
					pdataCur = dataPriv.set(dest, pdataOld);
					events = pdataOld.events;
					if (events) {
						delete pdataCur.handle;
						pdataCur.events = {};
						for (type in events) {
							for (i = 0, l = events[type].length; i < l; i++) {
								jQuery.event.add(dest, type, events[type][i])
							}
						}
					}
				}
				if (dataUser.hasData(src)) {
					udataOld = dataUser.access(src);
					udataCur = jQuery.extend({}, udataOld);
					dataUser.set(dest, udataCur)
				}
			}

			function fixInput(src, dest) {
				var nodeName = dest.nodeName.toLowerCase();
				if (nodeName === "input" && rcheckableType.test(src.type)) {
					dest.checked = src.checked
				} else if (nodeName === "input" || nodeName === "textarea") {
					dest.defaultValue = src.defaultValue
				}
			}

			function domManip(collection, args, callback, ignored) {
				args = concat.apply([], args);
				var fragment, first, scripts, hasScripts, node, doc, i = 0,
					l = collection.length,
					iNoClone = l - 1,
					value = args[0],
					isFunction = jQuery.isFunction(value);
				if (isFunction || (l > 1 && typeof value === "string" && !support.checkClone && rchecked.test(value))) {
					return collection.each(function(index) {
						var self = collection.eq(index);
						if (isFunction) {
							args[0] = value.call(this, index, self.html())
						}
						domManip(self, args, callback, ignored)
					})
				}
				if (l) {
					fragment = buildFragment(args, collection[0].ownerDocument, !1, collection, ignored);
					first = fragment.firstChild;
					if (fragment.childNodes.length === 1) {
						fragment = first
					}
					if (first || ignored) {
						scripts = jQuery.map(getAll(fragment, "script"), disableScript);
						hasScripts = scripts.length;
						for (; i < l; i++) {
							node = fragment;
							if (i !== iNoClone) {
								node = jQuery.clone(node, !0, !0);
								if (hasScripts) {
									jQuery.merge(scripts, getAll(node, "script"))
								}
							}
							callback.call(collection[i], node, i)
						}
						if (hasScripts) {
							doc = scripts[scripts.length - 1].ownerDocument;
							jQuery.map(scripts, restoreScript);
							for (i = 0; i < hasScripts; i++) {
								node = scripts[i];
								if (rscriptType.test(node.type || "") && !dataPriv.access(node, "globalEval") && jQuery.contains(doc, node)) {
									if (node.src) {
										if (jQuery._evalUrl) {
											jQuery._evalUrl(node.src)
										}
									} else {
										jQuery.globalEval(node.textContent.replace(rcleanScript, ""))
									}
								}
							}
						}
					}
				}
				return collection
			}

			function remove(elem, selector, keepData) {
				var node, nodes = selector ? jQuery.filter(selector, elem) : elem,
					i = 0;
				for (;
					(node = nodes[i]) != null; i++) {
					if (!keepData && node.nodeType === 1) {
						jQuery.cleanData(getAll(node))
					}
					if (node.parentNode) {
						if (keepData && jQuery.contains(node.ownerDocument, node)) {
							setGlobalEval(getAll(node, "script"))
						}
						node.parentNode.removeChild(node)
					}
				}
				return elem
			}
			jQuery.extend({
				htmlPrefilter: function(html) {
					return html.replace(rxhtmlTag, "<$1></$2>")
				},
				clone: function(elem, dataAndEvents, deepDataAndEvents) {
					var i, l, srcElements, destElements, clone = elem.cloneNode(!0),
						inPage = jQuery.contains(elem.ownerDocument, elem);
					if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {
						destElements = getAll(clone);
						srcElements = getAll(elem);
						for (i = 0, l = srcElements.length; i < l; i++) {
							fixInput(srcElements[i], destElements[i])
						}
					}
					if (dataAndEvents) {
						if (deepDataAndEvents) {
							srcElements = srcElements || getAll(elem);
							destElements = destElements || getAll(clone);
							for (i = 0, l = srcElements.length; i < l; i++) {
								cloneCopyEvent(srcElements[i], destElements[i])
							}
						} else {
							cloneCopyEvent(elem, clone)
						}
					}
					destElements = getAll(clone, "script");
					if (destElements.length > 0) {
						setGlobalEval(destElements, !inPage && getAll(elem, "script"))
					}
					return clone
				},
				cleanData: function(elems) {
					var data, elem, type, special = jQuery.event.special,
						i = 0;
					for (;
						(elem = elems[i]) !== undefined; i++) {
						if (acceptData(elem)) {
							if ((data = elem[dataPriv.expando])) {
								if (data.events) {
									for (type in data.events) {
										if (special[type]) {
											jQuery.event.remove(elem, type)
										} else {
											jQuery.removeEvent(elem, type, data.handle)
										}
									}
								}
								elem[dataPriv.expando] = undefined
							}
							if (elem[dataUser.expando]) {
								elem[dataUser.expando] = undefined
							}
						}
					}
				}
			});
			jQuery.fn.extend({
				domManip: domManip,
				detach: function(selector) {
					return remove(this, selector, !0)
				},
				remove: function(selector) {
					return remove(this, selector)
				},
				text: function(value) {
					return access(this, function(value) {
						return value === undefined ? jQuery.text(this) : this.empty().each(function() {
							if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
								this.textContent = value
							}
						})
					}, null, value, arguments.length)
				},
				append: function() {
					return domManip(this, arguments, function(elem) {
						if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
							var target = manipulationTarget(this, elem);
							target.appendChild(elem)
						}
					})
				},
				prepend: function() {
					return domManip(this, arguments, function(elem) {
						if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
							var target = manipulationTarget(this, elem);
							target.insertBefore(elem, target.firstChild)
						}
					})
				},
				before: function() {
					return domManip(this, arguments, function(elem) {
						if (this.parentNode) {
							this.parentNode.insertBefore(elem, this)
						}
					})
				},
				after: function() {
					return domManip(this, arguments, function(elem) {
						if (this.parentNode) {
							this.parentNode.insertBefore(elem, this.nextSibling)
						}
					})
				},
				empty: function() {
					var elem, i = 0;
					for (;
						(elem = this[i]) != null; i++) {
						if (elem.nodeType === 1) {
							jQuery.cleanData(getAll(elem, !1));
							elem.textContent = ""
						}
					}
					return this
				},
				clone: function(dataAndEvents, deepDataAndEvents) {
					dataAndEvents = dataAndEvents == null ? !1 : dataAndEvents;
					deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
					return this.map(function() {
						return jQuery.clone(this, dataAndEvents, deepDataAndEvents)
					})
				},
				html: function(value) {
					return access(this, function(value) {
						var elem = this[0] || {},
							i = 0,
							l = this.length;
						if (value === undefined && elem.nodeType === 1) {
							return elem.innerHTML
						}
						if (typeof value === "string" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]) {
							value = jQuery.htmlPrefilter(value);
							try {
								for (; i < l; i++) {
									elem = this[i] || {};
									if (elem.nodeType === 1) {
										jQuery.cleanData(getAll(elem, !1));
										elem.innerHTML = value
									}
								}
								elem = 0
							} catch (e) {}
						}
						if (elem) {
							this.empty().append(value)
						}
					}, null, value, arguments.length)
				},
				replaceWith: function() {
					var ignored = [];
					return domManip(this, arguments, function(elem) {
						var parent = this.parentNode;
						if (jQuery.inArray(this, ignored) < 0) {
							jQuery.cleanData(getAll(this));
							if (parent) {
								parent.replaceChild(elem, this)
							}
						}
					}, ignored)
				}
			});
			jQuery.each({
				appendTo: "append",
				prependTo: "prepend",
				insertBefore: "before",
				insertAfter: "after",
				replaceAll: "replaceWith"
			}, function(name, original) {
				jQuery.fn[name] = function(selector) {
					var elems, ret = [],
						insert = jQuery(selector),
						last = insert.length - 1,
						i = 0;
					for (; i <= last; i++) {
						elems = i === last ? this : this.clone(!0);
						jQuery(insert[i])[original](elems);
						push.apply(ret, elems.get())
					}
					return this.pushStack(ret)
				}
			});
			var iframe, elemdisplay = {
				HTML: "block",
				BODY: "block"
			};

			function actualDisplay(name, doc) {
				var elem = jQuery(doc.createElement(name)).appendTo(doc.body),
					display = jQuery.css(elem[0], "display");
				elem.detach();
				return display
			}

			function defaultDisplay(nodeName) {
				var doc = document,
					display = elemdisplay[nodeName];
				if (!display) {
					display = actualDisplay(nodeName, doc);
					if (display === "none" || !display) {
						iframe = (iframe || jQuery("<iframe frameborder='0' width='0' height='0'/>")).appendTo(doc.documentElement);
						doc = iframe[0].contentDocument;
						doc.write();
						doc.close();
						display = actualDisplay(nodeName, doc);
						iframe.detach()
					}
					elemdisplay[nodeName] = display
				}
				return display
			}
			var rmargin = (/^margin/);
			var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");
			var getStyles = function(elem) {
				var view = elem.ownerDocument.defaultView;
				if (!view || !view.opener) {
					view = window
				}
				return view.getComputedStyle(elem)
			};
			var swap = function(elem, options, callback, args) {
				var ret, name, old = {};
				for (name in options) {
					old[name] = elem.style[name];
					elem.style[name] = options[name]
				}
				ret = callback.apply(elem, args || []);
				for (name in options) {
					elem.style[name] = old[name]
				}
				return ret
			};
			var documentElement = document.documentElement;
			(function() {
				var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal, container = document.createElement("div"),
					div = document.createElement("div");
				if (!div.style) {
					return
				}
				div.style.backgroundClip = "content-box";
				div.cloneNode(!0).style.backgroundClip = "";
				support.clearCloneStyle = div.style.backgroundClip === "content-box";
				container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" + "padding:0;margin-top:1px;position:absolute";
				container.appendChild(div);

				function computeStyleTests() {
					div.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;" + "position:relative;display:block;" + "margin:auto;border:1px;padding:1px;" + "top:1%;width:50%";
					div.innerHTML = "";
					documentElement.appendChild(container);
					var divStyle = window.getComputedStyle(div);
					pixelPositionVal = divStyle.top !== "1%";
					reliableMarginLeftVal = divStyle.marginLeft === "2px";
					boxSizingReliableVal = divStyle.width === "4px";
					div.style.marginRight = "50%";
					pixelMarginRightVal = divStyle.marginRight === "4px";
					documentElement.removeChild(container)
				}
				jQuery.extend(support, {
					pixelPosition: function() {
						computeStyleTests();
						return pixelPositionVal
					},
					boxSizingReliable: function() {
						if (boxSizingReliableVal == null) {
							computeStyleTests()
						}
						return boxSizingReliableVal
					},
					pixelMarginRight: function() {
						if (boxSizingReliableVal == null) {
							computeStyleTests()
						}
						return pixelMarginRightVal
					},
					reliableMarginLeft: function() {
						if (boxSizingReliableVal == null) {
							computeStyleTests()
						}
						return reliableMarginLeftVal
					},
					reliableMarginRight: function() {
						var ret, marginDiv = div.appendChild(document.createElement("div"));
						marginDiv.style.cssText = div.style.cssText = "-webkit-box-sizing:content-box;box-sizing:content-box;" + "display:block;margin:0;border:0;padding:0";
						marginDiv.style.marginRight = marginDiv.style.width = "0";
						div.style.width = "1px";
						documentElement.appendChild(container);
						ret = !parseFloat(window.getComputedStyle(marginDiv).marginRight);
						documentElement.removeChild(container);
						div.removeChild(marginDiv);
						return ret
					}
				})
			})();

			function curCSS(elem, name, computed) {
				var width, minWidth, maxWidth, ret, style = elem.style;
				computed = computed || getStyles(elem);
				ret = computed ? computed.getPropertyValue(name) || computed[name] : undefined;
				if ((ret === "" || ret === undefined) && !jQuery.contains(elem.ownerDocument, elem)) {
					ret = jQuery.style(elem, name)
				}
				if (computed) {
					if (!support.pixelMarginRight() && rnumnonpx.test(ret) && rmargin.test(name)) {
						width = style.width;
						minWidth = style.minWidth;
						maxWidth = style.maxWidth;
						style.minWidth = style.maxWidth = style.width = ret;
						ret = computed.width;
						style.width = width;
						style.minWidth = minWidth;
						style.maxWidth = maxWidth
					}
				}
				return ret !== undefined ? ret + "" : ret
			}

			function addGetHookIf(conditionFn, hookFn) {
				return {
					get: function() {
						if (conditionFn()) {
							delete this.get;
							return
						}
						return (this.get = hookFn).apply(this, arguments)
					}
				}
			}
			var rdisplayswap = /^(none|table(?!-c[ea]).+)/,
				cssShow = {
					position: "absolute",
					visibility: "hidden",
					display: "block"
				},
				cssNormalTransform = {
					letterSpacing: "0",
					fontWeight: "400"
				},
				cssPrefixes = ["Webkit", "O", "Moz", "ms"],
				emptyStyle = document.createElement("div").style;

			function vendorPropName(name) {
				if (name in emptyStyle) {
					return name
				}
				var capName = name[0].toUpperCase() + name.slice(1),
					i = cssPrefixes.length;
				while (i--) {
					name = cssPrefixes[i] + capName;
					if (name in emptyStyle) {
						return name
					}
				}
			}

			function setPositiveNumber(elem, value, subtract) {
				var matches = rcssNum.exec(value);
				return matches ? Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px") : value
			}

			function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {
				var i = extra === (isBorderBox ? "border" : "content") ? 4 : name === "width" ? 1 : 0,
					val = 0;
				for (; i < 4; i += 2) {
					if (extra === "margin") {
						val += jQuery.css(elem, extra + cssExpand[i], !0, styles)
					}
					if (isBorderBox) {
						if (extra === "content") {
							val -= jQuery.css(elem, "padding" + cssExpand[i], !0, styles)
						}
						if (extra !== "margin") {
							val -= jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles)
						}
					} else {
						val += jQuery.css(elem, "padding" + cssExpand[i], !0, styles);
						if (extra !== "padding") {
							val += jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles)
						}
					}
				}
				return val
			}

			function getWidthOrHeight(elem, name, extra) {
				var valueIsBorderBox = !0,
					val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
					styles = getStyles(elem),
					isBorderBox = jQuery.css(elem, "boxSizing", !1, styles) === "border-box";
				if (val <= 0 || val == null) {
					val = curCSS(elem, name, styles);
					if (val < 0 || val == null) {
						val = elem.style[name]
					}
					if (rnumnonpx.test(val)) {
						return val
					}
					valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]);
					val = parseFloat(val) || 0
				}
				return (val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles)) + "px"
			}

			function showHide(elements, show) {
				var display, elem, hidden, values = [],
					index = 0,
					length = elements.length;
				for (; index < length; index++) {
					elem = elements[index];
					if (!elem.style) {
						continue
					}
					values[index] = dataPriv.get(elem, "olddisplay");
					display = elem.style.display;
					if (show) {
						if (!values[index] && display === "none") {
							elem.style.display = ""
						}
						if (elem.style.display === "" && isHidden(elem)) {
							values[index] = dataPriv.access(elem, "olddisplay", defaultDisplay(elem.nodeName))
						}
					} else {
						hidden = isHidden(elem);
						if (display !== "none" || !hidden) {
							dataPriv.set(elem, "olddisplay", hidden ? display : jQuery.css(elem, "display"))
						}
					}
				}
				for (index = 0; index < length; index++) {
					elem = elements[index];
					if (!elem.style) {
						continue
					}
					if (!show || elem.style.display === "none" || elem.style.display === "") {
						elem.style.display = show ? values[index] || "" : "none"
					}
				}
				return elements
			}
			jQuery.extend({
				cssHooks: {
					opacity: {
						get: function(elem, computed) {
							if (computed) {
								var ret = curCSS(elem, "opacity");
								return ret === "" ? "1" : ret
							}
						}
					}
				},
				cssNumber: {
					"animationIterationCount": !0,
					"columnCount": !0,
					"fillOpacity": !0,
					"flexGrow": !0,
					"flexShrink": !0,
					"fontWeight": !0,
					"lineHeight": !0,
					"opacity": !0,
					"order": !0,
					"orphans": !0,
					"widows": !0,
					"zIndex": !0,
					"zoom": !0
				},
				cssProps: {
					"float": "cssFloat"
				},
				style: function(elem, name, value, extra) {
					if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
						return
					}
					var ret, type, hooks, origName = jQuery.camelCase(name),
						style = elem.style;
					name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(origName) || origName);
					hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
					if (value !== undefined) {
						type = typeof value;
						if (type === "string" && (ret = rcssNum.exec(value)) && ret[1]) {
							value = adjustCSS(elem, name, ret);
							type = "number"
						}
						if (value == null || value !== value) {
							return
						}
						if (type === "number") {
							value += ret && ret[3] || (jQuery.cssNumber[origName] ? "" : "px")
						}
						if (!support.clearCloneStyle && value === "" && name.indexOf("background") === 0) {
							style[name] = "inherit"
						}
						if (!hooks || !("set" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {
							style[name] = value
						}
					} else {
						if (hooks && "get" in hooks && (ret = hooks.get(elem, !1, extra)) !== undefined) {
							return ret
						}
						return style[name]
					}
				},
				css: function(elem, name, extra, styles) {
					var val, num, hooks, origName = jQuery.camelCase(name);
					name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(origName) || origName);
					hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
					if (hooks && "get" in hooks) {
						val = hooks.get(elem, !0, extra)
					}
					if (val === undefined) {
						val = curCSS(elem, name, styles)
					}
					if (val === "normal" && name in cssNormalTransform) {
						val = cssNormalTransform[name]
					}
					if (extra === "" || extra) {
						num = parseFloat(val);
						return extra === !0 || isFinite(num) ? num || 0 : val
					}
					return val
				}
			});
			jQuery.each(["height", "width"], function(i, name) {
				jQuery.cssHooks[name] = {
					get: function(elem, computed, extra) {
						if (computed) {
							return rdisplayswap.test(jQuery.css(elem, "display")) && elem.offsetWidth === 0 ? swap(elem, cssShow, function() {
								return getWidthOrHeight(elem, name, extra)
							}) : getWidthOrHeight(elem, name, extra)
						}
					},
					set: function(elem, value, extra) {
						var matches, styles = extra && getStyles(elem),
							subtract = extra && augmentWidthOrHeight(elem, name, extra, jQuery.css(elem, "boxSizing", !1, styles) === "border-box", styles);
						if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || "px") !== "px") {
							elem.style[name] = value;
							value = jQuery.css(elem, name)
						}
						return setPositiveNumber(elem, value, subtract)
					}
				}
			});
			jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function(elem, computed) {
				if (computed) {
					return (parseFloat(curCSS(elem, "marginLeft")) || elem.getBoundingClientRect().left - swap(elem, {
						marginLeft: 0
					}, function() {
						return elem.getBoundingClientRect().left
					})) + "px"
				}
			});
			jQuery.cssHooks.marginRight = addGetHookIf(support.reliableMarginRight, function(elem, computed) {
				if (computed) {
					return swap(elem, {
						"display": "inline-block"
					}, curCSS, [elem, "marginRight"])
				}
			});
			jQuery.each({
				margin: "",
				padding: "",
				border: "Width"
			}, function(prefix, suffix) {
				jQuery.cssHooks[prefix + suffix] = {
					expand: function(value) {
						var i = 0,
							expanded = {},
							parts = typeof value === "string" ? value.split(" ") : [value];
						for (; i < 4; i++) {
							expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0]
						}
						return expanded
					}
				};
				if (!rmargin.test(prefix)) {
					jQuery.cssHooks[prefix + suffix].set = setPositiveNumber
				}
			});
			jQuery.fn.extend({
				css: function(name, value) {
					return access(this, function(elem, name, value) {
						var styles, len, map = {},
							i = 0;
						if (jQuery.isArray(name)) {
							styles = getStyles(elem);
							len = name.length;
							for (; i < len; i++) {
								map[name[i]] = jQuery.css(elem, name[i], !1, styles)
							}
							return map
						}
						return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name)
					}, name, value, arguments.length > 1)
				},
				show: function() {
					return showHide(this, !0)
				},
				hide: function() {
					return showHide(this)
				},
				toggle: function(state) {
					if (typeof state === "boolean") {
						return state ? this.show() : this.hide()
					}
					return this.each(function() {
						if (isHidden(this)) {
							jQuery(this).show()
						} else {
							jQuery(this).hide()
						}
					})
				}
			});

			function Tween(elem, options, prop, end, easing) {
				return new Tween.prototype.init(elem, options, prop, end, easing)
			}
			jQuery.Tween = Tween;
			Tween.prototype = {
				constructor: Tween,
				init: function(elem, options, prop, end, easing, unit) {
					this.elem = elem;
					this.prop = prop;
					this.easing = easing || jQuery.easing._default;
					this.options = options;
					this.start = this.now = this.cur();
					this.end = end;
					this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px")
				},
				cur: function() {
					var hooks = Tween.propHooks[this.prop];
					return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this)
				},
				run: function(percent) {
					var eased, hooks = Tween.propHooks[this.prop];
					if (this.options.duration) {
						this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration)
					} else {
						this.pos = eased = percent
					}
					this.now = (this.end - this.start) * eased + this.start;
					if (this.options.step) {
						this.options.step.call(this.elem, this.now, this)
					}
					if (hooks && hooks.set) {
						hooks.set(this)
					} else {
						Tween.propHooks._default.set(this)
					}
					return this
				}
			};
			Tween.prototype.init.prototype = Tween.prototype;
			Tween.propHooks = {
				_default: {
					get: function(tween) {
						var result;
						if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {
							return tween.elem[tween.prop]
						}
						result = jQuery.css(tween.elem, tween.prop, "");
						return !result || result === "auto" ? 0 : result
					},
					set: function(tween) {
						if (jQuery.fx.step[tween.prop]) {
							jQuery.fx.step[tween.prop](tween)
						} else if (tween.elem.nodeType === 1 && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {
							jQuery.style(tween.elem, tween.prop, tween.now + tween.unit)
						} else {
							tween.elem[tween.prop] = tween.now
						}
					}
				}
			};
			Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
				set: function(tween) {
					if (tween.elem.nodeType && tween.elem.parentNode) {
						tween.elem[tween.prop] = tween.now
					}
				}
			};
			jQuery.easing = {
				linear: function(p) {
					return p
				},
				swing: function(p) {
					return 0.5 - Math.cos(p * Math.PI) / 2
				},
				_default: "swing"
			};
			jQuery.fx = Tween.prototype.init;
			jQuery.fx.step = {};
			var fxNow, timerId, rfxtypes = /^(?:toggle|show|hide)$/,
				rrun = /queueHooks$/;

			function createFxNow() {
				window.setTimeout(function() {
					fxNow = undefined
				});
				return (fxNow = jQuery.now())
			}

			function genFx(type, includeWidth) {
				var which, i = 0,
					attrs = {
						height: type
					};
				includeWidth = includeWidth ? 1 : 0;
				for (; i < 4; i += 2 - includeWidth) {
					which = cssExpand[i];
					attrs["margin" + which] = attrs["padding" + which] = type
				}
				if (includeWidth) {
					attrs.opacity = attrs.width = type
				}
				return attrs
			}

			function createTween(value, prop, animation) {
				var tween, collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners["*"]),
					index = 0,
					length = collection.length;
				for (; index < length; index++) {
					if ((tween = collection[index].call(animation, prop, value))) {
						return tween
					}
				}
			}

			function defaultPrefilter(elem, props, opts) {
				var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay, anim = this,
					orig = {},
					style = elem.style,
					hidden = elem.nodeType && isHidden(elem),
					dataShow = dataPriv.get(elem, "fxshow");
				if (!opts.queue) {
					hooks = jQuery._queueHooks(elem, "fx");
					if (hooks.unqueued == null) {
						hooks.unqueued = 0;
						oldfire = hooks.empty.fire;
						hooks.empty.fire = function() {
							if (!hooks.unqueued) {
								oldfire()
							}
						}
					}
					hooks.unqueued++;
					anim.always(function() {
						anim.always(function() {
							hooks.unqueued--;
							if (!jQuery.queue(elem, "fx").length) {
								hooks.empty.fire()
							}
						})
					})
				}
				if (elem.nodeType === 1 && ("height" in props || "width" in props)) {
					opts.overflow = [style.overflow, style.overflowX, style.overflowY];
					display = jQuery.css(elem, "display");
					checkDisplay = display === "none" ? dataPriv.get(elem, "olddisplay") || defaultDisplay(elem.nodeName) : display;
					if (checkDisplay === "inline" && jQuery.css(elem, "float") === "none") {
						style.display = "inline-block"
					}
				}
				if (opts.overflow) {
					style.overflow = "hidden";
					anim.always(function() {
						style.overflow = opts.overflow[0];
						style.overflowX = opts.overflow[1];
						style.overflowY = opts.overflow[2]
					})
				}
				for (prop in props) {
					value = props[prop];
					if (rfxtypes.exec(value)) {
						delete props[prop];
						toggle = toggle || value === "toggle";
						if (value === (hidden ? "hide" : "show")) {
							if (value === "show" && dataShow && dataShow[prop] !== undefined) {
								hidden = !0
							} else {
								continue
							}
						}
						orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop)
					} else {
						display = undefined
					}
				}
				if (!jQuery.isEmptyObject(orig)) {
					if (dataShow) {
						if ("hidden" in dataShow) {
							hidden = dataShow.hidden
						}
					} else {
						dataShow = dataPriv.access(elem, "fxshow", {})
					}
					if (toggle) {
						dataShow.hidden = !hidden
					}
					if (hidden) {
						jQuery(elem).show()
					} else {
						anim.done(function() {
							jQuery(elem).hide()
						})
					}
					anim.done(function() {
						var prop;
						dataPriv.remove(elem, "fxshow");
						for (prop in orig) {
							jQuery.style(elem, prop, orig[prop])
						}
					});
					for (prop in orig) {
						tween = createTween(hidden ? dataShow[prop] : 0, prop, anim);
						if (!(prop in dataShow)) {
							dataShow[prop] = tween.start;
							if (hidden) {
								tween.end = tween.start;
								tween.start = prop === "width" || prop === "height" ? 1 : 0
							}
						}
					}
				} else if ((display === "none" ? defaultDisplay(elem.nodeName) : display) === "inline") {
					style.display = display
				}
			}

			function propFilter(props, specialEasing) {
				var index, name, easing, value, hooks;
				for (index in props) {
					name = jQuery.camelCase(index);
					easing = specialEasing[name];
					value = props[index];
					if (jQuery.isArray(value)) {
						easing = value[1];
						value = props[index] = value[0]
					}
					if (index !== name) {
						props[name] = value;
						delete props[index]
					}
					hooks = jQuery.cssHooks[name];
					if (hooks && "expand" in hooks) {
						value = hooks.expand(value);
						delete props[name];
						for (index in value) {
							if (!(index in props)) {
								props[index] = value[index];
								specialEasing[index] = easing
							}
						}
					} else {
						specialEasing[name] = easing
					}
				}
			}

			function Animation(elem, properties, options) {
				var result, stopped, index = 0,
					length = Animation.prefilters.length,
					deferred = jQuery.Deferred().always(function() {
						delete tick.elem
					}),
					tick = function() {
						if (stopped) {
							return !1
						}
						var currentTime = fxNow || createFxNow(),
							remaining = Math.max(0, animation.startTime + animation.duration - currentTime),
							temp = remaining / animation.duration || 0,
							percent = 1 - temp,
							index = 0,
							length = animation.tweens.length;
						for (; index < length; index++) {
							animation.tweens[index].run(percent)
						}
						deferred.notifyWith(elem, [animation, percent, remaining]);
						if (percent < 1 && length) {
							return remaining
						} else {
							deferred.resolveWith(elem, [animation]);
							return !1
						}
					},
					animation = deferred.promise({
						elem: elem,
						props: jQuery.extend({}, properties),
						opts: jQuery.extend(!0, {
							specialEasing: {},
							easing: jQuery.easing._default
						}, options),
						originalProperties: properties,
						originalOptions: options,
						startTime: fxNow || createFxNow(),
						duration: options.duration,
						tweens: [],
						createTween: function(prop, end) {
							var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
							animation.tweens.push(tween);
							return tween
						},
						stop: function(gotoEnd) {
							var index = 0,
								length = gotoEnd ? animation.tweens.length : 0;
							if (stopped) {
								return this
							}
							stopped = !0;
							for (; index < length; index++) {
								animation.tweens[index].run(1)
							}
							if (gotoEnd) {
								deferred.notifyWith(elem, [animation, 1, 0]);
								deferred.resolveWith(elem, [animation, gotoEnd])
							} else {
								deferred.rejectWith(elem, [animation, gotoEnd])
							}
							return this
						}
					}),
					props = animation.props;
				propFilter(props, animation.opts.specialEasing);
				for (; index < length; index++) {
					result = Animation.prefilters[index].call(animation, elem, props, animation.opts);
					if (result) {
						if (jQuery.isFunction(result.stop)) {
							jQuery._queueHooks(animation.elem, animation.opts.queue).stop = jQuery.proxy(result.stop, result)
						}
						return result
					}
				}
				jQuery.map(props, createTween, animation);
				if (jQuery.isFunction(animation.opts.start)) {
					animation.opts.start.call(elem, animation)
				}
				jQuery.fx.timer(jQuery.extend(tick, {
					elem: elem,
					anim: animation,
					queue: animation.opts.queue
				}));
				return animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always)
			}
			jQuery.Animation = jQuery.extend(Animation, {
				tweeners: {
					"*": [function(prop, value) {
						var tween = this.createTween(prop, value);
						adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
						return tween
					}]
				},
				tweener: function(props, callback) {
					if (jQuery.isFunction(props)) {
						callback = props;
						props = ["*"]
					} else {
						props = props.match(rnotwhite)
					}
					var prop, index = 0,
						length = props.length;
					for (; index < length; index++) {
						prop = props[index];
						Animation.tweeners[prop] = Animation.tweeners[prop] || [];
						Animation.tweeners[prop].unshift(callback)
					}
				},
				prefilters: [defaultPrefilter],
				prefilter: function(callback, prepend) {
					if (prepend) {
						Animation.prefilters.unshift(callback)
					} else {
						Animation.prefilters.push(callback)
					}
				}
			});
			jQuery.speed = function(speed, easing, fn) {
				var opt = speed && typeof speed === "object" ? jQuery.extend({}, speed) : {
					complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,
					duration: speed,
					easing: fn && easing || easing && !jQuery.isFunction(easing) && easing
				};
				opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration : opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default;
				if (opt.queue == null || opt.queue === !0) {
					opt.queue = "fx"
				}
				opt.old = opt.complete;
				opt.complete = function() {
					if (jQuery.isFunction(opt.old)) {
						opt.old.call(this)
					}
					if (opt.queue) {
						jQuery.dequeue(this, opt.queue)
					}
				};
				return opt
			};
			jQuery.fn.extend({
				fadeTo: function(speed, to, easing, callback) {
					return this.filter(isHidden).css("opacity", 0).show().end().animate({
						opacity: to
					}, speed, easing, callback)
				},
				animate: function(prop, speed, easing, callback) {
					var empty = jQuery.isEmptyObject(prop),
						optall = jQuery.speed(speed, easing, callback),
						doAnimation = function() {
							var anim = Animation(this, jQuery.extend({}, prop), optall);
							if (empty || dataPriv.get(this, "finish")) {
								anim.stop(!0)
							}
						};
					doAnimation.finish = doAnimation;
					return empty || optall.queue === !1 ? this.each(doAnimation) : this.queue(optall.queue, doAnimation)
				},
				stop: function(type, clearQueue, gotoEnd) {
					var stopQueue = function(hooks) {
						var stop = hooks.stop;
						delete hooks.stop;
						stop(gotoEnd)
					};
					if (typeof type !== "string") {
						gotoEnd = clearQueue;
						clearQueue = type;
						type = undefined
					}
					if (clearQueue && type !== !1) {
						this.queue(type || "fx", [])
					}
					return this.each(function() {
						var dequeue = !0,
							index = type != null && type + "queueHooks",
							timers = jQuery.timers,
							data = dataPriv.get(this);
						if (index) {
							if (data[index] && data[index].stop) {
								stopQueue(data[index])
							}
						} else {
							for (index in data) {
								if (data[index] && data[index].stop && rrun.test(index)) {
									stopQueue(data[index])
								}
							}
						}
						for (index = timers.length; index--;) {
							if (timers[index].elem === this && (type == null || timers[index].queue === type)) {
								timers[index].anim.stop(gotoEnd);
								dequeue = !1;
								timers.splice(index, 1)
							}
						}
						if (dequeue || !gotoEnd) {
							jQuery.dequeue(this, type)
						}
					})
				},
				finish: function(type) {
					if (type !== !1) {
						type = type || "fx"
					}
					return this.each(function() {
						var index, data = dataPriv.get(this),
							queue = data[type + "queue"],
							hooks = data[type + "queueHooks"],
							timers = jQuery.timers,
							length = queue ? queue.length : 0;
						data.finish = !0;
						jQuery.queue(this, type, []);
						if (hooks && hooks.stop) {
							hooks.stop.call(this, !0)
						}
						for (index = timers.length; index--;) {
							if (timers[index].elem === this && timers[index].queue === type) {
								timers[index].anim.stop(!0);
								timers.splice(index, 1)
							}
						}
						for (index = 0; index < length; index++) {
							if (queue[index] && queue[index].finish) {
								queue[index].finish.call(this)
							}
						}
						delete data.finish
					})
				}
			});
			jQuery.each(["toggle", "show", "hide"], function(i, name) {
				var cssFn = jQuery.fn[name];
				jQuery.fn[name] = function(speed, easing, callback) {
					return speed == null || typeof speed === "boolean" ? cssFn.apply(this, arguments) : this.animate(genFx(name, !0), speed, easing, callback)
				}
			});
			jQuery.each({
				slideDown: genFx("show"),
				slideUp: genFx("hide"),
				slideToggle: genFx("toggle"),
				fadeIn: {
					opacity: "show"
				},
				fadeOut: {
					opacity: "hide"
				},
				fadeToggle: {
					opacity: "toggle"
				}
			}, function(name, props) {
				jQuery.fn[name] = function(speed, easing, callback) {
					return this.animate(props, speed, easing, callback)
				}
			});
			jQuery.timers = [];
			jQuery.fx.tick = function() {
				var timer, i = 0,
					timers = jQuery.timers;
				fxNow = jQuery.now();
				for (; i < timers.length; i++) {
					timer = timers[i];
					if (!timer() && timers[i] === timer) {
						timers.splice(i--, 1)
					}
				}
				if (!timers.length) {
					jQuery.fx.stop()
				}
				fxNow = undefined
			};
			jQuery.fx.timer = function(timer) {
				jQuery.timers.push(timer);
				if (timer()) {
					jQuery.fx.start()
				} else {
					jQuery.timers.pop()
				}
			};
			jQuery.fx.interval = 13;
			jQuery.fx.start = function() {
				if (!timerId) {
					timerId = window.setInterval(jQuery.fx.tick, jQuery.fx.interval)
				}
			};
			jQuery.fx.stop = function() {
				window.clearInterval(timerId);
				timerId = null
			};
			jQuery.fx.speeds = {
				slow: 600,
				fast: 200,
				_default: 400
			};
			jQuery.fn.delay = function(time, type) {
				time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
				type = type || "fx";
				return this.queue(type, function(next, hooks) {
					var timeout = window.setTimeout(next, time);
					hooks.stop = function() {
						window.clearTimeout(timeout)
					}
				})
			};
			(function() {
				var input = document.createElement("input"),
					select = document.createElement("select"),
					opt = select.appendChild(document.createElement("option"));
				input.type = "checkbox";
				support.checkOn = input.value !== "";
				support.optSelected = opt.selected;
				select.disabled = !0;
				support.optDisabled = !opt.disabled;
				input = document.createElement("input");
				input.value = "t";
				input.type = "radio";
				support.radioValue = input.value === "t"
			})();
			var boolHook, attrHandle = jQuery.expr.attrHandle;
			jQuery.fn.extend({
				attr: function(name, value) {
					return access(this, jQuery.attr, name, value, arguments.length > 1)
				},
				removeAttr: function(name) {
					return this.each(function() {
						jQuery.removeAttr(this, name)
					})
				}
			});
			jQuery.extend({
				attr: function(elem, name, value) {
					var ret, hooks, nType = elem.nodeType;
					if (nType === 3 || nType === 8 || nType === 2) {
						return
					}
					if (typeof elem.getAttribute === "undefined") {
						return jQuery.prop(elem, name, value)
					}
					if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
						name = name.toLowerCase();
						hooks = jQuery.attrHooks[name] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined)
					}
					if (value !== undefined) {
						if (value === null) {
							jQuery.removeAttr(elem, name);
							return
						}
						if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
							return ret
						}
						elem.setAttribute(name, value + "");
						return value
					}
					if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
						return ret
					}
					ret = jQuery.find.attr(elem, name);
					return ret == null ? undefined : ret
				},
				attrHooks: {
					type: {
						set: function(elem, value) {
							if (!support.radioValue && value === "radio" && jQuery.nodeName(elem, "input")) {
								var val = elem.value;
								elem.setAttribute("type", value);
								if (val) {
									elem.value = val
								}
								return value
							}
						}
					}
				},
				removeAttr: function(elem, value) {
					var name, propName, i = 0,
						attrNames = value && value.match(rnotwhite);
					if (attrNames && elem.nodeType === 1) {
						while ((name = attrNames[i++])) {
							propName = jQuery.propFix[name] || name;
							if (jQuery.expr.match.bool.test(name)) {
								elem[propName] = !1
							}
							elem.removeAttribute(name)
						}
					}
				}
			});
			boolHook = {
				set: function(elem, value, name) {
					if (value === !1) {
						jQuery.removeAttr(elem, name)
					} else {
						elem.setAttribute(name, name)
					}
					return name
				}
			};
			jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function(i, name) {
				var getter = attrHandle[name] || jQuery.find.attr;
				attrHandle[name] = function(elem, name, isXML) {
					var ret, handle;
					if (!isXML) {
						handle = attrHandle[name];
						attrHandle[name] = ret;
						ret = getter(elem, name, isXML) != null ? name.toLowerCase() : null;
						attrHandle[name] = handle
					}
					return ret
				}
			});
			var rfocusable = /^(?:input|select|textarea|button)$/i,
				rclickable = /^(?:a|area)$/i;
			jQuery.fn.extend({
				prop: function(name, value) {
					return access(this, jQuery.prop, name, value, arguments.length > 1)
				},
				removeProp: function(name) {
					return this.each(function() {
						delete this[jQuery.propFix[name] || name]
					})
				}
			});
			jQuery.extend({
				prop: function(elem, name, value) {
					var ret, hooks, nType = elem.nodeType;
					if (nType === 3 || nType === 8 || nType === 2) {
						return
					}
					if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
						name = jQuery.propFix[name] || name;
						hooks = jQuery.propHooks[name]
					}
					if (value !== undefined) {
						if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
							return ret
						}
						return (elem[name] = value)
					}
					if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
						return ret
					}
					return elem[name]
				},
				propHooks: {
					tabIndex: {
						get: function(elem) {
							var tabindex = jQuery.find.attr(elem, "tabindex");
							return tabindex ? parseInt(tabindex, 10) : rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href ? 0 : -1
						}
					}
				},
				propFix: {
					"for": "htmlFor",
					"class": "className"
				}
			});
			if (!support.optSelected) {
				jQuery.propHooks.selected = {
					get: function(elem) {
						var parent = elem.parentNode;
						if (parent && parent.parentNode) {
							parent.parentNode.selectedIndex
						}
						return null
					},
					set: function(elem) {
						var parent = elem.parentNode;
						if (parent) {
							parent.selectedIndex;
							if (parent.parentNode) {
								parent.parentNode.selectedIndex
							}
						}
					}
				}
			}
			jQuery.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
				jQuery.propFix[this.toLowerCase()] = this
			});
			var rclass = /[\t\r\n\f]/g;

			function getClass(elem) {
				return elem.getAttribute && elem.getAttribute("class") || ""
			}
			jQuery.fn.extend({
				addClass: function(value) {
					var classes, elem, cur, curValue, clazz, j, finalValue, i = 0;
					if (jQuery.isFunction(value)) {
						return this.each(function(j) {
							jQuery(this).addClass(value.call(this, j, getClass(this)))
						})
					}
					if (typeof value === "string" && value) {
						classes = value.match(rnotwhite) || [];
						while ((elem = this[i++])) {
							curValue = getClass(elem);
							cur = elem.nodeType === 1 && (" " + curValue + " ").replace(rclass, " ");
							if (cur) {
								j = 0;
								while ((clazz = classes[j++])) {
									if (cur.indexOf(" " + clazz + " ") < 0) {
										cur += clazz + " "
									}
								}
								finalValue = jQuery.trim(cur);
								if (curValue !== finalValue) {
									elem.setAttribute("class", finalValue)
								}
							}
						}
					}
					return this
				},
				removeClass: function(value) {
					var classes, elem, cur, curValue, clazz, j, finalValue, i = 0;
					if (jQuery.isFunction(value)) {
						return this.each(function(j) {
							jQuery(this).removeClass(value.call(this, j, getClass(this)))
						})
					}
					if (!arguments.length) {
						return this.attr("class", "")
					}
					if (typeof value === "string" && value) {
						classes = value.match(rnotwhite) || [];
						while ((elem = this[i++])) {
							curValue = getClass(elem);
							cur = elem.nodeType === 1 && (" " + curValue + " ").replace(rclass, " ");
							if (cur) {
								j = 0;
								while ((clazz = classes[j++])) {
									while (cur.indexOf(" " + clazz + " ") > -1) {
										cur = cur.replace(" " + clazz + " ", " ")
									}
								}
								finalValue = jQuery.trim(cur);
								if (curValue !== finalValue) {
									elem.setAttribute("class", finalValue)
								}
							}
						}
					}
					return this
				},
				toggleClass: function(value, stateVal) {
					var type = typeof value;
					if (typeof stateVal === "boolean" && type === "string") {
						return stateVal ? this.addClass(value) : this.removeClass(value)
					}
					if (jQuery.isFunction(value)) {
						return this.each(function(i) {
							jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal)
						})
					}
					return this.each(function() {
						var className, i, self, classNames;
						if (type === "string") {
							i = 0;
							self = jQuery(this);
							classNames = value.match(rnotwhite) || [];
							while ((className = classNames[i++])) {
								if (self.hasClass(className)) {
									self.removeClass(className)
								} else {
									self.addClass(className)
								}
							}
						} else if (value === undefined || type === "boolean") {
							className = getClass(this);
							if (className) {
								dataPriv.set(this, "__className__", className)
							}
							if (this.setAttribute) {
								this.setAttribute("class", className || value === !1 ? "" : dataPriv.get(this, "__className__") || "")
							}
						}
					})
				},
				hasClass: function(selector) {
					var className, elem, i = 0;
					className = " " + selector + " ";
					while ((elem = this[i++])) {
						if (elem.nodeType === 1 && (" " + getClass(elem) + " ").replace(rclass, " ").indexOf(className) > -1) {
							return !0
						}
					}
					return !1
				}
			});
			var rreturn = /\r/g,
				rspaces = /[\x20\t\r\n\f]+/g;
			jQuery.fn.extend({
				val: function(value) {
					var hooks, ret, isFunction, elem = this[0];
					if (!arguments.length) {
						if (elem) {
							hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];
							if (hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== undefined) {
								return ret
							}
							ret = elem.value;
							return typeof ret === "string" ? ret.replace(rreturn, "") : ret == null ? "" : ret
						}
						return
					}
					isFunction = jQuery.isFunction(value);
					return this.each(function(i) {
						var val;
						if (this.nodeType !== 1) {
							return
						}
						if (isFunction) {
							val = value.call(this, i, jQuery(this).val())
						} else {
							val = value
						}
						if (val == null) {
							val = ""
						} else if (typeof val === "number") {
							val += ""
						} else if (jQuery.isArray(val)) {
							val = jQuery.map(val, function(value) {
								return value == null ? "" : value + ""
							})
						}
						hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];
						if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === undefined) {
							this.value = val
						}
					})
				}
			});
			jQuery.extend({
				valHooks: {
					option: {
						get: function(elem) {
							var val = jQuery.find.attr(elem, "value");
							return val != null ? val : jQuery.trim(jQuery.text(elem)).replace(rspaces, " ")
						}
					},
					select: {
						get: function(elem) {
							var value, option, options = elem.options,
								index = elem.selectedIndex,
								one = elem.type === "select-one" || index < 0,
								values = one ? null : [],
								max = one ? index + 1 : options.length,
								i = index < 0 ? max : one ? index : 0;
							for (; i < max; i++) {
								option = options[i];
								if ((option.selected || i === index) && (support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null) && (!option.parentNode.disabled || !jQuery.nodeName(option.parentNode, "optgroup"))) {
									value = jQuery(option).val();
									if (one) {
										return value
									}
									values.push(value)
								}
							}
							return values
						},
						set: function(elem, value) {
							var optionSet, option, options = elem.options,
								values = jQuery.makeArray(value),
								i = options.length;
							while (i--) {
								option = options[i];
								if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {
									optionSet = !0
								}
							}
							if (!optionSet) {
								elem.selectedIndex = -1
							}
							return values
						}
					}
				}
			});
			jQuery.each(["radio", "checkbox"], function() {
				jQuery.valHooks[this] = {
					set: function(elem, value) {
						if (jQuery.isArray(value)) {
							return (elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1)
						}
					}
				};
				if (!support.checkOn) {
					jQuery.valHooks[this].get = function(elem) {
						return elem.getAttribute("value") === null ? "on" : elem.value
					}
				}
			});
			var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;
			jQuery.extend(jQuery.event, {
				trigger: function(event, data, elem, onlyHandlers) {
					var i, cur, tmp, bubbleType, ontype, handle, special, eventPath = [elem || document],
						type = hasOwn.call(event, "type") ? event.type : event,
						namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];
					cur = tmp = elem = elem || document;
					if (elem.nodeType === 3 || elem.nodeType === 8) {
						return
					}
					if (rfocusMorph.test(type + jQuery.event.triggered)) {
						return
					}
					if (type.indexOf(".") > -1) {
						namespaces = type.split(".");
						type = namespaces.shift();
						namespaces.sort()
					}
					ontype = type.indexOf(":") < 0 && "on" + type;
					event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === "object" && event);
					event.isTrigger = onlyHandlers ? 2 : 3;
					event.namespace = namespaces.join(".");
					event.rnamespace = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
					event.result = undefined;
					if (!event.target) {
						event.target = elem
					}
					data = data == null ? [event] : jQuery.makeArray(data, [event]);
					special = jQuery.event.special[type] || {};
					if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === !1) {
						return
					}
					if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {
						bubbleType = special.delegateType || type;
						if (!rfocusMorph.test(bubbleType + type)) {
							cur = cur.parentNode
						}
						for (; cur; cur = cur.parentNode) {
							eventPath.push(cur);
							tmp = cur
						}
						if (tmp === (elem.ownerDocument || document)) {
							eventPath.push(tmp.defaultView || tmp.parentWindow || window)
						}
					}
					i = 0;
					while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {
						event.type = i > 1 ? bubbleType : special.bindType || type;
						handle = (dataPriv.get(cur, "events") || {})[event.type] && dataPriv.get(cur, "handle");
						if (handle) {
							handle.apply(cur, data)
						}
						handle = ontype && cur[ontype];
						if (handle && handle.apply && acceptData(cur)) {
							event.result = handle.apply(cur, data);
							if (event.result === !1) {
								event.preventDefault()
							}
						}
					}
					event.type = type;
					if (!onlyHandlers && !event.isDefaultPrevented()) {
						if ((!special._default || special._default.apply(eventPath.pop(), data) === !1) && acceptData(elem)) {
							if (ontype && jQuery.isFunction(elem[type]) && !jQuery.isWindow(elem)) {
								tmp = elem[ontype];
								if (tmp) {
									elem[ontype] = null
								}
								jQuery.event.triggered = type;
								elem[type]();
								jQuery.event.triggered = undefined;
								if (tmp) {
									elem[ontype] = tmp
								}
							}
						}
					}
					return event.result
				},
				simulate: function(type, elem, event) {
					var e = jQuery.extend(new jQuery.Event(), event, {
						type: type,
						isSimulated: !0
					});
					jQuery.event.trigger(e, null, elem)
				}
			});
			jQuery.fn.extend({
				trigger: function(type, data) {
					return this.each(function() {
						jQuery.event.trigger(type, data, this)
					})
				},
				triggerHandler: function(type, data) {
					var elem = this[0];
					if (elem) {
						return jQuery.event.trigger(type, data, elem, !0)
					}
				}
			});
			jQuery.each(("blur focus focusin focusout load resize scroll unload click dblclick " + "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " + "change select submit keydown keypress keyup error contextmenu").split(" "), function(i, name) {
				jQuery.fn[name] = function(data, fn) {
					return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name)
				}
			});
			jQuery.fn.extend({
				hover: function(fnOver, fnOut) {
					return this.mouseenter(fnOver).mouseleave(fnOut || fnOver)
				}
			});
			support.focusin = "onfocusin" in window;
			if (!support.focusin) {
				jQuery.each({
					focus: "focusin",
					blur: "focusout"
				}, function(orig, fix) {
					var handler = function(event) {
						jQuery.event.simulate(fix, event.target, jQuery.event.fix(event))
					};
					jQuery.event.special[fix] = {
						setup: function() {
							var doc = this.ownerDocument || this,
								attaches = dataPriv.access(doc, fix);
							if (!attaches) {
								doc.addEventListener(orig, handler, !0)
							}
							dataPriv.access(doc, fix, (attaches || 0) + 1)
						},
						teardown: function() {
							var doc = this.ownerDocument || this,
								attaches = dataPriv.access(doc, fix) - 1;
							if (!attaches) {
								doc.removeEventListener(orig, handler, !0);
								dataPriv.remove(doc, fix)
							} else {
								dataPriv.access(doc, fix, attaches)
							}
						}
					}
				})
			}
			var location = window.location;
			var nonce = jQuery.now();
			var rquery = (/\?/);
			jQuery.parseJSON = function(data) {
				return JSON.parse(data + "")
			};
			jQuery.parseXML = function(data) {
				var xml;
				if (!data || typeof data !== "string") {
					return null
				}
				try {
					xml = (new window.DOMParser()).parseFromString(data, "text/xml")
				} catch (e) {
					xml = undefined
				}
				if (!xml || xml.getElementsByTagName("parsererror").length) {
					jQuery.error("Invalid XML: " + data)
				}
				return xml
			};
			var rhash = /#.*$/,
				rts = /([?&])_=[^&]*/,
				rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
				rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
				rnoContent = /^(?:GET|HEAD)$/,
				rprotocol = /^\/\//,
				prefilters = {},
				transports = {},
				allTypes = "*/".concat("*"),
				originAnchor = document.createElement("a");
			originAnchor.href = location.href;

			function addToPrefiltersOrTransports(structure) {
				return function(dataTypeExpression, func) {
					if (typeof dataTypeExpression !== "string") {
						func = dataTypeExpression;
						dataTypeExpression = "*"
					}
					var dataType, i = 0,
						dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];
					if (jQuery.isFunction(func)) {
						while ((dataType = dataTypes[i++])) {
							if (dataType[0] === "+") {
								dataType = dataType.slice(1) || "*";
								(structure[dataType] = structure[dataType] || []).unshift(func)
							} else {
								(structure[dataType] = structure[dataType] || []).push(func)
							}
						}
					}
				}
			}

			function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
				var inspected = {},
					seekingTransport = (structure === transports);

				function inspect(dataType) {
					var selected;
					inspected[dataType] = !0;
					jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {
						var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
						if (typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[dataTypeOrTransport]) {
							options.dataTypes.unshift(dataTypeOrTransport);
							inspect(dataTypeOrTransport);
							return !1
						} else if (seekingTransport) {
							return !(selected = dataTypeOrTransport)
						}
					});
					return selected
				}
				return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*")
			}

			function ajaxExtend(target, src) {
				var key, deep, flatOptions = jQuery.ajaxSettings.flatOptions || {};
				for (key in src) {
					if (src[key] !== undefined) {
						(flatOptions[key] ? target : (deep || (deep = {})))[key] = src[key]
					}
				}
				if (deep) {
					jQuery.extend(!0, target, deep)
				}
				return target
			}

			function ajaxHandleResponses(s, jqXHR, responses) {
				var ct, type, finalDataType, firstDataType, contents = s.contents,
					dataTypes = s.dataTypes;
				while (dataTypes[0] === "*") {
					dataTypes.shift();
					if (ct === undefined) {
						ct = s.mimeType || jqXHR.getResponseHeader("Content-Type")
					}
				}
				if (ct) {
					for (type in contents) {
						if (contents[type] && contents[type].test(ct)) {
							dataTypes.unshift(type);
							break
						}
					}
				}
				if (dataTypes[0] in responses) {
					finalDataType = dataTypes[0]
				} else {
					for (type in responses) {
						if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
							finalDataType = type;
							break
						}
						if (!firstDataType) {
							firstDataType = type
						}
					}
					finalDataType = finalDataType || firstDataType
				}
				if (finalDataType) {
					if (finalDataType !== dataTypes[0]) {
						dataTypes.unshift(finalDataType)
					}
					return responses[finalDataType]
				}
			}

			function ajaxConvert(s, response, jqXHR, isSuccess) {
				var conv2, current, conv, tmp, prev, converters = {},
					dataTypes = s.dataTypes.slice();
				if (dataTypes[1]) {
					for (conv in s.converters) {
						converters[conv.toLowerCase()] = s.converters[conv]
					}
				}
				current = dataTypes.shift();
				while (current) {
					if (s.responseFields[current]) {
						jqXHR[s.responseFields[current]] = response
					}
					if (!prev && isSuccess && s.dataFilter) {
						response = s.dataFilter(response, s.dataType)
					}
					prev = current;
					current = dataTypes.shift();
					if (current) {
						if (current === "*") {
							current = prev
						} else if (prev !== "*" && prev !== current) {
							conv = converters[prev + " " + current] || converters["* " + current];
							if (!conv) {
								for (conv2 in converters) {
									tmp = conv2.split(" ");
									if (tmp[1] === current) {
										conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]];
										if (conv) {
											if (conv === !0) {
												conv = converters[conv2]
											} else if (converters[conv2] !== !0) {
												current = tmp[0];
												dataTypes.unshift(tmp[1])
											}
											break
										}
									}
								}
							}
							if (conv !== !0) {
								if (conv && s.throws) {
									response = conv(response)
								} else {
									try {
										response = conv(response)
									} catch (e) {
										return {
											state: "parsererror",
											error: conv ? e : "No conversion from " + prev + " to " + current
										}
									}
								}
							}
						}
					}
				}
				return {
					state: "success",
					data: response
				}
			}
			jQuery.extend({
				active: 0,
				lastModified: {},
				etag: {},
				ajaxSettings: {
					url: location.href,
					type: "GET",
					isLocal: rlocalProtocol.test(location.protocol),
					global: !0,
					processData: !0,
					async: !0,
					contentType: "application/x-www-form-urlencoded; charset=UTF-8",
					accepts: {
						"*": allTypes,
						text: "text/plain",
						html: "text/html",
						xml: "application/xml, text/xml",
						json: "application/json, text/javascript"
					},
					contents: {
						xml: /\bxml\b/,
						html: /\bhtml/,
						json: /\bjson\b/
					},
					responseFields: {
						xml: "responseXML",
						text: "responseText",
						json: "responseJSON"
					},
					converters: {
						"* text": String,
						"text html": !0,
						"text json": jQuery.parseJSON,
						"text xml": jQuery.parseXML
					},
					flatOptions: {
						url: !0,
						context: !0
					}
				},
				ajaxSetup: function(target, settings) {
					return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target)
				},
				ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
				ajaxTransport: addToPrefiltersOrTransports(transports),
				ajax: function(url, options) {
					if (typeof url === "object") {
						options = url;
						url = undefined
					}
					options = options || {};
					var transport, cacheURL, responseHeadersString, responseHeaders, timeoutTimer, urlAnchor, fireGlobals, i, s = jQuery.ajaxSetup({}, options),
						callbackContext = s.context || s,
						globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,
						deferred = jQuery.Deferred(),
						completeDeferred = jQuery.Callbacks("once memory"),
						statusCode = s.statusCode || {},
						requestHeaders = {},
						requestHeadersNames = {},
						state = 0,
						strAbort = "canceled",
						jqXHR = {
							readyState: 0,
							getResponseHeader: function(key) {
								var match;
								if (state === 2) {
									if (!responseHeaders) {
										responseHeaders = {};
										while ((match = rheaders.exec(responseHeadersString))) {
											responseHeaders[match[1].toLowerCase()] = match[2]
										}
									}
									match = responseHeaders[key.toLowerCase()]
								}
								return match == null ? null : match
							},
							getAllResponseHeaders: function() {
								return state === 2 ? responseHeadersString : null
							},
							setRequestHeader: function(name, value) {
								var lname = name.toLowerCase();
								if (!state) {
									name = requestHeadersNames[lname] = requestHeadersNames[lname] || name;
									requestHeaders[name] = value
								}
								return this
							},
							overrideMimeType: function(type) {
								if (!state) {
									s.mimeType = type
								}
								return this
							},
							statusCode: function(map) {
								var code;
								if (map) {
									if (state < 2) {
										for (code in map) {
											statusCode[code] = [statusCode[code], map[code]]
										}
									} else {
										jqXHR.always(map[jqXHR.status])
									}
								}
								return this
							},
							abort: function(statusText) {
								var finalText = statusText || strAbort;
								if (transport) {
									transport.abort(finalText)
								}
								done(0, finalText);
								return this
							}
						};
					deferred.promise(jqXHR).complete = completeDeferred.add;
					jqXHR.success = jqXHR.done;
					jqXHR.error = jqXHR.fail;
					s.url = ((url || s.url || location.href) + "").replace(rhash, "").replace(rprotocol, location.protocol + "//");
					s.type = options.method || options.type || s.method || s.type;
					s.dataTypes = jQuery.trim(s.dataType || "*").toLowerCase().match(rnotwhite) || [""];
					if (s.crossDomain == null) {
						urlAnchor = document.createElement("a");
						try {
							urlAnchor.href = s.url;
							urlAnchor.href = urlAnchor.href;
							s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !== urlAnchor.protocol + "//" + urlAnchor.host
						} catch (e) {
							s.crossDomain = !0
						}
					}
					if (s.data && s.processData && typeof s.data !== "string") {
						s.data = jQuery.param(s.data, s.traditional)
					}
					inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);
					if (state === 2) {
						return jqXHR
					}
					fireGlobals = jQuery.event && s.global;
					if (fireGlobals && jQuery.active++ === 0) {
						jQuery.event.trigger("ajaxStart")
					}
					s.type = s.type.toUpperCase();
					s.hasContent = !rnoContent.test(s.type);
					cacheURL = s.url;
					if (!s.hasContent) {
						if (s.data) {
							cacheURL = (s.url += (rquery.test(cacheURL) ? "&" : "?") + s.data);
							delete s.data
						}
						if (s.cache === !1) {
							s.url = rts.test(cacheURL) ? cacheURL.replace(rts, "$1_=" + nonce++) : cacheURL + (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce++
						}
					}
					if (s.ifModified) {
						if (jQuery.lastModified[cacheURL]) {
							jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL])
						}
						if (jQuery.etag[cacheURL]) {
							jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL])
						}
					}
					if (s.data && s.hasContent && s.contentType !== !1 || options.contentType) {
						jqXHR.setRequestHeader("Content-Type", s.contentType)
					}
					jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]);
					for (i in s.headers) {
						jqXHR.setRequestHeader(i, s.headers[i])
					}
					if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === !1 || state === 2)) {
						return jqXHR.abort()
					}
					strAbort = "abort";
					for (i in {
						success: 1,
						error: 1,
						complete: 1
					}) {
						jqXHR[i](s[i])
					}
					transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);
					if (!transport) {
						done(-1, "No Transport")
					} else {
						jqXHR.readyState = 1;
						if (fireGlobals) {
							globalEventContext.trigger("ajaxSend", [jqXHR, s])
						}
						if (state === 2) {
							return jqXHR
						}
						if (s.async && s.timeout > 0) {
							timeoutTimer = window.setTimeout(function() {
								jqXHR.abort("timeout")
							}, s.timeout)
						}
						try {
							state = 1;
							transport.send(requestHeaders, done)
						} catch (e) {
							if (state < 2) {
								done(-1, e)
							} else {
								throw e
							}
						}
					}

					function done(status, nativeStatusText, responses, headers) {
						var isSuccess, success, error, response, modified, statusText = nativeStatusText;
						if (state === 2) {
							return
						}
						state = 2;
						if (timeoutTimer) {
							window.clearTimeout(timeoutTimer)
						}
						transport = undefined;
						responseHeadersString = headers || "";
						jqXHR.readyState = status > 0 ? 4 : 0;
						isSuccess = status >= 200 && status < 300 || status === 304;
						if (responses) {
							response = ajaxHandleResponses(s, jqXHR, responses)
						}
						response = ajaxConvert(s, response, jqXHR, isSuccess);
						if (isSuccess) {
							if (s.ifModified) {
								modified = jqXHR.getResponseHeader("Last-Modified");
								if (modified) {
									jQuery.lastModified[cacheURL] = modified
								}
								modified = jqXHR.getResponseHeader("etag");
								if (modified) {
									jQuery.etag[cacheURL] = modified
								}
							}
							if (status === 204 || s.type === "HEAD") {
								statusText = "nocontent"
							} else if (status === 304) {
								statusText = "notmodified"
							} else {
								statusText = response.state;
								success = response.data;
								error = response.error;
								isSuccess = !error
							}
						} else {
							error = statusText;
							if (status || !statusText) {
								statusText = "error";
								if (status < 0) {
									status = 0
								}
							}
						}
						jqXHR.status = status;
						jqXHR.statusText = (nativeStatusText || statusText) + "";
						if (isSuccess) {
							deferred.resolveWith(callbackContext, [success, statusText, jqXHR])
						} else {
							deferred.rejectWith(callbackContext, [jqXHR, statusText, error])
						}
						jqXHR.statusCode(statusCode);
						statusCode = undefined;
						if (fireGlobals) {
							globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [jqXHR, s, isSuccess ? success : error])
						}
						completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);
						if (fireGlobals) {
							globalEventContext.trigger("ajaxComplete", [jqXHR, s]);
							if (!(--jQuery.active)) {
								jQuery.event.trigger("ajaxStop")
							}
						}
					}
					return jqXHR
				},
				getJSON: function(url, data, callback) {
					return jQuery.get(url, data, callback, "json")
				},
				getScript: function(url, callback) {
					return jQuery.get(url, undefined, callback, "script")
				}
			});
			jQuery.each(["get", "post"], function(i, method) {
				jQuery[method] = function(url, data, callback, type) {
					if (jQuery.isFunction(data)) {
						type = type || callback;
						callback = data;
						data = undefined
					}
					return jQuery.ajax(jQuery.extend({
						url: url,
						type: method,
						dataType: type,
						data: data,
						success: callback
					}, jQuery.isPlainObject(url) && url))
				}
			});
			jQuery._evalUrl = function(url) {
				return jQuery.ajax({
					url: url,
					type: "GET",
					dataType: "script",
					async: !1,
					global: !1,
					"throws": !0
				})
			};
			jQuery.fn.extend({
				wrapAll: function(html) {
					var wrap;
					if (jQuery.isFunction(html)) {
						return this.each(function(i) {
							jQuery(this).wrapAll(html.call(this, i))
						})
					}
					if (this[0]) {
						wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(!0);
						if (this[0].parentNode) {
							wrap.insertBefore(this[0])
						}
						wrap.map(function() {
							var elem = this;
							while (elem.firstElementChild) {
								elem = elem.firstElementChild
							}
							return elem
						}).append(this)
					}
					return this
				},
				wrapInner: function(html) {
					if (jQuery.isFunction(html)) {
						return this.each(function(i) {
							jQuery(this).wrapInner(html.call(this, i))
						})
					}
					return this.each(function() {
						var self = jQuery(this),
							contents = self.contents();
						if (contents.length) {
							contents.wrapAll(html)
						} else {
							self.append(html)
						}
					})
				},
				wrap: function(html) {
					var isFunction = jQuery.isFunction(html);
					return this.each(function(i) {
						jQuery(this).wrapAll(isFunction ? html.call(this, i) : html)
					})
				},
				unwrap: function() {
					return this.parent().each(function() {
						if (!jQuery.nodeName(this, "body")) {
							jQuery(this).replaceWith(this.childNodes)
						}
					}).end()
				}
			});
			jQuery.expr.filters.hidden = function(elem) {
				return !jQuery.expr.filters.visible(elem)
			};
			jQuery.expr.filters.visible = function(elem) {
				return elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0
			};
			var r20 = /%20/g,
				rbracket = /\[\]$/,
				rCRLF = /\r?\n/g,
				rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
				rsubmittable = /^(?:input|select|textarea|keygen)/i;

			function buildParams(prefix, obj, traditional, add) {
				var name;
				if (jQuery.isArray(obj)) {
					jQuery.each(obj, function(i, v) {
						if (traditional || rbracket.test(prefix)) {
							add(prefix, v)
						} else {
							buildParams(prefix + "[" + (typeof v === "object" && v != null ? i : "") + "]", v, traditional, add)
						}
					})
				} else if (!traditional && jQuery.type(obj) === "object") {
					for (name in obj) {
						buildParams(prefix + "[" + name + "]", obj[name], traditional, add)
					}
				} else {
					add(prefix, obj)
				}
			}
			jQuery.param = function(a, traditional) {
				var prefix, s = [],
					add = function(key, value) {
						value = jQuery.isFunction(value) ? value() : (value == null ? "" : value);
						s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value)
					};
				if (traditional === undefined) {
					traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional
				}
				if (jQuery.isArray(a) || (a.jquery && !jQuery.isPlainObject(a))) {
					jQuery.each(a, function() {
						add(this.name, this.value)
					})
				} else {
					for (prefix in a) {
						buildParams(prefix, a[prefix], traditional, add)
					}
				}
				return s.join("&").replace(r20, "+")
			};
			jQuery.fn.extend({
				serialize: function() {
					return jQuery.param(this.serializeArray())
				},
				serializeArray: function() {
					return this.map(function() {
						var elements = jQuery.prop(this, "elements");
						return elements ? jQuery.makeArray(elements) : this
					}).filter(function() {
							var type = this.type;
							return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type))
						}).map(function(i, elem) {
							var val = jQuery(this).val();
							return val == null ? null : jQuery.isArray(val) ? jQuery.map(val, function(val) {
								return {
									name: elem.name,
									value: val.replace(rCRLF, "\r\n")
								}
							}) : {
								name: elem.name,
								value: val.replace(rCRLF, "\r\n")
							}
						}).get()
				}
			});
			jQuery.ajaxSettings.xhr = function() {
				try {
					return new window.XMLHttpRequest()
				} catch (e) {}
			};
			var xhrSuccessStatus = {
					0: 200,
					1223: 204
				},
				xhrSupported = jQuery.ajaxSettings.xhr();
			support.cors = !!xhrSupported && ("withCredentials" in xhrSupported);
			support.ajax = xhrSupported = !!xhrSupported;
			jQuery.ajaxTransport(function(options) {
				var callback, errorCallback;
				if (support.cors || xhrSupported && !options.crossDomain) {
					return {
						send: function(headers, complete) {
							var i, xhr = options.xhr();
							xhr.open(options.type, options.url, options.async, options.username, options.password);
							if (options.xhrFields) {
								for (i in options.xhrFields) {
									xhr[i] = options.xhrFields[i]
								}
							}
							if (options.mimeType && xhr.overrideMimeType) {
								xhr.overrideMimeType(options.mimeType)
							}
							if (!options.crossDomain && !headers["X-Requested-With"]) {
								headers["X-Requested-With"] = "XMLHttpRequest"
							}
							for (i in headers) {
								xhr.setRequestHeader(i, headers[i])
							}
							callback = function(type) {
								return function() {
									if (callback) {
										callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;
										if (type === "abort") {
											xhr.abort()
										} else if (type === "error") {
											if (typeof xhr.status !== "number") {
												complete(0, "error")
											} else {
												complete(xhr.status, xhr.statusText)
											}
										} else {
											complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, (xhr.responseType || "text") !== "text" || typeof xhr.responseText !== "string" ? {
												binary: xhr.response
											} : {
												text: xhr.responseText
											}, xhr.getAllResponseHeaders())
										}
									}
								}
							};
							xhr.onload = callback();
							errorCallback = xhr.onerror = callback("error");
							if (xhr.onabort !== undefined) {
								xhr.onabort = errorCallback
							} else {
								xhr.onreadystatechange = function() {
									if (xhr.readyState === 4) {
										window.setTimeout(function() {
											if (callback) {
												errorCallback()
											}
										})
									}
								}
							}
							callback = callback("abort");
							try {
								xhr.send(options.hasContent && options.data || null)
							} catch (e) {
								if (callback) {
									throw e
								}
							}
						},
						abort: function() {
							if (callback) {
								callback()
							}
						}
					}
				}
			});
			jQuery.ajaxSetup({
				accepts: {
					script: "text/javascript, application/javascript, " + "application/ecmascript, application/x-ecmascript"
				},
				contents: {
					script: /\b(?:java|ecma)script\b/
				},
				converters: {
					"text script": function(text) {
						jQuery.globalEval(text);
						return text
					}
				}
			});
			jQuery.ajaxPrefilter("script", function(s) {
				if (s.cache === undefined) {
					s.cache = !1
				}
				if (s.crossDomain) {
					s.type = "GET"
				}
			});
			jQuery.ajaxTransport("script", function(s) {
				if (s.crossDomain) {
					var script, callback;
					return {
						send: function(_, complete) {
							script = jQuery("<script>").prop({
								charset: s.scriptCharset,
								src: s.url
							}).on("load error", callback = function(evt) {
									script.remove();
									callback = null;
									if (evt) {
										complete(evt.type === "error" ? 404 : 200, evt.type)
									}
								});
							document.head.appendChild(script[0])
						},
						abort: function() {
							if (callback) {
								callback()
							}
						}
					}
				}
			});
			var oldCallbacks = [],
				rjsonp = /(=)\?(?=&|$)|\?\?/;
			jQuery.ajaxSetup({
				jsonp: "callback",
				jsonpCallback: function() {
					var callback = oldCallbacks.pop() || (jQuery.expando + "_" + (nonce++));
					this[callback] = !0;
					return callback
				}
			});
			jQuery.ajaxPrefilter("json jsonp", function(s, originalSettings, jqXHR) {
				var callbackName, overwritten, responseContainer, jsonProp = s.jsonp !== !1 && (rjsonp.test(s.url) ? "url" : typeof s.data === "string" && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && rjsonp.test(s.data) && "data");
				if (jsonProp || s.dataTypes[0] === "jsonp") {
					callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;
					if (jsonProp) {
						s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName)
					} else if (s.jsonp !== !1) {
						s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName
					}
					s.converters["script json"] = function() {
						if (!responseContainer) {
							jQuery.error(callbackName + " was not called")
						}
						return responseContainer[0]
					};
					s.dataTypes[0] = "json";
					overwritten = window[callbackName];
					window[callbackName] = function() {
						responseContainer = arguments
					};
					jqXHR.always(function() {
						if (overwritten === undefined) {
							jQuery(window).removeProp(callbackName)
						} else {
							window[callbackName] = overwritten
						}
						if (s[callbackName]) {
							s.jsonpCallback = originalSettings.jsonpCallback;
							oldCallbacks.push(callbackName)
						}
						if (responseContainer && jQuery.isFunction(overwritten)) {
							overwritten(responseContainer[0])
						}
						responseContainer = overwritten = undefined
					});
					return "script"
				}
			});
			jQuery.parseHTML = function(data, context, keepScripts) {
				if (!data || typeof data !== "string") {
					return null
				}
				if (typeof context === "boolean") {
					keepScripts = context;
					context = !1
				}
				context = context || document;
				var parsed = rsingleTag.exec(data),
					scripts = !keepScripts && [];
				if (parsed) {
					return [context.createElement(parsed[1])]
				}
				parsed = buildFragment([data], context, scripts);
				if (scripts && scripts.length) {
					jQuery(scripts).remove()
				}
				return jQuery.merge([], parsed.childNodes)
			};
			var _load = jQuery.fn.load;
			jQuery.fn.load = function(url, params, callback) {
				if (typeof url !== "string" && _load) {
					return _load.apply(this, arguments)
				}
				var selector, type, response, self = this,
					off = url.indexOf(" ");
				if (off > -1) {
					selector = jQuery.trim(url.slice(off));
					url = url.slice(0, off)
				}
				if (jQuery.isFunction(params)) {
					callback = params;
					params = undefined
				} else if (params && typeof params === "object") {
					type = "POST"
				}
				if (self.length > 0) {
					jQuery.ajax({
						url: url,
						type: type || "GET",
						dataType: "html",
						data: params
					}).done(function(responseText) {
							response = arguments;
							self.html(selector ? jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) : responseText)
						}).always(callback && function(jqXHR, status) {
							self.each(function() {
								callback.apply(this, response || [jqXHR.responseText, status, jqXHR])
							})
						})
				}
				return this
			};
			jQuery.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(i, type) {
				jQuery.fn[type] = function(fn) {
					return this.on(type, fn)
				}
			});
			jQuery.expr.filters.animated = function(elem) {
				return jQuery.grep(jQuery.timers, function(fn) {
					return elem === fn.elem
				}).length
			};

			function getWindow(elem) {
				return jQuery.isWindow(elem) ? elem : elem.nodeType === 9 && elem.defaultView
			}
			jQuery.offset = {
				setOffset: function(elem, options, i) {
					var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, position = jQuery.css(elem, "position"),
						curElem = jQuery(elem),
						props = {};
					if (position === "static") {
						elem.style.position = "relative"
					}
					curOffset = curElem.offset();
					curCSSTop = jQuery.css(elem, "top");
					curCSSLeft = jQuery.css(elem, "left");
					calculatePosition = (position === "absolute" || position === "fixed") && (curCSSTop + curCSSLeft).indexOf("auto") > -1;
					if (calculatePosition) {
						curPosition = curElem.position();
						curTop = curPosition.top;
						curLeft = curPosition.left
					} else {
						curTop = parseFloat(curCSSTop) || 0;
						curLeft = parseFloat(curCSSLeft) || 0
					}
					if (jQuery.isFunction(options)) {
						options = options.call(elem, i, jQuery.extend({}, curOffset))
					}
					if (options.top != null) {
						props.top = (options.top - curOffset.top) + curTop
					}
					if (options.left != null) {
						props.left = (options.left - curOffset.left) + curLeft
					}
					if ("using" in options) {
						options.using.call(elem, props)
					} else {
						curElem.css(props)
					}
				}
			};
			jQuery.fn.extend({
				offset: function(options) {
					if (arguments.length) {
						return options === undefined ? this : this.each(function(i) {
							jQuery.offset.setOffset(this, options, i)
						})
					}
					var docElem, win, elem = this[0],
						box = {
							top: 0,
							left: 0
						},
						doc = elem && elem.ownerDocument;
					if (!doc) {
						return
					}
					docElem = doc.documentElement;
					if (!jQuery.contains(docElem, elem)) {
						return box
					}
					box = elem.getBoundingClientRect();
					win = getWindow(doc);
					return {
						top: box.top + win.pageYOffset - docElem.clientTop,
						left: box.left + win.pageXOffset - docElem.clientLeft
					}
				},
				position: function() {
					if (!this[0]) {
						return
					}
					var offsetParent, offset, elem = this[0],
						parentOffset = {
							top: 0,
							left: 0
						};
					if (jQuery.css(elem, "position") === "fixed") {
						offset = elem.getBoundingClientRect()
					} else {
						offsetParent = this.offsetParent();
						offset = this.offset();
						if (!jQuery.nodeName(offsetParent[0], "html")) {
							parentOffset = offsetParent.offset()
						}
						parentOffset.top += jQuery.css(offsetParent[0], "borderTopWidth", !0);
						parentOffset.left += jQuery.css(offsetParent[0], "borderLeftWidth", !0)
					}
					return {
						top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", !0),
						left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", !0)
					}
				},
				offsetParent: function() {
					return this.map(function() {
						var offsetParent = this.offsetParent;
						while (offsetParent && jQuery.css(offsetParent, "position") === "static") {
							offsetParent = offsetParent.offsetParent
						}
						return offsetParent || documentElement
					})
				}
			});
			jQuery.each({
				scrollLeft: "pageXOffset",
				scrollTop: "pageYOffset"
			}, function(method, prop) {
				var top = "pageYOffset" === prop;
				jQuery.fn[method] = function(val) {
					return access(this, function(elem, method, val) {
						var win = getWindow(elem);
						if (val === undefined) {
							return win ? win[prop] : elem[method]
						}
						if (win) {
							win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset)
						} else {
							elem[method] = val
						}
					}, method, val, arguments.length)
				}
			});
			jQuery.each(["top", "left"], function(i, prop) {
				jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function(elem, computed) {
					if (computed) {
						computed = curCSS(elem, prop);
						return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed
					}
				})
			});
			jQuery.each({
				Height: "height",
				Width: "width"
			}, function(name, type) {
				jQuery.each({
					padding: "inner" + name,
					content: type,
					"": "outer" + name
				}, function(defaultExtra, funcName) {
					jQuery.fn[funcName] = function(margin, value) {
						var chainable = arguments.length && (defaultExtra || typeof margin !== "boolean"),
							extra = defaultExtra || (margin === !0 || value === !0 ? "margin" : "border");
						return access(this, function(elem, type, value) {
							var doc;
							if (jQuery.isWindow(elem)) {
								return elem.document.documentElement["client" + name]
							}
							if (elem.nodeType === 9) {
								doc = elem.documentElement;
								return Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name])
							}
							return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra)
						}, type, chainable ? margin : undefined, chainable, null)
					}
				})
			});
			jQuery.fn.extend({
				bind: function(types, data, fn) {
					return this.on(types, null, data, fn)
				},
				unbind: function(types, fn) {
					return this.off(types, null, fn)
				},
				delegate: function(selector, types, data, fn) {
					return this.on(types, selector, data, fn)
				},
				undelegate: function(selector, types, fn) {
					return arguments.length === 1 ? this.off(selector, "**") : this.off(types, selector || "**", fn)
				},
				size: function() {
					return this.length
				}
			});
			jQuery.fn.andSelf = jQuery.fn.addBack;
			if (!0) {
				!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
					return jQuery
				}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
			}
			var _jQuery = window.jQuery,
				_$ = window.$;
			jQuery.noConflict = function(deep) {
				if (window.$ === jQuery) {
					window.$ = _$
				}
				if (deep && window.jQuery === jQuery) {
					window.jQuery = _jQuery
				}
				return jQuery
			};
			if (!noGlobal) {
				window.jQuery = window.$ = jQuery
			}
			return jQuery
		}))
	}, function(module, exports, __webpack_require__) {
		(function(global) {
			module.exports = global.Tether = __webpack_require__(6)
		}.call(exports, (function() {
				return this
			}())))
	}, function(module, exports, __webpack_require__) {
		var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;
		(function(root, factory) {
			if (!0) {
				!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
			} else if (typeof exports === 'object') {
				module.exports = factory(require, exports, module)
			} else {
				root.Tether = factory()
			}
		}(this, function(require, exports, module) {
			'use strict';
			var _createClass = (function() {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || !1;
						descriptor.configurable = !0;
						if ('value' in descriptor) descriptor.writable = !0;
						Object.defineProperty(target, descriptor.key, descriptor)
					}
				}
				return function(Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor
				}
			})();

			function _classCallCheck(instance, Constructor) {
				if (!(instance instanceof Constructor)) {
					throw new TypeError('Cannot call a class as a function')
				}
			}
			var TetherBase = undefined;
			if (typeof TetherBase === 'undefined') {
				TetherBase = {
					modules: []
				}
			}
			var zeroElement = null;

			function getActualBoundingClientRect(node) {
				var boundingRect = node.getBoundingClientRect();
				var rect = {};
				for (var k in boundingRect) {
					rect[k] = boundingRect[k]
				}
				if (node.ownerDocument !== document) {
					var _frameElement = node.ownerDocument.defaultView.frameElement;
					if (_frameElement) {
						var frameRect = getActualBoundingClientRect(_frameElement);
						rect.top += frameRect.top;
						rect.bottom += frameRect.top;
						rect.left += frameRect.left;
						rect.right += frameRect.left
					}
				}
				return rect
			}

			function getScrollParents(el) {
				var computedStyle = getComputedStyle(el) || {};
				var position = computedStyle.position;
				var parents = [];
				if (position === 'fixed') {
					return [el]
				}
				var parent = el;
				while ((parent = parent.parentNode) && parent && parent.nodeType === 1) {
					var style = undefined;
					try {
						style = getComputedStyle(parent)
					} catch (err) {}
					if (typeof style === 'undefined' || style === null) {
						parents.push(parent);
						return parents
					}
					var _style = style;
					var overflow = _style.overflow;
					var overflowX = _style.overflowX;
					var overflowY = _style.overflowY;
					if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {
						if (position !== 'absolute' || ['relative', 'absolute', 'fixed'].indexOf(style.position) >= 0) {
							parents.push(parent)
						}
					}
				}
				parents.push(el.ownerDocument.body);
				if (el.ownerDocument !== document) {
					parents.push(el.ownerDocument.defaultView)
				}
				return parents
			}
			var uniqueId = (function() {
				var id = 0;
				return function() {
					return ++id
				}
			})();
			var zeroPosCache = {};
			var getOrigin = function getOrigin() {
				var node = zeroElement;
				if (!node || !document.body.contains(node)) {
					node = document.createElement('div');
					node.setAttribute('data-tether-id', uniqueId());
					extend(node.style, {
						top: 0,
						left: 0,
						position: 'absolute'
					});
					document.body.appendChild(node);
					zeroElement = node
				}
				var id = node.getAttribute('data-tether-id');
				if (typeof zeroPosCache[id] === 'undefined') {
					zeroPosCache[id] = getActualBoundingClientRect(node);
					defer(function() {
						delete zeroPosCache[id]
					})
				}
				return zeroPosCache[id]
			};

			function removeUtilElements() {
				if (zeroElement) {
					document.body.removeChild(zeroElement)
				}
				zeroElement = null
			};

			function getBounds(el) {
				var doc = undefined;
				if (el === document) {
					doc = document;
					el = document.documentElement
				} else {
					doc = el.ownerDocument
				}
				var docEl = doc.documentElement;
				var box = getActualBoundingClientRect(el);
				var origin = getOrigin();
				box.top -= origin.top;
				box.left -= origin.left;
				if (typeof box.width === 'undefined') {
					box.width = document.body.scrollWidth - box.left - box.right
				}
				if (typeof box.height === 'undefined') {
					box.height = document.body.scrollHeight - box.top - box.bottom
				}
				box.top = box.top - docEl.clientTop;
				box.left = box.left - docEl.clientLeft;
				box.right = doc.body.clientWidth - box.width - box.left;
				box.bottom = doc.body.clientHeight - box.height - box.top;
				return box
			}

			function getOffsetParent(el) {
				return el.offsetParent || document.documentElement
			}
			var _scrollBarSize = null;

			function getScrollBarSize() {
				if (_scrollBarSize) {
					return _scrollBarSize
				}
				var inner = document.createElement('div');
				inner.style.width = '100%';
				inner.style.height = '200px';
				var outer = document.createElement('div');
				extend(outer.style, {
					position: 'absolute',
					top: 0,
					left: 0,
					pointerEvents: 'none',
					visibility: 'hidden',
					width: '200px',
					height: '150px',
					overflow: 'hidden'
				});
				outer.appendChild(inner);
				document.body.appendChild(outer);
				var widthContained = inner.offsetWidth;
				outer.style.overflow = 'scroll';
				var widthScroll = inner.offsetWidth;
				if (widthContained === widthScroll) {
					widthScroll = outer.clientWidth
				}
				document.body.removeChild(outer);
				var width = widthContained - widthScroll;
				_scrollBarSize = {
					width: width,
					height: width
				};
				return _scrollBarSize
			}

			function extend() {
				var out = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
				var args = [];
				Array.prototype.push.apply(args, arguments);
				args.slice(1).forEach(function(obj) {
					if (obj) {
						for (var key in obj) {
							if (({}).hasOwnProperty.call(obj, key)) {
								out[key] = obj[key]
							}
						}
					}
				});
				return out
			}

			function removeClass(el, name) {
				if (typeof el.classList !== 'undefined') {
					name.split(' ').forEach(function(cls) {
						if (cls.trim()) {
							el.classList.remove(cls)
						}
					})
				} else {
					var regex = new RegExp('(^| )' + name.split(' ').join('|') + '( |$)', 'gi');
					var className = getClassName(el).replace(regex, ' ');
					setClassName(el, className)
				}
			}

			function addClass(el, name) {
				if (typeof el.classList !== 'undefined') {
					name.split(' ').forEach(function(cls) {
						if (cls.trim()) {
							el.classList.add(cls)
						}
					})
				} else {
					removeClass(el, name);
					var cls = getClassName(el) + (' ' + name);
					setClassName(el, cls)
				}
			}

			function hasClass(el, name) {
				if (typeof el.classList !== 'undefined') {
					return el.classList.contains(name)
				}
				var className = getClassName(el);
				return new RegExp('(^| )' + name + '( |$)', 'gi').test(className)
			}

			function getClassName(el) {
				if (el.className instanceof el.ownerDocument.defaultView.SVGAnimatedString) {
					return el.className.baseVal
				}
				return el.className
			}

			function setClassName(el, className) {
				el.setAttribute('class', className)
			}

			function updateClasses(el, add, all) {
				all.forEach(function(cls) {
					if (add.indexOf(cls) === -1 && hasClass(el, cls)) {
						removeClass(el, cls)
					}
				});
				add.forEach(function(cls) {
					if (!hasClass(el, cls)) {
						addClass(el, cls)
					}
				})
			}
			var deferred = [];
			var defer = function defer(fn) {
				deferred.push(fn)
			};
			var flush = function flush() {
				var fn = undefined;
				while (fn = deferred.pop()) {
					fn()
				}
			};
			var Evented = (function() {
				function Evented() {
					_classCallCheck(this, Evented)
				}
				_createClass(Evented, [{
					key: 'on',
					value: function on(event, handler, ctx) {
						var once = arguments.length <= 3 || arguments[3] === undefined ? !1 : arguments[3];
						if (typeof this.bindings === 'undefined') {
							this.bindings = {}
						}
						if (typeof this.bindings[event] === 'undefined') {
							this.bindings[event] = []
						}
						this.bindings[event].push({
							handler: handler,
							ctx: ctx,
							once: once
						})
					}
				}, {
					key: 'once',
					value: function once(event, handler, ctx) {
						this.on(event, handler, ctx, !0)
					}
				}, {
					key: 'off',
					value: function off(event, handler) {
						if (typeof this.bindings === 'undefined' || typeof this.bindings[event] === 'undefined') {
							return
						}
						if (typeof handler === 'undefined') {
							delete this.bindings[event]
						} else {
							var i = 0;
							while (i < this.bindings[event].length) {
								if (this.bindings[event][i].handler === handler) {
									this.bindings[event].splice(i, 1)
								} else {
									++i
								}
							}
						}
					}
				}, {
					key: 'trigger',
					value: function trigger(event) {
						if (typeof this.bindings !== 'undefined' && this.bindings[event]) {
							var i = 0;
							for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
								args[_key - 1] = arguments[_key]
							}
							while (i < this.bindings[event].length) {
								var _bindings$event$i = this.bindings[event][i];
								var handler = _bindings$event$i.handler;
								var ctx = _bindings$event$i.ctx;
								var once = _bindings$event$i.once;
								var context = ctx;
								if (typeof context === 'undefined') {
									context = this
								}
								handler.apply(context, args);
								if (once) {
									this.bindings[event].splice(i, 1)
								} else {
									++i
								}
							}
						}
					}
				}]);
				return Evented
			})();
			TetherBase.Utils = {
				getActualBoundingClientRect: getActualBoundingClientRect,
				getScrollParents: getScrollParents,
				getBounds: getBounds,
				getOffsetParent: getOffsetParent,
				extend: extend,
				addClass: addClass,
				removeClass: removeClass,
				hasClass: hasClass,
				updateClasses: updateClasses,
				defer: defer,
				flush: flush,
				uniqueId: uniqueId,
				Evented: Evented,
				getScrollBarSize: getScrollBarSize,
				removeUtilElements: removeUtilElements
			};
			'use strict';
			var _slicedToArray = (function() {
				function sliceIterator(arr, i) {
					var _arr = [];
					var _n = !0;
					var _d = !1;
					var _e = undefined;
					try {
						for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = !0) {
							_arr.push(_s.value);
							if (i && _arr.length === i) break
						}
					} catch (err) {
						_d = !0;
						_e = err
					} finally {
						try {
							if (!_n && _i['return']) _i['return']()
						} finally {
							if (_d) throw _e
						}
					}
					return _arr
				}
				return function(arr, i) {
					if (Array.isArray(arr)) {
						return arr
					} else if (Symbol.iterator in Object(arr)) {
						return sliceIterator(arr, i)
					} else {
						throw new TypeError('Invalid attempt to destructure non-iterable instance')
					}
				}
			})();
			var _createClass = (function() {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || !1;
						descriptor.configurable = !0;
						if ('value' in descriptor) descriptor.writable = !0;
						Object.defineProperty(target, descriptor.key, descriptor)
					}
				}
				return function(Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor
				}
			})();
			var _get = function get(_x6, _x7, _x8) {
				var _again = !0;
				_function: while (_again) {
					var object = _x6,
						property = _x7,
						receiver = _x8;
					_again = !1;
					if (object === null) object = Function.prototype;
					var desc = Object.getOwnPropertyDescriptor(object, property);
					if (desc === undefined) {
						var parent = Object.getPrototypeOf(object);
						if (parent === null) {
							return undefined
						} else {
							_x6 = parent;
							_x7 = property;
							_x8 = receiver;
							_again = !0;
							desc = parent = undefined;
							continue _function
						}
					} else if ('value' in desc) {
						return desc.value
					} else {
						var getter = desc.get;
						if (getter === undefined) {
							return undefined
						}
						return getter.call(receiver)
					}
				}
			};

			function _classCallCheck(instance, Constructor) {
				if (!(instance instanceof Constructor)) {
					throw new TypeError('Cannot call a class as a function')
				}
			}

			function _inherits(subClass, superClass) {
				if (typeof superClass !== 'function' && superClass !== null) {
					throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass)
				}
				subClass.prototype = Object.create(superClass && superClass.prototype, {
					constructor: {
						value: subClass,
						enumerable: !1,
						writable: !0,
						configurable: !0
					}
				});
				if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass
			}
			if (typeof TetherBase === 'undefined') {
				throw new Error('You must include the utils.js file before tether.js')
			}
			var _TetherBase$Utils = TetherBase.Utils;
			var getScrollParents = _TetherBase$Utils.getScrollParents;
			var getBounds = _TetherBase$Utils.getBounds;
			var getOffsetParent = _TetherBase$Utils.getOffsetParent;
			var extend = _TetherBase$Utils.extend;
			var addClass = _TetherBase$Utils.addClass;
			var removeClass = _TetherBase$Utils.removeClass;
			var updateClasses = _TetherBase$Utils.updateClasses;
			var defer = _TetherBase$Utils.defer;
			var flush = _TetherBase$Utils.flush;
			var getScrollBarSize = _TetherBase$Utils.getScrollBarSize;
			var removeUtilElements = _TetherBase$Utils.removeUtilElements;

			function within(a, b) {
				var diff = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];
				return a + diff >= b && b >= a - diff
			}
			var transformKey = (function() {
				if (typeof document === 'undefined') {
					return ''
				}
				var el = document.createElement('div');
				var transforms = ['transform', 'WebkitTransform', 'OTransform', 'MozTransform', 'msTransform'];
				for (var i = 0; i < transforms.length; ++i) {
					var key = transforms[i];
					if (el.style[key] !== undefined) {
						return key
					}
				}
			})();
			var tethers = [];
			var position = function position() {
				tethers.forEach(function(tether) {
					tether.position(!1)
				});
				flush()
			};

			function now() {
				if (typeof performance !== 'undefined' && typeof performance.now !== 'undefined') {
					return performance.now()
				}
				return +new Date()
			}(function() {
				var lastCall = null;
				var lastDuration = null;
				var pendingTimeout = null;
				var tick = function tick() {
					if (typeof lastDuration !== 'undefined' && lastDuration > 16) {
						lastDuration = Math.min(lastDuration - 16, 250);
						pendingTimeout = setTimeout(tick, 250);
						return
					}
					if (typeof lastCall !== 'undefined' && now() - lastCall < 10) {
						return
					}
					if (pendingTimeout != null) {
						clearTimeout(pendingTimeout);
						pendingTimeout = null
					}
					lastCall = now();
					position();
					lastDuration = now() - lastCall
				};
				if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined') {
					['resize', 'scroll', 'touchmove'].forEach(function(event) {
						window.addEventListener(event, tick)
					})
				}
			})();
			var MIRROR_LR = {
				center: 'center',
				left: 'right',
				right: 'left'
			};
			var MIRROR_TB = {
				middle: 'middle',
				top: 'bottom',
				bottom: 'top'
			};
			var OFFSET_MAP = {
				top: 0,
				left: 0,
				middle: '50%',
				center: '50%',
				bottom: '100%',
				right: '100%'
			};
			var autoToFixedAttachment = function autoToFixedAttachment(attachment, relativeToAttachment) {
				var left = attachment.left;
				var top = attachment.top;
				if (left === 'auto') {
					left = MIRROR_LR[relativeToAttachment.left]
				}
				if (top === 'auto') {
					top = MIRROR_TB[relativeToAttachment.top]
				}
				return {
					left: left,
					top: top
				}
			};
			var attachmentToOffset = function attachmentToOffset(attachment) {
				var left = attachment.left;
				var top = attachment.top;
				if (typeof OFFSET_MAP[attachment.left] !== 'undefined') {
					left = OFFSET_MAP[attachment.left]
				}
				if (typeof OFFSET_MAP[attachment.top] !== 'undefined') {
					top = OFFSET_MAP[attachment.top]
				}
				return {
					left: left,
					top: top
				}
			};

			function addOffset() {
				var out = {
					top: 0,
					left: 0
				};
				for (var _len = arguments.length, offsets = Array(_len), _key = 0; _key < _len; _key++) {
					offsets[_key] = arguments[_key]
				}
				offsets.forEach(function(_ref) {
					var top = _ref.top;
					var left = _ref.left;
					if (typeof top === 'string') {
						top = parseFloat(top, 10)
					}
					if (typeof left === 'string') {
						left = parseFloat(left, 10)
					}
					out.top += top;
					out.left += left
				});
				return out
			}

			function offsetToPx(offset, size) {
				if (typeof offset.left === 'string' && offset.left.indexOf('%') !== -1) {
					offset.left = parseFloat(offset.left, 10) / 100 * size.width
				}
				if (typeof offset.top === 'string' && offset.top.indexOf('%') !== -1) {
					offset.top = parseFloat(offset.top, 10) / 100 * size.height
				}
				return offset
			}
			var parseOffset = function parseOffset(value) {
				var _value$split = value.split(' ');
				var _value$split2 = _slicedToArray(_value$split, 2);
				var top = _value$split2[0];
				var left = _value$split2[1];
				return {
					top: top,
					left: left
				}
			};
			var parseAttachment = parseOffset;
			var TetherClass = (function(_Evented) {
				_inherits(TetherClass, _Evented);

				function TetherClass(options) {
					var _this = this;
					_classCallCheck(this, TetherClass);
					_get(Object.getPrototypeOf(TetherClass.prototype), 'constructor', this).call(this);
					this.position = this.position.bind(this);
					tethers.push(this);
					this.history = [];
					this.setOptions(options, !1);
					TetherBase.modules.forEach(function(module) {
						if (typeof module.initialize !== 'undefined') {
							module.initialize.call(_this)
						}
					});
					this.position()
				}
				_createClass(TetherClass, [{
					key: 'getClass',
					value: function getClass() {
						var key = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];
						var classes = this.options.classes;
						if (typeof classes !== 'undefined' && classes[key]) {
							return this.options.classes[key]
						} else if (this.options.classPrefix) {
							return this.options.classPrefix + '-' + key
						} else {
							return key
						}
					}
				}, {
					key: 'setOptions',
					value: function setOptions(options) {
						var _this2 = this;
						var pos = arguments.length <= 1 || arguments[1] === undefined ? !0 : arguments[1];
						var defaults = {
							offset: '0 0',
							targetOffset: '0 0',
							targetAttachment: 'auto auto',
							classPrefix: 'tether'
						};
						this.options = extend(defaults, options);
						var _options = this.options;
						var element = _options.element;
						var target = _options.target;
						var targetModifier = _options.targetModifier;
						this.element = element;
						this.target = target;
						this.targetModifier = targetModifier;
						if (this.target === 'viewport') {
							this.target = document.body;
							this.targetModifier = 'visible'
						} else if (this.target === 'scroll-handle') {
							this.target = document.body;
							this.targetModifier = 'scroll-handle'
						}['element', 'target'].forEach(function(key) {
							if (typeof _this2[key] === 'undefined') {
								throw new Error('Tether Error: Both element and target must be defined')
							}
							if (typeof _this2[key].jquery !== 'undefined') {
								_this2[key] = _this2[key][0]
							} else if (typeof _this2[key] === 'string') {
								_this2[key] = document.querySelector(_this2[key])
							}
						});
						addClass(this.element, this.getClass('element'));
						if (!(this.options.addTargetClasses === !1)) {
							addClass(this.target, this.getClass('target'))
						}
						if (!this.options.attachment) {
							throw new Error('Tether Error: You must provide an attachment')
						}
						this.targetAttachment = parseAttachment(this.options.targetAttachment);
						this.attachment = parseAttachment(this.options.attachment);
						this.offset = parseOffset(this.options.offset);
						this.targetOffset = parseOffset(this.options.targetOffset);
						if (typeof this.scrollParents !== 'undefined') {
							this.disable()
						}
						if (this.targetModifier === 'scroll-handle') {
							this.scrollParents = [this.target]
						} else {
							this.scrollParents = getScrollParents(this.target)
						}
						if (!(this.options.enabled === !1)) {
							this.enable(pos)
						}
					}
				}, {
					key: 'getTargetBounds',
					value: function getTargetBounds() {
						if (typeof this.targetModifier !== 'undefined') {
							if (this.targetModifier === 'visible') {
								if (this.target === document.body) {
									return {
										top: pageYOffset,
										left: pageXOffset,
										height: innerHeight,
										width: innerWidth
									}
								} else {
									var bounds = getBounds(this.target);
									var out = {
										height: bounds.height,
										width: bounds.width,
										top: bounds.top,
										left: bounds.left
									};
									out.height = Math.min(out.height, bounds.height - (pageYOffset - bounds.top));
									out.height = Math.min(out.height, bounds.height - (bounds.top + bounds.height - (pageYOffset + innerHeight)));
									out.height = Math.min(innerHeight, out.height);
									out.height -= 2;
									out.width = Math.min(out.width, bounds.width - (pageXOffset - bounds.left));
									out.width = Math.min(out.width, bounds.width - (bounds.left + bounds.width - (pageXOffset + innerWidth)));
									out.width = Math.min(innerWidth, out.width);
									out.width -= 2;
									if (out.top < pageYOffset) {
										out.top = pageYOffset
									}
									if (out.left < pageXOffset) {
										out.left = pageXOffset
									}
									return out
								}
							} else if (this.targetModifier === 'scroll-handle') {
								var bounds = undefined;
								var target = this.target;
								if (target === document.body) {
									target = document.documentElement;
									bounds = {
										left: pageXOffset,
										top: pageYOffset,
										height: innerHeight,
										width: innerWidth
									}
								} else {
									bounds = getBounds(target)
								}
								var style = getComputedStyle(target);
								var hasBottomScroll = target.scrollWidth > target.clientWidth || [style.overflow, style.overflowX].indexOf('scroll') >= 0 || this.target !== document.body;
								var scrollBottom = 0;
								if (hasBottomScroll) {
									scrollBottom = 15
								}
								var height = bounds.height - parseFloat(style.borderTopWidth) - parseFloat(style.borderBottomWidth) - scrollBottom;
								var out = {
									width: 15,
									height: height * 0.975 * (height / target.scrollHeight),
									left: bounds.left + bounds.width - parseFloat(style.borderLeftWidth) - 15
								};
								var fitAdj = 0;
								if (height < 408 && this.target === document.body) {
									fitAdj = -0.00011 * Math.pow(height, 2) - 0.00727 * height + 22.58
								}
								if (this.target !== document.body) {
									out.height = Math.max(out.height, 24)
								}
								var scrollPercentage = this.target.scrollTop / (target.scrollHeight - height);
								out.top = scrollPercentage * (height - out.height - fitAdj) + bounds.top + parseFloat(style.borderTopWidth);
								if (this.target === document.body) {
									out.height = Math.max(out.height, 24)
								}
								return out
							}
						} else {
							return getBounds(this.target)
						}
					}
				}, {
					key: 'clearCache',
					value: function clearCache() {
						this._cache = {}
					}
				}, {
					key: 'cache',
					value: function cache(k, getter) {
						if (typeof this._cache === 'undefined') {
							this._cache = {}
						}
						if (typeof this._cache[k] === 'undefined') {
							this._cache[k] = getter.call(this)
						}
						return this._cache[k]
					}
				}, {
					key: 'enable',
					value: function enable() {
						var _this3 = this;
						var pos = arguments.length <= 0 || arguments[0] === undefined ? !0 : arguments[0];
						if (!(this.options.addTargetClasses === !1)) {
							addClass(this.target, this.getClass('enabled'))
						}
						addClass(this.element, this.getClass('enabled'));
						this.enabled = !0;
						this.scrollParents.forEach(function(parent) {
							if (parent !== _this3.target.ownerDocument) {
								parent.addEventListener('scroll', _this3.position)
							}
						});
						if (pos) {
							this.position()
						}
					}
				}, {
					key: 'disable',
					value: function disable() {
						var _this4 = this;
						removeClass(this.target, this.getClass('enabled'));
						removeClass(this.element, this.getClass('enabled'));
						this.enabled = !1;
						if (typeof this.scrollParents !== 'undefined') {
							this.scrollParents.forEach(function(parent) {
								parent.removeEventListener('scroll', _this4.position)
							})
						}
					}
				}, {
					key: 'destroy',
					value: function destroy() {
						var _this5 = this;
						this.disable();
						tethers.forEach(function(tether, i) {
							if (tether === _this5) {
								tethers.splice(i, 1)
							}
						});
						if (tethers.length === 0) {
							removeUtilElements()
						}
					}
				}, {
					key: 'updateAttachClasses',
					value: function updateAttachClasses(elementAttach, targetAttach) {
						var _this6 = this;
						elementAttach = elementAttach || this.attachment;
						targetAttach = targetAttach || this.targetAttachment;
						var sides = ['left', 'top', 'bottom', 'right', 'middle', 'center'];
						if (typeof this._addAttachClasses !== 'undefined' && this._addAttachClasses.length) {
							this._addAttachClasses.splice(0, this._addAttachClasses.length)
						}
						if (typeof this._addAttachClasses === 'undefined') {
							this._addAttachClasses = []
						}
						var add = this._addAttachClasses;
						if (elementAttach.top) {
							add.push(this.getClass('element-attached') + '-' + elementAttach.top)
						}
						if (elementAttach.left) {
							add.push(this.getClass('element-attached') + '-' + elementAttach.left)
						}
						if (targetAttach.top) {
							add.push(this.getClass('target-attached') + '-' + targetAttach.top)
						}
						if (targetAttach.left) {
							add.push(this.getClass('target-attached') + '-' + targetAttach.left)
						}
						var all = [];
						sides.forEach(function(side) {
							all.push(_this6.getClass('element-attached') + '-' + side);
							all.push(_this6.getClass('target-attached') + '-' + side)
						});
						defer(function() {
							if (!(typeof _this6._addAttachClasses !== 'undefined')) {
								return
							}
							updateClasses(_this6.element, _this6._addAttachClasses, all);
							if (!(_this6.options.addTargetClasses === !1)) {
								updateClasses(_this6.target, _this6._addAttachClasses, all)
							}
							delete _this6._addAttachClasses
						})
					}
				}, {
					key: 'position',
					value: function position() {
						var _this7 = this;
						var flushChanges = arguments.length <= 0 || arguments[0] === undefined ? !0 : arguments[0];
						if (!this.enabled) {
							return
						}
						this.clearCache();
						var targetAttachment = autoToFixedAttachment(this.targetAttachment, this.attachment);
						this.updateAttachClasses(this.attachment, targetAttachment);
						var elementPos = this.cache('element-bounds', function() {
							return getBounds(_this7.element)
						});
						var width = elementPos.width;
						var height = elementPos.height;
						if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {
							var _lastSize = this.lastSize;
							width = _lastSize.width;
							height = _lastSize.height
						} else {
							this.lastSize = {
								width: width,
								height: height
							}
						}
						var targetPos = this.cache('target-bounds', function() {
							return _this7.getTargetBounds()
						});
						var targetSize = targetPos;
						var offset = offsetToPx(attachmentToOffset(this.attachment), {
							width: width,
							height: height
						});
						var targetOffset = offsetToPx(attachmentToOffset(targetAttachment), targetSize);
						var manualOffset = offsetToPx(this.offset, {
							width: width,
							height: height
						});
						var manualTargetOffset = offsetToPx(this.targetOffset, targetSize);
						offset = addOffset(offset, manualOffset);
						targetOffset = addOffset(targetOffset, manualTargetOffset);
						var left = targetPos.left + targetOffset.left - offset.left;
						var top = targetPos.top + targetOffset.top - offset.top;
						for (var i = 0; i < TetherBase.modules.length; ++i) {
							var _module2 = TetherBase.modules[i];
							var ret = _module2.position.call(this, {
								left: left,
								top: top,
								targetAttachment: targetAttachment,
								targetPos: targetPos,
								elementPos: elementPos,
								offset: offset,
								targetOffset: targetOffset,
								manualOffset: manualOffset,
								manualTargetOffset: manualTargetOffset,
								scrollbarSize: scrollbarSize,
								attachment: this.attachment
							});
							if (ret === !1) {
								return !1
							} else if (typeof ret === 'undefined' || typeof ret !== 'object') {
								continue
							} else {
								top = ret.top;
								left = ret.left
							}
						}
						var next = {
							page: {
								top: top,
								left: left
							},
							viewport: {
								top: top - pageYOffset,
								bottom: pageYOffset - top - height + innerHeight,
								left: left - pageXOffset,
								right: pageXOffset - left - width + innerWidth
							}
						};
						var doc = this.target.ownerDocument;
						var win = doc.defaultView;
						var scrollbarSize = undefined;
						if (win.innerHeight > doc.documentElement.clientHeight) {
							scrollbarSize = this.cache('scrollbar-size', getScrollBarSize);
							next.viewport.bottom -= scrollbarSize.height
						}
						if (win.innerWidth > doc.documentElement.clientWidth) {
							scrollbarSize = this.cache('scrollbar-size', getScrollBarSize);
							next.viewport.right -= scrollbarSize.width
						}
						if (['', 'static'].indexOf(doc.body.style.position) === -1 || ['', 'static'].indexOf(doc.body.parentElement.style.position) === -1) {
							next.page.bottom = doc.body.scrollHeight - top - height;
							next.page.right = doc.body.scrollWidth - left - width
						}
						if (typeof this.options.optimizations !== 'undefined' && this.options.optimizations.moveElement !== !1 && !(typeof this.targetModifier !== 'undefined')) {
							(function() {
								var offsetParent = _this7.cache('target-offsetparent', function() {
									return getOffsetParent(_this7.target)
								});
								var offsetPosition = _this7.cache('target-offsetparent-bounds', function() {
									return getBounds(offsetParent)
								});
								var offsetParentStyle = getComputedStyle(offsetParent);
								var offsetParentSize = offsetPosition;
								var offsetBorder = {};
								['Top', 'Left', 'Bottom', 'Right'].forEach(function(side) {
									offsetBorder[side.toLowerCase()] = parseFloat(offsetParentStyle['border' + side + 'Width'])
								});
								offsetPosition.right = doc.body.scrollWidth - offsetPosition.left - offsetParentSize.width + offsetBorder.right;
								offsetPosition.bottom = doc.body.scrollHeight - offsetPosition.top - offsetParentSize.height + offsetBorder.bottom;
								if (next.page.top >= offsetPosition.top + offsetBorder.top && next.page.bottom >= offsetPosition.bottom) {
									if (next.page.left >= offsetPosition.left + offsetBorder.left && next.page.right >= offsetPosition.right) {
										var scrollTop = offsetParent.scrollTop;
										var scrollLeft = offsetParent.scrollLeft;
										next.offset = {
											top: next.page.top - offsetPosition.top + scrollTop - offsetBorder.top,
											left: next.page.left - offsetPosition.left + scrollLeft - offsetBorder.left
										}
									}
								}
							})()
						}
						this.move(next);
						this.history.unshift(next);
						if (this.history.length > 3) {
							this.history.pop()
						}
						if (flushChanges) {
							flush()
						}
						return !0
					}
				}, {
					key: 'move',
					value: function move(pos) {
						var _this8 = this;
						if (!(typeof this.element.parentNode !== 'undefined')) {
							return
						}
						var same = {};
						for (var type in pos) {
							same[type] = {};
							for (var key in pos[type]) {
								var found = !1;
								for (var i = 0; i < this.history.length; ++i) {
									var point = this.history[i];
									if (typeof point[type] !== 'undefined' && !within(point[type][key], pos[type][key])) {
										found = !0;
										break
									}
								}
								if (!found) {
									same[type][key] = !0
								}
							}
						}
						var css = {
							top: '',
							left: '',
							right: '',
							bottom: ''
						};
						var transcribe = function transcribe(_same, _pos) {
							var hasOptimizations = typeof _this8.options.optimizations !== 'undefined';
							var gpu = hasOptimizations ? _this8.options.optimizations.gpu : null;
							if (gpu !== !1) {
								var yPos = undefined,
									xPos = undefined;
								if (_same.top) {
									css.top = 0;
									yPos = _pos.top
								} else {
									css.bottom = 0;
									yPos = -_pos.bottom
								}
								if (_same.left) {
									css.left = 0;
									xPos = _pos.left
								} else {
									css.right = 0;
									xPos = -_pos.right
								}
								if (window.matchMedia) {
									var retina = window.matchMedia('only screen and (min-resolution: 1.3dppx)').matches || window.matchMedia('only screen and (-webkit-min-device-pixel-ratio: 1.3)').matches;
									if (!retina) {
										xPos = Math.round(xPos);
										yPos = Math.round(yPos)
									}
								}
								css[transformKey] = 'translateX(' + xPos + 'px) translateY(' + yPos + 'px)';
								if (transformKey !== 'msTransform') {
									css[transformKey] += " translateZ(0)"
								}
							} else {
								if (_same.top) {
									css.top = _pos.top + 'px'
								} else {
									css.bottom = _pos.bottom + 'px'
								}
								if (_same.left) {
									css.left = _pos.left + 'px'
								} else {
									css.right = _pos.right + 'px'
								}
							}
						};
						var moved = !1;
						if ((same.page.top || same.page.bottom) && (same.page.left || same.page.right)) {
							css.position = 'absolute';
							transcribe(same.page, pos.page)
						} else if ((same.viewport.top || same.viewport.bottom) && (same.viewport.left || same.viewport.right)) {
							css.position = 'fixed';
							transcribe(same.viewport, pos.viewport)
						} else if (typeof same.offset !== 'undefined' && same.offset.top && same.offset.left) {
							(function() {
								css.position = 'absolute';
								var offsetParent = _this8.cache('target-offsetparent', function() {
									return getOffsetParent(_this8.target)
								});
								if (getOffsetParent(_this8.element) !== offsetParent) {
									defer(function() {
										_this8.element.parentNode.removeChild(_this8.element);
										offsetParent.appendChild(_this8.element)
									})
								}
								transcribe(same.offset, pos.offset);
								moved = !0
							})()
						} else {
							css.position = 'absolute';
							transcribe({
								top: !0,
								left: !0
							}, pos.page)
						}
						if (!moved) {
							if (this.options.bodyElement) {
								this.options.bodyElement.appendChild(this.element)
							} else {
								var offsetParentIsBody = !0;
								var currentNode = this.element.parentNode;
								while (currentNode && currentNode.nodeType === 1 && currentNode.tagName !== 'BODY') {
									if (getComputedStyle(currentNode).position !== 'static') {
										offsetParentIsBody = !1;
										break
									}
									currentNode = currentNode.parentNode
								}
								if (!offsetParentIsBody) {
									this.element.parentNode.removeChild(this.element);
									this.element.ownerDocument.body.appendChild(this.element)
								}
							}
						}
						var writeCSS = {};
						var write = !1;
						for (var key in css) {
							var val = css[key];
							var elVal = this.element.style[key];
							if (elVal !== val) {
								write = !0;
								writeCSS[key] = val
							}
						}
						if (write) {
							defer(function() {
								extend(_this8.element.style, writeCSS);
								_this8.trigger('repositioned')
							})
						}
					}
				}]);
				return TetherClass
			})(Evented);
			TetherClass.modules = [];
			TetherBase.position = position;
			var Tether = extend(TetherClass, TetherBase);
			'use strict';
			var _slicedToArray = (function() {
				function sliceIterator(arr, i) {
					var _arr = [];
					var _n = !0;
					var _d = !1;
					var _e = undefined;
					try {
						for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = !0) {
							_arr.push(_s.value);
							if (i && _arr.length === i) break
						}
					} catch (err) {
						_d = !0;
						_e = err
					} finally {
						try {
							if (!_n && _i['return']) _i['return']()
						} finally {
							if (_d) throw _e
						}
					}
					return _arr
				}
				return function(arr, i) {
					if (Array.isArray(arr)) {
						return arr
					} else if (Symbol.iterator in Object(arr)) {
						return sliceIterator(arr, i)
					} else {
						throw new TypeError('Invalid attempt to destructure non-iterable instance')
					}
				}
			})();
			var _TetherBase$Utils = TetherBase.Utils;
			var getBounds = _TetherBase$Utils.getBounds;
			var extend = _TetherBase$Utils.extend;
			var updateClasses = _TetherBase$Utils.updateClasses;
			var defer = _TetherBase$Utils.defer;
			var BOUNDS_FORMAT = ['left', 'top', 'right', 'bottom'];

			function getBoundingRect(tether, to) {
				if (to === 'scrollParent') {
					to = tether.scrollParents[0]
				} else if (to === 'window') {
					to = [pageXOffset, pageYOffset, innerWidth + pageXOffset, innerHeight + pageYOffset]
				}
				if (to === document) {
					to = to.documentElement
				}
				if (typeof to.nodeType !== 'undefined') {
					(function() {
						var node = to;
						var size = getBounds(to);
						var pos = size;
						var style = getComputedStyle(to);
						to = [pos.left, pos.top, size.width + pos.left, size.height + pos.top];
						if (node.ownerDocument !== document) {
							var win = node.ownerDocument.defaultView;
							to[0] += win.pageXOffset;
							to[1] += win.pageYOffset;
							to[2] += win.pageXOffset;
							to[3] += win.pageYOffset
						}
						BOUNDS_FORMAT.forEach(function(side, i) {
							side = side[0].toUpperCase() + side.substr(1);
							if (side === 'Top' || side === 'Left') {
								to[i] += parseFloat(style['border' + side + 'Width'])
							} else {
								to[i] -= parseFloat(style['border' + side + 'Width'])
							}
						})
					})()
				}
				return to
			}
			TetherBase.modules.push({
				position: function position(_ref) {
					var _this = this;
					var top = _ref.top;
					var left = _ref.left;
					var targetAttachment = _ref.targetAttachment;
					if (!this.options.constraints) {
						return !0
					}
					var _cache = this.cache('element-bounds', function() {
						return getBounds(_this.element)
					});
					var height = _cache.height;
					var width = _cache.width;
					if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {
						var _lastSize = this.lastSize;
						width = _lastSize.width;
						height = _lastSize.height
					}
					var targetSize = this.cache('target-bounds', function() {
						return _this.getTargetBounds()
					});
					var targetHeight = targetSize.height;
					var targetWidth = targetSize.width;
					var allClasses = [this.getClass('pinned'), this.getClass('out-of-bounds')];
					this.options.constraints.forEach(function(constraint) {
						var outOfBoundsClass = constraint.outOfBoundsClass;
						var pinnedClass = constraint.pinnedClass;
						if (outOfBoundsClass) {
							allClasses.push(outOfBoundsClass)
						}
						if (pinnedClass) {
							allClasses.push(pinnedClass)
						}
					});
					allClasses.forEach(function(cls) {
						['left', 'top', 'right', 'bottom'].forEach(function(side) {
							allClasses.push(cls + '-' + side)
						})
					});
					var addClasses = [];
					var tAttachment = extend({}, targetAttachment);
					var eAttachment = extend({}, this.attachment);
					this.options.constraints.forEach(function(constraint) {
						var to = constraint.to;
						var attachment = constraint.attachment;
						var pin = constraint.pin;
						if (typeof attachment === 'undefined') {
							attachment = ''
						}
						var changeAttachX = undefined,
							changeAttachY = undefined;
						if (attachment.indexOf(' ') >= 0) {
							var _attachment$split = attachment.split(' ');
							var _attachment$split2 = _slicedToArray(_attachment$split, 2);
							changeAttachY = _attachment$split2[0];
							changeAttachX = _attachment$split2[1]
						} else {
							changeAttachX = changeAttachY = attachment
						}
						var bounds = getBoundingRect(_this, to);
						if (changeAttachY === 'target' || changeAttachY === 'both') {
							if (top < bounds[1] && tAttachment.top === 'top') {
								top += targetHeight;
								tAttachment.top = 'bottom'
							}
							if (top + height > bounds[3] && tAttachment.top === 'bottom') {
								top -= targetHeight;
								tAttachment.top = 'top'
							}
						}
						if (changeAttachY === 'together') {
							if (tAttachment.top === 'top') {
								if (eAttachment.top === 'bottom' && top < bounds[1]) {
									top += targetHeight;
									tAttachment.top = 'bottom';
									top += height;
									eAttachment.top = 'top'
								} else if (eAttachment.top === 'top' && top + height > bounds[3] && top - (height - targetHeight) >= bounds[1]) {
									top -= height - targetHeight;
									tAttachment.top = 'bottom';
									eAttachment.top = 'bottom'
								}
							}
							if (tAttachment.top === 'bottom') {
								if (eAttachment.top === 'top' && top + height > bounds[3]) {
									top -= targetHeight;
									tAttachment.top = 'top';
									top -= height;
									eAttachment.top = 'bottom'
								} else if (eAttachment.top === 'bottom' && top < bounds[1] && top + (height * 2 - targetHeight) <= bounds[3]) {
									top += height - targetHeight;
									tAttachment.top = 'top';
									eAttachment.top = 'top'
								}
							}
							if (tAttachment.top === 'middle') {
								if (top + height > bounds[3] && eAttachment.top === 'top') {
									top -= height;
									eAttachment.top = 'bottom'
								} else if (top < bounds[1] && eAttachment.top === 'bottom') {
									top += height;
									eAttachment.top = 'top'
								}
							}
						}
						if (changeAttachX === 'target' || changeAttachX === 'both') {
							if (left < bounds[0] && tAttachment.left === 'left') {
								left += targetWidth;
								tAttachment.left = 'right'
							}
							if (left + width > bounds[2] && tAttachment.left === 'right') {
								left -= targetWidth;
								tAttachment.left = 'left'
							}
						}
						if (changeAttachX === 'together') {
							if (left < bounds[0] && tAttachment.left === 'left') {
								if (eAttachment.left === 'right') {
									left += targetWidth;
									tAttachment.left = 'right';
									left += width;
									eAttachment.left = 'left'
								} else if (eAttachment.left === 'left') {
									left += targetWidth;
									tAttachment.left = 'right';
									left -= width;
									eAttachment.left = 'right'
								}
							} else if (left + width > bounds[2] && tAttachment.left === 'right') {
								if (eAttachment.left === 'left') {
									left -= targetWidth;
									tAttachment.left = 'left';
									left -= width;
									eAttachment.left = 'right'
								} else if (eAttachment.left === 'right') {
									left -= targetWidth;
									tAttachment.left = 'left';
									left += width;
									eAttachment.left = 'left'
								}
							} else if (tAttachment.left === 'center') {
								if (left + width > bounds[2] && eAttachment.left === 'left') {
									left -= width;
									eAttachment.left = 'right'
								} else if (left < bounds[0] && eAttachment.left === 'right') {
									left += width;
									eAttachment.left = 'left'
								}
							}
						}
						if (changeAttachY === 'element' || changeAttachY === 'both') {
							if (top < bounds[1] && eAttachment.top === 'bottom') {
								top += height;
								eAttachment.top = 'top'
							}
							if (top + height > bounds[3] && eAttachment.top === 'top') {
								top -= height;
								eAttachment.top = 'bottom'
							}
						}
						if (changeAttachX === 'element' || changeAttachX === 'both') {
							if (left < bounds[0]) {
								if (eAttachment.left === 'right') {
									left += width;
									eAttachment.left = 'left'
								} else if (eAttachment.left === 'center') {
									left += width / 2;
									eAttachment.left = 'left'
								}
							}
							if (left + width > bounds[2]) {
								if (eAttachment.left === 'left') {
									left -= width;
									eAttachment.left = 'right'
								} else if (eAttachment.left === 'center') {
									left -= width / 2;
									eAttachment.left = 'right'
								}
							}
						}
						if (typeof pin === 'string') {
							pin = pin.split(',').map(function(p) {
								return p.trim()
							})
						} else if (pin === !0) {
							pin = ['top', 'left', 'right', 'bottom']
						}
						pin = pin || [];
						var pinned = [];
						var oob = [];
						if (top < bounds[1]) {
							if (pin.indexOf('top') >= 0) {
								top = bounds[1];
								pinned.push('top')
							} else {
								oob.push('top')
							}
						}
						if (top + height > bounds[3]) {
							if (pin.indexOf('bottom') >= 0) {
								top = bounds[3] - height;
								pinned.push('bottom')
							} else {
								oob.push('bottom')
							}
						}
						if (left < bounds[0]) {
							if (pin.indexOf('left') >= 0) {
								left = bounds[0];
								pinned.push('left')
							} else {
								oob.push('left')
							}
						}
						if (left + width > bounds[2]) {
							if (pin.indexOf('right') >= 0) {
								left = bounds[2] - width;
								pinned.push('right')
							} else {
								oob.push('right')
							}
						}
						if (pinned.length) {
							(function() {
								var pinnedClass = undefined;
								if (typeof _this.options.pinnedClass !== 'undefined') {
									pinnedClass = _this.options.pinnedClass
								} else {
									pinnedClass = _this.getClass('pinned')
								}
								addClasses.push(pinnedClass);
								pinned.forEach(function(side) {
									addClasses.push(pinnedClass + '-' + side)
								})
							})()
						}
						if (oob.length) {
							(function() {
								var oobClass = undefined;
								if (typeof _this.options.outOfBoundsClass !== 'undefined') {
									oobClass = _this.options.outOfBoundsClass
								} else {
									oobClass = _this.getClass('out-of-bounds')
								}
								addClasses.push(oobClass);
								oob.forEach(function(side) {
									addClasses.push(oobClass + '-' + side)
								})
							})()
						}
						if (pinned.indexOf('left') >= 0 || pinned.indexOf('right') >= 0) {
							eAttachment.left = tAttachment.left = !1
						}
						if (pinned.indexOf('top') >= 0 || pinned.indexOf('bottom') >= 0) {
							eAttachment.top = tAttachment.top = !1
						}
						if (tAttachment.top !== targetAttachment.top || tAttachment.left !== targetAttachment.left || eAttachment.top !== _this.attachment.top || eAttachment.left !== _this.attachment.left) {
							_this.updateAttachClasses(eAttachment, tAttachment);
							_this.trigger('update', {
								attachment: eAttachment,
								targetAttachment: tAttachment
							})
						}
					});
					defer(function() {
						if (!(_this.options.addTargetClasses === !1)) {
							updateClasses(_this.target, addClasses, allClasses)
						}
						updateClasses(_this.element, addClasses, allClasses)
					});
					return {
						top: top,
						left: left
					}
				}
			});
			'use strict';
			var _TetherBase$Utils = TetherBase.Utils;
			var getBounds = _TetherBase$Utils.getBounds;
			var updateClasses = _TetherBase$Utils.updateClasses;
			var defer = _TetherBase$Utils.defer;
			TetherBase.modules.push({
				position: function position(_ref) {
					var _this = this;
					var top = _ref.top;
					var left = _ref.left;
					var _cache = this.cache('element-bounds', function() {
						return getBounds(_this.element)
					});
					var height = _cache.height;
					var width = _cache.width;
					var targetPos = this.getTargetBounds();
					var bottom = top + height;
					var right = left + width;
					var abutted = [];
					if (top <= targetPos.bottom && bottom >= targetPos.top) {
						['left', 'right'].forEach(function(side) {
							var targetPosSide = targetPos[side];
							if (targetPosSide === left || targetPosSide === right) {
								abutted.push(side)
							}
						})
					}
					if (left <= targetPos.right && right >= targetPos.left) {
						['top', 'bottom'].forEach(function(side) {
							var targetPosSide = targetPos[side];
							if (targetPosSide === top || targetPosSide === bottom) {
								abutted.push(side)
							}
						})
					}
					var allClasses = [];
					var addClasses = [];
					var sides = ['left', 'top', 'right', 'bottom'];
					allClasses.push(this.getClass('abutted'));
					sides.forEach(function(side) {
						allClasses.push(_this.getClass('abutted') + '-' + side)
					});
					if (abutted.length) {
						addClasses.push(this.getClass('abutted'))
					}
					abutted.forEach(function(side) {
						addClasses.push(_this.getClass('abutted') + '-' + side)
					});
					defer(function() {
						if (!(_this.options.addTargetClasses === !1)) {
							updateClasses(_this.target, addClasses, allClasses)
						}
						updateClasses(_this.element, addClasses, allClasses)
					});
					return !0
				}
			});
			'use strict';
			var _slicedToArray = (function() {
				function sliceIterator(arr, i) {
					var _arr = [];
					var _n = !0;
					var _d = !1;
					var _e = undefined;
					try {
						for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = !0) {
							_arr.push(_s.value);
							if (i && _arr.length === i) break
						}
					} catch (err) {
						_d = !0;
						_e = err
					} finally {
						try {
							if (!_n && _i['return']) _i['return']()
						} finally {
							if (_d) throw _e
						}
					}
					return _arr
				}
				return function(arr, i) {
					if (Array.isArray(arr)) {
						return arr
					} else if (Symbol.iterator in Object(arr)) {
						return sliceIterator(arr, i)
					} else {
						throw new TypeError('Invalid attempt to destructure non-iterable instance')
					}
				}
			})();
			TetherBase.modules.push({
				position: function position(_ref) {
					var top = _ref.top;
					var left = _ref.left;
					if (!this.options.shift) {
						return
					}
					var shift = this.options.shift;
					if (typeof this.options.shift === 'function') {
						shift = this.options.shift.call(this, {
							top: top,
							left: left
						})
					}
					var shiftTop = undefined,
						shiftLeft = undefined;
					if (typeof shift === 'string') {
						shift = shift.split(' ');
						shift[1] = shift[1] || shift[0];
						var _shift = shift;
						var _shift2 = _slicedToArray(_shift, 2);
						shiftTop = _shift2[0];
						shiftLeft = _shift2[1];
						shiftTop = parseFloat(shiftTop, 10);
						shiftLeft = parseFloat(shiftLeft, 10)
					} else {
						shiftTop = shift.top;
						shiftLeft = shift.left
					}
					top += shiftTop;
					left += shiftLeft;
					return {
						top: top,
						left: left
					}
				}
			});
			return Tether
		}))
	}, function(module, exports) {
		if ("undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery"); + function(a) {
			var b = a.fn.jquery.split(" ")[0].split(".");
			if (b[0] < 2 && b[1] < 9 || 1 == b[0] && 9 == b[1] && b[2] < 1 || b[0] >= 4) throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0")
		}(jQuery), + function() {
			function a(a, b) {
				if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
				return !b || "object" != typeof b && "function" != typeof b ? a : b
			}

			function b(a, b) {
				if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
				a.prototype = Object.create(b && b.prototype, {
					constructor: {
						value: a,
						enumerable: !1,
						writable: !0,
						configurable: !0
					}
				}), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
			}

			function c(a, b) {
				if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
			}
			var d = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(a) {
					return typeof a
				} : function(a) {
					return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
				},
				e = function() {
					function a(a, b) {
						for (var c = 0; c < b.length; c++) {
							var d = b[c];
							d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d)
						}
					}
					return function(b, c, d) {
						return c && a(b.prototype, c), d && a(b, d), b
					}
				}(),
				f = function(a) {
					function b(a) {
						return {}.toString.call(a).match(/\s([a-zA-Z]+)/)[1].toLowerCase()
					}

					function c(a) {
						return (a[0] || a).nodeType
					}

					function d() {
						return {
							bindType: h.end,
							delegateType: h.end,
							handle: function(b) {
								if (a(b.target).is(this)) return b.handleObj.handler.apply(this, arguments)
							}
						}
					}

					function e() {
						if (window.QUnit) return !1;
						var a = document.createElement("bootstrap");
						for (var b in j)
							if (void 0 !== a.style[b]) return {
								end: j[b]
							};
						return !1
					}

					function f(b) {
						var c = this,
							d = !1;
						return a(this).one(k.TRANSITION_END, function() {
							d = !0
						}), setTimeout(function() {
							d || k.triggerTransitionEnd(c)
						}, b), this
					}

					function g() {
						h = e(), a.fn.emulateTransitionEnd = f, k.supportsTransitionEnd() && (a.event.special[k.TRANSITION_END] = d())
					}
					var h = !1,
						i = 1e6,
						j = {
							WebkitTransition: "webkitTransitionEnd",
							MozTransition: "transitionend",
							OTransition: "oTransitionEnd otransitionend",
							transition: "transitionend"
						},
						k = {
							TRANSITION_END: "bsTransitionEnd",
							getUID: function(a) {
								do a += ~~(Math.random() * i); while (document.getElementById(a));
								return a
							},
							getSelectorFromElement: function(a) {
								var b = a.getAttribute("data-target");
								return b || (b = a.getAttribute("href") || "", b = /^#[a-z]/i.test(b) ? b : null), b
							},
							reflow: function(a) {
								new Function("bs", "return bs")(a.offsetHeight)
							},
							triggerTransitionEnd: function(b) {
								a(b).trigger(h.end)
							},
							supportsTransitionEnd: function() {
								return Boolean(h)
							},
							typeCheckConfig: function(a, d, e) {
								for (var f in e)
									if (e.hasOwnProperty(f)) {
										var g = e[f],
											h = d[f],
											i = void 0;
										if (i = h && c(h) ? "element" : b(h), !new RegExp(g).test(i)) throw new Error(a.toUpperCase() + ": " + ('Option "' + f + '" provided type "' + i + '" ') + ('but expected type "' + g + '".'))
									}
							}
						};
					return g(), k
				}(jQuery),
				g = (function(a) {
					var b = "alert",
						d = "4.0.0-alpha.5",
						g = "bs.alert",
						h = "." + g,
						i = ".data-api",
						j = a.fn[b],
						k = 150,
						l = {
							DISMISS: '[data-dismiss="alert"]'
						},
						m = {
							CLOSE: "close" + h,
							CLOSED: "closed" + h,
							CLICK_DATA_API: "click" + h + i
						},
						n = {
							ALERT: "alert",
							FADE: "fade",
							IN: "in"
						},
						o = function() {
							function b(a) {
								c(this, b), this._element = a
							}
							return b.prototype.close = function(a) {
								a = a || this._element;
								var b = this._getRootElement(a),
									c = this._triggerCloseEvent(b);
								c.isDefaultPrevented() || this._removeElement(b)
							}, b.prototype.dispose = function() {
								a.removeData(this._element, g), this._element = null
							}, b.prototype._getRootElement = function(b) {
								var c = f.getSelectorFromElement(b),
									d = !1;
								return c && (d = a(c)[0]), d || (d = a(b).closest("." + n.ALERT)[0]), d
							}, b.prototype._triggerCloseEvent = function(b) {
								var c = a.Event(m.CLOSE);
								return a(b).trigger(c), c
							}, b.prototype._removeElement = function(b) {
								return a(b).removeClass(n.IN), f.supportsTransitionEnd() && a(b).hasClass(n.FADE) ? void a(b).one(f.TRANSITION_END, a.proxy(this._destroyElement, this, b)).emulateTransitionEnd(k) : void this._destroyElement(b)
							}, b.prototype._destroyElement = function(b) {
								a(b).detach().trigger(m.CLOSED).remove()
							}, b._jQueryInterface = function(c) {
								return this.each(function() {
									var d = a(this),
										e = d.data(g);
									e || (e = new b(this), d.data(g, e)), "close" === c && e[c](this)
								})
							}, b._handleDismiss = function(a) {
								return function(b) {
									b && b.preventDefault(), a.close(this)
								}
							}, e(b, null, [{
								key: "VERSION",
								get: function() {
									return d
								}
							}]), b
						}();
					return a(document).on(m.CLICK_DATA_API, l.DISMISS, o._handleDismiss(new o)), a.fn[b] = o._jQueryInterface, a.fn[b].Constructor = o, a.fn[b].noConflict = function() {
						return a.fn[b] = j, o._jQueryInterface
					}, o
				}(jQuery), function(a) {
					var b = "button",
						d = "4.0.0-alpha.5",
						f = "bs.button",
						g = "." + f,
						h = ".data-api",
						i = a.fn[b],
						j = {
							ACTIVE: "active",
							BUTTON: "btn",
							FOCUS: "focus"
						},
						k = {
							DATA_TOGGLE_CARROT: '[data-toggle^="button"]',
							DATA_TOGGLE: '[data-toggle="buttons"]',
							INPUT: "input",
							ACTIVE: ".active",
							BUTTON: ".btn"
						},
						l = {
							CLICK_DATA_API: "click" + g + h,
							FOCUS_BLUR_DATA_API: "focus" + g + h + " " + ("blur" + g + h)
						},
						m = function() {
							function b(a) {
								c(this, b), this._element = a
							}
							return b.prototype.toggle = function() {
								var b = !0,
									c = a(this._element).closest(k.DATA_TOGGLE)[0];
								if (c) {
									var d = a(this._element).find(k.INPUT)[0];
									if (d) {
										if ("radio" === d.type)
											if (d.checked && a(this._element).hasClass(j.ACTIVE)) b = !1;
											else {
												var e = a(c).find(k.ACTIVE)[0];
												e && a(e).removeClass(j.ACTIVE)
											}
										b && (d.checked = !a(this._element).hasClass(j.ACTIVE), a(this._element).trigger("change")), d.focus()
									}
								} else this._element.setAttribute("aria-pressed", !a(this._element).hasClass(j.ACTIVE));
								b && a(this._element).toggleClass(j.ACTIVE)
							}, b.prototype.dispose = function() {
								a.removeData(this._element, f), this._element = null
							}, b._jQueryInterface = function(c) {
								return this.each(function() {
									var d = a(this).data(f);
									d || (d = new b(this), a(this).data(f, d)), "toggle" === c && d[c]()
								})
							}, e(b, null, [{
								key: "VERSION",
								get: function() {
									return d
								}
							}]), b
						}();
					return a(document).on(l.CLICK_DATA_API, k.DATA_TOGGLE_CARROT, function(b) {
						b.preventDefault();
						var c = b.target;
						a(c).hasClass(j.BUTTON) || (c = a(c).closest(k.BUTTON)), m._jQueryInterface.call(a(c), "toggle")
					}).on(l.FOCUS_BLUR_DATA_API, k.DATA_TOGGLE_CARROT, function(b) {
							var c = a(b.target).closest(k.BUTTON)[0];
							a(c).toggleClass(j.FOCUS, /^focus(in)?$/.test(b.type))
						}), a.fn[b] = m._jQueryInterface, a.fn[b].Constructor = m, a.fn[b].noConflict = function() {
						return a.fn[b] = i, m._jQueryInterface
					}, m
				}(jQuery), function(a) {
					var b = "carousel",
						g = "4.0.0-alpha.5",
						h = "bs.carousel",
						i = "." + h,
						j = ".data-api",
						k = a.fn[b],
						l = 600,
						m = 37,
						n = 39,
						o = {
							interval: 5e3,
							keyboard: !0,
							slide: !1,
							pause: "hover",
							wrap: !0
						},
						p = {
							interval: "(number|boolean)",
							keyboard: "boolean",
							slide: "(boolean|string)",
							pause: "(string|boolean)",
							wrap: "boolean"
						},
						q = {
							NEXT: "next",
							PREVIOUS: "prev"
						},
						r = {
							SLIDE: "slide" + i,
							SLID: "slid" + i,
							KEYDOWN: "keydown" + i,
							MOUSEENTER: "mouseenter" + i,
							MOUSELEAVE: "mouseleave" + i,
							LOAD_DATA_API: "load" + i + j,
							CLICK_DATA_API: "click" + i + j
						},
						s = {
							CAROUSEL: "carousel",
							ACTIVE: "active",
							SLIDE: "slide",
							RIGHT: "right",
							LEFT: "left",
							ITEM: "carousel-item"
						},
						t = {
							ACTIVE: ".active",
							ACTIVE_ITEM: ".active.carousel-item",
							ITEM: ".carousel-item",
							NEXT_PREV: ".next, .prev",
							INDICATORS: ".carousel-indicators",
							DATA_SLIDE: "[data-slide], [data-slide-to]",
							DATA_RIDE: '[data-ride="carousel"]'
						},
						u = function() {
							function j(b, d) {
								c(this, j), this._items = null, this._interval = null, this._activeElement = null, this._isPaused = !1, this._isSliding = !1, this._config = this._getConfig(d), this._element = a(b)[0], this._indicatorsElement = a(this._element).find(t.INDICATORS)[0], this._addEventListeners()
							}
							return j.prototype.next = function() {
								this._isSliding || this._slide(q.NEXT)
							}, j.prototype.nextWhenVisible = function() {
								document.hidden || this.next()
							}, j.prototype.prev = function() {
								this._isSliding || this._slide(q.PREVIOUS)
							}, j.prototype.pause = function(b) {
								b || (this._isPaused = !0), a(this._element).find(t.NEXT_PREV)[0] && f.supportsTransitionEnd() && (f.triggerTransitionEnd(this._element), this.cycle(!0)), clearInterval(this._interval), this._interval = null
							}, j.prototype.cycle = function(b) {
								b || (this._isPaused = !1), this._interval && (clearInterval(this._interval), this._interval = null), this._config.interval && !this._isPaused && (this._interval = setInterval(a.proxy(document.visibilityState ? this.nextWhenVisible : this.next, this), this._config.interval))
							}, j.prototype.to = function(b) {
								var c = this;
								this._activeElement = a(this._element).find(t.ACTIVE_ITEM)[0];
								var d = this._getItemIndex(this._activeElement);
								if (!(b > this._items.length - 1 || b < 0)) {
									if (this._isSliding) return void a(this._element).one(r.SLID, function() {
										return c.to(b)
									});
									if (d === b) return this.pause(), void this.cycle();
									var e = b > d ? q.NEXT : q.PREVIOUS;
									this._slide(e, this._items[b])
								}
							}, j.prototype.dispose = function() {
								a(this._element).off(i), a.removeData(this._element, h), this._items = null, this._config = null, this._element = null, this._interval = null, this._isPaused = null, this._isSliding = null, this._activeElement = null, this._indicatorsElement = null
							}, j.prototype._getConfig = function(c) {
								return c = a.extend({}, o, c), f.typeCheckConfig(b, c, p), c
							}, j.prototype._addEventListeners = function() {
								this._config.keyboard && a(this._element).on(r.KEYDOWN, a.proxy(this._keydown, this)), "hover" !== this._config.pause || "ontouchstart" in document.documentElement || a(this._element).on(r.MOUSEENTER, a.proxy(this.pause, this)).on(r.MOUSELEAVE, a.proxy(this.cycle, this))
							}, j.prototype._keydown = function(a) {
								if (a.preventDefault(), !/input|textarea/i.test(a.target.tagName)) switch (a.which) {
									case m:
										this.prev();
										break;
									case n:
										this.next();
										break;
									default:
										return
								}
							}, j.prototype._getItemIndex = function(b) {
								return this._items = a.makeArray(a(b).parent().find(t.ITEM)), this._items.indexOf(b)
							}, j.prototype._getItemByDirection = function(a, b) {
								var c = a === q.NEXT,
									d = a === q.PREVIOUS,
									e = this._getItemIndex(b),
									f = this._items.length - 1,
									g = d && 0 === e || c && e === f;
								if (g && !this._config.wrap) return b;
								var h = a === q.PREVIOUS ? -1 : 1,
									i = (e + h) % this._items.length;
								return i === -1 ? this._items[this._items.length - 1] : this._items[i]
							}, j.prototype._triggerSlideEvent = function(b, c) {
								var d = a.Event(r.SLIDE, {
									relatedTarget: b,
									direction: c
								});
								return a(this._element).trigger(d), d
							}, j.prototype._setActiveIndicatorElement = function(b) {
								if (this._indicatorsElement) {
									a(this._indicatorsElement).find(t.ACTIVE).removeClass(s.ACTIVE);
									var c = this._indicatorsElement.children[this._getItemIndex(b)];
									c && a(c).addClass(s.ACTIVE)
								}
							}, j.prototype._slide = function(b, c) {
								var d = this,
									e = a(this._element).find(t.ACTIVE_ITEM)[0],
									g = c || e && this._getItemByDirection(b, e),
									h = Boolean(this._interval),
									i = b === q.NEXT ? s.LEFT : s.RIGHT;
								if (g && a(g).hasClass(s.ACTIVE)) return void(this._isSliding = !1);
								var j = this._triggerSlideEvent(g, i);
								if (!j.isDefaultPrevented() && e && g) {
									this._isSliding = !0, h && this.pause(), this._setActiveIndicatorElement(g);
									var k = a.Event(r.SLID, {
										relatedTarget: g,
										direction: i
									});
									f.supportsTransitionEnd() && a(this._element).hasClass(s.SLIDE) ? (a(g).addClass(b), f.reflow(g), a(e).addClass(i), a(g).addClass(i), a(e).one(f.TRANSITION_END, function() {
										a(g).removeClass(i).removeClass(b), a(g).addClass(s.ACTIVE), a(e).removeClass(s.ACTIVE).removeClass(b).removeClass(i), d._isSliding = !1, setTimeout(function() {
											return a(d._element).trigger(k)
										}, 0)
									}).emulateTransitionEnd(l)) : (a(e).removeClass(s.ACTIVE), a(g).addClass(s.ACTIVE), this._isSliding = !1, a(this._element).trigger(k)), h && this.cycle()
								}
							}, j._jQueryInterface = function(b) {
								return this.each(function() {
									var c = a(this).data(h),
										e = a.extend({}, o, a(this).data());
									"object" === ("undefined" == typeof b ? "undefined" : d(b)) && a.extend(e, b);
									var f = "string" == typeof b ? b : e.slide;
									if (c || (c = new j(this, e), a(this).data(h, c)), "number" == typeof b) c.to(b);
									else if ("string" == typeof f) {
										if (void 0 === c[f]) throw new Error('No method named "' + f + '"');
										c[f]()
									} else e.interval && (c.pause(), c.cycle())
								})
							}, j._dataApiClickHandler = function(b) {
								var c = f.getSelectorFromElement(this);
								if (c) {
									var d = a(c)[0];
									if (d && a(d).hasClass(s.CAROUSEL)) {
										var e = a.extend({}, a(d).data(), a(this).data()),
											g = this.getAttribute("data-slide-to");
										g && (e.interval = !1), j._jQueryInterface.call(a(d), e), g && a(d).data(h).to(g), b.preventDefault()
									}
								}
							}, e(j, null, [{
								key: "VERSION",
								get: function() {
									return g
								}
							}, {
								key: "Default",
								get: function() {
									return o
								}
							}]), j
						}();
					return a(document).on(r.CLICK_DATA_API, t.DATA_SLIDE, u._dataApiClickHandler), a(window).on(r.LOAD_DATA_API, function() {
						a(t.DATA_RIDE).each(function() {
							var b = a(this);
							u._jQueryInterface.call(b, b.data())
						})
					}), a.fn[b] = u._jQueryInterface, a.fn[b].Constructor = u, a.fn[b].noConflict = function() {
						return a.fn[b] = k, u._jQueryInterface
					}, u
				}(jQuery), function(a) {
					var b = "collapse",
						g = "4.0.0-alpha.5",
						h = "bs.collapse",
						i = "." + h,
						j = ".data-api",
						k = a.fn[b],
						l = 600,
						m = {
							toggle: !0,
							parent: ""
						},
						n = {
							toggle: "boolean",
							parent: "string"
						},
						o = {
							SHOW: "show" + i,
							SHOWN: "shown" + i,
							HIDE: "hide" + i,
							HIDDEN: "hidden" + i,
							CLICK_DATA_API: "click" + i + j
						},
						p = {
							IN: "in",
							COLLAPSE: "collapse",
							COLLAPSING: "collapsing",
							COLLAPSED: "collapsed"
						},
						q = {
							WIDTH: "width",
							HEIGHT: "height"
						},
						r = {
							ACTIVES: ".card > .in, .card > .collapsing",
							DATA_TOGGLE: '[data-toggle="collapse"]'
						},
						s = function() {
							function i(b, d) {
								c(this, i), this._isTransitioning = !1, this._element = b, this._config = this._getConfig(d), this._triggerArray = a.makeArray(a('[data-toggle="collapse"][href="#' + b.id + '"],' + ('[data-toggle="collapse"][data-target="#' + b.id + '"]'))), this._parent = this._config.parent ? this._getParent() : null, this._config.parent || this._addAriaAndCollapsedClass(this._element, this._triggerArray), this._config.toggle && this.toggle()
							}
							return i.prototype.toggle = function() {
								a(this._element).hasClass(p.IN) ? this.hide() : this.show()
							}, i.prototype.show = function() {
								var b = this;
								if (!this._isTransitioning && !a(this._element).hasClass(p.IN)) {
									var c = void 0,
										d = void 0;
									if (this._parent && (c = a.makeArray(a(r.ACTIVES)), c.length || (c = null)), !(c && (d = a(c).data(h), d && d._isTransitioning))) {
										var e = a.Event(o.SHOW);
										if (a(this._element).trigger(e), !e.isDefaultPrevented()) {
											c && (i._jQueryInterface.call(a(c), "hide"), d || a(c).data(h, null));
											var g = this._getDimension();
											a(this._element).removeClass(p.COLLAPSE).addClass(p.COLLAPSING), this._element.style[g] = 0, this._element.setAttribute("aria-expanded", !0), this._triggerArray.length && a(this._triggerArray).removeClass(p.COLLAPSED).attr("aria-expanded", !0), this.setTransitioning(!0);
											var j = function() {
												a(b._element).removeClass(p.COLLAPSING).addClass(p.COLLAPSE).addClass(p.IN), b._element.style[g] = "", b.setTransitioning(!1), a(b._element).trigger(o.SHOWN)
											};
											if (!f.supportsTransitionEnd()) return void j();
											var k = g[0].toUpperCase() + g.slice(1),
												m = "scroll" + k;
											a(this._element).one(f.TRANSITION_END, j).emulateTransitionEnd(l), this._element.style[g] = this._element[m] + "px"
										}
									}
								}
							}, i.prototype.hide = function() {
								var b = this;
								if (!this._isTransitioning && a(this._element).hasClass(p.IN)) {
									var c = a.Event(o.HIDE);
									if (a(this._element).trigger(c), !c.isDefaultPrevented()) {
										var d = this._getDimension(),
											e = d === q.WIDTH ? "offsetWidth" : "offsetHeight";
										this._element.style[d] = this._element[e] + "px", f.reflow(this._element), a(this._element).addClass(p.COLLAPSING).removeClass(p.COLLAPSE).removeClass(p.IN), this._element.setAttribute("aria-expanded", !1), this._triggerArray.length && a(this._triggerArray).addClass(p.COLLAPSED).attr("aria-expanded", !1), this.setTransitioning(!0);
										var g = function() {
											b.setTransitioning(!1), a(b._element).removeClass(p.COLLAPSING).addClass(p.COLLAPSE).trigger(o.HIDDEN)
										};
										return this._element.style[d] = "", f.supportsTransitionEnd() ? void a(this._element).one(f.TRANSITION_END, g).emulateTransitionEnd(l) : void g()
									}
								}
							}, i.prototype.setTransitioning = function(a) {
								this._isTransitioning = a
							}, i.prototype.dispose = function() {
								a.removeData(this._element, h), this._config = null, this._parent = null, this._element = null, this._triggerArray = null, this._isTransitioning = null
							}, i.prototype._getConfig = function(c) {
								return c = a.extend({}, m, c), c.toggle = Boolean(c.toggle), f.typeCheckConfig(b, c, n), c
							}, i.prototype._getDimension = function() {
								var b = a(this._element).hasClass(q.WIDTH);
								return b ? q.WIDTH : q.HEIGHT
							}, i.prototype._getParent = function() {
								var b = this,
									c = a(this._config.parent)[0],
									d = '[data-toggle="collapse"][data-parent="' + this._config.parent + '"]';
								return a(c).find(d).each(function(a, c) {
									b._addAriaAndCollapsedClass(i._getTargetFromElement(c), [c])
								}), c
							}, i.prototype._addAriaAndCollapsedClass = function(b, c) {
								if (b) {
									var d = a(b).hasClass(p.IN);
									b.setAttribute("aria-expanded", d), c.length && a(c).toggleClass(p.COLLAPSED, !d).attr("aria-expanded", d)
								}
							}, i._getTargetFromElement = function(b) {
								var c = f.getSelectorFromElement(b);
								return c ? a(c)[0] : null
							}, i._jQueryInterface = function(b) {
								return this.each(function() {
									var c = a(this),
										e = c.data(h),
										f = a.extend({}, m, c.data(), "object" === ("undefined" == typeof b ? "undefined" : d(b)) && b);
									if (!e && f.toggle && /show|hide/.test(b) && (f.toggle = !1), e || (e = new i(this, f), c.data(h, e)), "string" == typeof b) {
										if (void 0 === e[b]) throw new Error('No method named "' + b + '"');
										e[b]()
									}
								})
							}, e(i, null, [{
								key: "VERSION",
								get: function() {
									return g
								}
							}, {
								key: "Default",
								get: function() {
									return m
								}
							}]), i
						}();
					return a(document).on(o.CLICK_DATA_API, r.DATA_TOGGLE, function(b) {
						b.preventDefault();
						var c = s._getTargetFromElement(this),
							d = a(c).data(h),
							e = d ? "toggle" : a(this).data();
						s._jQueryInterface.call(a(c), e)
					}), a.fn[b] = s._jQueryInterface, a.fn[b].Constructor = s, a.fn[b].noConflict = function() {
						return a.fn[b] = k, s._jQueryInterface
					}, s
				}(jQuery), function(a) {
					var b = "dropdown",
						d = "4.0.0-alpha.5",
						g = "bs.dropdown",
						h = "." + g,
						i = ".data-api",
						j = a.fn[b],
						k = 27,
						l = 38,
						m = 40,
						n = 3,
						o = {
							HIDE: "hide" + h,
							HIDDEN: "hidden" + h,
							SHOW: "show" + h,
							SHOWN: "shown" + h,
							CLICK: "click" + h,
							CLICK_DATA_API: "click" + h + i,
							KEYDOWN_DATA_API: "keydown" + h + i
						},
						p = {
							BACKDROP: "dropdown-backdrop",
							DISABLED: "disabled",
							OPEN: "open"
						},
						q = {
							BACKDROP: ".dropdown-backdrop",
							DATA_TOGGLE: '[data-toggle="dropdown"]',
							FORM_CHILD: ".dropdown form",
							ROLE_MENU: '[role="menu"]',
							ROLE_LISTBOX: '[role="listbox"]',
							NAVBAR_NAV: ".navbar-nav",
							VISIBLE_ITEMS: '[role="menu"] li:not(.disabled) a, [role="listbox"] li:not(.disabled) a'
						},
						r = function() {
							function b(a) {
								c(this, b), this._element = a, this._addEventListeners()
							}
							return b.prototype.toggle = function() {
								if (this.disabled || a(this).hasClass(p.DISABLED)) return !1;
								var c = b._getParentFromElement(this),
									d = a(c).hasClass(p.OPEN);
								if (b._clearMenus(), d) return !1;
								if ("ontouchstart" in document.documentElement && !a(c).closest(q.NAVBAR_NAV).length) {
									var e = document.createElement("div");
									e.className = p.BACKDROP, a(e).insertBefore(this), a(e).on("click", b._clearMenus)
								}
								var f = {
										relatedTarget: this
									},
									g = a.Event(o.SHOW, f);
								return a(c).trigger(g), !g.isDefaultPrevented() && (this.focus(), this.setAttribute("aria-expanded", "true"), a(c).toggleClass(p.OPEN), a(c).trigger(a.Event(o.SHOWN, f)), !1)
							}, b.prototype.dispose = function() {
								a.removeData(this._element, g), a(this._element).off(h), this._element = null
							}, b.prototype._addEventListeners = function() {
								a(this._element).on(o.CLICK, this.toggle)
							}, b._jQueryInterface = function(c) {
								return this.each(function() {
									var d = a(this).data(g);
									if (d || a(this).data(g, d = new b(this)), "string" == typeof c) {
										if (void 0 === d[c]) throw new Error('No method named "' + c + '"');
										d[c].call(this)
									}
								})
							}, b._clearMenus = function(c) {
								if (!c || c.which !== n) {
									var d = a(q.BACKDROP)[0];
									d && d.parentNode.removeChild(d);
									for (var e = a.makeArray(a(q.DATA_TOGGLE)), f = 0; f < e.length; f++) {
										var g = b._getParentFromElement(e[f]),
											h = {
												relatedTarget: e[f]
											};
										if (a(g).hasClass(p.OPEN) && !(c && "click" === c.type && /input|textarea/i.test(c.target.tagName) && a.contains(g, c.target))) {
											var i = a.Event(o.HIDE, h);
											a(g).trigger(i), i.isDefaultPrevented() || (e[f].setAttribute("aria-expanded", "false"), a(g).removeClass(p.OPEN).trigger(a.Event(o.HIDDEN, h)))
										}
									}
								}
							}, b._getParentFromElement = function(b) {
								var c = void 0,
									d = f.getSelectorFromElement(b);
								return d && (c = a(d)[0]), c || b.parentNode
							}, b._dataApiKeydownHandler = function(c) {
								if (/(38|40|27|32)/.test(c.which) && !/input|textarea/i.test(c.target.tagName) && (c.preventDefault(), c.stopPropagation(), !this.disabled && !a(this).hasClass(p.DISABLED))) {
									var d = b._getParentFromElement(this),
										e = a(d).hasClass(p.OPEN);
									if (!e && c.which !== k || e && c.which === k) {
										if (c.which === k) {
											var f = a(d).find(q.DATA_TOGGLE)[0];
											a(f).trigger("focus")
										}
										return void a(this).trigger("click")
									}
									var g = a.makeArray(a(q.VISIBLE_ITEMS));
									if (g = g.filter(function(a) {
										return a.offsetWidth || a.offsetHeight
									}), g.length) {
										var h = g.indexOf(c.target);
										c.which === l && h > 0 && h--, c.which === m && h < g.length - 1 && h++, h < 0 && (h = 0), g[h].focus()
									}
								}
							}, e(b, null, [{
								key: "VERSION",
								get: function() {
									return d
								}
							}]), b
						}();
					return a(document).on(o.KEYDOWN_DATA_API, q.DATA_TOGGLE, r._dataApiKeydownHandler).on(o.KEYDOWN_DATA_API, q.ROLE_MENU, r._dataApiKeydownHandler).on(o.KEYDOWN_DATA_API, q.ROLE_LISTBOX, r._dataApiKeydownHandler).on(o.CLICK_DATA_API, r._clearMenus).on(o.CLICK_DATA_API, q.DATA_TOGGLE, r.prototype.toggle).on(o.CLICK_DATA_API, q.FORM_CHILD, function(a) {
						a.stopPropagation()
					}), a.fn[b] = r._jQueryInterface, a.fn[b].Constructor = r, a.fn[b].noConflict = function() {
						return a.fn[b] = j, r._jQueryInterface
					}, r
				}(jQuery), function(a) {
					var b = "modal",
						g = "4.0.0-alpha.5",
						h = "bs.modal",
						i = "." + h,
						j = ".data-api",
						k = a.fn[b],
						l = 300,
						m = 150,
						n = 27,
						o = {
							backdrop: !0,
							keyboard: !0,
							focus: !0,
							show: !0
						},
						p = {
							backdrop: "(boolean|string)",
							keyboard: "boolean",
							focus: "boolean",
							show: "boolean"
						},
						q = {
							HIDE: "hide" + i,
							HIDDEN: "hidden" + i,
							SHOW: "show" + i,
							SHOWN: "shown" + i,
							FOCUSIN: "focusin" + i,
							RESIZE: "resize" + i,
							CLICK_DISMISS: "click.dismiss" + i,
							KEYDOWN_DISMISS: "keydown.dismiss" + i,
							MOUSEUP_DISMISS: "mouseup.dismiss" + i,
							MOUSEDOWN_DISMISS: "mousedown.dismiss" + i,
							CLICK_DATA_API: "click" + i + j
						},
						r = {
							SCROLLBAR_MEASURER: "modal-scrollbar-measure",
							BACKDROP: "modal-backdrop",
							OPEN: "modal-open",
							FADE: "fade",
							IN: "in"
						},
						s = {
							DIALOG: ".modal-dialog",
							DATA_TOGGLE: '[data-toggle="modal"]',
							DATA_DISMISS: '[data-dismiss="modal"]',
							FIXED_CONTENT: ".navbar-fixed-top, .navbar-fixed-bottom, .is-fixed"
						},
						t = function() {
							function j(b, d) {
								c(this, j), this._config = this._getConfig(d), this._element = b, this._dialog = a(b).find(s.DIALOG)[0], this._backdrop = null, this._isShown = !1, this._isBodyOverflowing = !1, this._ignoreBackdropClick = !1, this._originalBodyPadding = 0, this._scrollbarWidth = 0
							}
							return j.prototype.toggle = function(a) {
								return this._isShown ? this.hide() : this.show(a)
							}, j.prototype.show = function(b) {
								var c = this,
									d = a.Event(q.SHOW, {
										relatedTarget: b
									});
								a(this._element).trigger(d), this._isShown || d.isDefaultPrevented() || (this._isShown = !0, this._checkScrollbar(), this._setScrollbar(), a(document.body).addClass(r.OPEN), this._setEscapeEvent(), this._setResizeEvent(), a(this._element).on(q.CLICK_DISMISS, s.DATA_DISMISS, a.proxy(this.hide, this)), a(this._dialog).on(q.MOUSEDOWN_DISMISS, function() {
									a(c._element).one(q.MOUSEUP_DISMISS, function(b) {
										a(b.target).is(c._element) && (c._ignoreBackdropClick = !0)
									})
								}), this._showBackdrop(a.proxy(this._showElement, this, b)))
							}, j.prototype.hide = function(b) {
								b && b.preventDefault();
								var c = a.Event(q.HIDE);
								a(this._element).trigger(c), this._isShown && !c.isDefaultPrevented() && (this._isShown = !1, this._setEscapeEvent(), this._setResizeEvent(), a(document).off(q.FOCUSIN), a(this._element).removeClass(r.IN), a(this._element).off(q.CLICK_DISMISS), a(this._dialog).off(q.MOUSEDOWN_DISMISS), f.supportsTransitionEnd() && a(this._element).hasClass(r.FADE) ? a(this._element).one(f.TRANSITION_END, a.proxy(this._hideModal, this)).emulateTransitionEnd(l) : this._hideModal())
							}, j.prototype.dispose = function() {
								a.removeData(this._element, h), a(window).off(i), a(document).off(i), a(this._element).off(i), a(this._backdrop).off(i), this._config = null, this._element = null, this._dialog = null, this._backdrop = null, this._isShown = null, this._isBodyOverflowing = null, this._ignoreBackdropClick = null, this._originalBodyPadding = null, this._scrollbarWidth = null
							}, j.prototype._getConfig = function(c) {
								return c = a.extend({}, o, c), f.typeCheckConfig(b, c, p), c
							}, j.prototype._showElement = function(b) {
								var c = this,
									d = f.supportsTransitionEnd() && a(this._element).hasClass(r.FADE);
								this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE || document.body.appendChild(this._element), this._element.style.display = "block", this._element.removeAttribute("aria-hidden"), this._element.scrollTop = 0, d && f.reflow(this._element), a(this._element).addClass(r.IN), this._config.focus && this._enforceFocus();
								var e = a.Event(q.SHOWN, {
										relatedTarget: b
									}),
									g = function() {
										c._config.focus && c._element.focus(), a(c._element).trigger(e)
									};
								d ? a(this._dialog).one(f.TRANSITION_END, g).emulateTransitionEnd(l) : g()
							}, j.prototype._enforceFocus = function() {
								var b = this;
								a(document).off(q.FOCUSIN).on(q.FOCUSIN, function(c) {
									document === c.target || b._element === c.target || a(b._element).has(c.target).length || b._element.focus()
								})
							}, j.prototype._setEscapeEvent = function() {
								var b = this;
								this._isShown && this._config.keyboard ? a(this._element).on(q.KEYDOWN_DISMISS, function(a) {
									a.which === n && b.hide()
								}) : this._isShown || a(this._element).off(q.KEYDOWN_DISMISS)
							}, j.prototype._setResizeEvent = function() {
								this._isShown ? a(window).on(q.RESIZE, a.proxy(this._handleUpdate, this)) : a(window).off(q.RESIZE)
							}, j.prototype._hideModal = function() {
								var b = this;
								this._element.style.display = "none", this._element.setAttribute("aria-hidden", "true"), this._showBackdrop(function() {
									a(document.body).removeClass(r.OPEN), b._resetAdjustments(), b._resetScrollbar(), a(b._element).trigger(q.HIDDEN)
								})
							}, j.prototype._removeBackdrop = function() {
								this._backdrop && (a(this._backdrop).remove(), this._backdrop = null)
							}, j.prototype._showBackdrop = function(b) {
								var c = this,
									d = a(this._element).hasClass(r.FADE) ? r.FADE : "";
								if (this._isShown && this._config.backdrop) {
									var e = f.supportsTransitionEnd() && d;
									if (this._backdrop = document.createElement("div"), this._backdrop.className = r.BACKDROP, d && a(this._backdrop).addClass(d), a(this._backdrop).appendTo(document.body), a(this._element).on(q.CLICK_DISMISS, function(a) {
										return c._ignoreBackdropClick ? void(c._ignoreBackdropClick = !1) : void(a.target === a.currentTarget && ("static" === c._config.backdrop ? c._element.focus() : c.hide()))
									}), e && f.reflow(this._backdrop), a(this._backdrop).addClass(r.IN), !b) return;
									if (!e) return void b();
									a(this._backdrop).one(f.TRANSITION_END, b).emulateTransitionEnd(m)
								} else if (!this._isShown && this._backdrop) {
									a(this._backdrop).removeClass(r.IN);
									var g = function() {
										c._removeBackdrop(), b && b()
									};
									f.supportsTransitionEnd() && a(this._element).hasClass(r.FADE) ? a(this._backdrop).one(f.TRANSITION_END, g).emulateTransitionEnd(m) : g()
								} else b && b()
							}, j.prototype._handleUpdate = function() {
								this._adjustDialog()
							}, j.prototype._adjustDialog = function() {
								var a = this._element.scrollHeight > document.documentElement.clientHeight;
								!this._isBodyOverflowing && a && (this._element.style.paddingLeft = this._scrollbarWidth + "px"), this._isBodyOverflowing && !a && (this._element.style.paddingRight = this._scrollbarWidth + "px")
							}, j.prototype._resetAdjustments = function() {
								this._element.style.paddingLeft = "", this._element.style.paddingRight = ""
							}, j.prototype._checkScrollbar = function() {
								this._isBodyOverflowing = document.body.clientWidth < window.innerWidth, this._scrollbarWidth = this._getScrollbarWidth()
							}, j.prototype._setScrollbar = function() {
								var b = parseInt(a(s.FIXED_CONTENT).css("padding-right") || 0, 10);
								this._originalBodyPadding = document.body.style.paddingRight || "", this._isBodyOverflowing && (document.body.style.paddingRight = b + this._scrollbarWidth + "px")
							}, j.prototype._resetScrollbar = function() {
								document.body.style.paddingRight = this._originalBodyPadding
							}, j.prototype._getScrollbarWidth = function() {
								var a = document.createElement("div");
								a.className = r.SCROLLBAR_MEASURER, document.body.appendChild(a);
								var b = a.offsetWidth - a.clientWidth;
								return document.body.removeChild(a), b
							}, j._jQueryInterface = function(b, c) {
								return this.each(function() {
									var e = a(this).data(h),
										f = a.extend({}, j.Default, a(this).data(), "object" === ("undefined" == typeof b ? "undefined" : d(b)) && b);
									if (e || (e = new j(this, f), a(this).data(h, e)), "string" == typeof b) {
										if (void 0 === e[b]) throw new Error('No method named "' + b + '"');
										e[b](c)
									} else f.show && e.show(c)
								})
							}, e(j, null, [{
								key: "VERSION",
								get: function() {
									return g
								}
							}, {
								key: "Default",
								get: function() {
									return o
								}
							}]), j
						}();
					return a(document).on(q.CLICK_DATA_API, s.DATA_TOGGLE, function(b) {
						var c = this,
							d = void 0,
							e = f.getSelectorFromElement(this);
						e && (d = a(e)[0]);
						var g = a(d).data(h) ? "toggle" : a.extend({}, a(d).data(), a(this).data());
						"A" === this.tagName && b.preventDefault();
						var i = a(d).one(q.SHOW, function(b) {
							b.isDefaultPrevented() || i.one(q.HIDDEN, function() {
								a(c).is(":visible") && c.focus()
							})
						});
						t._jQueryInterface.call(a(d), g, this)
					}), a.fn[b] = t._jQueryInterface, a.fn[b].Constructor = t, a.fn[b].noConflict = function() {
						return a.fn[b] = k, t._jQueryInterface
					}, t
				}(jQuery), function(a) {
					var b = "scrollspy",
						g = "4.0.0-alpha.5",
						h = "bs.scrollspy",
						i = "." + h,
						j = ".data-api",
						k = a.fn[b],
						l = {
							offset: 10,
							method: "auto",
							target: ""
						},
						m = {
							offset: "number",
							method: "string",
							target: "(string|element)"
						},
						n = {
							ACTIVATE: "activate" + i,
							SCROLL: "scroll" + i,
							LOAD_DATA_API: "load" + i + j
						},
						o = {
							DROPDOWN_ITEM: "dropdown-item",
							DROPDOWN_MENU: "dropdown-menu",
							NAV_LINK: "nav-link",
							NAV: "nav",
							ACTIVE: "active"
						},
						p = {
							DATA_SPY: '[data-spy="scroll"]',
							ACTIVE: ".active",
							LIST_ITEM: ".list-item",
							LI: "li",
							LI_DROPDOWN: "li.dropdown",
							NAV_LINKS: ".nav-link",
							DROPDOWN: ".dropdown",
							DROPDOWN_ITEMS: ".dropdown-item",
							DROPDOWN_TOGGLE: ".dropdown-toggle"
						},
						q = {
							OFFSET: "offset",
							POSITION: "position"
						},
						r = function() {
							function j(b, d) {
								c(this, j), this._element = b, this._scrollElement = "BODY" === b.tagName ? window : b, this._config = this._getConfig(d), this._selector = this._config.target + " " + p.NAV_LINKS + "," + (this._config.target + " " + p.DROPDOWN_ITEMS), this._offsets = [], this._targets = [], this._activeTarget = null, this._scrollHeight = 0, a(this._scrollElement).on(n.SCROLL, a.proxy(this._process, this)), this.refresh(), this._process()
							}
							return j.prototype.refresh = function() {
								var b = this,
									c = this._scrollElement !== this._scrollElement.window ? q.POSITION : q.OFFSET,
									d = "auto" === this._config.method ? c : this._config.method,
									e = d === q.POSITION ? this._getScrollTop() : 0;
								this._offsets = [], this._targets = [], this._scrollHeight = this._getScrollHeight();
								var g = a.makeArray(a(this._selector));
								g.map(function(b) {
									var c = void 0,
										g = f.getSelectorFromElement(b);
									return g && (c = a(g)[0]), c && (c.offsetWidth || c.offsetHeight) ? [a(c)[d]().top + e, g] : null
								}).filter(function(a) {
										return a
									}).sort(function(a, b) {
										return a[0] - b[0]
									}).forEach(function(a) {
										b._offsets.push(a[0]), b._targets.push(a[1])
									})
							}, j.prototype.dispose = function() {
								a.removeData(this._element, h), a(this._scrollElement).off(i), this._element = null, this._scrollElement = null, this._config = null, this._selector = null, this._offsets = null, this._targets = null, this._activeTarget = null, this._scrollHeight = null
							}, j.prototype._getConfig = function(c) {
								if (c = a.extend({}, l, c), "string" != typeof c.target) {
									var d = a(c.target).attr("id");
									d || (d = f.getUID(b), a(c.target).attr("id", d)), c.target = "#" + d
								}
								return f.typeCheckConfig(b, c, m), c
							}, j.prototype._getScrollTop = function() {
								return this._scrollElement === window ? this._scrollElement.scrollY : this._scrollElement.scrollTop
							}, j.prototype._getScrollHeight = function() {
								return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight)
							}, j.prototype._process = function() {
								var a = this._getScrollTop() + this._config.offset,
									b = this._getScrollHeight(),
									c = this._config.offset + b - this._scrollElement.offsetHeight;
								if (this._scrollHeight !== b && this.refresh(), a >= c) {
									var d = this._targets[this._targets.length - 1];
									this._activeTarget !== d && this._activate(d)
								}
								if (this._activeTarget && a < this._offsets[0]) return this._activeTarget = null, void this._clear();
								for (var e = this._offsets.length; e--;) {
									var f = this._activeTarget !== this._targets[e] && a >= this._offsets[e] && (void 0 === this._offsets[e + 1] || a < this._offsets[e + 1]);
									f && this._activate(this._targets[e])
								}
							}, j.prototype._activate = function(b) {
								this._activeTarget = b, this._clear();
								var c = this._selector.split(",");
								c = c.map(function(a) {
									return a + '[data-target="' + b + '"],' + (a + '[href="' + b + '"]')
								});
								var d = a(c.join(","));
								d.hasClass(o.DROPDOWN_ITEM) ? (d.closest(p.DROPDOWN).find(p.DROPDOWN_TOGGLE).addClass(o.ACTIVE), d.addClass(o.ACTIVE)) : d.parents(p.LI).find(p.NAV_LINKS).addClass(o.ACTIVE), a(this._scrollElement).trigger(n.ACTIVATE, {
									relatedTarget: b
								})
							}, j.prototype._clear = function() {
								a(this._selector).filter(p.ACTIVE).removeClass(o.ACTIVE)
							}, j._jQueryInterface = function(b) {
								return this.each(function() {
									var c = a(this).data(h),
										e = "object" === ("undefined" == typeof b ? "undefined" : d(b)) && b || null;
									if (c || (c = new j(this, e), a(this).data(h, c)), "string" == typeof b) {
										if (void 0 === c[b]) throw new Error('No method named "' + b + '"');
										c[b]()
									}
								})
							}, e(j, null, [{
								key: "VERSION",
								get: function() {
									return g
								}
							}, {
								key: "Default",
								get: function() {
									return l
								}
							}]), j
						}();
					return a(window).on(n.LOAD_DATA_API, function() {
						for (var b = a.makeArray(a(p.DATA_SPY)), c = b.length; c--;) {
							var d = a(b[c]);
							r._jQueryInterface.call(d, d.data())
						}
					}), a.fn[b] = r._jQueryInterface, a.fn[b].Constructor = r, a.fn[b].noConflict = function() {
						return a.fn[b] = k, r._jQueryInterface
					}, r
				}(jQuery), function(a) {
					var b = "tab",
						d = "4.0.0-alpha.5",
						g = "bs.tab",
						h = "." + g,
						i = ".data-api",
						j = a.fn[b],
						k = 150,
						l = {
							HIDE: "hide" + h,
							HIDDEN: "hidden" + h,
							SHOW: "show" + h,
							SHOWN: "shown" + h,
							CLICK_DATA_API: "click" + h + i
						},
						m = {
							DROPDOWN_MENU: "dropdown-menu",
							ACTIVE: "active",
							FADE: "fade",
							IN: "in"
						},
						n = {
							A: "a",
							LI: "li",
							DROPDOWN: ".dropdown",
							UL: "ul:not(.dropdown-menu)",
							FADE_CHILD: "> .nav-item .fade, > .fade",
							ACTIVE: ".active",
							ACTIVE_CHILD: "> .nav-item > .active, > .active",
							DATA_TOGGLE: '[data-toggle="tab"], [data-toggle="pill"]',
							DROPDOWN_TOGGLE: ".dropdown-toggle",
							DROPDOWN_ACTIVE_CHILD: "> .dropdown-menu .active"
						},
						o = function() {
							function b(a) {
								c(this, b), this._element = a
							}
							return b.prototype.show = function() {
								var b = this;
								if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE || !a(this._element).hasClass(m.ACTIVE)) {
									var c = void 0,
										d = void 0,
										e = a(this._element).closest(n.UL)[0],
										g = f.getSelectorFromElement(this._element);
									e && (d = a.makeArray(a(e).find(n.ACTIVE)), d = d[d.length - 1]);
									var h = a.Event(l.HIDE, {
											relatedTarget: this._element
										}),
										i = a.Event(l.SHOW, {
											relatedTarget: d
										});
									if (d && a(d).trigger(h), a(this._element).trigger(i), !i.isDefaultPrevented() && !h.isDefaultPrevented()) {
										g && (c = a(g)[0]), this._activate(this._element, e);
										var j = function() {
											var c = a.Event(l.HIDDEN, {
													relatedTarget: b._element
												}),
												e = a.Event(l.SHOWN, {
													relatedTarget: d
												});
											a(d).trigger(c), a(b._element).trigger(e)
										};
										c ? this._activate(c, c.parentNode, j) : j()
									}
								}
							}, b.prototype.dispose = function() {
								a.removeClass(this._element, g), this._element = null
							}, b.prototype._activate = function(b, c, d) {
								var e = a(c).find(n.ACTIVE_CHILD)[0],
									g = d && f.supportsTransitionEnd() && (e && a(e).hasClass(m.FADE) || Boolean(a(c).find(n.FADE_CHILD)[0])),
									h = a.proxy(this._transitionComplete, this, b, e, g, d);
								e && g ? a(e).one(f.TRANSITION_END, h).emulateTransitionEnd(k) : h(), e && a(e).removeClass(m.IN)
							}, b.prototype._transitionComplete = function(b, c, d, e) {
								if (c) {
									a(c).removeClass(m.ACTIVE);
									var g = a(c).find(n.DROPDOWN_ACTIVE_CHILD)[0];
									g && a(g).removeClass(m.ACTIVE), c.setAttribute("aria-expanded", !1)
								}
								if (a(b).addClass(m.ACTIVE), b.setAttribute("aria-expanded", !0), d ? (f.reflow(b), a(b).addClass(m.IN)) : a(b).removeClass(m.FADE), b.parentNode && a(b.parentNode).hasClass(m.DROPDOWN_MENU)) {
									var h = a(b).closest(n.DROPDOWN)[0];
									h && a(h).find(n.DROPDOWN_TOGGLE).addClass(m.ACTIVE), b.setAttribute("aria-expanded", !0)
								}
								e && e()
							}, b._jQueryInterface = function(c) {
								return this.each(function() {
									var d = a(this),
										e = d.data(g);
									if (e || (e = e = new b(this), d.data(g, e)), "string" == typeof c) {
										if (void 0 === e[c]) throw new Error('No method named "' + c + '"');
										e[c]()
									}
								})
							}, e(b, null, [{
								key: "VERSION",
								get: function() {
									return d
								}
							}]), b
						}();
					return a(document).on(l.CLICK_DATA_API, n.DATA_TOGGLE, function(b) {
						b.preventDefault(), o._jQueryInterface.call(a(this), "show")
					}), a.fn[b] = o._jQueryInterface, a.fn[b].Constructor = o, a.fn[b].noConflict = function() {
						return a.fn[b] = j, o._jQueryInterface
					}, o
				}(jQuery), function(a) {
					if (void 0 === window.Tether) throw new Error("Bootstrap tooltips require Tether (http://tether.io/)");
					var b = "tooltip",
						g = "4.0.0-alpha.5",
						h = "bs.tooltip",
						i = "." + h,
						j = a.fn[b],
						k = 150,
						l = "bs-tether",
						m = {
							animation: !0,
							template: '<div class="tooltip" role="tooltip"><div class="tooltip-inner"></div></div>',
							trigger: "hover focus",
							title: "",
							delay: 0,
							html: !1,
							selector: !1,
							placement: "top",
							offset: "0 0",
							constraints: []
						},
						n = {
							animation: "boolean",
							template: "string",
							title: "(string|element|function)",
							trigger: "string",
							delay: "(number|object)",
							html: "boolean",
							selector: "(string|boolean)",
							placement: "(string|function)",
							offset: "string",
							constraints: "array"
						},
						o = {
							TOP: "bottom center",
							RIGHT: "middle left",
							BOTTOM: "top center",
							LEFT: "middle right"
						},
						p = {
							IN: "in",
							OUT: "out"
						},
						q = {
							HIDE: "hide" + i,
							HIDDEN: "hidden" + i,
							SHOW: "show" + i,
							SHOWN: "shown" + i,
							INSERTED: "inserted" + i,
							CLICK: "click" + i,
							FOCUSIN: "focusin" + i,
							FOCUSOUT: "focusout" + i,
							MOUSEENTER: "mouseenter" + i,
							MOUSELEAVE: "mouseleave" + i
						},
						r = {
							FADE: "fade",
							IN: "in"
						},
						s = {
							TOOLTIP: ".tooltip",
							TOOLTIP_INNER: ".tooltip-inner"
						},
						t = {
							element: !1,
							enabled: !1
						},
						u = {
							HOVER: "hover",
							FOCUS: "focus",
							CLICK: "click",
							MANUAL: "manual"
						},
						v = function() {
							function j(a, b) {
								c(this, j), this._isEnabled = !0, this._timeout = 0, this._hoverState = "", this._activeTrigger = {}, this._tether = null, this.element = a, this.config = this._getConfig(b), this.tip = null, this._setListeners()
							}
							return j.prototype.enable = function() {
								this._isEnabled = !0
							}, j.prototype.disable = function() {
								this._isEnabled = !1
							}, j.prototype.toggleEnabled = function() {
								this._isEnabled = !this._isEnabled
							}, j.prototype.toggle = function(b) {
								if (b) {
									var c = this.constructor.DATA_KEY,
										d = a(b.currentTarget).data(c);
									d || (d = new this.constructor(b.currentTarget, this._getDelegateConfig()), a(b.currentTarget).data(c, d)), d._activeTrigger.click = !d._activeTrigger.click, d._isWithActiveTrigger() ? d._enter(null, d) : d._leave(null, d)
								} else {
									if (a(this.getTipElement()).hasClass(r.IN)) return void this._leave(null, this);
									this._enter(null, this)
								}
							}, j.prototype.dispose = function() {
								clearTimeout(this._timeout), this.cleanupTether(), a.removeData(this.element, this.constructor.DATA_KEY), a(this.element).off(this.constructor.EVENT_KEY), this.tip && a(this.tip).remove(), this._isEnabled = null, this._timeout = null, this._hoverState = null, this._activeTrigger = null, this._tether = null, this.element = null, this.config = null, this.tip = null
							}, j.prototype.show = function() {
								var b = this,
									c = a.Event(this.constructor.Event.SHOW);
								if (this.isWithContent() && this._isEnabled) {
									a(this.element).trigger(c);
									var d = a.contains(this.element.ownerDocument.documentElement, this.element);
									if (c.isDefaultPrevented() || !d) return;
									var e = this.getTipElement(),
										g = f.getUID(this.constructor.NAME);
									e.setAttribute("id", g), this.element.setAttribute("aria-describedby", g), this.setContent(), this.config.animation && a(e).addClass(r.FADE);
									var h = "function" == typeof this.config.placement ? this.config.placement.call(this, e, this.element) : this.config.placement,
										i = this._getAttachment(h);
									a(e).data(this.constructor.DATA_KEY, this).appendTo(document.body), a(this.element).trigger(this.constructor.Event.INSERTED), this._tether = new Tether({
										attachment: i,
										element: e,
										target: this.element,
										classes: t,
										classPrefix: l,
										offset: this.config.offset,
										constraints: this.config.constraints,
										addTargetClasses: !1
									}), f.reflow(e), this._tether.position(), a(e).addClass(r.IN);
									var k = function() {
										var c = b._hoverState;
										b._hoverState = null, a(b.element).trigger(b.constructor.Event.SHOWN), c === p.OUT && b._leave(null, b)
									};
									if (f.supportsTransitionEnd() && a(this.tip).hasClass(r.FADE)) return void a(this.tip).one(f.TRANSITION_END, k).emulateTransitionEnd(j._TRANSITION_DURATION);
									k()
								}
							}, j.prototype.hide = function(b) {
								var c = this,
									d = this.getTipElement(),
									e = a.Event(this.constructor.Event.HIDE),
									g = function() {
										c._hoverState !== p.IN && d.parentNode && d.parentNode.removeChild(d), c.element.removeAttribute("aria-describedby"), a(c.element).trigger(c.constructor.Event.HIDDEN), c.cleanupTether(), b && b()
									};
								a(this.element).trigger(e), e.isDefaultPrevented() || (a(d).removeClass(r.IN), f.supportsTransitionEnd() && a(this.tip).hasClass(r.FADE) ? a(d).one(f.TRANSITION_END, g).emulateTransitionEnd(k) : g(), this._hoverState = "")
							}, j.prototype.isWithContent = function() {
								return Boolean(this.getTitle())
							}, j.prototype.getTipElement = function() {
								return this.tip = this.tip || a(this.config.template)[0]
							}, j.prototype.setContent = function() {
								var b = a(this.getTipElement());
								this.setElementContent(b.find(s.TOOLTIP_INNER), this.getTitle()), b.removeClass(r.FADE).removeClass(r.IN), this.cleanupTether()
							}, j.prototype.setElementContent = function(b, c) {
								var e = this.config.html;
								"object" === ("undefined" == typeof c ? "undefined" : d(c)) && (c.nodeType || c.jquery) ? e ? a(c).parent().is(b) || b.empty().append(c) : b.text(a(c).text()): b[e ? "html" : "text"](c)
							}, j.prototype.getTitle = function() {
								var a = this.element.getAttribute("data-original-title");
								return a || (a = "function" == typeof this.config.title ? this.config.title.call(this.element) : this.config.title), a
							}, j.prototype.cleanupTether = function() {
								this._tether && this._tether.destroy()
							}, j.prototype._getAttachment = function(a) {
								return o[a.toUpperCase()]
							}, j.prototype._setListeners = function() {
								var b = this,
									c = this.config.trigger.split(" ");
								c.forEach(function(c) {
									if ("click" === c) a(b.element).on(b.constructor.Event.CLICK, b.config.selector, a.proxy(b.toggle, b));
									else if (c !== u.MANUAL) {
										var d = c === u.HOVER ? b.constructor.Event.MOUSEENTER : b.constructor.Event.FOCUSIN,
											e = c === u.HOVER ? b.constructor.Event.MOUSELEAVE : b.constructor.Event.FOCUSOUT;
										a(b.element).on(d, b.config.selector, a.proxy(b._enter, b)).on(e, b.config.selector, a.proxy(b._leave, b))
									}
								}), this.config.selector ? this.config = a.extend({}, this.config, {
									trigger: "manual",
									selector: ""
								}) : this._fixTitle()
							}, j.prototype._fixTitle = function() {
								var a = d(this.element.getAttribute("data-original-title"));
								(this.element.getAttribute("title") || "string" !== a) && (this.element.setAttribute("data-original-title", this.element.getAttribute("title") || ""), this.element.setAttribute("title", ""))
							}, j.prototype._enter = function(b, c) {
								var d = this.constructor.DATA_KEY;
								return c = c || a(b.currentTarget).data(d), c || (c = new this.constructor(b.currentTarget, this._getDelegateConfig()), a(b.currentTarget).data(d, c)), b && (c._activeTrigger["focusin" === b.type ? u.FOCUS : u.HOVER] = !0), a(c.getTipElement()).hasClass(r.IN) || c._hoverState === p.IN ? void(c._hoverState = p.IN) : (clearTimeout(c._timeout), c._hoverState = p.IN, c.config.delay && c.config.delay.show ? void(c._timeout = setTimeout(function() {
									c._hoverState === p.IN && c.show()
								}, c.config.delay.show)) : void c.show())
							}, j.prototype._leave = function(b, c) {
								var d = this.constructor.DATA_KEY;
								if (c = c || a(b.currentTarget).data(d), c || (c = new this.constructor(b.currentTarget, this._getDelegateConfig()), a(b.currentTarget).data(d, c)), b && (c._activeTrigger["focusout" === b.type ? u.FOCUS : u.HOVER] = !1), !c._isWithActiveTrigger()) return clearTimeout(c._timeout), c._hoverState = p.OUT, c.config.delay && c.config.delay.hide ? void(c._timeout = setTimeout(function() {
									c._hoverState === p.OUT && c.hide()
								}, c.config.delay.hide)) : void c.hide()
							}, j.prototype._isWithActiveTrigger = function() {
								for (var a in this._activeTrigger)
									if (this._activeTrigger[a]) return !0;
								return !1
							}, j.prototype._getConfig = function(c) {
								return c = a.extend({}, this.constructor.Default, a(this.element).data(), c), c.delay && "number" == typeof c.delay && (c.delay = {
									show: c.delay,
									hide: c.delay
								}), f.typeCheckConfig(b, c, this.constructor.DefaultType), c
							}, j.prototype._getDelegateConfig = function() {
								var a = {};
								if (this.config)
									for (var b in this.config) this.constructor.Default[b] !== this.config[b] && (a[b] = this.config[b]);
								return a
							}, j._jQueryInterface = function(b) {
								return this.each(function() {
									var c = a(this).data(h),
										e = "object" === ("undefined" == typeof b ? "undefined" : d(b)) ? b : null;
									if ((c || !/dispose|hide/.test(b)) && (c || (c = new j(this, e), a(this).data(h, c)), "string" == typeof b)) {
										if (void 0 === c[b]) throw new Error('No method named "' + b + '"');
										c[b]()
									}
								})
							}, e(j, null, [{
								key: "VERSION",
								get: function() {
									return g
								}
							}, {
								key: "Default",
								get: function() {
									return m
								}
							}, {
								key: "NAME",
								get: function() {
									return b
								}
							}, {
								key: "DATA_KEY",
								get: function() {
									return h
								}
							}, {
								key: "Event",
								get: function() {
									return q
								}
							}, {
								key: "EVENT_KEY",
								get: function() {
									return i
								}
							}, {
								key: "DefaultType",
								get: function() {
									return n
								}
							}]), j
						}();
					return a.fn[b] = v._jQueryInterface, a.fn[b].Constructor = v, a.fn[b].noConflict = function() {
						return a.fn[b] = j, v._jQueryInterface
					}, v
				}(jQuery));
			(function(f) {
				var h = "popover",
					i = "4.0.0-alpha.5",
					j = "bs.popover",
					k = "." + j,
					l = f.fn[h],
					m = f.extend({}, g.Default, {
						placement: "right",
						trigger: "click",
						content: "",
						template: '<div class="popover" role="tooltip"><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
					}),
					n = f.extend({}, g.DefaultType, {
						content: "(string|element|function)"
					}),
					o = {
						FADE: "fade",
						IN: "in"
					},
					p = {
						TITLE: ".popover-title",
						CONTENT: ".popover-content"
					},
					q = {
						HIDE: "hide" + k,
						HIDDEN: "hidden" + k,
						SHOW: "show" + k,
						SHOWN: "shown" + k,
						INSERTED: "inserted" + k,
						CLICK: "click" + k,
						FOCUSIN: "focusin" + k,
						FOCUSOUT: "focusout" + k,
						MOUSEENTER: "mouseenter" + k,
						MOUSELEAVE: "mouseleave" + k
					},
					r = function(g) {
						function l() {
							return c(this, l), a(this, g.apply(this, arguments))
						}
						return b(l, g), l.prototype.isWithContent = function() {
							return this.getTitle() || this._getContent()
						}, l.prototype.getTipElement = function() {
							return this.tip = this.tip || f(this.config.template)[0]
						}, l.prototype.setContent = function() {
							var a = f(this.getTipElement());
							this.setElementContent(a.find(p.TITLE), this.getTitle()), this.setElementContent(a.find(p.CONTENT), this._getContent()), a.removeClass(o.FADE).removeClass(o.IN), this.cleanupTether()
						}, l.prototype._getContent = function() {
							return this.element.getAttribute("data-content") || ("function" == typeof this.config.content ? this.config.content.call(this.element) : this.config.content)
						}, l._jQueryInterface = function(a) {
							return this.each(function() {
								var b = f(this).data(j),
									c = "object" === ("undefined" == typeof a ? "undefined" : d(a)) ? a : null;
								if ((b || !/destroy|hide/.test(a)) && (b || (b = new l(this, c), f(this).data(j, b)), "string" == typeof a)) {
									if (void 0 === b[a]) throw new Error('No method named "' + a + '"');
									b[a]()
								}
							})
						}, e(l, null, [{
							key: "VERSION",
							get: function() {
								return i
							}
						}, {
							key: "Default",
							get: function() {
								return m
							}
						}, {
							key: "NAME",
							get: function() {
								return h
							}
						}, {
							key: "DATA_KEY",
							get: function() {
								return j
							}
						}, {
							key: "Event",
							get: function() {
								return q
							}
						}, {
							key: "EVENT_KEY",
							get: function() {
								return k
							}
						}, {
							key: "DefaultType",
							get: function() {
								return n
							}
						}]), l
					}(g);
				return f.fn[h] = r._jQueryInterface, f.fn[h].Constructor = r, f.fn[h].noConflict = function() {
					return f.fn[h] = l, r._jQueryInterface
				}, r
			})(jQuery)
		}()
	}, function(module, exports, __webpack_require__) {
		var require;
		var require;
		! function(e) {
			if (!0) module.exports = e();
			else if ("function" == typeof define && define.amd) define([], e);
			else {
				var t;
				t = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this, t.flexibility = e()
			}
		}(function() {
			return function e(t, r, l) {
				function n(o, i) {
					if (!r[o]) {
						if (!t[o]) {
							var s = "function" == typeof require && require;
							if (!i && s) return require(o, !0);
							if (f) return f(o, !0);
							var a = new Error("Cannot find module '" + o + "'");
							throw a.code = "MODULE_NOT_FOUND", a
						}
						var c = r[o] = {
							exports: {}
						};
						t[o][0].call(c.exports, function(e) {
							var r = t[o][1][e];
							return n(r ? r : e)
						}, c, c.exports, e, t, r, l)
					}
					return r[o].exports
				}
				for (var f = "function" == typeof require && require, o = 0; o < l.length; o++) n(l[o]);
				return n
			}({
				1: [function(e, t, r) {
					t.exports = function(e) {
						var t, r, l, n = -1;
						if (e.lines.length > 1 && "flex-start" === e.style.alignContent)
							for (t = 0; l = e.lines[++n];) l.crossStart = t, t += l.cross;
						else if (e.lines.length > 1 && "flex-end" === e.style.alignContent)
							for (t = e.flexStyle.crossSpace; l = e.lines[++n];) l.crossStart = t, t += l.cross;
						else if (e.lines.length > 1 && "center" === e.style.alignContent)
							for (t = e.flexStyle.crossSpace / 2; l = e.lines[++n];) l.crossStart = t, t += l.cross;
						else if (e.lines.length > 1 && "space-between" === e.style.alignContent)
							for (r = e.flexStyle.crossSpace / (e.lines.length - 1), t = 0; l = e.lines[++n];) l.crossStart = t, t += l.cross + r;
						else if (e.lines.length > 1 && "space-around" === e.style.alignContent)
							for (r = 2 * e.flexStyle.crossSpace / (2 * e.lines.length), t = r / 2; l = e.lines[++n];) l.crossStart = t, t += l.cross + r;
						else
							for (r = e.flexStyle.crossSpace / e.lines.length, t = e.flexStyle.crossInnerBefore; l = e.lines[++n];) l.crossStart = t, l.cross += r, t += l.cross
					}
				}, {}],
				2: [function(e, t, r) {
					t.exports = function(e) {
						for (var t, r = -1; line = e.lines[++r];)
							for (t = -1; child = line.children[++t];) {
								var l = child.style.alignSelf;
								"auto" === l && (l = e.style.alignItems), "flex-start" === l ? child.flexStyle.crossStart = line.crossStart : "flex-end" === l ? child.flexStyle.crossStart = line.crossStart + line.cross - child.flexStyle.crossOuter : "center" === l ? child.flexStyle.crossStart = line.crossStart + (line.cross - child.flexStyle.crossOuter) / 2 : (child.flexStyle.crossStart = line.crossStart, child.flexStyle.crossOuter = line.cross, child.flexStyle.cross = child.flexStyle.crossOuter - child.flexStyle.crossBefore - child.flexStyle.crossAfter)
							}
					}
				}, {}],
				3: [function(e, t, r) {
					t.exports = function l(e, l) {
						var t = "row" === l || "row-reverse" === l,
							r = e.mainAxis;
						if (r) {
							var n = t && "inline" === r || !t && "block" === r;
							n || (e.flexStyle = {
								main: e.flexStyle.cross,
								cross: e.flexStyle.main,
								mainOffset: e.flexStyle.crossOffset,
								crossOffset: e.flexStyle.mainOffset,
								mainBefore: e.flexStyle.crossBefore,
								mainAfter: e.flexStyle.crossAfter,
								crossBefore: e.flexStyle.mainBefore,
								crossAfter: e.flexStyle.mainAfter,
								mainInnerBefore: e.flexStyle.crossInnerBefore,
								mainInnerAfter: e.flexStyle.crossInnerAfter,
								crossInnerBefore: e.flexStyle.mainInnerBefore,
								crossInnerAfter: e.flexStyle.mainInnerAfter,
								mainBorderBefore: e.flexStyle.crossBorderBefore,
								mainBorderAfter: e.flexStyle.crossBorderAfter,
								crossBorderBefore: e.flexStyle.mainBorderBefore,
								crossBorderAfter: e.flexStyle.mainBorderAfter
							})
						} else t ? e.flexStyle = {
							main: e.style.width,
							cross: e.style.height,
							mainOffset: e.style.offsetWidth,
							crossOffset: e.style.offsetHeight,
							mainBefore: e.style.marginLeft,
							mainAfter: e.style.marginRight,
							crossBefore: e.style.marginTop,
							crossAfter: e.style.marginBottom,
							mainInnerBefore: e.style.paddingLeft,
							mainInnerAfter: e.style.paddingRight,
							crossInnerBefore: e.style.paddingTop,
							crossInnerAfter: e.style.paddingBottom,
							mainBorderBefore: e.style.borderLeftWidth,
							mainBorderAfter: e.style.borderRightWidth,
							crossBorderBefore: e.style.borderTopWidth,
							crossBorderAfter: e.style.borderBottomWidth
						} : e.flexStyle = {
							main: e.style.height,
							cross: e.style.width,
							mainOffset: e.style.offsetHeight,
							crossOffset: e.style.offsetWidth,
							mainBefore: e.style.marginTop,
							mainAfter: e.style.marginBottom,
							crossBefore: e.style.marginLeft,
							crossAfter: e.style.marginRight,
							mainInnerBefore: e.style.paddingTop,
							mainInnerAfter: e.style.paddingBottom,
							crossInnerBefore: e.style.paddingLeft,
							crossInnerAfter: e.style.paddingRight,
							mainBorderBefore: e.style.borderTopWidth,
							mainBorderAfter: e.style.borderBottomWidth,
							crossBorderBefore: e.style.borderLeftWidth,
							crossBorderAfter: e.style.borderRightWidth
						}, "content-box" === e.style.boxSizing && ("number" == typeof e.flexStyle.main && (e.flexStyle.main += e.flexStyle.mainInnerBefore + e.flexStyle.mainInnerAfter + e.flexStyle.mainBorderBefore + e.flexStyle.mainBorderAfter), "number" == typeof e.flexStyle.cross && (e.flexStyle.cross += e.flexStyle.crossInnerBefore + e.flexStyle.crossInnerAfter + e.flexStyle.crossBorderBefore + e.flexStyle.crossBorderAfter));
						e.mainAxis = t ? "inline" : "block", e.crossAxis = t ? "block" : "inline", "number" == typeof e.style.flexBasis && (e.flexStyle.main = e.style.flexBasis + e.flexStyle.mainInnerBefore + e.flexStyle.mainInnerAfter + e.flexStyle.mainBorderBefore + e.flexStyle.mainBorderAfter), e.flexStyle.mainOuter = e.flexStyle.main, e.flexStyle.crossOuter = e.flexStyle.cross, "auto" === e.flexStyle.mainOuter && (e.flexStyle.mainOuter = e.flexStyle.mainOffset), "auto" === e.flexStyle.crossOuter && (e.flexStyle.crossOuter = e.flexStyle.crossOffset), "number" == typeof e.flexStyle.mainBefore && (e.flexStyle.mainOuter += e.flexStyle.mainBefore), "number" == typeof e.flexStyle.mainAfter && (e.flexStyle.mainOuter += e.flexStyle.mainAfter), "number" == typeof e.flexStyle.crossBefore && (e.flexStyle.crossOuter += e.flexStyle.crossBefore), "number" == typeof e.flexStyle.crossAfter && (e.flexStyle.crossOuter += e.flexStyle.crossAfter)
					}
				}, {}],
				4: [function(e, t, r) {
					var l = e("../reduce");
					t.exports = function(e) {
						if (e.mainSpace > 0) {
							var t = l(e.children, function(e, t) {
								return e + parseFloat(t.style.flexGrow)
							}, 0);
							t > 0 && (e.main = l(e.children, function(r, l) {
								return "auto" === l.flexStyle.main ? l.flexStyle.main = l.flexStyle.mainOffset + parseFloat(l.style.flexGrow) / t * e.mainSpace : l.flexStyle.main += parseFloat(l.style.flexGrow) / t * e.mainSpace, l.flexStyle.mainOuter = l.flexStyle.main + l.flexStyle.mainBefore + l.flexStyle.mainAfter, r + l.flexStyle.mainOuter
							}, 0), e.mainSpace = 0)
						}
					}
				}, {
					"../reduce": 12
				}],
				5: [function(e, t, r) {
					var l = e("../reduce");
					t.exports = function(e) {
						if (e.mainSpace < 0) {
							var t = l(e.children, function(e, t) {
								return e + parseFloat(t.style.flexShrink)
							}, 0);
							t > 0 && (e.main = l(e.children, function(r, l) {
								return l.flexStyle.main += parseFloat(l.style.flexShrink) / t * e.mainSpace, l.flexStyle.mainOuter = l.flexStyle.main + l.flexStyle.mainBefore + l.flexStyle.mainAfter, r + l.flexStyle.mainOuter
							}, 0), e.mainSpace = 0)
						}
					}
				}, {
					"../reduce": 12
				}],
				6: [function(e, t, r) {
					var l = e("../reduce");
					t.exports = function(e) {
						var t;
						e.lines = [t = {
							main: 0,
							cross: 0,
							children: []
						}];
						for (var r, n = -1; r = e.children[++n];) "nowrap" === e.style.flexWrap || 0 === t.children.length || "auto" === e.flexStyle.main || e.flexStyle.main - e.flexStyle.mainInnerBefore - e.flexStyle.mainInnerAfter - e.flexStyle.mainBorderBefore - e.flexStyle.mainBorderAfter >= t.main + r.flexStyle.mainOuter ? (t.main += r.flexStyle.mainOuter, t.cross = Math.max(t.cross, r.flexStyle.crossOuter)) : e.lines.push(t = {
							main: r.flexStyle.mainOuter,
							cross: r.flexStyle.crossOuter,
							children: []
						}), t.children.push(r);
						e.flexStyle.mainLines = l(e.lines, function(e, t) {
							return Math.max(e, t.main)
						}, 0), e.flexStyle.crossLines = l(e.lines, function(e, t) {
							return e + t.cross
						}, 0), "auto" === e.flexStyle.main && (e.flexStyle.main = Math.max(e.flexStyle.mainOffset, e.flexStyle.mainLines + e.flexStyle.mainInnerBefore + e.flexStyle.mainInnerAfter + e.flexStyle.mainBorderBefore + e.flexStyle.mainBorderAfter)), "auto" === e.flexStyle.cross && (e.flexStyle.cross = Math.max(e.flexStyle.crossOffset, e.flexStyle.crossLines + e.flexStyle.crossInnerBefore + e.flexStyle.crossInnerAfter + e.flexStyle.crossBorderBefore + e.flexStyle.crossBorderAfter)), e.flexStyle.crossSpace = e.flexStyle.cross - e.flexStyle.crossInnerBefore - e.flexStyle.crossInnerAfter - e.flexStyle.crossBorderBefore - e.flexStyle.crossBorderAfter - e.flexStyle.crossLines, e.flexStyle.mainOuter = e.flexStyle.main + e.flexStyle.mainBefore + e.flexStyle.mainAfter, e.flexStyle.crossOuter = e.flexStyle.cross + e.flexStyle.crossBefore + e.flexStyle.crossAfter
					}
				}, {
					"../reduce": 12
				}],
				7: [function(e, t, r) {
					function l(t) {
						for (var r, l = -1; r = t.children[++l];) e("./flex-direction")(r, t.style.flexDirection);
						e("./flex-direction")(t, t.style.flexDirection), e("./order")(t), e("./flexbox-lines")(t), e("./align-content")(t), l = -1;
						for (var n; n = t.lines[++l];) n.mainSpace = t.flexStyle.main - t.flexStyle.mainInnerBefore - t.flexStyle.mainInnerAfter - t.flexStyle.mainBorderBefore - t.flexStyle.mainBorderAfter - n.main, e("./flex-grow")(n), e("./flex-shrink")(n), e("./margin-main")(n), e("./margin-cross")(n), e("./justify-content")(n, t.style.justifyContent, t);
						e("./align-items")(t)
					}
					t.exports = l
				}, {
					"./align-content": 1,
					"./align-items": 2,
					"./flex-direction": 3,
					"./flex-grow": 4,
					"./flex-shrink": 5,
					"./flexbox-lines": 6,
					"./justify-content": 8,
					"./margin-cross": 9,
					"./margin-main": 10,
					"./order": 11
				}],
				8: [function(e, t, r) {
					t.exports = function(e, t, r) {
						var l, n, f, o = r.flexStyle.mainInnerBefore,
							i = -1;
						if ("flex-end" === t)
							for (l = e.mainSpace, l += o; f = e.children[++i];) f.flexStyle.mainStart = l, l += f.flexStyle.mainOuter;
						else if ("center" === t)
							for (l = e.mainSpace / 2, l += o; f = e.children[++i];) f.flexStyle.mainStart = l, l += f.flexStyle.mainOuter;
						else if ("space-between" === t)
							for (n = e.mainSpace / (e.children.length - 1), l = 0, l += o; f = e.children[++i];) f.flexStyle.mainStart = l, l += f.flexStyle.mainOuter + n;
						else if ("space-around" === t)
							for (n = 2 * e.mainSpace / (2 * e.children.length), l = n / 2, l += o; f = e.children[++i];) f.flexStyle.mainStart = l, l += f.flexStyle.mainOuter + n;
						else
							for (l = 0, l += o; f = e.children[++i];) f.flexStyle.mainStart = l, l += f.flexStyle.mainOuter
					}
				}, {}],
				9: [function(e, t, r) {
					t.exports = function(e) {
						for (var t, r = -1; t = e.children[++r];) {
							var l = 0;
							"auto" === t.flexStyle.crossBefore && ++l, "auto" === t.flexStyle.crossAfter && ++l;
							var n = e.cross - t.flexStyle.crossOuter;
							"auto" === t.flexStyle.crossBefore && (t.flexStyle.crossBefore = n / l), "auto" === t.flexStyle.crossAfter && (t.flexStyle.crossAfter = n / l), "auto" === t.flexStyle.cross ? t.flexStyle.crossOuter = t.flexStyle.crossOffset + t.flexStyle.crossBefore + t.flexStyle.crossAfter : t.flexStyle.crossOuter = t.flexStyle.cross + t.flexStyle.crossBefore + t.flexStyle.crossAfter
						}
					}
				}, {}],
				10: [function(e, t, r) {
					t.exports = function(e) {
						for (var t, r = 0, l = -1; t = e.children[++l];) "auto" === t.flexStyle.mainBefore && ++r, "auto" === t.flexStyle.mainAfter && ++r;
						if (r > 0) {
							for (l = -1; t = e.children[++l];) "auto" === t.flexStyle.mainBefore && (t.flexStyle.mainBefore = e.mainSpace / r), "auto" === t.flexStyle.mainAfter && (t.flexStyle.mainAfter = e.mainSpace / r), "auto" === t.flexStyle.main ? t.flexStyle.mainOuter = t.flexStyle.mainOffset + t.flexStyle.mainBefore + t.flexStyle.mainAfter : t.flexStyle.mainOuter = t.flexStyle.main + t.flexStyle.mainBefore + t.flexStyle.mainAfter;
							e.mainSpace = 0
						}
					}
				}, {}],
				11: [function(e, t, r) {
					var l = /^(column|row)-reverse$/;
					t.exports = function(e) {
						e.children.sort(function(e, t) {
							return e.style.order - t.style.order || e.index - t.index
						}), l.test(e.style.flexDirection) && e.children.reverse()
					}
				}, {}],
				12: [function(e, t, r) {
					function l(e, t, r) {
						for (var l = e.length, n = -1; ++n < l;) n in e && (r = t(r, e[n], n));
						return r
					}
					t.exports = l
				}, {}],
				13: [function(e, t, r) {
					function l(e) {
						i(o(e))
					}
					var n = e("./read"),
						f = e("./write"),
						o = e("./readAll"),
						i = e("./writeAll");
					t.exports = l, t.exports.read = n, t.exports.write = f, t.exports.readAll = o, t.exports.writeAll = i
				}, {
					"./read": 15,
					"./readAll": 16,
					"./write": 17,
					"./writeAll": 18
				}],
				14: [function(e, t, r) {
					function l(e, t) {
						var r = String(e).match(f);
						if (!r) return e;
						var l = r[1],
							o = r[2];
						return "px" === o ? 1 * l : "cm" === o ? .3937 * l * 96 : "in" === o ? 96 * l : "mm" === o ? .3937 * l * 96 / 10 : "pc" === o ? 12 * l * 96 / 72 : "pt" === o ? 96 * l / 72 : "rem" === o ? 16 * l : n(e, t)
					}

					function n(e, t) {
						o.style.cssText = "border:none!important;clip:rect(0 0 0 0)!important;display:block!important;font-size:1em!important;height:0!important;margin:0!important;padding:0!important;position:relative!important;width:" + e + "!important", t.parentNode.insertBefore(o, t.nextSibling);
						var r = o.offsetWidth;
						return t.parentNode.removeChild(o), r
					}
					t.exports = l;
					var f = /^([-+]?\d*\.?\d+)(%|[a-z]+)$/,
						o = document.createElement("div")
				}, {}],
				15: [function(e, t, r) {
					function l(e) {
						var t = {
								alignContent: "stretch",
								alignItems: "stretch",
								alignSelf: "auto",
								borderBottomWidth: 0,
								borderLeftWidth: 0,
								borderRightWidth: 0,
								borderTopWidth: 0,
								boxSizing: "content-box",
								display: "inline",
								flexBasis: "auto",
								flexDirection: "row",
								flexGrow: 0,
								flexShrink: 1,
								flexWrap: "nowrap",
								justifyContent: "flex-start",
								height: "auto",
								marginTop: 0,
								marginRight: 0,
								marginLeft: 0,
								marginBottom: 0,
								paddingTop: 0,
								paddingRight: 0,
								paddingLeft: 0,
								paddingBottom: 0,
								maxHeight: "none",
								maxWidth: "none",
								minHeight: 0,
								minWidth: 0,
								order: 0,
								position: "static",
								width: "auto"
							},
							r = e instanceof Element;
						if (r) {
							var l = e.hasAttribute("data-style"),
								i = l ? e.getAttribute("data-style") : e.getAttribute("style") || "";
							l || e.setAttribute("data-style", i);
							var a = window.getComputedStyle && getComputedStyle(e) || {};
							o(t, a);
							var c = e.currentStyle || {};
							n(t, c), f(t, i);
							for (var y in t) t[y] = s(t[y], e);
							var x = e.getBoundingClientRect();
							t.offsetHeight = x.height || e.offsetHeight, t.offsetWidth = x.width || e.offsetWidth
						}
						var S = {
							element: e,
							style: t
						};
						return S
					}

					function n(e, t) {
						for (var r in e) {
							var l = r in t;
							if (l) e[r] = t[r];
							else {
								var n = r.replace(/[A-Z]/g, "-$&").toLowerCase(),
									f = n in t;
								f && (e[r] = t[n])
							}
						}
						var o = "-js-display" in t;
						o && (e.display = t["-js-display"])
					}

					function f(e, t) {
						for (var r; r = i.exec(t);) {
							var l = r[1].toLowerCase().replace(/-[a-z]/g, function(e) {
								return e.slice(1).toUpperCase()
							});
							e[l] = r[2]
						}
					}

					function o(e, t) {
						for (var r in e) {
							var l = r in t;
							l && !/^(alignSelf|height|width)$/.test(r) && (e[r] = t[r])
						}
					}
					t.exports = l;
					var i = /([^\s:;]+)\s*:\s*([^;]+?)\s*(;|$)/g,
						s = e("./getComputedLength")
				}, {
					"./getComputedLength": 14
				}],
				16: [function(e, t, r) {
					function l(e) {
						var t = [];
						return n(e, t), t
					}

					function n(e, t) {
						for (var r, l = f(e), i = [], s = -1; r = e.childNodes[++s];) {
							var a = 3 === r.nodeType && !/^\s*$/.test(r.nodeValue);
							if (l && a) {
								var c = r;
								r = e.insertBefore(document.createElement("flex-item"), c), r.appendChild(c)
							}
							var y = r instanceof Element;
							if (y) {
								var x = n(r, t);
								if (l) {
									var S = r.style;
									S.display = "inline-block", S.position = "absolute", x.style = o(r).style, i.push(x)
								}
							}
						}
						var m = {
							element: e,
							children: i
						};
						return l && (m.style = o(e).style, t.push(m)), m
					}

					function f(e) {
						var t = e instanceof Element,
							r = t && e.getAttribute("data-style"),
							l = t && e.currentStyle && e.currentStyle["-js-display"],
							n = i.test(r) || s.test(l);
						return n
					}
					t.exports = l;
					var o = e("../read"),
						i = /(^|;)\s*display\s*:\s*(inline-)?flex\s*(;|$)/i,
						s = /^(inline-)?flex$/i
				}, {
					"../read": 15
				}],
				17: [function(e, t, r) {
					function l(e) {
						f(e);
						var t = e.element.style,
							r = "inline" === e.mainAxis ? ["main", "cross"] : ["cross", "main"];
						t.boxSizing = "content-box", t.display = "block", t.position = "relative", t.width = n(e.flexStyle[r[0]] - e.flexStyle[r[0] + "InnerBefore"] - e.flexStyle[r[0] + "InnerAfter"] - e.flexStyle[r[0] + "BorderBefore"] - e.flexStyle[r[0] + "BorderAfter"]), t.height = n(e.flexStyle[r[1]] - e.flexStyle[r[1] + "InnerBefore"] - e.flexStyle[r[1] + "InnerAfter"] - e.flexStyle[r[1] + "BorderBefore"] - e.flexStyle[r[1] + "BorderAfter"]);
						for (var l, o = -1; l = e.children[++o];) {
							var i = l.element.style,
								s = "inline" === l.mainAxis ? ["main", "cross"] : ["cross", "main"];
							i.boxSizing = "content-box", i.display = "block", i.position = "absolute", "auto" !== l.flexStyle[s[0]] && (i.width = n(l.flexStyle[s[0]] - l.flexStyle[s[0] + "InnerBefore"] - l.flexStyle[s[0] + "InnerAfter"] - l.flexStyle[s[0] + "BorderBefore"] - l.flexStyle[s[0] + "BorderAfter"])), "auto" !== l.flexStyle[s[1]] && (i.height = n(l.flexStyle[s[1]] - l.flexStyle[s[1] + "InnerBefore"] - l.flexStyle[s[1] + "InnerAfter"] - l.flexStyle[s[1] + "BorderBefore"] - l.flexStyle[s[1] + "BorderAfter"])), i.top = n(l.flexStyle[s[1] + "Start"]), i.left = n(l.flexStyle[s[0] + "Start"]), i.marginTop = n(l.flexStyle[s[1] + "Before"]), i.marginRight = n(l.flexStyle[s[0] + "After"]), i.marginBottom = n(l.flexStyle[s[1] + "After"]), i.marginLeft = n(l.flexStyle[s[0] + "Before"])
						}
					}

					function n(e) {
						return "string" == typeof e ? e : Math.max(e, 0) + "px"
					}
					t.exports = l;
					var f = e("../flexbox")
				}, {
					"../flexbox": 7
				}],
				18: [function(e, t, r) {
					function l(e) {
						for (var t, r = -1; t = e[++r];) n(t)
					}
					t.exports = l;
					var n = e("../write")
				}, {
					"../write": 17
				}]
			}, {}, [13])(13)
		})
	}, function(module, exports) {
		(function($) {
			'use strict';
			var _currentSpinnerId = 0;

			function _scopedEventName(name, id) {
				return name + '.touchspin_' + id
			}

			function _scopeEventNames(names, id) {
				return $.map(names, function(name) {
					return _scopedEventName(name, id)
				})
			}
			$.fn.TouchSpin = function(options) {
				if (options === 'destroy') {
					this.each(function() {
						var originalinput = $(this),
							originalinput_data = originalinput.data();
						$(document).off(_scopeEventNames(['mouseup', 'touchend', 'touchcancel', 'mousemove', 'touchmove', 'scroll', 'scrollstart'], originalinput_data.spinnerid).join(' '))
					});
					return
				}
				var defaults = {
					min: 0,
					max: 100,
					initval: '',
					replacementval: '',
					step: 1,
					decimals: 0,
					stepinterval: 100,
					forcestepdivisibility: 'round',
					stepintervaldelay: 500,
					verticalbuttons: !1,
					verticalupclass: 'glyphicon glyphicon-chevron-up',
					verticaldownclass: 'glyphicon glyphicon-chevron-down',
					prefix: '',
					postfix: '',
					prefix_extraclass: '',
					postfix_extraclass: '',
					booster: !0,
					boostat: 10,
					maxboostedstep: !1,
					mousewheel: !0,
					buttondown_class: 'btn btn-default',
					buttonup_class: 'btn btn-default',
					buttondown_txt: '-',
					buttonup_txt: '+'
				};
				var attributeMap = {
					min: 'min',
					max: 'max',
					initval: 'init-val',
					replacementval: 'replacement-val',
					step: 'step',
					decimals: 'decimals',
					stepinterval: 'step-interval',
					verticalbuttons: 'vertical-buttons',
					verticalupclass: 'vertical-up-class',
					verticaldownclass: 'vertical-down-class',
					forcestepdivisibility: 'force-step-divisibility',
					stepintervaldelay: 'step-interval-delay',
					prefix: 'prefix',
					postfix: 'postfix',
					prefix_extraclass: 'prefix-extra-class',
					postfix_extraclass: 'postfix-extra-class',
					booster: 'booster',
					boostat: 'boostat',
					maxboostedstep: 'max-boosted-step',
					mousewheel: 'mouse-wheel',
					buttondown_class: 'button-down-class',
					buttonup_class: 'button-up-class',
					buttondown_txt: 'button-down-txt',
					buttonup_txt: 'button-up-txt'
				};
				return this.each(function() {
					var settings, originalinput = $(this),
						originalinput_data = originalinput.data(),
						container, elements, value, downSpinTimer, upSpinTimer, downDelayTimeout, upDelayTimeout, spincount = 0,
						spinning = !1;
					init();

					function init() {
						if (originalinput.data('alreadyinitialized')) {
							return
						}
						originalinput.data('alreadyinitialized', !0);
						_currentSpinnerId += 1;
						originalinput.data('spinnerid', _currentSpinnerId);
						if (!originalinput.is('input')) {
							console.log('Must be an input.');
							return
						}
						_initSettings();
						_setInitval();
						_checkValue();
						_buildHtml();
						_initElements();
						_hideEmptyPrefixPostfix();
						_bindEvents();
						_bindEventsInterface();
						elements.input.css('display', 'block')
					}

					function _setInitval() {
						if (settings.initval !== '' && originalinput.val() === '') {
							originalinput.val(settings.initval)
						}
					}

					function changeSettings(newsettings) {
						_updateSettings(newsettings);
						_checkValue();
						var value = elements.input.val();
						if (value !== '') {
							value = Number(elements.input.val());
							elements.input.val(value.toFixed(settings.decimals))
						}
					}

					function _initSettings() {
						settings = $.extend({}, defaults, originalinput_data, _parseAttributes(), options)
					}

					function _parseAttributes() {
						var data = {};
						$.each(attributeMap, function(key, value) {
							var attrName = 'bts-' + value + '';
							if (originalinput.is('[data-' + attrName + ']')) {
								data[key] = originalinput.data(attrName)
							}
						});
						return data
					}

					function _updateSettings(newsettings) {
						settings = $.extend({}, settings, newsettings)
					}

					function _buildHtml() {
						var initval = originalinput.val(),
							parentelement = originalinput.parent();
						if (initval !== '') {
							initval = Number(initval).toFixed(settings.decimals)
						}
						originalinput.data('initvalue', initval).val(initval);
						originalinput.addClass('form-control');
						if (parentelement.hasClass('input-group')) {
							_advanceInputGroup(parentelement)
						} else {
							_buildInputGroup()
						}
					}

					function _advanceInputGroup(parentelement) {
						parentelement.addClass('bootstrap-touchspin');
						var prev = originalinput.prev(),
							next = originalinput.next();
						var downhtml, uphtml, prefixhtml = '<span class="input-group-addon bootstrap-touchspin-prefix">' + settings.prefix + '</span>',
							postfixhtml = '<span class="input-group-addon bootstrap-touchspin-postfix">' + settings.postfix + '</span>';
						if (prev.hasClass('input-group-btn')) {
							downhtml = '<button class="' + settings.buttondown_class + ' bootstrap-touchspin-down" type="button">' + settings.buttondown_txt + '</button>';
							prev.append(downhtml)
						} else {
							downhtml = '<span class="input-group-btn"><button class="' + settings.buttondown_class + ' bootstrap-touchspin-down" type="button">' + settings.buttondown_txt + '</button></span>';
							$(downhtml).insertBefore(originalinput)
						}
						if (next.hasClass('input-group-btn')) {
							uphtml = '<button class="' + settings.buttonup_class + ' bootstrap-touchspin-up" type="button">' + settings.buttonup_txt + '</button>';
							next.prepend(uphtml)
						} else {
							uphtml = '<span class="input-group-btn"><button class="' + settings.buttonup_class + ' bootstrap-touchspin-up" type="button">' + settings.buttonup_txt + '</button></span>';
							$(uphtml).insertAfter(originalinput)
						}
						$(prefixhtml).insertBefore(originalinput);
						$(postfixhtml).insertAfter(originalinput);
						container = parentelement
					}

					function _buildInputGroup() {
						var html;
						if (settings.verticalbuttons) {
							html = '<div class="input-group bootstrap-touchspin"><span class="input-group-addon bootstrap-touchspin-prefix">' + settings.prefix + '</span><span class="input-group-addon bootstrap-touchspin-postfix">' + settings.postfix + '</span><span class="input-group-btn-vertical"><button class="' + settings.buttondown_class + ' bootstrap-touchspin-up" type="button"><i class="' + settings.verticalupclass + '"></i></button><button class="' + settings.buttonup_class + ' bootstrap-touchspin-down" type="button"><i class="' + settings.verticaldownclass + '"></i></button></span></div>'
						} else {
							html = '<div class="input-group bootstrap-touchspin"><span class="input-group-btn"><button class="' + settings.buttondown_class + ' bootstrap-touchspin-down" type="button">' + settings.buttondown_txt + '</button></span><span class="input-group-addon bootstrap-touchspin-prefix">' + settings.prefix + '</span><span class="input-group-addon bootstrap-touchspin-postfix">' + settings.postfix + '</span><span class="input-group-btn"><button class="' + settings.buttonup_class + ' bootstrap-touchspin-up" type="button">' + settings.buttonup_txt + '</button></span></div>'
						}
						container = $(html).insertBefore(originalinput);
						$('.bootstrap-touchspin-prefix', container).after(originalinput);
						if (originalinput.hasClass('input-sm')) {
							container.addClass('input-group-sm')
						} else if (originalinput.hasClass('input-lg')) {
							container.addClass('input-group-lg')
						}
					}

					function _initElements() {
						elements = {
							down: $('.bootstrap-touchspin-down', container),
							up: $('.bootstrap-touchspin-up', container),
							input: $('input', container),
							prefix: $('.bootstrap-touchspin-prefix', container).addClass(settings.prefix_extraclass),
							postfix: $('.bootstrap-touchspin-postfix', container).addClass(settings.postfix_extraclass)
						}
					}

					function _hideEmptyPrefixPostfix() {
						if (settings.prefix === '') {
							elements.prefix.hide()
						}
						if (settings.postfix === '') {
							elements.postfix.hide()
						}
					}

					function _bindEvents() {
						originalinput.on('keydown', function(ev) {
							var code = ev.keyCode || ev.which;
							if (code === 38) {
								if (spinning !== 'up') {
									upOnce();
									startUpSpin()
								}
								ev.preventDefault()
							} else if (code === 40) {
								if (spinning !== 'down') {
									downOnce();
									startDownSpin()
								}
								ev.preventDefault()
							}
						});
						originalinput.on('keyup', function(ev) {
							var code = ev.keyCode || ev.which;
							if (code === 38) {
								stopSpin()
							} else if (code === 40) {
								stopSpin()
							}
						});
						originalinput.on('blur', function() {
							_checkValue()
						});
						elements.down.on('keydown', function(ev) {
							var code = ev.keyCode || ev.which;
							if (code === 32 || code === 13) {
								if (spinning !== 'down') {
									downOnce();
									startDownSpin()
								}
								ev.preventDefault()
							}
						});
						elements.down.on('keyup', function(ev) {
							var code = ev.keyCode || ev.which;
							if (code === 32 || code === 13) {
								stopSpin()
							}
						});
						elements.up.on('keydown', function(ev) {
							var code = ev.keyCode || ev.which;
							if (code === 32 || code === 13) {
								if (spinning !== 'up') {
									upOnce();
									startUpSpin()
								}
								ev.preventDefault()
							}
						});
						elements.up.on('keyup', function(ev) {
							var code = ev.keyCode || ev.which;
							if (code === 32 || code === 13) {
								stopSpin()
							}
						});
						elements.down.on('mousedown.touchspin', function(ev) {
							elements.down.off('touchstart.touchspin');
							if (originalinput.is(':disabled')) {
								return
							}
							downOnce();
							startDownSpin();
							ev.preventDefault();
							ev.stopPropagation()
						});
						elements.down.on('touchstart.touchspin', function(ev) {
							elements.down.off('mousedown.touchspin');
							if (originalinput.is(':disabled')) {
								return
							}
							downOnce();
							startDownSpin();
							ev.preventDefault();
							ev.stopPropagation()
						});
						elements.up.on('mousedown.touchspin', function(ev) {
							elements.up.off('touchstart.touchspin');
							if (originalinput.is(':disabled')) {
								return
							}
							upOnce();
							startUpSpin();
							ev.preventDefault();
							ev.stopPropagation()
						});
						elements.up.on('touchstart.touchspin', function(ev) {
							elements.up.off('mousedown.touchspin');
							if (originalinput.is(':disabled')) {
								return
							}
							upOnce();
							startUpSpin();
							ev.preventDefault();
							ev.stopPropagation()
						});
						elements.up.on('mouseout touchleave touchend touchcancel', function(ev) {
							if (!spinning) {
								return
							}
							ev.stopPropagation();
							stopSpin()
						});
						elements.down.on('mouseout touchleave touchend touchcancel', function(ev) {
							if (!spinning) {
								return
							}
							ev.stopPropagation();
							stopSpin()
						});
						elements.down.on('mousemove touchmove', function(ev) {
							if (!spinning) {
								return
							}
							ev.stopPropagation();
							ev.preventDefault()
						});
						elements.up.on('mousemove touchmove', function(ev) {
							if (!spinning) {
								return
							}
							ev.stopPropagation();
							ev.preventDefault()
						});
						$(document).on(_scopeEventNames(['mouseup', 'touchend', 'touchcancel'], _currentSpinnerId).join(' '), function(ev) {
							if (!spinning) {
								return
							}
							ev.preventDefault();
							stopSpin()
						});
						$(document).on(_scopeEventNames(['mousemove', 'touchmove', 'scroll', 'scrollstart'], _currentSpinnerId).join(' '), function(ev) {
							if (!spinning) {
								return
							}
							ev.preventDefault();
							stopSpin()
						});
						originalinput.on('mousewheel DOMMouseScroll', function(ev) {
							if (!settings.mousewheel || !originalinput.is(':focus')) {
								return
							}
							var delta = ev.originalEvent.wheelDelta || -ev.originalEvent.deltaY || -ev.originalEvent.detail;
							ev.stopPropagation();
							ev.preventDefault();
							if (delta < 0) {
								downOnce()
							} else {
								upOnce()
							}
						})
					}

					function _bindEventsInterface() {
						originalinput.on('touchspin.uponce', function() {
							stopSpin();
							upOnce()
						});
						originalinput.on('touchspin.downonce', function() {
							stopSpin();
							downOnce()
						});
						originalinput.on('touchspin.startupspin', function() {
							startUpSpin()
						});
						originalinput.on('touchspin.startdownspin', function() {
							startDownSpin()
						});
						originalinput.on('touchspin.stopspin', function() {
							stopSpin()
						});
						originalinput.on('touchspin.updatesettings', function(e, newsettings) {
							changeSettings(newsettings)
						})
					}

					function _forcestepdivisibility(value) {
						switch (settings.forcestepdivisibility) {
							case 'round':
								return (Math.round(value / settings.step) * settings.step).toFixed(settings.decimals);
							case 'floor':
								return (Math.floor(value / settings.step) * settings.step).toFixed(settings.decimals);
							case 'ceil':
								return (Math.ceil(value / settings.step) * settings.step).toFixed(settings.decimals);
							default:
								return value
						}
					}

					function _checkValue() {
						var val, parsedval, returnval;
						val = originalinput.val();
						if (val === '') {
							if (settings.replacementval !== '') {
								originalinput.val(settings.replacementval);
								originalinput.trigger('change')
							}
							return
						}
						if (settings.decimals > 0 && val === '.') {
							return
						}
						parsedval = parseFloat(val);
						if (isNaN(parsedval)) {
							if (settings.replacementval !== '') {
								parsedval = settings.replacementval
							} else {
								parsedval = 0
							}
						}
						returnval = parsedval;
						if (parsedval.toString() !== val) {
							returnval = parsedval
						}
						if (parsedval < settings.min) {
							returnval = settings.min
						}
						if (parsedval > settings.max) {
							returnval = settings.max
						}
						returnval = _forcestepdivisibility(returnval);
						if (Number(val).toString() !== returnval.toString()) {
							originalinput.val(returnval);
							originalinput.trigger('change')
						}
					}

					function _getBoostedStep() {
						if (!settings.booster) {
							return settings.step
						} else {
							var boosted = Math.pow(2, Math.floor(spincount / settings.boostat)) * settings.step;
							if (settings.maxboostedstep) {
								if (boosted > settings.maxboostedstep) {
									boosted = settings.maxboostedstep;
									value = Math.round((value / boosted)) * boosted
								}
							}
							return Math.max(settings.step, boosted)
						}
					}

					function upOnce() {
						_checkValue();
						value = parseFloat(elements.input.val());
						if (isNaN(value)) {
							value = 0
						}
						var initvalue = value,
							boostedstep = _getBoostedStep();
						value = value + boostedstep;
						if (value > settings.max) {
							value = settings.max;
							originalinput.trigger('touchspin.on.max');
							stopSpin()
						}
						elements.input.val(Number(value).toFixed(settings.decimals));
						if (initvalue !== value) {
							originalinput.trigger('change')
						}
					}

					function downOnce() {
						_checkValue();
						value = parseFloat(elements.input.val());
						if (isNaN(value)) {
							value = 0
						}
						var initvalue = value,
							boostedstep = _getBoostedStep();
						value = value - boostedstep;
						if (value < settings.min) {
							value = settings.min;
							originalinput.trigger('touchspin.on.min');
							stopSpin()
						}
						elements.input.val(value.toFixed(settings.decimals));
						if (initvalue !== value) {
							originalinput.trigger('change')
						}
					}

					function startDownSpin() {
						stopSpin();
						spincount = 0;
						spinning = 'down';
						originalinput.trigger('touchspin.on.startspin');
						originalinput.trigger('touchspin.on.startdownspin');
						downDelayTimeout = setTimeout(function() {
							downSpinTimer = setInterval(function() {
								spincount++;
								downOnce()
							}, settings.stepinterval)
						}, settings.stepintervaldelay)
					}

					function startUpSpin() {
						stopSpin();
						spincount = 0;
						spinning = 'up';
						originalinput.trigger('touchspin.on.startspin');
						originalinput.trigger('touchspin.on.startupspin');
						upDelayTimeout = setTimeout(function() {
							upSpinTimer = setInterval(function() {
								spincount++;
								upOnce()
							}, settings.stepinterval)
						}, settings.stepintervaldelay)
					}

					function stopSpin() {
						clearTimeout(downDelayTimeout);
						clearTimeout(upDelayTimeout);
						clearInterval(downSpinTimer);
						clearInterval(upSpinTimer);
						switch (spinning) {
							case 'up':
								originalinput.trigger('touchspin.on.stopupspin');
								originalinput.trigger('touchspin.on.stopspin');
								break;
							case 'down':
								originalinput.trigger('touchspin.on.stopdownspin');
								originalinput.trigger('touchspin.on.stopspin');
								break
						}
						spincount = 0;
						spinning = !1
					}
				})
			}
		})(jQuery)
	}, function(module, exports) {}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(module, exports, __webpack_require__) {
		'use strict';

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}
		var _jquery = __webpack_require__(4);
		var _jquery2 = _interopRequireDefault(_jquery);
		var _prestashop = __webpack_require__(66);
		var _prestashop2 = _interopRequireDefault(_prestashop);
		_prestashop2['default'].responsive = _prestashop2['default'].responsive || {};
		_prestashop2['default'].responsive.current_width = (0, _jquery2['default'])(window).width();
		_prestashop2['default'].responsive.min_width = 768;
		_prestashop2['default'].responsive.mobile = _prestashop2['default'].responsive.current_width < _prestashop2['default'].responsive.min_width;

		function swapChildren(obj1, obj2) {
			var temp = obj2.children().detach();
			obj2.empty().append(obj1.children().detach());
			obj1.append(temp)
		}

		function toggleMobileStyles() {
			if (_prestashop2['default'].responsive.mobile) {
				(0, _jquery2['default'])("*[id^='_desktop_']").each(function(idx, el) {
					var target = (0, _jquery2['default'])('#' + el.id.replace('_desktop_', '_mobile_'));
					if (target) {
						swapChildren((0, _jquery2['default'])(el), target)
					}
				})
			} else {
				(0, _jquery2['default'])("*[id^='_mobile_']").each(function(idx, el) {
					var target = (0, _jquery2['default'])('#' + el.id.replace('_mobile_', '_desktop_'));
					if (target) {
						swapChildren((0, _jquery2['default'])(el), target)
					}
				})
			}
			_prestashop2['default'].emit('responsive update', {
				mobile: _prestashop2['default'].responsive.mobile
			})
		}(0, _jquery2['default'])(window).on('resize', function() {
			var _cw = _prestashop2['default'].responsive.current_width;
			var _mw = _prestashop2['default'].responsive.min_width;
			var _w = (0, _jquery2['default'])(window).width();
			var _toggle = _cw >= _mw && _w < _mw || _cw < _mw && _w >= _mw;
			_prestashop2['default'].responsive.mobile = _cw >= _mw;
			_prestashop2['default'].responsive.current_width = _w;
			if (_toggle) {
				toggleMobileStyles()
			}
		});
		(0, _jquery2['default'])(document).ready(function() {
			if (_prestashop2['default'].responsive.mobile) {
				toggleMobileStyles()
			}
		})
	}, function(module, exports) {
		module.exports = prestashop
	}, function(module, exports, __webpack_require__) {
		'use strict';

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}
		var _jquery = __webpack_require__(4);
		var _jquery2 = _interopRequireDefault(_jquery);
		var _prestashop = __webpack_require__(66);
		var _prestashop2 = _interopRequireDefault(_prestashop);

		function setUpCheckout() {
			if ((0, _jquery2['default'])('.js-cancel-address').length !== 0) {
				(0, _jquery2['default'])('.checkout-step:not(.js-current-step) .step-title').addClass('not-allowed')
			}(0, _jquery2['default'])('.js-terms a').on('click', function(event) {
				event.preventDefault();
				var url = (0, _jquery2['default'])(event.target).attr('href');
				if (url) {
					url += '?content_only=1';
					_jquery2['default'].get(url, function(content) {
						(0, _jquery2['default'])('#modal').find('.modal-content').html((0, _jquery2['default'])(content).find('.page-cms').contents())
					}).fail(function(resp) {
							_prestashop2['default'].emit('handleError', {
								eventType: 'clickTerms',
								resp: resp
							})
						})
				}(0, _jquery2['default'])('#modal').modal('show')
			});
			(0, _jquery2['default'])('.js-gift-checkbox').on('click', function(event) {
				(0, _jquery2['default'])('#gift').collapse('toggle')
			})
		}(0, _jquery2['default'])(document).ready(function() {
			if ((0, _jquery2['default'])('body#checkout').length === 1) {
				setUpCheckout()
			}
			_prestashop2['default'].on('updatedDeliveryForm', function(params) {
				(0, _jquery2['default'])(".carrier-extra-content").hide();
				params.deliveryOption.find(".carrier-extra-content").slideDown()
			})
		})
	}, function(module, exports, __webpack_require__) {
		'use strict';

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}
		var _jquery = __webpack_require__(4);
		var _jquery2 = _interopRequireDefault(_jquery);

		function initRmaItemSelector() {
			(0, _jquery2['default'])('#order-return-form table thead input[type=checkbox]').on('click', function() {
				var checked = (0, _jquery2['default'])(this).prop('checked');
				(0, _jquery2['default'])('#order-return-form table tbody input[type=checkbox]').each(function(_, checkbox) {
					(0, _jquery2['default'])(checkbox).prop('checked', checked)
				})
			})
		}

		function setupCustomerScripts() {
			if ((0, _jquery2['default'])('body#order-detail')) {
				initRmaItemSelector()
			}
		}(0, _jquery2['default'])(document).ready(setupCustomerScripts)
	}, function(module, exports, __webpack_require__) {
		'use strict';

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}
		var _jquery = __webpack_require__(4);
		var _jquery2 = _interopRequireDefault(_jquery);
		var _prestashop = __webpack_require__(66);
		var _prestashop2 = _interopRequireDefault(_prestashop);
		__webpack_require__(70);
		var _componentsProductMiniature = __webpack_require__(71);
		var _componentsProductMiniature2 = _interopRequireDefault(_componentsProductMiniature);
		(0, _jquery2['default'])(document).ready(function() {
			_prestashop2['default'].on('clickQuickView', function(elm) {
				var data = {
					'action': 'quickview',
					'id_product': elm.dataset.idProduct,
					'id_product_attribute': elm.dataset.idProductAttribute
				};
				_jquery2['default'].post(_prestashop2['default'].urls.pages.product, data, null, 'json').then(function(resp) {
					(0, _jquery2['default'])('body').append(resp.quickview_html);
					var productModal = (0, _jquery2['default'])('#quickview-modal-' + resp.product.id + '-' + resp.product.id_product_attribute);
					productModal.modal('show');
					productConfig(productModal);
					productModal.on('hidden.bs.modal', function() {
						productModal.remove()
					})
				}).fail(function(resp) {
						_prestashop2['default'].emit('handleError', {
							eventType: 'clickQuickView',
							resp: resp
						})
					})
			});
			var productConfig = function productConfig(qv) {
				var MAX_THUMBS = 4;
				var $arrows = (0, _jquery2['default'])('.js-arrows');
				var $thumbnails = qv.find('.js-qv-product-images');
				(0, _jquery2['default'])('.js-thumb').on('click', function(event) {
					if ((0, _jquery2['default'])('.js-thumb').hasClass('selected')) {
						(0, _jquery2['default'])('.js-thumb').removeClass('selected')
					}(0, _jquery2['default'])(event.currentTarget).addClass('selected');
					(0, _jquery2['default'])('.js-qv-product-cover').attr('src', (0, _jquery2['default'])(event.target).data('image-large-src'))
				});
				if ($thumbnails.find('li').length <= MAX_THUMBS) {
					$arrows.hide()
				} else {
					if ((0, _jquery2['default'])('.quickview .js-qv-product-images li').length > 2) {
						(0, _jquery2['default'])('.quickview .js-qv-mask').addClass('scroll');
						(0, _jquery2['default'])('.scroll-box-arrows').addClass('scroll');
						(0, _jquery2['default'])('.quickview .js-qv-mask').scrollbox({
							distance: 113,
							autoPlay: !1
						});
						(0, _jquery2['default'])('.arrow-up').click(function() {
							(0, _jquery2['default'])('.quickview .js-qv-mask').trigger('backward')
						});
						(0, _jquery2['default'])('.arrow-down').click(function() {
							(0, _jquery2['default'])('.quickview .js-qv-mask').trigger('forward')
						})
					}
				}
				qv.find('#quantity_wanted').TouchSpin({
					verticalbuttons: !0,
					verticalupclass: 'material-icons touchspin-up',
					verticaldownclass: 'material-icons touchspin-down',
					buttondown_class: 'btn btn-touchspin js-touchspin',
					buttonup_class: 'btn btn-touchspin js-touchspin',
					min: 1,
					max: 1000000
				})
			};
			var move = function move(direction) {
				var THUMB_MARGIN = 20;
				var $thumbnails = (0, _jquery2['default'])('.js-qv-product-images');
				var thumbHeight = (0, _jquery2['default'])('.js-qv-product-images li img').height() + THUMB_MARGIN;
				var currentPosition = $thumbnails.position().top;
				$thumbnails.velocity({
					translateY: direction === 'up' ? currentPosition + thumbHeight : currentPosition - thumbHeight
				}, function() {
					if ($thumbnails.position().top >= 0) {
						(0, _jquery2['default'])('.arrow-up').css('opacity', '.2')
					} else if ($thumbnails.position().top + $thumbnails.height() <= (0, _jquery2['default'])('.js-qv-mask').height()) {
						(0, _jquery2['default'])('.arrow-down').css('opacity', '.2')
					}
				})
			};
			(0, _jquery2['default'])('body').on('click', '#search_filter_toggler', function() {
				(0, _jquery2['default'])('#search_filters_wrapper').removeClass('hidden-sm-down');
				(0, _jquery2['default'])('#content-wrapper').addClass('hidden-sm-down');
				(0, _jquery2['default'])('#footer').addClass('hidden-sm-down')
			});
			(0, _jquery2['default'])('#search_filter_controls .clear').on('click', function() {
				(0, _jquery2['default'])('#search_filters_wrapper').addClass('hidden-sm-down');
				(0, _jquery2['default'])('#content-wrapper').removeClass('hidden-sm-down');
				(0, _jquery2['default'])('#footer').removeClass('hidden-sm-down')
			});
			(0, _jquery2['default'])('#search_filter_controls .ok').on('click', function() {
				(0, _jquery2['default'])('#search_filters_wrapper').addClass('hidden-sm-down');
				(0, _jquery2['default'])('#content-wrapper').removeClass('hidden-sm-down');
				(0, _jquery2['default'])('#footer').removeClass('hidden-sm-down')
			});
			(0, _jquery2['default'])('body').on('change', '#search_filters input[data-search-url]', function(event) {
				_prestashop2['default'].emit('updateFacets', event.target.dataset.searchUrl)
			});
			(0, _jquery2['default'])('body').on('click', '.js-search-filters-clear-all', function(event) {
				_prestashop2['default'].emit('updateFacets', event.target.dataset.searchUrl)
			});
			(0, _jquery2['default'])('body').on('click', '.js-search-link', function(event) {
				event.preventDefault();
				_prestashop2['default'].emit('updateFacets', (0, _jquery2['default'])(event.target).closest('a').get(0).href)
			});
			(0, _jquery2['default'])('body').on('change', '#search_filters select', function(event) {
				var form = (0, _jquery2['default'])(event.target).closest('form');
				_prestashop2['default'].emit('updateFacets', '?' + form.serialize())
			});
			_prestashop2['default'].on('updateProductList', function(data) {
				updateProductListDOM(data)
			})
		});

		function updateProductListDOM(data) {
			(0, _jquery2['default'])('#search_filters').replaceWith(data.rendered_facets);
			(0, _jquery2['default'])('#js-active-search-filters').replaceWith(data.rendered_active_filters);
			(0, _jquery2['default'])('#js-product-list-top').replaceWith(data.rendered_products_top);
			(0, _jquery2['default'])('#js-product-list').replaceWith(data.rendered_products);
			(0, _jquery2['default'])('#js-product-list-bottom').replaceWith(data.rendered_products_bottom);
			var productMinitature = new _componentsProductMiniature2['default']();
			productMinitature.init()
		}
	}, function(module, exports, __webpack_require__) {
		var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;
		(function(window) {
			"use strict";
			if (window.jQuery) {
				return
			}
			var $ = function(selector, context) {
				return new $.fn.init(selector, context)
			};
			$.isWindow = function(obj) {
				return obj && obj === obj.window
			};
			$.type = function(obj) {
				if (!obj) {
					return obj + ""
				}
				return typeof obj === "object" || typeof obj === "function" ? class2type[toString.call(obj)] || "object" : typeof obj
			};
			$.isArray = Array.isArray || function(obj) {
				return $.type(obj) === "array"
			};

			function isArraylike(obj) {
				var length = obj.length,
					type = $.type(obj);
				if (type === "function" || $.isWindow(obj)) {
					return !1
				}
				if (obj.nodeType === 1 && length) {
					return !0
				}
				return type === "array" || length === 0 || typeof length === "number" && length > 0 && (length - 1) in obj
			}
			$.isPlainObject = function(obj) {
				var key;
				if (!obj || $.type(obj) !== "object" || obj.nodeType || $.isWindow(obj)) {
					return !1
				}
				try {
					if (obj.constructor && !hasOwn.call(obj, "constructor") && !hasOwn.call(obj.constructor.prototype, "isPrototypeOf")) {
						return !1
					}
				} catch (e) {
					return !1
				}
				for (key in obj) {}
				return key === undefined || hasOwn.call(obj, key)
			};
			$.each = function(obj, callback, args) {
				var value, i = 0,
					length = obj.length,
					isArray = isArraylike(obj);
				if (args) {
					if (isArray) {
						for (; i < length; i++) {
							value = callback.apply(obj[i], args);
							if (value === !1) {
								break
							}
						}
					} else {
						for (i in obj) {
							if (!obj.hasOwnProperty(i)) {
								continue
							}
							value = callback.apply(obj[i], args);
							if (value === !1) {
								break
							}
						}
					}
				} else {
					if (isArray) {
						for (; i < length; i++) {
							value = callback.call(obj[i], i, obj[i]);
							if (value === !1) {
								break
							}
						}
					} else {
						for (i in obj) {
							if (!obj.hasOwnProperty(i)) {
								continue
							}
							value = callback.call(obj[i], i, obj[i]);
							if (value === !1) {
								break
							}
						}
					}
				}
				return obj
			};
			$.data = function(node, key, value) {
				if (value === undefined) {
					var getId = node[$.expando],
						store = getId && cache[getId];
					if (key === undefined) {
						return store
					} else if (store) {
						if (key in store) {
							return store[key]
						}
					}
				} else if (key !== undefined) {
					var setId = node[$.expando] || (node[$.expando] = ++$.uuid);
					cache[setId] = cache[setId] || {};
					cache[setId][key] = value;
					return value
				}
			};
			$.removeData = function(node, keys) {
				var id = node[$.expando],
					store = id && cache[id];
				if (store) {
					if (!keys) {
						delete cache[id]
					} else {
						$.each(keys, function(_, key) {
							delete store[key]
						})
					}
				}
			};
			$.extend = function() {
				var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {},
					i = 1,
					length = arguments.length,
					deep = !1;
				if (typeof target === "boolean") {
					deep = target;
					target = arguments[i] || {};
					i++
				}
				if (typeof target !== "object" && $.type(target) !== "function") {
					target = {}
				}
				if (i === length) {
					target = this;
					i--
				}
				for (; i < length; i++) {
					if ((options = arguments[i])) {
						for (name in options) {
							if (!options.hasOwnProperty(name)) {
								continue
							}
							src = target[name];
							copy = options[name];
							if (target === copy) {
								continue
							}
							if (deep && copy && ($.isPlainObject(copy) || (copyIsArray = $.isArray(copy)))) {
								if (copyIsArray) {
									copyIsArray = !1;
									clone = src && $.isArray(src) ? src : []
								} else {
									clone = src && $.isPlainObject(src) ? src : {}
								}
								target[name] = $.extend(deep, clone, copy)
							} else if (copy !== undefined) {
								target[name] = copy
							}
						}
					}
				}
				return target
			};
			$.queue = function(elem, type, data) {
				function $makeArray(arr, results) {
					var ret = results || [];
					if (arr) {
						if (isArraylike(Object(arr))) {
							(function(first, second) {
								var len = +second.length,
									j = 0,
									i = first.length;
								while (j < len) {
									first[i++] = second[j++]
								}
								if (len !== len) {
									while (second[j] !== undefined) {
										first[i++] = second[j++]
									}
								}
								first.length = i;
								return first
							})(ret, typeof arr === "string" ? [arr] : arr)
						} else {
							[].push.call(ret, arr)
						}
					}
					return ret
				}
				if (!elem) {
					return
				}
				type = (type || "fx") + "queue";
				var q = $.data(elem, type);
				if (!data) {
					return q || []
				}
				if (!q || $.isArray(data)) {
					q = $.data(elem, type, $makeArray(data))
				} else {
					q.push(data)
				}
				return q
			};
			$.dequeue = function(elems, type) {
				$.each(elems.nodeType ? [elems] : elems, function(i, elem) {
					type = type || "fx";
					var queue = $.queue(elem, type),
						fn = queue.shift();
					if (fn === "inprogress") {
						fn = queue.shift()
					}
					if (fn) {
						if (type === "fx") {
							queue.unshift("inprogress")
						}
						fn.call(elem, function() {
							$.dequeue(elem, type)
						})
					}
				})
			};
			$.fn = $.prototype = {
				init: function(selector) {
					if (selector.nodeType) {
						this[0] = selector;
						return this
					} else {
						throw new Error("Not a DOM node.")
					}
				},
				offset: function() {
					var box = this[0].getBoundingClientRect ? this[0].getBoundingClientRect() : {
						top: 0,
						left: 0
					};
					return {
						top: box.top + (window.pageYOffset || document.scrollTop || 0) - (document.clientTop || 0),
						left: box.left + (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || 0)
					}
				},
				position: function() {
					function offsetParentFn(elem) {
						var offsetParent = elem.offsetParent || document;
						while (offsetParent && (offsetParent.nodeType.toLowerCase !== "html" && offsetParent.style.position === "static")) {
							offsetParent = offsetParent.offsetParent
						}
						return offsetParent || document
					}
					var elem = this[0],
						offsetParent = offsetParentFn(elem),
						offset = this.offset(),
						parentOffset = /^(?:body|html)$/i.test(offsetParent.nodeName) ? {
							top: 0,
							left: 0
						} : $(offsetParent).offset();
					offset.top -= parseFloat(elem.style.marginTop) || 0;
					offset.left -= parseFloat(elem.style.marginLeft) || 0;
					if (offsetParent.style) {
						parentOffset.top += parseFloat(offsetParent.style.borderTopWidth) || 0;
						parentOffset.left += parseFloat(offsetParent.style.borderLeftWidth) || 0
					}
					return {
						top: offset.top - parentOffset.top,
						left: offset.left - parentOffset.left
					}
				}
			};
			var cache = {};
			$.expando = "velocity" + (new Date().getTime());
			$.uuid = 0;
			var class2type = {},
				hasOwn = class2type.hasOwnProperty,
				toString = class2type.toString;
			var types = "Boolean Number String Function Array Date RegExp Object Error".split(" ");
			for (var i = 0; i < types.length; i++) {
				class2type["[object " + types[i] + "]"] = types[i].toLowerCase()
			}
			$.fn.init.prototype = $.fn;
			window.Velocity = {
				Utilities: $
			}
		})(window);
		(function(factory) {
			"use strict";
			if (typeof module === "object" && typeof module.exports === "object") {
				module.exports = factory()
			} else if (!0) {
				!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
			} else {
				factory()
			}
		}(function() {
			"use strict";
			return function(global, window, document, undefined) {
				var IE = (function() {
					if (document.documentMode) {
						return document.documentMode
					} else {
						for (var i = 7; i > 4; i--) {
							var div = document.createElement("div");
							div.innerHTML = "<!--[if IE " + i + "]><span></span><![endif]-->";
							if (div.getElementsByTagName("span").length) {
								div = null;
								return i
							}
						}
					}
					return undefined
				})();
				var rAFShim = (function() {
					var timeLast = 0;
					return window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) {
						var timeCurrent = (new Date()).getTime(),
							timeDelta;
						timeDelta = Math.max(0, 16 - (timeCurrent - timeLast));
						timeLast = timeCurrent + timeDelta;
						return setTimeout(function() {
							callback(timeCurrent + timeDelta)
						}, timeDelta)
					}
				})();

				function compactSparseArray(array) {
					var index = -1,
						length = array ? array.length : 0,
						result = [];
					while (++index < length) {
						var value = array[index];
						if (value) {
							result.push(value)
						}
					}
					return result
				}

				function sanitizeElements(elements) {
					if (Type.isWrapped(elements)) {
						elements = [].slice.call(elements)
					} else if (Type.isNode(elements)) {
						elements = [elements]
					}
					return elements
				}
				var Type = {
					isString: function(variable) {
						return (typeof variable === "string")
					},
					isArray: Array.isArray || function(variable) {
						return Object.prototype.toString.call(variable) === "[object Array]"
					},
					isFunction: function(variable) {
						return Object.prototype.toString.call(variable) === "[object Function]"
					},
					isNode: function(variable) {
						return variable && variable.nodeType
					},
					isNodeList: function(variable) {
						return typeof variable === "object" && /^\[object (HTMLCollection|NodeList|Object)\]$/.test(Object.prototype.toString.call(variable)) && variable.length !== undefined && (variable.length === 0 || (typeof variable[0] === "object" && variable[0].nodeType > 0))
					},
					isWrapped: function(variable) {
						return variable && (variable.jquery || (window.Zepto && window.Zepto.zepto.isZ(variable)))
					},
					isSVG: function(variable) {
						return window.SVGElement && (variable instanceof window.SVGElement)
					},
					isEmptyObject: function(variable) {
						for (var name in variable) {
							if (variable.hasOwnProperty(name)) {
								return !1
							}
						}
						return !0
					}
				};
				var $, isJQuery = !1;
				if (global.fn && global.fn.jquery) {
					$ = global;
					isJQuery = !0
				} else {
					$ = window.Velocity.Utilities
				}
				if (IE <= 8 && !isJQuery) {
					throw new Error("Velocity: IE8 and below require jQuery to be loaded before Velocity.")
				} else if (IE <= 7) {
					jQuery.fn.velocity = jQuery.fn.animate;
					return
				}
				var DURATION_DEFAULT = 400,
					EASING_DEFAULT = "swing";
				var Velocity = {
					State: {
						isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),
						isAndroid: /Android/i.test(navigator.userAgent),
						isGingerbread: /Android 2\.3\.[3-7]/i.test(navigator.userAgent),
						isChrome: window.chrome,
						isFirefox: /Firefox/i.test(navigator.userAgent),
						prefixElement: document.createElement("div"),
						prefixMatches: {},
						scrollAnchor: null,
						scrollPropertyLeft: null,
						scrollPropertyTop: null,
						isTicking: !1,
						calls: []
					},
					CSS: {},
					Utilities: $,
					Redirects: {},
					Easings: {},
					Promise: window.Promise,
					defaults: {
						queue: "",
						duration: DURATION_DEFAULT,
						easing: EASING_DEFAULT,
						begin: undefined,
						complete: undefined,
						progress: undefined,
						display: undefined,
						visibility: undefined,
						loop: !1,
						delay: !1,
						mobileHA: !0,
						_cacheValues: !0
					},
					init: function(element) {
						$.data(element, "velocity", {
							isSVG: Type.isSVG(element),
							isAnimating: !1,
							computedStyle: null,
							tweensContainer: null,
							rootPropertyValueCache: {},
							transformCache: {}
						})
					},
					hook: null,
					mock: !1,
					version: {
						major: 1,
						minor: 3,
						patch: 1
					},
					debug: !1
				};
				if (window.pageYOffset !== undefined) {
					Velocity.State.scrollAnchor = window;
					Velocity.State.scrollPropertyLeft = "pageXOffset";
					Velocity.State.scrollPropertyTop = "pageYOffset"
				} else {
					Velocity.State.scrollAnchor = document.documentElement || document.body.parentNode || document.body;
					Velocity.State.scrollPropertyLeft = "scrollLeft";
					Velocity.State.scrollPropertyTop = "scrollTop"
				}

				function Data(element) {
					var response = $.data(element, "velocity");
					return response === null ? undefined : response
				}

				function generateStep(steps) {
					return function(p) {
						return Math.round(p * steps) * (1 / steps)
					}
				}

				function generateBezier(mX1, mY1, mX2, mY2) {
					var NEWTON_ITERATIONS = 4,
						NEWTON_MIN_SLOPE = 0.001,
						SUBDIVISION_PRECISION = 0.0000001,
						SUBDIVISION_MAX_ITERATIONS = 10,
						kSplineTableSize = 11,
						kSampleStepSize = 1.0 / (kSplineTableSize - 1.0),
						float32ArraySupported = "Float32Array" in window;
					if (arguments.length !== 4) {
						return !1
					}
					for (var i = 0; i < 4; ++i) {
						if (typeof arguments[i] !== "number" || isNaN(arguments[i]) || !isFinite(arguments[i])) {
							return !1
						}
					}
					mX1 = Math.min(mX1, 1);
					mX2 = Math.min(mX2, 1);
					mX1 = Math.max(mX1, 0);
					mX2 = Math.max(mX2, 0);
					var mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);

					function A(aA1, aA2) {
						return 1.0 - 3.0 * aA2 + 3.0 * aA1
					}

					function B(aA1, aA2) {
						return 3.0 * aA2 - 6.0 * aA1
					}

					function C(aA1) {
						return 3.0 * aA1
					}

					function calcBezier(aT, aA1, aA2) {
						return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT
					}

					function getSlope(aT, aA1, aA2) {
						return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1)
					}

					function newtonRaphsonIterate(aX, aGuessT) {
						for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
							var currentSlope = getSlope(aGuessT, mX1, mX2);
							if (currentSlope === 0.0) {
								return aGuessT
							}
							var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
							aGuessT -= currentX / currentSlope
						}
						return aGuessT
					}

					function calcSampleValues() {
						for (var i = 0; i < kSplineTableSize; ++i) {
							mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2)
						}
					}

					function binarySubdivide(aX, aA, aB) {
						var currentX, currentT, i = 0;
						do {
							currentT = aA + (aB - aA) / 2.0;
							currentX = calcBezier(currentT, mX1, mX2) - aX;
							if (currentX > 0.0) {
								aB = currentT
							} else {
								aA = currentT
							}
						} while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);
						return currentT
					}

					function getTForX(aX) {
						var intervalStart = 0.0,
							currentSample = 1,
							lastSample = kSplineTableSize - 1;
						for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {
							intervalStart += kSampleStepSize
						}
						--currentSample;
						var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]),
							guessForT = intervalStart + dist * kSampleStepSize,
							initialSlope = getSlope(guessForT, mX1, mX2);
						if (initialSlope >= NEWTON_MIN_SLOPE) {
							return newtonRaphsonIterate(aX, guessForT)
						} else if (initialSlope === 0.0) {
							return guessForT
						} else {
							return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize)
						}
					}
					var _precomputed = !1;

					function precompute() {
						_precomputed = !0;
						if (mX1 !== mY1 || mX2 !== mY2) {
							calcSampleValues()
						}
					}
					var f = function(aX) {
						if (!_precomputed) {
							precompute()
						}
						if (mX1 === mY1 && mX2 === mY2) {
							return aX
						}
						if (aX === 0) {
							return 0
						}
						if (aX === 1) {
							return 1
						}
						return calcBezier(getTForX(aX), mY1, mY2)
					};
					f.getControlPoints = function() {
						return [{
							x: mX1,
							y: mY1
						}, {
							x: mX2,
							y: mY2
						}]
					};
					var str = "generateBezier(" + [mX1, mY1, mX2, mY2] + ")";
					f.toString = function() {
						return str
					};
					return f
				}
				var generateSpringRK4 = (function() {
					function springAccelerationForState(state) {
						return (-state.tension * state.x) - (state.friction * state.v)
					}

					function springEvaluateStateWithDerivative(initialState, dt, derivative) {
						var state = {
							x: initialState.x + derivative.dx * dt,
							v: initialState.v + derivative.dv * dt,
							tension: initialState.tension,
							friction: initialState.friction
						};
						return {
							dx: state.v,
							dv: springAccelerationForState(state)
						}
					}

					function springIntegrateState(state, dt) {
						var a = {
								dx: state.v,
								dv: springAccelerationForState(state)
							},
							b = springEvaluateStateWithDerivative(state, dt * 0.5, a),
							c = springEvaluateStateWithDerivative(state, dt * 0.5, b),
							d = springEvaluateStateWithDerivative(state, dt, c),
							dxdt = 1.0 / 6.0 * (a.dx + 2.0 * (b.dx + c.dx) + d.dx),
							dvdt = 1.0 / 6.0 * (a.dv + 2.0 * (b.dv + c.dv) + d.dv);
						state.x = state.x + dxdt * dt;
						state.v = state.v + dvdt * dt;
						return state
					}
					return function springRK4Factory(tension, friction, duration) {
						var initState = {
								x: -1,
								v: 0,
								tension: null,
								friction: null
							},
							path = [0],
							time_lapsed = 0,
							tolerance = 1 / 10000,
							DT = 16 / 1000,
							have_duration, dt, last_state;
						tension = parseFloat(tension) || 500;
						friction = parseFloat(friction) || 20;
						duration = duration || null;
						initState.tension = tension;
						initState.friction = friction;
						have_duration = duration !== null;
						if (have_duration) {
							time_lapsed = springRK4Factory(tension, friction);
							dt = time_lapsed / duration * DT
						} else {
							dt = DT
						}
						while (!0) {
							last_state = springIntegrateState(last_state || initState, dt);
							path.push(1 + last_state.x);
							time_lapsed += 16;
							if (!(Math.abs(last_state.x) > tolerance && Math.abs(last_state.v) > tolerance)) {
								break
							}
						}
						return !have_duration ? time_lapsed : function(percentComplete) {
							return path[(percentComplete * (path.length - 1)) | 0]
						}
					}
				}());
				Velocity.Easings = {
					linear: function(p) {
						return p
					},
					swing: function(p) {
						return 0.5 - Math.cos(p * Math.PI) / 2
					},
					spring: function(p) {
						return 1 - (Math.cos(p * 4.5 * Math.PI) * Math.exp(-p * 6))
					}
				};
				$.each([
					["ease", [0.25, 0.1, 0.25, 1.0]],
					["ease-in", [0.42, 0.0, 1.00, 1.0]],
					["ease-out", [0.00, 0.0, 0.58, 1.0]],
					["ease-in-out", [0.42, 0.0, 0.58, 1.0]],
					["easeInSine", [0.47, 0, 0.745, 0.715]],
					["easeOutSine", [0.39, 0.575, 0.565, 1]],
					["easeInOutSine", [0.445, 0.05, 0.55, 0.95]],
					["easeInQuad", [0.55, 0.085, 0.68, 0.53]],
					["easeOutQuad", [0.25, 0.46, 0.45, 0.94]],
					["easeInOutQuad", [0.455, 0.03, 0.515, 0.955]],
					["easeInCubic", [0.55, 0.055, 0.675, 0.19]],
					["easeOutCubic", [0.215, 0.61, 0.355, 1]],
					["easeInOutCubic", [0.645, 0.045, 0.355, 1]],
					["easeInQuart", [0.895, 0.03, 0.685, 0.22]],
					["easeOutQuart", [0.165, 0.84, 0.44, 1]],
					["easeInOutQuart", [0.77, 0, 0.175, 1]],
					["easeInQuint", [0.755, 0.05, 0.855, 0.06]],
					["easeOutQuint", [0.23, 1, 0.32, 1]],
					["easeInOutQuint", [0.86, 0, 0.07, 1]],
					["easeInExpo", [0.95, 0.05, 0.795, 0.035]],
					["easeOutExpo", [0.19, 1, 0.22, 1]],
					["easeInOutExpo", [1, 0, 0, 1]],
					["easeInCirc", [0.6, 0.04, 0.98, 0.335]],
					["easeOutCirc", [0.075, 0.82, 0.165, 1]],
					["easeInOutCirc", [0.785, 0.135, 0.15, 0.86]]
				], function(i, easingArray) {
					Velocity.Easings[easingArray[0]] = generateBezier.apply(null, easingArray[1])
				});

				function getEasing(value, duration) {
					var easing = value;
					if (Type.isString(value)) {
						if (!Velocity.Easings[value]) {
							easing = !1
						}
					} else if (Type.isArray(value) && value.length === 1) {
						easing = generateStep.apply(null, value)
					} else if (Type.isArray(value) && value.length === 2) {
						easing = generateSpringRK4.apply(null, value.concat([duration]))
					} else if (Type.isArray(value) && value.length === 4) {
						easing = generateBezier.apply(null, value)
					} else {
						easing = !1
					}
					if (easing === !1) {
						if (Velocity.Easings[Velocity.defaults.easing]) {
							easing = Velocity.defaults.easing
						} else {
							easing = EASING_DEFAULT
						}
					}
					return easing
				}
				var CSS = Velocity.CSS = {
					RegEx: {
						isHex: /^#([A-f\d]{3}){1,2}$/i,
						valueUnwrap: /^[A-z]+\((.*)\)$/i,
						wrappedValueAlreadyExtracted: /[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,
						valueSplit: /([A-z]+\(.+\))|(([A-z0-9#-.]+?)(?=\s|$))/ig
					},
					Lists: {
						colors: ["fill", "stroke", "stopColor", "color", "backgroundColor", "borderColor", "borderTopColor", "borderRightColor", "borderBottomColor", "borderLeftColor", "outlineColor"],
						transformsBase: ["translateX", "translateY", "scale", "scaleX", "scaleY", "skewX", "skewY", "rotateZ"],
						transforms3D: ["transformPerspective", "translateZ", "scaleZ", "rotateX", "rotateY"]
					},
					Hooks: {
						templates: {
							"textShadow": ["Color X Y Blur", "black 0px 0px 0px"],
							"boxShadow": ["Color X Y Blur Spread", "black 0px 0px 0px 0px"],
							"clip": ["Top Right Bottom Left", "0px 0px 0px 0px"],
							"backgroundPosition": ["X Y", "0% 0%"],
							"transformOrigin": ["X Y Z", "50% 50% 0px"],
							"perspectiveOrigin": ["X Y", "50% 50%"]
						},
						registered: {},
						register: function() {
							for (var i = 0; i < CSS.Lists.colors.length; i++) {
								var rgbComponents = (CSS.Lists.colors[i] === "color") ? "0 0 0 1" : "255 255 255 1";
								CSS.Hooks.templates[CSS.Lists.colors[i]] = ["Red Green Blue Alpha", rgbComponents]
							}
							var rootProperty, hookTemplate, hookNames;
							if (IE) {
								for (rootProperty in CSS.Hooks.templates) {
									if (!CSS.Hooks.templates.hasOwnProperty(rootProperty)) {
										continue
									}
									hookTemplate = CSS.Hooks.templates[rootProperty];
									hookNames = hookTemplate[0].split(" ");
									var defaultValues = hookTemplate[1].match(CSS.RegEx.valueSplit);
									if (hookNames[0] === "Color") {
										hookNames.push(hookNames.shift());
										defaultValues.push(defaultValues.shift());
										CSS.Hooks.templates[rootProperty] = [hookNames.join(" "), defaultValues.join(" ")]
									}
								}
							}
							for (rootProperty in CSS.Hooks.templates) {
								if (!CSS.Hooks.templates.hasOwnProperty(rootProperty)) {
									continue
								}
								hookTemplate = CSS.Hooks.templates[rootProperty];
								hookNames = hookTemplate[0].split(" ");
								for (var j in hookNames) {
									if (!hookNames.hasOwnProperty(j)) {
										continue
									}
									var fullHookName = rootProperty + hookNames[j],
										hookPosition = j;
									CSS.Hooks.registered[fullHookName] = [rootProperty, hookPosition]
								}
							}
						},
						getRoot: function(property) {
							var hookData = CSS.Hooks.registered[property];
							if (hookData) {
								return hookData[0]
							} else {
								return property
							}
						},
						cleanRootPropertyValue: function(rootProperty, rootPropertyValue) {
							if (CSS.RegEx.valueUnwrap.test(rootPropertyValue)) {
								rootPropertyValue = rootPropertyValue.match(CSS.RegEx.valueUnwrap)[1]
							}
							if (CSS.Values.isCSSNullValue(rootPropertyValue)) {
								rootPropertyValue = CSS.Hooks.templates[rootProperty][1]
							}
							return rootPropertyValue
						},
						extractValue: function(fullHookName, rootPropertyValue) {
							var hookData = CSS.Hooks.registered[fullHookName];
							if (hookData) {
								var hookRoot = hookData[0],
									hookPosition = hookData[1];
								rootPropertyValue = CSS.Hooks.cleanRootPropertyValue(hookRoot, rootPropertyValue);
								return rootPropertyValue.toString().match(CSS.RegEx.valueSplit)[hookPosition]
							} else {
								return rootPropertyValue
							}
						},
						injectValue: function(fullHookName, hookValue, rootPropertyValue) {
							var hookData = CSS.Hooks.registered[fullHookName];
							if (hookData) {
								var hookRoot = hookData[0],
									hookPosition = hookData[1],
									rootPropertyValueParts, rootPropertyValueUpdated;
								rootPropertyValue = CSS.Hooks.cleanRootPropertyValue(hookRoot, rootPropertyValue);
								rootPropertyValueParts = rootPropertyValue.toString().match(CSS.RegEx.valueSplit);
								rootPropertyValueParts[hookPosition] = hookValue;
								rootPropertyValueUpdated = rootPropertyValueParts.join(" ");
								return rootPropertyValueUpdated
							} else {
								return rootPropertyValue
							}
						}
					},
					Normalizations: {
						registered: {
							clip: function(type, element, propertyValue) {
								switch (type) {
									case "name":
										return "clip";
									case "extract":
										var extracted;
										if (CSS.RegEx.wrappedValueAlreadyExtracted.test(propertyValue)) {
											extracted = propertyValue
										} else {
											extracted = propertyValue.toString().match(CSS.RegEx.valueUnwrap);
											extracted = extracted ? extracted[1].replace(/,(\s+)?/g, " ") : propertyValue
										}
										return extracted;
									case "inject":
										return "rect(" + propertyValue + ")"
								}
							},
							blur: function(type, element, propertyValue) {
								switch (type) {
									case "name":
										return Velocity.State.isFirefox ? "filter" : "-webkit-filter";
									case "extract":
										var extracted = parseFloat(propertyValue);
										if (!(extracted || extracted === 0)) {
											var blurComponent = propertyValue.toString().match(/blur\(([0-9]+[A-z]+)\)/i);
											if (blurComponent) {
												extracted = blurComponent[1]
											} else {
												extracted = 0
											}
										}
										return extracted;
									case "inject":
										if (!parseFloat(propertyValue)) {
											return "none"
										} else {
											return "blur(" + propertyValue + ")"
										}
								}
							},
							opacity: function(type, element, propertyValue) {
								if (IE <= 8) {
									switch (type) {
										case "name":
											return "filter";
										case "extract":
											var extracted = propertyValue.toString().match(/alpha\(opacity=(.*)\)/i);
											if (extracted) {
												propertyValue = extracted[1] / 100
											} else {
												propertyValue = 1
											}
											return propertyValue;
										case "inject":
											element.style.zoom = 1;
											if (parseFloat(propertyValue) >= 1) {
												return ""
											} else {
												return "alpha(opacity=" + parseInt(parseFloat(propertyValue) * 100, 10) + ")"
											}
									}
								} else {
									switch (type) {
										case "name":
											return "opacity";
										case "extract":
											return propertyValue;
										case "inject":
											return propertyValue
									}
								}
							}
						},
						register: function() {
							if ((!IE || IE > 9) && !Velocity.State.isGingerbread) {
								CSS.Lists.transformsBase = CSS.Lists.transformsBase.concat(CSS.Lists.transforms3D)
							}
							for (var i = 0; i < CSS.Lists.transformsBase.length; i++) {
								(function() {
									var transformName = CSS.Lists.transformsBase[i];
									CSS.Normalizations.registered[transformName] = function(type, element, propertyValue) {
										switch (type) {
											case "name":
												return "transform";
											case "extract":
												if (Data(element) === undefined || Data(element).transformCache[transformName] === undefined) {
													return /^scale/i.test(transformName) ? 1 : 0
												}
												return Data(element).transformCache[transformName].replace(/[()]/g, "");
											case "inject":
												var invalid = !1;
												switch (transformName.substr(0, transformName.length - 1)) {
													case "translate":
														invalid = !/(%|px|em|rem|vw|vh|\d)$/i.test(propertyValue);
														break;
													case "scal":
													case "scale":
														if (Velocity.State.isAndroid && Data(element).transformCache[transformName] === undefined && propertyValue < 1) {
															propertyValue = 1
														}
														invalid = !/(\d)$/i.test(propertyValue);
														break;
													case "skew":
														invalid = !/(deg|\d)$/i.test(propertyValue);
														break;
													case "rotate":
														invalid = !/(deg|\d)$/i.test(propertyValue);
														break
												}
												if (!invalid) {
													Data(element).transformCache[transformName] = "(" + propertyValue + ")"
												}
												return Data(element).transformCache[transformName]
										}
									}
								})()
							}
							for (var j = 0; j < CSS.Lists.colors.length; j++) {
								(function() {
									var colorName = CSS.Lists.colors[j];
									CSS.Normalizations.registered[colorName] = function(type, element, propertyValue) {
										switch (type) {
											case "name":
												return colorName;
											case "extract":
												var extracted;
												if (CSS.RegEx.wrappedValueAlreadyExtracted.test(propertyValue)) {
													extracted = propertyValue
												} else {
													var converted, colorNames = {
														black: "rgb(0, 0, 0)",
														blue: "rgb(0, 0, 255)",
														gray: "rgb(128, 128, 128)",
														green: "rgb(0, 128, 0)",
														red: "rgb(255, 0, 0)",
														white: "rgb(255, 255, 255)"
													};
													if (/^[A-z]+$/i.test(propertyValue)) {
														if (colorNames[propertyValue] !== undefined) {
															converted = colorNames[propertyValue]
														} else {
															converted = colorNames.black
														}
													} else if (CSS.RegEx.isHex.test(propertyValue)) {
														converted = "rgb(" + CSS.Values.hexToRgb(propertyValue).join(" ") + ")"
													} else if (!(/^rgba?\(/i.test(propertyValue))) {
														converted = colorNames.black
													}
													extracted = (converted || propertyValue).toString().match(CSS.RegEx.valueUnwrap)[1].replace(/,(\s+)?/g, " ")
												}
												if ((!IE || IE > 8) && extracted.split(" ").length === 3) {
													extracted += " 1"
												}
												return extracted;
											case "inject":
												if (IE <= 8) {
													if (propertyValue.split(" ").length === 4) {
														propertyValue = propertyValue.split(/\s+/).slice(0, 3).join(" ")
													}
												} else if (propertyValue.split(" ").length === 3) {
													propertyValue += " 1"
												}
												return (IE <= 8 ? "rgb" : "rgba") + "(" + propertyValue.replace(/\s+/g, ",").replace(/\.(\d)+(?=,)/g, "") + ")"
										}
									}
								})()
							}
						}
					},
					Names: {
						camelCase: function(property) {
							return property.replace(/-(\w)/g, function(match, subMatch) {
								return subMatch.toUpperCase()
							})
						},
						SVGAttribute: function(property) {
							var SVGAttributes = "width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2";
							if (IE || (Velocity.State.isAndroid && !Velocity.State.isChrome)) {
								SVGAttributes += "|transform"
							}
							return new RegExp("^(" + SVGAttributes + ")$", "i").test(property)
						},
						prefixCheck: function(property) {
							if (Velocity.State.prefixMatches[property]) {
								return [Velocity.State.prefixMatches[property], !0]
							} else {
								var vendors = ["", "Webkit", "Moz", "ms", "O"];
								for (var i = 0, vendorsLength = vendors.length; i < vendorsLength; i++) {
									var propertyPrefixed;
									if (i === 0) {
										propertyPrefixed = property
									} else {
										propertyPrefixed = vendors[i] + property.replace(/^\w/, function(match) {
											return match.toUpperCase()
										})
									}
									if (Type.isString(Velocity.State.prefixElement.style[propertyPrefixed])) {
										Velocity.State.prefixMatches[property] = propertyPrefixed;
										return [propertyPrefixed, !0]
									}
								}
								return [property, !1]
							}
						}
					},
					Values: {
						hexToRgb: function(hex) {
							var shortformRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i,
								longformRegex = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
								rgbParts;
							hex = hex.replace(shortformRegex, function(m, r, g, b) {
								return r + r + g + g + b + b
							});
							rgbParts = longformRegex.exec(hex);
							return rgbParts ? [parseInt(rgbParts[1], 16), parseInt(rgbParts[2], 16), parseInt(rgbParts[3], 16)] : [0, 0, 0]
						},
						isCSSNullValue: function(value) {
							return (!value || /^(none|auto|transparent|(rgba\(0, ?0, ?0, ?0\)))$/i.test(value))
						},
						getUnitType: function(property) {
							if (/^(rotate|skew)/i.test(property)) {
								return "deg"
							} else if (/(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(property)) {
								return ""
							} else {
								return "px"
							}
						},
						getDisplayType: function(element) {
							var tagName = element && element.tagName.toString().toLowerCase();
							if (/^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(tagName)) {
								return "inline"
							} else if (/^(li)$/i.test(tagName)) {
								return "list-item"
							} else if (/^(tr)$/i.test(tagName)) {
								return "table-row"
							} else if (/^(table)$/i.test(tagName)) {
								return "table"
							} else if (/^(tbody)$/i.test(tagName)) {
								return "table-row-group"
							} else {
								return "block"
							}
						},
						addClass: function(element, className) {
							if (element.classList) {
								element.classList.add(className)
							} else {
								element.className += (element.className.length ? " " : "") + className
							}
						},
						removeClass: function(element, className) {
							if (element.classList) {
								element.classList.remove(className)
							} else {
								element.className = element.className.toString().replace(new RegExp("(^|\\s)" + className.split(" ").join("|") + "(\\s|$)", "gi"), " ")
							}
						}
					},
					getPropertyValue: function(element, property, rootPropertyValue, forceStyleLookup) {
						function computePropertyValue(element, property) {
							var computedValue = 0;
							if (IE <= 8) {
								computedValue = $.css(element, property)
							} else {
								var toggleDisplay = !1;
								if (/^(width|height)$/.test(property) && CSS.getPropertyValue(element, "display") === 0) {
									toggleDisplay = !0;
									CSS.setPropertyValue(element, "display", CSS.Values.getDisplayType(element))
								}
								var revertDisplay = function() {
									if (toggleDisplay) {
										CSS.setPropertyValue(element, "display", "none")
									}
								};
								if (!forceStyleLookup) {
									if (property === "height" && CSS.getPropertyValue(element, "boxSizing").toString().toLowerCase() !== "border-box") {
										var contentBoxHeight = element.offsetHeight - (parseFloat(CSS.getPropertyValue(element, "borderTopWidth")) || 0) - (parseFloat(CSS.getPropertyValue(element, "borderBottomWidth")) || 0) - (parseFloat(CSS.getPropertyValue(element, "paddingTop")) || 0) - (parseFloat(CSS.getPropertyValue(element, "paddingBottom")) || 0);
										revertDisplay();
										return contentBoxHeight
									} else if (property === "width" && CSS.getPropertyValue(element, "boxSizing").toString().toLowerCase() !== "border-box") {
										var contentBoxWidth = element.offsetWidth - (parseFloat(CSS.getPropertyValue(element, "borderLeftWidth")) || 0) - (parseFloat(CSS.getPropertyValue(element, "borderRightWidth")) || 0) - (parseFloat(CSS.getPropertyValue(element, "paddingLeft")) || 0) - (parseFloat(CSS.getPropertyValue(element, "paddingRight")) || 0);
										revertDisplay();
										return contentBoxWidth
									}
								}
								var computedStyle;
								if (Data(element) === undefined) {
									computedStyle = window.getComputedStyle(element, null)
								} else if (!Data(element).computedStyle) {
									computedStyle = Data(element).computedStyle = window.getComputedStyle(element, null)
								} else {
									computedStyle = Data(element).computedStyle
								}
								if (property === "borderColor") {
									property = "borderTopColor"
								}
								if (IE === 9 && property === "filter") {
									computedValue = computedStyle.getPropertyValue(property)
								} else {
									computedValue = computedStyle[property]
								}
								if (computedValue === "" || computedValue === null) {
									computedValue = element.style[property]
								}
								revertDisplay()
							}
							if (computedValue === "auto" && /^(top|right|bottom|left)$/i.test(property)) {
								var position = computePropertyValue(element, "position");
								if (position === "fixed" || (position === "absolute" && /top|left/i.test(property))) {
									computedValue = $(element).position()[property] + "px"
								}
							}
							return computedValue
						}
						var propertyValue;
						if (CSS.Hooks.registered[property]) {
							var hook = property,
								hookRoot = CSS.Hooks.getRoot(hook);
							if (rootPropertyValue === undefined) {
								rootPropertyValue = CSS.getPropertyValue(element, CSS.Names.prefixCheck(hookRoot)[0])
							}
							if (CSS.Normalizations.registered[hookRoot]) {
								rootPropertyValue = CSS.Normalizations.registered[hookRoot]("extract", element, rootPropertyValue)
							}
							propertyValue = CSS.Hooks.extractValue(hook, rootPropertyValue)
						} else if (CSS.Normalizations.registered[property]) {
							var normalizedPropertyName, normalizedPropertyValue;
							normalizedPropertyName = CSS.Normalizations.registered[property]("name", element);
							if (normalizedPropertyName !== "transform") {
								normalizedPropertyValue = computePropertyValue(element, CSS.Names.prefixCheck(normalizedPropertyName)[0]);
								if (CSS.Values.isCSSNullValue(normalizedPropertyValue) && CSS.Hooks.templates[property]) {
									normalizedPropertyValue = CSS.Hooks.templates[property][1]
								}
							}
							propertyValue = CSS.Normalizations.registered[property]("extract", element, normalizedPropertyValue)
						}
						if (!/^[\d-]/.test(propertyValue)) {
							var data = Data(element);
							if (data && data.isSVG && CSS.Names.SVGAttribute(property)) {
								if (/^(height|width)$/i.test(property)) {
									try {
										propertyValue = element.getBBox()[property]
									} catch (error) {
										propertyValue = 0
									}
								} else {
									propertyValue = element.getAttribute(property)
								}
							} else {
								propertyValue = computePropertyValue(element, CSS.Names.prefixCheck(property)[0])
							}
						}
						if (CSS.Values.isCSSNullValue(propertyValue)) {
							propertyValue = 0
						}
						if (Velocity.debug >= 2) {
							console.log("Get " + property + ": " + propertyValue)
						}
						return propertyValue
					},
					setPropertyValue: function(element, property, propertyValue, rootPropertyValue, scrollData) {
						var propertyName = property;
						if (property === "scroll") {
							if (scrollData.container) {
								scrollData.container["scroll" + scrollData.direction] = propertyValue
							} else {
								if (scrollData.direction === "Left") {
									window.scrollTo(propertyValue, scrollData.alternateValue)
								} else {
									window.scrollTo(scrollData.alternateValue, propertyValue)
								}
							}
						} else {
							if (CSS.Normalizations.registered[property] && CSS.Normalizations.registered[property]("name", element) === "transform") {
								CSS.Normalizations.registered[property]("inject", element, propertyValue);
								propertyName = "transform";
								propertyValue = Data(element).transformCache[property]
							} else {
								if (CSS.Hooks.registered[property]) {
									var hookName = property,
										hookRoot = CSS.Hooks.getRoot(property);
									rootPropertyValue = rootPropertyValue || CSS.getPropertyValue(element, hookRoot);
									propertyValue = CSS.Hooks.injectValue(hookName, propertyValue, rootPropertyValue);
									property = hookRoot
								}
								if (CSS.Normalizations.registered[property]) {
									propertyValue = CSS.Normalizations.registered[property]("inject", element, propertyValue);
									property = CSS.Normalizations.registered[property]("name", element)
								}
								propertyName = CSS.Names.prefixCheck(property)[0];
								if (IE <= 8) {
									try {
										element.style[propertyName] = propertyValue
									} catch (error) {
										if (Velocity.debug) {
											console.log("Browser does not support [" + propertyValue + "] for [" + propertyName + "]")
										}
									}
								} else {
									var data = Data(element);
									if (data && data.isSVG && CSS.Names.SVGAttribute(property)) {
										element.setAttribute(property, propertyValue)
									} else {
										element.style[propertyName] = propertyValue
									}
								}
								if (Velocity.debug >= 2) {
									console.log("Set " + property + " (" + propertyName + "): " + propertyValue)
								}
							}
						}
						return [propertyName, propertyValue]
					},
					flushTransformCache: function(element) {
						var transformString = "",
							data = Data(element);
						if ((IE || (Velocity.State.isAndroid && !Velocity.State.isChrome)) && data && data.isSVG) {
							var getTransformFloat = function(transformProperty) {
								return parseFloat(CSS.getPropertyValue(element, transformProperty))
							};
							var SVGTransforms = {
								translate: [getTransformFloat("translateX"), getTransformFloat("translateY")],
								skewX: [getTransformFloat("skewX")],
								skewY: [getTransformFloat("skewY")],
								scale: getTransformFloat("scale") !== 1 ? [getTransformFloat("scale"), getTransformFloat("scale")] : [getTransformFloat("scaleX"), getTransformFloat("scaleY")],
								rotate: [getTransformFloat("rotateZ"), 0, 0]
							};
							$.each(Data(element).transformCache, function(transformName) {
								if (/^translate/i.test(transformName)) {
									transformName = "translate"
								} else if (/^scale/i.test(transformName)) {
									transformName = "scale"
								} else if (/^rotate/i.test(transformName)) {
									transformName = "rotate"
								}
								if (SVGTransforms[transformName]) {
									transformString += transformName + "(" + SVGTransforms[transformName].join(" ") + ")" + " ";
									delete SVGTransforms[transformName]
								}
							})
						} else {
							var transformValue, perspective;
							$.each(Data(element).transformCache, function(transformName) {
								transformValue = Data(element).transformCache[transformName];
								if (transformName === "transformPerspective") {
									perspective = transformValue;
									return !0
								}
								if (IE === 9 && transformName === "rotateZ") {
									transformName = "rotate"
								}
								transformString += transformName + transformValue + " "
							});
							if (perspective) {
								transformString = "perspective" + perspective + " " + transformString
							}
						}
						CSS.setPropertyValue(element, "transform", transformString)
					}
				};
				CSS.Hooks.register();
				CSS.Normalizations.register();
				Velocity.hook = function(elements, arg2, arg3) {
					var value;
					elements = sanitizeElements(elements);
					$.each(elements, function(i, element) {
						if (Data(element) === undefined) {
							Velocity.init(element)
						}
						if (arg3 === undefined) {
							if (value === undefined) {
								value = Velocity.CSS.getPropertyValue(element, arg2)
							}
						} else {
							var adjustedSet = Velocity.CSS.setPropertyValue(element, arg2, arg3);
							if (adjustedSet[0] === "transform") {
								Velocity.CSS.flushTransformCache(element)
							}
							value = adjustedSet
						}
					});
					return value
				};
				var animate = function() {
					var opts;

					function getChain() {
						if (isUtility) {
							return promiseData.promise || null
						} else {
							return elementsWrapped
						}
					}
					var syntacticSugar = (arguments[0] && (arguments[0].p || (($.isPlainObject(arguments[0].properties) && !arguments[0].properties.names) || Type.isString(arguments[0].properties)))),
						isUtility, elementsWrapped, argumentIndex;
					var elements, propertiesMap, options;
					if (Type.isWrapped(this)) {
						isUtility = !1;
						argumentIndex = 0;
						elements = this;
						elementsWrapped = this
					} else {
						isUtility = !0;
						argumentIndex = 1;
						elements = syntacticSugar ? (arguments[0].elements || arguments[0].e) : arguments[0]
					}
					elements = sanitizeElements(elements);
					if (!elements) {
						return
					}
					if (syntacticSugar) {
						propertiesMap = arguments[0].properties || arguments[0].p;
						options = arguments[0].options || arguments[0].o
					} else {
						propertiesMap = arguments[argumentIndex];
						options = arguments[argumentIndex + 1]
					}
					var elementsLength = elements.length,
						elementsIndex = 0;
					if (!/^(stop|finish|finishAll)$/i.test(propertiesMap) && !$.isPlainObject(options)) {
						var startingArgumentPosition = argumentIndex + 1;
						options = {};
						for (var i = startingArgumentPosition; i < arguments.length; i++) {
							if (!Type.isArray(arguments[i]) && (/^(fast|normal|slow)$/i.test(arguments[i]) || /^\d/.test(arguments[i]))) {
								options.duration = arguments[i]
							} else if (Type.isString(arguments[i]) || Type.isArray(arguments[i])) {
								options.easing = arguments[i]
							} else if (Type.isFunction(arguments[i])) {
								options.complete = arguments[i]
							}
						}
					}
					var promiseData = {
						promise: null,
						resolver: null,
						rejecter: null
					};
					if (isUtility && Velocity.Promise) {
						promiseData.promise = new Velocity.Promise(function(resolve, reject) {
							promiseData.resolver = resolve;
							promiseData.rejecter = reject
						})
					}
					var action;
					switch (propertiesMap) {
						case "scroll":
							action = "scroll";
							break;
						case "reverse":
							action = "reverse";
							break;
						case "finish":
						case "finishAll":
						case "stop":
							$.each(elements, function(i, element) {
								if (Data(element) && Data(element).delayTimer) {
									clearTimeout(Data(element).delayTimer.setTimeout);
									if (Data(element).delayTimer.next) {
										Data(element).delayTimer.next()
									}
									delete Data(element).delayTimer
								}
								if (propertiesMap === "finishAll" && (options === !0 || Type.isString(options))) {
									$.each($.queue(element, Type.isString(options) ? options : ""), function(_, item) {
										if (Type.isFunction(item)) {
											item()
										}
									});
									$.queue(element, Type.isString(options) ? options : "", [])
								}
							});
							var callsToStop = [];
							$.each(Velocity.State.calls, function(i, activeCall) {
								if (activeCall) {
									$.each(activeCall[1], function(k, activeElement) {
										var queueName = (options === undefined) ? "" : options;
										if (queueName !== !0 && (activeCall[2].queue !== queueName) && !(options === undefined && activeCall[2].queue === !1)) {
											return !0
										}
										$.each(elements, function(l, element) {
											if (element === activeElement) {
												if (options === !0 || Type.isString(options)) {
													$.each($.queue(element, Type.isString(options) ? options : ""), function(_, item) {
														if (Type.isFunction(item)) {
															item(null, !0)
														}
													});
													$.queue(element, Type.isString(options) ? options : "", [])
												}
												if (propertiesMap === "stop") {
													var data = Data(element);
													if (data && data.tweensContainer && queueName !== !1) {
														$.each(data.tweensContainer, function(m, activeTween) {
															activeTween.endValue = activeTween.currentValue
														})
													}
													callsToStop.push(i)
												} else if (propertiesMap === "finish" || propertiesMap === "finishAll") {
													activeCall[2].duration = 1
												}
											}
										})
									})
								}
							});
							if (propertiesMap === "stop") {
								$.each(callsToStop, function(i, j) {
									completeCall(j, !0)
								});
								if (promiseData.promise) {
									promiseData.resolver(elements)
								}
							}
							return getChain();
						default:
							if ($.isPlainObject(propertiesMap) && !Type.isEmptyObject(propertiesMap)) {
								action = "start"
							} else if (Type.isString(propertiesMap) && Velocity.Redirects[propertiesMap]) {
								opts = $.extend({}, options);
								var durationOriginal = opts.duration,
									delayOriginal = opts.delay || 0;
								if (opts.backwards === !0) {
									elements = $.extend(!0, [], elements).reverse()
								}
								$.each(elements, function(elementIndex, element) {
									if (parseFloat(opts.stagger)) {
										opts.delay = delayOriginal + (parseFloat(opts.stagger) * elementIndex)
									} else if (Type.isFunction(opts.stagger)) {
										opts.delay = delayOriginal + opts.stagger.call(element, elementIndex, elementsLength)
									}
									if (opts.drag) {
										opts.duration = parseFloat(durationOriginal) || (/^(callout|transition)/.test(propertiesMap) ? 1000 : DURATION_DEFAULT);
										opts.duration = Math.max(opts.duration * (opts.backwards ? 1 - elementIndex / elementsLength : (elementIndex + 1) / elementsLength), opts.duration * 0.75, 200)
									}
									Velocity.Redirects[propertiesMap].call(element, element, opts || {}, elementIndex, elementsLength, elements, promiseData.promise ? promiseData : undefined)
								});
								return getChain()
							} else {
								var abortError = "Velocity: First argument (" + propertiesMap + ") was not a property map, a known action, or a registered redirect. Aborting.";
								if (promiseData.promise) {
									promiseData.rejecter(new Error(abortError))
								} else {
									console.log(abortError)
								}
								return getChain()
							}
					}
					var callUnitConversionData = {
						lastParent: null,
						lastPosition: null,
						lastFontSize: null,
						lastPercentToPxWidth: null,
						lastPercentToPxHeight: null,
						lastEmToPx: null,
						remToPx: null,
						vwToPx: null,
						vhToPx: null
					};
					var call = [];

					function processElement(element, elementArrayIndex) {
						var
							opts = $.extend({}, Velocity.defaults, options),
							tweensContainer = {},
							elementUnitConversionData;
						if (Data(element) === undefined) {
							Velocity.init(element)
						}
						if (parseFloat(opts.delay) && opts.queue !== !1) {
							$.queue(element, opts.queue, function(next) {
								Velocity.velocityQueueEntryFlag = !0;
								Data(element).delayTimer = {
									setTimeout: setTimeout(next, parseFloat(opts.delay)),
									next: next
								}
							})
						}
						switch (opts.duration.toString().toLowerCase()) {
							case "fast":
								opts.duration = 200;
								break;
							case "normal":
								opts.duration = DURATION_DEFAULT;
								break;
							case "slow":
								opts.duration = 600;
								break;
							default:
								opts.duration = parseFloat(opts.duration) || 1
						}
						if (Velocity.mock !== !1) {
							if (Velocity.mock === !0) {
								opts.duration = opts.delay = 1
							} else {
								opts.duration *= parseFloat(Velocity.mock) || 1;
								opts.delay *= parseFloat(Velocity.mock) || 1
							}
						}
						opts.easing = getEasing(opts.easing, opts.duration);
						if (opts.begin && !Type.isFunction(opts.begin)) {
							opts.begin = null
						}
						if (opts.progress && !Type.isFunction(opts.progress)) {
							opts.progress = null
						}
						if (opts.complete && !Type.isFunction(opts.complete)) {
							opts.complete = null
						}
						if (opts.display !== undefined && opts.display !== null) {
							opts.display = opts.display.toString().toLowerCase();
							if (opts.display === "auto") {
								opts.display = Velocity.CSS.Values.getDisplayType(element)
							}
						}
						if (opts.visibility !== undefined && opts.visibility !== null) {
							opts.visibility = opts.visibility.toString().toLowerCase()
						}
						opts.mobileHA = (opts.mobileHA && Velocity.State.isMobile && !Velocity.State.isGingerbread);

						function buildQueue(next) {
							var data, lastTweensContainer;
							if (opts.begin && elementsIndex === 0) {
								try {
									opts.begin.call(elements, elements)
								} catch (error) {
									setTimeout(function() {
										throw error
									}, 1)
								}
							}
							if (action === "scroll") {
								var scrollDirection = (/^x$/i.test(opts.axis) ? "Left" : "Top"),
									scrollOffset = parseFloat(opts.offset) || 0,
									scrollPositionCurrent, scrollPositionCurrentAlternate, scrollPositionEnd;
								if (opts.container) {
									if (Type.isWrapped(opts.container) || Type.isNode(opts.container)) {
										opts.container = opts.container[0] || opts.container;
										scrollPositionCurrent = opts.container["scroll" + scrollDirection];
										scrollPositionEnd = (scrollPositionCurrent + $(element).position()[scrollDirection.toLowerCase()]) + scrollOffset
									} else {
										opts.container = null
									}
								} else {
									scrollPositionCurrent = Velocity.State.scrollAnchor[Velocity.State["scrollProperty" + scrollDirection]];
									scrollPositionCurrentAlternate = Velocity.State.scrollAnchor[Velocity.State["scrollProperty" + (scrollDirection === "Left" ? "Top" : "Left")]];
									scrollPositionEnd = $(element).offset()[scrollDirection.toLowerCase()] + scrollOffset
								}
								tweensContainer = {
									scroll: {
										rootPropertyValue: !1,
										startValue: scrollPositionCurrent,
										currentValue: scrollPositionCurrent,
										endValue: scrollPositionEnd,
										unitType: "",
										easing: opts.easing,
										scrollData: {
											container: opts.container,
											direction: scrollDirection,
											alternateValue: scrollPositionCurrentAlternate
										}
									},
									element: element
								};
								if (Velocity.debug) {
									console.log("tweensContainer (scroll): ", tweensContainer.scroll, element)
								}
							} else if (action === "reverse") {
								data = Data(element);
								if (!data) {
									return
								}
								if (!data.tweensContainer) {
									$.dequeue(element, opts.queue);
									return
								} else {
									if (data.opts.display === "none") {
										data.opts.display = "auto"
									}
									if (data.opts.visibility === "hidden") {
										data.opts.visibility = "visible"
									}
									data.opts.loop = !1;
									data.opts.begin = null;
									data.opts.complete = null;
									if (!options.easing) {
										delete opts.easing
									}
									if (!options.duration) {
										delete opts.duration
									}
									opts = $.extend({}, data.opts, opts);
									lastTweensContainer = $.extend(!0, {}, data ? data.tweensContainer : null);
									for (var lastTween in lastTweensContainer) {
										if (lastTweensContainer.hasOwnProperty(lastTween) && lastTween !== "element") {
											var lastStartValue = lastTweensContainer[lastTween].startValue;
											lastTweensContainer[lastTween].startValue = lastTweensContainer[lastTween].currentValue = lastTweensContainer[lastTween].endValue;
											lastTweensContainer[lastTween].endValue = lastStartValue;
											if (!Type.isEmptyObject(options)) {
												lastTweensContainer[lastTween].easing = opts.easing
											}
											if (Velocity.debug) {
												console.log("reverse tweensContainer (" + lastTween + "): " + JSON.stringify(lastTweensContainer[lastTween]), element)
											}
										}
									}
									tweensContainer = lastTweensContainer
								}
							} else if (action === "start") {
								data = Data(element);
								if (data && data.tweensContainer && data.isAnimating === !0) {
									lastTweensContainer = data.tweensContainer
								}
								var parsePropertyValue = function(valueData, skipResolvingEasing) {
									var endValue, easing, startValue;
									if (Type.isArray(valueData)) {
										endValue = valueData[0];
										if ((!Type.isArray(valueData[1]) && /^[\d-]/.test(valueData[1])) || Type.isFunction(valueData[1]) || CSS.RegEx.isHex.test(valueData[1])) {
											startValue = valueData[1]
										} else if ((Type.isString(valueData[1]) && !CSS.RegEx.isHex.test(valueData[1])) || Type.isArray(valueData[1])) {
											easing = skipResolvingEasing ? valueData[1] : getEasing(valueData[1], opts.duration);
											if (valueData[2] !== undefined) {
												startValue = valueData[2]
											}
										}
									} else {
										endValue = valueData
									}
									if (!skipResolvingEasing) {
										easing = easing || opts.easing
									}
									if (Type.isFunction(endValue)) {
										endValue = endValue.call(element, elementArrayIndex, elementsLength)
									}
									if (Type.isFunction(startValue)) {
										startValue = startValue.call(element, elementArrayIndex, elementsLength)
									}
									return [endValue || 0, easing, startValue]
								};
								$.each(propertiesMap, function(property, value) {
									if (RegExp("^" + CSS.Lists.colors.join("$|^") + "$").test(CSS.Names.camelCase(property))) {
										var valueData = parsePropertyValue(value, !0),
											endValue = valueData[0],
											easing = valueData[1],
											startValue = valueData[2];
										if (CSS.RegEx.isHex.test(endValue)) {
											var colorComponents = ["Red", "Green", "Blue"],
												endValueRGB = CSS.Values.hexToRgb(endValue),
												startValueRGB = startValue ? CSS.Values.hexToRgb(startValue) : undefined;
											for (var i = 0; i < colorComponents.length; i++) {
												var dataArray = [endValueRGB[i]];
												if (easing) {
													dataArray.push(easing)
												}
												if (startValueRGB !== undefined) {
													dataArray.push(startValueRGB[i])
												}
												propertiesMap[CSS.Names.camelCase(property) + colorComponents[i]] = dataArray
											}
											delete propertiesMap[property]
										}
									}
								});
								for (var property in propertiesMap) {
									if (!propertiesMap.hasOwnProperty(property)) {
										continue
									}
									var valueData = parsePropertyValue(propertiesMap[property]),
										endValue = valueData[0],
										easing = valueData[1],
										startValue = valueData[2];
									property = CSS.Names.camelCase(property);
									var rootProperty = CSS.Hooks.getRoot(property),
										rootPropertyValue = !1;
									if ((!data || !data.isSVG) && rootProperty !== "tween" && CSS.Names.prefixCheck(rootProperty)[1] === !1 && CSS.Normalizations.registered[rootProperty] === undefined) {
										if (Velocity.debug) {
											console.log("Skipping [" + rootProperty + "] due to a lack of browser support.")
										}
										continue
									}
									if (((opts.display !== undefined && opts.display !== null && opts.display !== "none") || (opts.visibility !== undefined && opts.visibility !== "hidden")) && /opacity|filter/.test(property) && !startValue && endValue !== 0) {
										startValue = 0
									}
									if (opts._cacheValues && lastTweensContainer && lastTweensContainer[property]) {
										if (startValue === undefined) {
											startValue = lastTweensContainer[property].endValue + lastTweensContainer[property].unitType
										}
										rootPropertyValue = data.rootPropertyValueCache[rootProperty]
									} else {
										if (CSS.Hooks.registered[property]) {
											if (startValue === undefined) {
												rootPropertyValue = CSS.getPropertyValue(element, rootProperty);
												startValue = CSS.getPropertyValue(element, property, rootPropertyValue)
											} else {
												rootPropertyValue = CSS.Hooks.templates[rootProperty][1]
											}
										} else if (startValue === undefined) {
											startValue = CSS.getPropertyValue(element, property)
										}
									}
									var separatedValue, endValueUnitType, startValueUnitType, operator = !1;
									var separateValue = function(property, value) {
										var unitType, numericValue;
										numericValue = (value || "0").toString().toLowerCase().replace(/[%A-z]+$/, function(match) {
											unitType = match;
											return ""
										});
										if (!unitType) {
											unitType = CSS.Values.getUnitType(property)
										}
										return [numericValue, unitType]
									};
									separatedValue = separateValue(property, startValue);
									startValue = separatedValue[0];
									startValueUnitType = separatedValue[1];
									separatedValue = separateValue(property, endValue);
									endValue = separatedValue[0].replace(/^([+-\/*])=/, function(match, subMatch) {
										operator = subMatch;
										return ""
									});
									endValueUnitType = separatedValue[1];
									startValue = parseFloat(startValue) || 0;
									endValue = parseFloat(endValue) || 0;
									if (endValueUnitType === "%") {
										if (/^(fontSize|lineHeight)$/.test(property)) {
											endValue = endValue / 100;
											endValueUnitType = "em"
										} else if (/^scale/.test(property)) {
											endValue = endValue / 100;
											endValueUnitType = ""
										} else if (/(Red|Green|Blue)$/i.test(property)) {
											endValue = (endValue / 100) * 255;
											endValueUnitType = ""
										}
									}
									var calculateUnitRatios = function() {
										var sameRatioIndicators = {
												myParent: element.parentNode || document.body,
												position: CSS.getPropertyValue(element, "position"),
												fontSize: CSS.getPropertyValue(element, "fontSize")
											},
											samePercentRatio = ((sameRatioIndicators.position === callUnitConversionData.lastPosition) && (sameRatioIndicators.myParent === callUnitConversionData.lastParent)),
											sameEmRatio = (sameRatioIndicators.fontSize === callUnitConversionData.lastFontSize);
										callUnitConversionData.lastParent = sameRatioIndicators.myParent;
										callUnitConversionData.lastPosition = sameRatioIndicators.position;
										callUnitConversionData.lastFontSize = sameRatioIndicators.fontSize;
										var measurement = 100,
											unitRatios = {};
										if (!sameEmRatio || !samePercentRatio) {
											var dummy = data && data.isSVG ? document.createElementNS("http://www.w3.org/2000/svg", "rect") : document.createElement("div");
											Velocity.init(dummy);
											sameRatioIndicators.myParent.appendChild(dummy);
											$.each(["overflow", "overflowX", "overflowY"], function(i, property) {
												Velocity.CSS.setPropertyValue(dummy, property, "hidden")
											});
											Velocity.CSS.setPropertyValue(dummy, "position", sameRatioIndicators.position);
											Velocity.CSS.setPropertyValue(dummy, "fontSize", sameRatioIndicators.fontSize);
											Velocity.CSS.setPropertyValue(dummy, "boxSizing", "content-box");
											$.each(["minWidth", "maxWidth", "width", "minHeight", "maxHeight", "height"], function(i, property) {
												Velocity.CSS.setPropertyValue(dummy, property, measurement + "%")
											});
											Velocity.CSS.setPropertyValue(dummy, "paddingLeft", measurement + "em");
											unitRatios.percentToPxWidth = callUnitConversionData.lastPercentToPxWidth = (parseFloat(CSS.getPropertyValue(dummy, "width", null, !0)) || 1) / measurement;
											unitRatios.percentToPxHeight = callUnitConversionData.lastPercentToPxHeight = (parseFloat(CSS.getPropertyValue(dummy, "height", null, !0)) || 1) / measurement;
											unitRatios.emToPx = callUnitConversionData.lastEmToPx = (parseFloat(CSS.getPropertyValue(dummy, "paddingLeft")) || 1) / measurement;
											sameRatioIndicators.myParent.removeChild(dummy)
										} else {
											unitRatios.emToPx = callUnitConversionData.lastEmToPx;
											unitRatios.percentToPxWidth = callUnitConversionData.lastPercentToPxWidth;
											unitRatios.percentToPxHeight = callUnitConversionData.lastPercentToPxHeight
										}
										if (callUnitConversionData.remToPx === null) {
											callUnitConversionData.remToPx = parseFloat(CSS.getPropertyValue(document.body, "fontSize")) || 16
										}
										if (callUnitConversionData.vwToPx === null) {
											callUnitConversionData.vwToPx = parseFloat(window.innerWidth) / 100;
											callUnitConversionData.vhToPx = parseFloat(window.innerHeight) / 100; /* GET */
										}
										unitRatios.remToPx = callUnitConversionData.remToPx;
										unitRatios.vwToPx = callUnitConversionData.vwToPx;
										unitRatios.vhToPx = callUnitConversionData.vhToPx;
										if (Velocity.debug >= 1) {
											console.log("Unit ratios: " + JSON.stringify(unitRatios), element)
										}
										return unitRatios
									};
									if (/[\/*]/.test(operator)) {
										endValueUnitType = startValueUnitType
									} else if ((startValueUnitType !== endValueUnitType) && startValue !== 0) {
										if (endValue === 0) {
											endValueUnitType = startValueUnitType
										} else {
											elementUnitConversionData = elementUnitConversionData || calculateUnitRatios();
											var axis = (/margin|padding|left|right|width|text|word|letter/i.test(property) || /X$/.test(property) || property === "x") ? "x" : "y";
											switch (startValueUnitType) {
												case "%":
													startValue *= (axis === "x" ? elementUnitConversionData.percentToPxWidth : elementUnitConversionData.percentToPxHeight);
													break;
												case "px":
													break;
												default:
													startValue *= elementUnitConversionData[startValueUnitType + "ToPx"]
											}
											switch (endValueUnitType) {
												case "%":
													startValue *= 1 / (axis === "x" ? elementUnitConversionData.percentToPxWidth : elementUnitConversionData.percentToPxHeight);
													break;
												case "px":
													break;
												default:
													startValue *= 1 / elementUnitConversionData[endValueUnitType + "ToPx"]
											}
										}
									}
									switch (operator) {
										case "+":
											endValue = startValue + endValue;
											break;
										case "-":
											endValue = startValue - endValue;
											break;
										case "*":
											endValue = startValue * endValue;
											break;
										case "/":
											endValue = startValue / endValue;
											break
									}
									tweensContainer[property] = {
										rootPropertyValue: rootPropertyValue,
										startValue: startValue,
										currentValue: startValue,
										endValue: endValue,
										unitType: endValueUnitType,
										easing: easing
									};
									if (Velocity.debug) {
										console.log("tweensContainer (" + property + "): " + JSON.stringify(tweensContainer[property]), element)
									}
								}
								tweensContainer.element = element
							}
							if (tweensContainer.element) {
								CSS.Values.addClass(element, "velocity-animating");
								call.push(tweensContainer);
								data = Data(element);
								if (data) {
									if (opts.queue === "") {
										data.tweensContainer = tweensContainer;
										data.opts = opts
									}
									data.isAnimating = !0
								}
								if (elementsIndex === elementsLength - 1) {
									Velocity.State.calls.push([call, elements, opts, null, promiseData.resolver]);
									if (Velocity.State.isTicking === !1) {
										Velocity.State.isTicking = !0;
										tick()
									}
								} else {
									elementsIndex++
								}
							}
						}
						if (opts.queue === !1) {
							if (opts.delay) {
								setTimeout(buildQueue, opts.delay)
							} else {
								buildQueue()
							}
						} else {
							$.queue(element, opts.queue, function(next, clearQueue) {
								if (clearQueue === !0) {
									if (promiseData.promise) {
										promiseData.resolver(elements)
									}
									return !0
								}
								Velocity.velocityQueueEntryFlag = !0;
								buildQueue(next)
							})
						}
						if ((opts.queue === "" || opts.queue === "fx") && $.queue(element)[0] !== "inprogress") {
							$.dequeue(element)
						}
					}
					$.each(elements, function(i, element) {
						if (Type.isNode(element)) {
							processElement(element, i)
						}
					});
					opts = $.extend({}, Velocity.defaults, options);
					opts.loop = parseInt(opts.loop, 10);
					var reverseCallsCount = (opts.loop * 2) - 1;
					if (opts.loop) {
						for (var x = 0; x < reverseCallsCount; x++) {
							var reverseOptions = {
								delay: opts.delay,
								progress: opts.progress
							};
							if (x === reverseCallsCount - 1) {
								reverseOptions.display = opts.display;
								reverseOptions.visibility = opts.visibility;
								reverseOptions.complete = opts.complete
							}
							animate(elements, "reverse", reverseOptions)
						}
					}
					return getChain()
				};
				Velocity = $.extend(animate, Velocity);
				Velocity.animate = animate;
				var ticker = window.requestAnimationFrame || rAFShim;
				if (!Velocity.State.isMobile && document.hidden !== undefined) {
					document.addEventListener("visibilitychange", function() {
						if (document.hidden) {
							ticker = function(callback) {
								return setTimeout(function() {
									callback(!0)
								}, 16)
							};
							tick()
						} else {
							ticker = window.requestAnimationFrame || rAFShim
						}
					})
				}

				function tick(timestamp) {
					if (timestamp) {
						var timeCurrent = (new Date()).getTime();
						var callsLength = Velocity.State.calls.length;
						if (callsLength > 10000) {
							Velocity.State.calls = compactSparseArray(Velocity.State.calls);
							callsLength = Velocity.State.calls.length
						}
						for (var i = 0; i < callsLength; i++) {
							if (!Velocity.State.calls[i]) {
								continue
							}
							var callContainer = Velocity.State.calls[i],
								call = callContainer[0],
								opts = callContainer[2],
								timeStart = callContainer[3],
								firstTick = !!timeStart,
								tweenDummyValue = null;
							if (!timeStart) {
								timeStart = Velocity.State.calls[i][3] = timeCurrent - 16
							}
							var percentComplete = Math.min((timeCurrent - timeStart) / opts.duration, 1);
							for (var j = 0, callLength = call.length; j < callLength; j++) {
								var tweensContainer = call[j],
									element = tweensContainer.element;
								if (!Data(element)) {
									continue
								}
								var transformPropertyExists = !1;
								if (opts.display !== undefined && opts.display !== null && opts.display !== "none") {
									if (opts.display === "flex") {
										var flexValues = ["-webkit-box", "-moz-box", "-ms-flexbox", "-webkit-flex"];
										$.each(flexValues, function(i, flexValue) {
											CSS.setPropertyValue(element, "display", flexValue)
										})
									}
									CSS.setPropertyValue(element, "display", opts.display)
								}
								if (opts.visibility !== undefined && opts.visibility !== "hidden") {
									CSS.setPropertyValue(element, "visibility", opts.visibility)
								}
								for (var property in tweensContainer) {
									if (tweensContainer.hasOwnProperty(property) && property !== "element") {
										var tween = tweensContainer[property],
											currentValue, easing = Type.isString(tween.easing) ? Velocity.Easings[tween.easing] : tween.easing;
										if (percentComplete === 1) {
											currentValue = tween.endValue
										} else {
											var tweenDelta = tween.endValue - tween.startValue;
											currentValue = tween.startValue + (tweenDelta * easing(percentComplete, opts, tweenDelta));
											if (!firstTick && (currentValue === tween.currentValue)) {
												continue
											}
										}
										tween.currentValue = currentValue;
										if (property === "tween") {
											tweenDummyValue = currentValue
										} else {
											var hookRoot;
											if (CSS.Hooks.registered[property]) {
												hookRoot = CSS.Hooks.getRoot(property);
												var rootPropertyValueCache = Data(element).rootPropertyValueCache[hookRoot];
												if (rootPropertyValueCache) {
													tween.rootPropertyValue = rootPropertyValueCache
												}
											}
											var adjustedSetData = CSS.setPropertyValue(element, property, tween.currentValue + (parseFloat(currentValue) === 0 ? "" : tween.unitType), tween.rootPropertyValue, tween.scrollData);
											if (CSS.Hooks.registered[property]) {
												if (CSS.Normalizations.registered[hookRoot]) {
													Data(element).rootPropertyValueCache[hookRoot] = CSS.Normalizations.registered[hookRoot]("extract", null, adjustedSetData[1])
												} else {
													Data(element).rootPropertyValueCache[hookRoot] = adjustedSetData[1]
												}
											}
											if (adjustedSetData[0] === "transform") {
												transformPropertyExists = !0
											}
										}
									}
								}
								if (opts.mobileHA) {
									if (Data(element).transformCache.translate3d === undefined) {
										Data(element).transformCache.translate3d = "(0px, 0px, 0px)";
										transformPropertyExists = !0
									}
								}
								if (transformPropertyExists) {
									CSS.flushTransformCache(element)
								}
							}
							if (opts.display !== undefined && opts.display !== "none") {
								Velocity.State.calls[i][2].display = !1
							}
							if (opts.visibility !== undefined && opts.visibility !== "hidden") {
								Velocity.State.calls[i][2].visibility = !1
							}
							if (opts.progress) {
								opts.progress.call(callContainer[1], callContainer[1], percentComplete, Math.max(0, (timeStart + opts.duration) - timeCurrent), timeStart, tweenDummyValue)
							}
							if (percentComplete === 1) {
								completeCall(i)
							}
						}
					}
					if (Velocity.State.isTicking) {
						ticker(tick)
					}
				}

				function completeCall(callIndex, isStopped) {
					if (!Velocity.State.calls[callIndex]) {
						return !1
					}
					var call = Velocity.State.calls[callIndex][0],
						elements = Velocity.State.calls[callIndex][1],
						opts = Velocity.State.calls[callIndex][2],
						resolver = Velocity.State.calls[callIndex][4];
					var remainingCallsExist = !1;
					for (var i = 0, callLength = call.length; i < callLength; i++) {
						var element = call[i].element;
						if (!isStopped && !opts.loop) {
							if (opts.display === "none") {
								CSS.setPropertyValue(element, "display", opts.display)
							}
							if (opts.visibility === "hidden") {
								CSS.setPropertyValue(element, "visibility", opts.visibility)
							}
						}
						var data = Data(element);
						if (opts.loop !== !0 && ($.queue(element)[1] === undefined || !/\.velocityQueueEntryFlag/i.test($.queue(element)[1]))) {
							if (data) {
								data.isAnimating = !1;
								data.rootPropertyValueCache = {};
								var transformHAPropertyExists = !1;
								$.each(CSS.Lists.transforms3D, function(i, transformName) {
									var defaultValue = /^scale/.test(transformName) ? 1 : 0,
										currentValue = data.transformCache[transformName];
									if (data.transformCache[transformName] !== undefined && new RegExp("^\\(" + defaultValue + "[^.]").test(currentValue)) {
										transformHAPropertyExists = !0;
										delete data.transformCache[transformName]
									}
								});
								if (opts.mobileHA) {
									transformHAPropertyExists = !0;
									delete data.transformCache.translate3d
								}
								if (transformHAPropertyExists) {
									CSS.flushTransformCache(element)
								}
								CSS.Values.removeClass(element, "velocity-animating")
							}
						}
						if (!isStopped && opts.complete && !opts.loop && (i === callLength - 1)) {
							try {
								opts.complete.call(elements, elements)
							} catch (error) {
								setTimeout(function() {
									throw error
								}, 1)
							}
						}
						if (resolver && opts.loop !== !0) {
							resolver(elements)
						}
						if (data && opts.loop === !0 && !isStopped) {
							$.each(data.tweensContainer, function(propertyName, tweenContainer) {
								if (/^rotate/.test(propertyName) && ((parseFloat(tweenContainer.startValue) - parseFloat(tweenContainer.endValue)) % 360 === 0)) {
									var oldStartValue = tweenContainer.startValue;
									tweenContainer.startValue = tweenContainer.endValue;
									tweenContainer.endValue = oldStartValue
								}
								if (/^backgroundPosition/.test(propertyName) && parseFloat(tweenContainer.endValue) === 100 && tweenContainer.unitType === "%") {
									tweenContainer.endValue = 0;
									tweenContainer.startValue = 100
								}
							});
							Velocity(element, "reverse", {
								loop: !0,
								delay: opts.delay
							})
						}
						if (opts.queue !== !1) {
							$.dequeue(element, opts.queue)
						}
					}
					Velocity.State.calls[callIndex] = !1;
					for (var j = 0, callsLength = Velocity.State.calls.length; j < callsLength; j++) {
						if (Velocity.State.calls[j] !== !1) {
							remainingCallsExist = !0;
							break
						}
					}
					if (remainingCallsExist === !1) {
						Velocity.State.isTicking = !1;
						delete Velocity.State.calls;
						Velocity.State.calls = []
					}
				}
				global.Velocity = Velocity;
				if (global !== window) {
					global.fn.velocity = animate;
					global.fn.velocity.defaults = Velocity.defaults
				}
				$.each(["Down", "Up"], function(i, direction) {
					Velocity.Redirects["slide" + direction] = function(element, options, elementsIndex, elementsSize, elements, promiseData) {
						var opts = $.extend({}, options),
							begin = opts.begin,
							complete = opts.complete,
							computedValues = {
								height: "",
								marginTop: "",
								marginBottom: "",
								paddingTop: "",
								paddingBottom: ""
							},
							inlineValues = {};
						if (opts.display === undefined) {
							opts.display = (direction === "Down" ? (Velocity.CSS.Values.getDisplayType(element) === "inline" ? "inline-block" : "block") : "none")
						}
						opts.begin = function() {
							if (begin) {
								begin.call(elements, elements)
							}
							for (var property in computedValues) {
								if (!computedValues.hasOwnProperty(property)) {
									continue
								}
								inlineValues[property] = element.style[property];
								var propertyValue = Velocity.CSS.getPropertyValue(element, property);
								computedValues[property] = (direction === "Down") ? [propertyValue, 0] : [0, propertyValue]
							}
							inlineValues.overflow = element.style.overflow;
							element.style.overflow = "hidden"
						};
						opts.complete = function() {
							for (var property in inlineValues) {
								if (inlineValues.hasOwnProperty(property)) {
									element.style[property] = inlineValues[property]
								}
							}
							if (complete) {
								complete.call(elements, elements)
							}
							if (promiseData) {
								promiseData.resolver(elements)
							}
						};
						Velocity(element, computedValues, opts)
					}
				});
				$.each(["In", "Out"], function(i, direction) {
					Velocity.Redirects["fade" + direction] = function(element, options, elementsIndex, elementsSize, elements, promiseData) {
						var opts = $.extend({}, options),
							originalComplete = opts.complete,
							propertiesMap = {
								opacity: (direction === "In") ? 1 : 0
							};
						if (elementsIndex !== elementsSize - 1) {
							opts.complete = opts.begin = null
						} else {
							opts.complete = function() {
								if (originalComplete) {
									originalComplete.call(elements, elements)
								}
								if (promiseData) {
									promiseData.resolver(elements)
								}
							}
						}
						if (opts.display === undefined) {
							opts.display = (direction === "In" ? "auto" : "none")
						}
						Velocity(this, propertiesMap, opts)
					}
				});
				return Velocity
			}((window.jQuery || window.Zepto || window), window, document)
		}))
	}, function(module, exports, __webpack_require__) {
		'use strict';
		Object.defineProperty(exports, '__esModule', {
			value: !0
		});
		var _createClass = (function() {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];
					descriptor.enumerable = descriptor.enumerable || !1;
					descriptor.configurable = !0;
					if ('value' in descriptor) descriptor.writable = !0;
					Object.defineProperty(target, descriptor.key, descriptor)
				}
			}
			return function(Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);
				if (staticProps) defineProperties(Constructor, staticProps);
				return Constructor
			}
		})();

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function')
			}
		}
		var _jquery = __webpack_require__(4);
		var _jquery2 = _interopRequireDefault(_jquery);
		var ProductMinitature = (function() {
			function ProductMinitature() {
				_classCallCheck(this, ProductMinitature)
			}
			_createClass(ProductMinitature, [{
				key: 'init',
				value: function init() {
					(0, _jquery2['default'])('.js-product-miniature').each(function(index, element) {
						if ((0, _jquery2['default'])(element).find('.color').length > 5) {
							(function() {
								var count = 0;
								(0, _jquery2['default'])(element).find('.color').each(function(index, element) {
									if (index > 4) {
										(0, _jquery2['default'])(element).hide();
										count++
									}
								});
								(0, _jquery2['default'])(element).find('.js-count').append('+' + count)
							})()
						}
					})
				}
			}]);
			return ProductMinitature
		})();
		exports['default'] = ProductMinitature;
		module.exports = exports['default']
	}, function(module, exports, __webpack_require__) {
		'use strict';

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}
		var _jquery = __webpack_require__(4);
		var _jquery2 = _interopRequireDefault(_jquery);
		(0, _jquery2['default'])(document).ready(function() {
			createProductSpin();
			createInputFile();
			coverImage();
			imageScrollBox();
			prestashop.on('updatedProduct', function(event) {
				createInputFile();
				coverImage();
				if (event && event.product_minimal_quantity) {
					var minimalProductQuantity = parseInt(event.product_minimal_quantity, 10);
					var quantityInputSelector = '#quantity_wanted';
					var quantityInput = (0, _jquery2['default'])(quantityInputSelector);
					quantityInput.trigger('touchspin.updatesettings', {
						min: minimalProductQuantity
					})
				}(0, _jquery2['default'])('.js-product-images-modal').replaceWith(event.product_images_modal);
				imageScrollBox();
				(0, _jquery2['default'])((0, _jquery2['default'])('.tabs .nav-link.active').attr('href')).addClass('active').removeClass('fade')
			});

			function coverImage() {
				(0, _jquery2['default'])('.js-thumb').on('click', function(event) {
					(0, _jquery2['default'])('.js-modal-product-cover').attr('src', (0, _jquery2['default'])(event.target).data('image-large-src'));
					(0, _jquery2['default'])('.selected').removeClass('selected');
					(0, _jquery2['default'])(event.target).addClass('selected');
					(0, _jquery2['default'])('.js-qv-product-cover').prop('src', (0, _jquery2['default'])(event.currentTarget).data('image-large-src'))
				})
			}

			function imageScrollBox() {
				if ((0, _jquery2['default'])('#main .js-qv-product-images li').length > 2) {
					(0, _jquery2['default'])('#main .js-qv-mask').addClass('scroll');
					(0, _jquery2['default'])('.scroll-box-arrows').addClass('scroll');
					(0, _jquery2['default'])('#main .js-qv-mask').scrollbox({
						distance: 113,
						autoPlay: !1
					});
					(0, _jquery2['default'])('.scroll-box-arrows .left').click(function() {
						(0, _jquery2['default'])('#main .js-qv-mask').trigger('backward')
					});
					(0, _jquery2['default'])('.scroll-box-arrows .right').click(function() {
						(0, _jquery2['default'])('#main .js-qv-mask').trigger('forward')
					})
				} else {
					(0, _jquery2['default'])('#main .js-qv-mask').removeClass('scroll');
					(0, _jquery2['default'])('.scroll-box-arrows').removeClass('scroll')
				}
				if ((0, _jquery2['default'])('.quickview .js-qv-product-images li').length > 2) {
					(0, _jquery2['default'])('.quickview .js-qv-mask').addClass('scroll');
					(0, _jquery2['default'])('.scroll-box-arrows').addClass('scroll');
					(0, _jquery2['default'])('.quickview .js-qv-mask').scrollbox({
						distance: 113,
						autoPlay: !1
					});
					(0, _jquery2['default'])('.arrow-up').click(function() {
						(0, _jquery2['default'])('.quickview .js-qv-mask').trigger('backward')
					});
					(0, _jquery2['default'])('.arrow-down').click(function() {
						(0, _jquery2['default'])('.quickview .js-qv-mask').trigger('forward')
					})
				}
				if ((0, _jquery2['default'])('.js-product-images-modal .js-modal-product-images li').length > 2) {
					(0, _jquery2['default'])('.js-product-images-modal .js-modal-mask').addClass('scroll');
					(0, _jquery2['default'])('.js-modal-arrows').addClass('scroll');
					(0, _jquery2['default'])('.js-product-images-modal .js-modal-mask').scrollbox({
						distance: 113,
						autoPlay: !1
					});
					(0, _jquery2['default'])('.arrow-up').click(function() {
						(0, _jquery2['default'])('.js-product-images-modal .js-modal-mask').trigger('backward')
					});
					(0, _jquery2['default'])('.arrow-down').click(function() {
						(0, _jquery2['default'])('.js-product-images-modal .js-modal-mask').trigger('forward')
					})
				}
			}

			function createInputFile() {
				(0, _jquery2['default'])('.js-file-input').on('change', function(event) {
					(0, _jquery2['default'])('.js-file-name').text((0, _jquery2['default'])(event.currentTarget).val())
				})
			}

			function createProductSpin() {
				var quantityInput = (0, _jquery2['default'])('#quantity_wanted');
				quantityInput.TouchSpin({
					verticalbuttons: !0,
					verticalupclass: 'material-icons touchspin-up',
					verticaldownclass: 'material-icons touchspin-down',
					buttondown_class: 'btn btn-touchspin js-touchspin',
					buttonup_class: 'btn btn-touchspin js-touchspin',
					min: parseInt(quantityInput.attr('min'), 10),
					max: 1000000
				});
				quantityInput.on('change', function(event) {
					var $productRefresh = (0, _jquery2['default'])('.product-refresh');
					(0, _jquery2['default'])(event.currentTarget).trigger('touchspin.stopspin');
					$productRefresh.trigger('click', {
						eventType: 'updatedProductQuantity'
					});
					event.preventDefault();
					return !1
				})
			}
		})
	}, function(module, exports, __webpack_require__) {
		'use strict';

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}
		var _jquery = __webpack_require__(4);
		var _jquery2 = _interopRequireDefault(_jquery);
		var _prestashop = __webpack_require__(66);
		var _prestashop2 = _interopRequireDefault(_prestashop);
		_prestashop2['default'].cart = _prestashop2['default'].cart || {};
		_prestashop2['default'].cart.active_inputs = null;
		var spinnerSelector = 'input[name="product-quantity-spin"]';

		function createSpin() {
			_jquery2['default'].each((0, _jquery2['default'])(spinnerSelector), function(index, spinner) {
				(0, _jquery2['default'])(spinner).TouchSpin({
					verticalbuttons: !0,
					verticalupclass: 'material-icons touchspin-up',
					verticaldownclass: 'material-icons touchspin-down',
					buttondown_class: 'btn btn-touchspin js-touchspin js-increase-product-quantity',
					buttonup_class: 'btn btn-touchspin js-touchspin js-decrease-product-quantity',
					min: parseInt((0, _jquery2['default'])(spinner).attr('min'), 10),
					max: 1000000
				})
			})
		}(0, _jquery2['default'])(document).ready(function() {
			var productLineInCartSelector = '.js-cart-line-product-quantity';
			var promises = [];
			_prestashop2['default'].on('updateCart', function() {
				(0, _jquery2['default'])('.quickview').modal('hide')
			});
			createSpin();
			var $body = (0, _jquery2['default'])('body');

			function isTouchSpin(namespace) {
				return namespace === 'on.startupspin' || namespace === 'on.startdownspin'
			}

			function shouldIncreaseProductQuantity(namespace) {
				return namespace === 'on.startupspin'
			}

			function findCartLineProductQuantityInput($target) {
				var $input = $target.parents('.bootstrap-touchspin').find(productLineInCartSelector);
				if ($input.is(':focus')) {
					return null
				} else {
					return $input
				}
			}

			function camelize(subject) {
				var actionTypeParts = subject.split('-');
				var i = undefined;
				var part = undefined;
				var camelizedSubject = '';
				for (i = 0; i < actionTypeParts.length; i++) {
					part = actionTypeParts[i];
					if (0 !== i) {
						part = part.substring(0, 1).toUpperCase() + part.substring(1)
					}
					camelizedSubject = camelizedSubject + part
				}
				return camelizedSubject
			}

			function parseCartAction($target, namespace) {
				if (!isTouchSpin(namespace)) {
					return {
						url: $target.attr('href'),
						type: camelize($target.data('link-action'))
					}
				}
				var $input = findCartLineProductQuantityInput($target);
				if (!$input) {
					return
				}
				var cartAction = {};
				if (shouldIncreaseProductQuantity(namespace)) {
					cartAction = {
						url: $input.data('up-url'),
						type: 'increaseProductQuantity'
					}
				} else {
					cartAction = {
						url: $input.data('down-url'),
						type: 'decreaseProductQuantity'
					}
				}
				return cartAction
			}
			var abortPreviousRequests = function abortPreviousRequests() {
				var promise;
				while (promises.length > 0) {
					promise = promises.pop();
					promise.abort()
				}
			};
			var getTouchSpinInput = function getTouchSpinInput($button) {
				return (0, _jquery2['default'])($button.parents('.bootstrap-touchspin').find('input'))
			};
			var handleCartAction = function handleCartAction(event) {
				event.preventDefault();
				var $target = (0, _jquery2['default'])(event.currentTarget);
				var cartAction = parseCartAction($target, event.namespace);
				var requestData = {
					ajax: '1',
					action: 'update'
				};
				if (typeof cartAction === 'undefined') {
					return
				}
				abortPreviousRequests();
				_jquery2['default'].ajax({
					url: cartAction.url,
					method: 'POST',
					data: requestData,
					dataType: 'json',
					beforeSend: function beforeSend(jqXHR) {
						promises.push(jqXHR)
					}
				}).then(function(resp) {
						var $quantityInput = getTouchSpinInput($target);
						$quantityInput.val(resp.quantity);
						_prestashop2['default'].emit('updateCart', {
							reason: $target.dataset
						})
					}).fail(function(resp) {
						_prestashop2['default'].emit('handleError', {
							eventType: 'updateProductInCart',
							resp: resp,
							cartAction: cartAction.type
						})
					})
			};
			$body.on('click', '[data-link-action="delete-from-cart"], [data-link-action="remove-voucher"]', handleCartAction);
			(0, _jquery2['default'])(spinnerSelector).on('touchspin.on.startdownspin', handleCartAction);
			(0, _jquery2['default'])(spinnerSelector).on('touchspin.on.startupspin', handleCartAction);

			function sendUpdateQuantityInCartRequest(updateQuantityInCartUrl, requestData, $target) {
				abortPreviousRequests();
				return _jquery2['default'].ajax({
					url: updateQuantityInCartUrl,
					method: 'POST',
					data: requestData,
					dataType: 'json',
					beforeSend: function beforeSend(jqXHR) {
						promises.push(jqXHR)
					}
				}).then(function(resp) {
						$target.val(resp.quantity);
						var dataset;
						if ($target) {
							dataset = $target.dataset
						} else {
							dataset = null
						}
						_prestashop2['default'].emit('updateCart', {
							reason: dataset
						})
					}).fail(function(resp) {
						_prestashop2['default'].emit('handleError', {
							eventType: 'updateProductQuantityInCart',
							resp: resp
						})
					})
			}

			function getRequestData(quantity) {
				return {
					ajax: '1',
					qty: Math.abs(quantity),
					action: 'update',
					op: getQuantityChangeType(quantity)
				}
			}

			function getQuantityChangeType($quantity) {
				return $quantity > 0 ? 'up' : 'down'
			}

			function updateProductQuantityInCart(event) {
				var $target = (0, _jquery2['default'])(event.currentTarget);
				var updateQuantityInCartUrl = $target.data('update-url');
				var baseValue = $target.attr('value');
				var targetValue = $target.val();
				if (targetValue != parseInt(targetValue) || targetValue < 0 || isNaN(targetValue)) {
					$target.val(baseValue);
					return
				}
				var qty = targetValue - baseValue;
				if (qty == 0) {
					return
				}
				var requestData = getRequestData(qty);
				sendUpdateQuantityInCartRequest(updateQuantityInCartUrl, requestData, $target)
			}
			$body.on('focusout', productLineInCartSelector, function(event) {
				updateProductQuantityInCart(event)
			});
			$body.on('keyup', productLineInCartSelector, function(event) {
				if (event.keyCode == 13) {
					updateProductQuantityInCart(event)
				}
			});
			$body.on('click', '.js-discount .code', function(event) {
				event.stopPropagation();
				var $code = (0, _jquery2['default'])(event.currentTarget);
				var $discountInput = (0, _jquery2['default'])('[name=discount_name]');
				$discountInput.val($code.text());
				return !1
			})
		})
	}, function(module, exports, __webpack_require__) {
		'use strict';
		Object.defineProperty(exports, '__esModule', {
			value: !0
		});
		var _createClass = (function() {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];
					descriptor.enumerable = descriptor.enumerable || !1;
					descriptor.configurable = !0;
					if ('value' in descriptor) descriptor.writable = !0;
					Object.defineProperty(target, descriptor.key, descriptor)
				}
			}
			return function(Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);
				if (staticProps) defineProperties(Constructor, staticProps);
				return Constructor
			}
		})();

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function')
			}
		}
		var _jquery = __webpack_require__(4);
		var _jquery2 = _interopRequireDefault(_jquery);
		var DropDown = (function() {
			function DropDown(el) {
				_classCallCheck(this, DropDown);
				this.el = el
			}
			_createClass(DropDown, [{
				key: 'init',
				value: function init() {
					this.el.on('show.bs.dropdown', function(e, el) {
						if (el) {
							(0, _jquery2['default'])('#' + el).find('.dropdown-menu').first().stop(!0, !0).slideDown()
						} else {
							(0, _jquery2['default'])(e.target).find('.dropdown-menu').first().stop(!0, !0).slideDown()
						}
					});
					this.el.on('hide.bs.dropdown', function(e, el) {
						if (el) {
							(0, _jquery2['default'])('#' + el).find('.dropdown-menu').first().stop(!0, !0).slideUp()
						} else {
							(0, _jquery2['default'])(e.target).find('.dropdown-menu').first().stop(!0, !0).slideUp()
						}
					});
					this.el.find('select.link').each(function(idx, el) {
						(0, _jquery2['default'])(el).on('change', function(event) {
							window.location = (0, _jquery2['default'])(this).val()
						})
					})
				}
			}]);
			return DropDown
		})();
		exports['default'] = DropDown;
		module.exports = exports['default']
	}, function(module, exports, __webpack_require__) {
		'use strict';
		Object.defineProperty(exports, '__esModule', {
			value: !0
		});
		var _createClass = (function() {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];
					descriptor.enumerable = descriptor.enumerable || !1;
					descriptor.configurable = !0;
					if ('value' in descriptor) descriptor.writable = !0;
					Object.defineProperty(target, descriptor.key, descriptor)
				}
			}
			return function(Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);
				if (staticProps) defineProperties(Constructor, staticProps);
				return Constructor
			}
		})();

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function')
			}
		}
		var _jquery = __webpack_require__(4);
		var _jquery2 = _interopRequireDefault(_jquery);
		var Form = (function() {
			function Form() {
				_classCallCheck(this, Form)
			}
			_createClass(Form, [{
				key: 'init',
				value: function init() {
					this.parentFocus();
					this.togglePasswordVisibility()
				}
			}, {
				key: 'parentFocus',
				value: function parentFocus() {
					(0, _jquery2['default'])('.js-child-focus').focus(function() {
						(0, _jquery2['default'])(this).closest('.js-parent-focus').addClass('focus')
					});
					(0, _jquery2['default'])('.js-child-focus').focusout(function() {
						(0, _jquery2['default'])(this).closest('.js-parent-focus').removeClass('focus')
					})
				}
			}, {
				key: 'togglePasswordVisibility',
				value: function togglePasswordVisibility() {
					(0, _jquery2['default'])('button[data-action="show-password"]').on('click', function() {
						var elm = (0, _jquery2['default'])(this).closest('.input-group').children('input.js-visible-password');
						if (elm.attr('type') === 'password') {
							elm.attr('type', 'text');
							(0, _jquery2['default'])(this).text((0, _jquery2['default'])(this).data('textHide'))
						} else {
							elm.attr('type', 'password');
							(0, _jquery2['default'])(this).text((0, _jquery2['default'])(this).data('textShow'))
						}
					})
				}
			}]);
			return Form
		})();
		exports['default'] = Form;
		module.exports = exports['default']
	}, function(module, exports, __webpack_require__) {
		'use strict';
		Object.defineProperty(exports, '__esModule', {
			value: !0
		});
		var _createClass = (function() {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];
					descriptor.enumerable = descriptor.enumerable || !1;
					descriptor.configurable = !0;
					if ('value' in descriptor) descriptor.writable = !0;
					Object.defineProperty(target, descriptor.key, descriptor)
				}
			}
			return function(Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);
				if (staticProps) defineProperties(Constructor, staticProps);
				return Constructor
			}
		})();

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function')
			}
		}
		var _jquery = __webpack_require__(4);
		var _jquery2 = _interopRequireDefault(_jquery);
		__webpack_require__(70);
		var ProductSelect = (function() {
			function ProductSelect() {
				_classCallCheck(this, ProductSelect)
			}
			_createClass(ProductSelect, [{
				key: 'init',
				value: function init() {
					var _this = this;
					var MAX_THUMBS = 5;
					var FLAG_MARGIN = 10;
					var $arrows = (0, _jquery2['default'])('.js-modal-arrows');
					var $thumbnails = (0, _jquery2['default'])('.js-modal-product-images');
					(0, _jquery2['default'])('.js-modal-thumb').on('click', function(event) {
						if ((0, _jquery2['default'])('.js-modal-thumb').hasClass('selected')) {
							(0, _jquery2['default'])('.js-modal-thumb').removeClass('selected')
						}(0, _jquery2['default'])(event.currentTarget).addClass('selected');
						(0, _jquery2['default'])('.js-modal-product-cover').attr('src', (0, _jquery2['default'])(event.target).data('image-large-src'));
						(0, _jquery2['default'])('.js-modal-product-cover').attr('title', (0, _jquery2['default'])(event.target).attr('title'));
						(0, _jquery2['default'])('.js-modal-product-cover').attr('alt', (0, _jquery2['default'])(event.target).attr('alt'))
					});
					if ((0, _jquery2['default'])('.js-modal-product-images li').length <= MAX_THUMBS) {
						$arrows.css('opacity', '.2')
					} else {}
				}
			}, {
				key: 'move',
				value: function move(direction) {
					var THUMB_MARGIN = 10;
					var $thumbnails = (0, _jquery2['default'])('.js-modal-product-images');
					var thumbHeight = (0, _jquery2['default'])('.js-modal-product-images li img').height() + THUMB_MARGIN;
					var currentPosition = $thumbnails.position().top;
					$thumbnails.velocity({
						translateY: direction === 'up' ? currentPosition + thumbHeight : currentPosition - thumbHeight
					}, function() {
						if ($thumbnails.position().top >= 0) {
							(0, _jquery2['default'])('.js-modal-arrow-up').css('opacity', '.2')
						} else if ($thumbnails.position().top + $thumbnails.height() <= (0, _jquery2['default'])('.js-modal-mask').height()) {
							(0, _jquery2['default'])('.js-modal-arrow-down').css('opacity', '.2')
						}
					})
				}
			}]);
			return ProductSelect
		})();
		exports['default'] = ProductSelect;
		module.exports = exports['default']
	}, function(module, exports, __webpack_require__) {
		'use strict';
		Object.defineProperty(exports, '__esModule', {
			value: !0
		});
		var _createClass = (function() {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];
					descriptor.enumerable = descriptor.enumerable || !1;
					descriptor.configurable = !0;
					if ('value' in descriptor) descriptor.writable = !0;
					Object.defineProperty(target, descriptor.key, descriptor)
				}
			}
			return function(Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);
				if (staticProps) defineProperties(Constructor, staticProps);
				return Constructor
			}
		})();
		var _get = function get(_x, _x2, _x3) {
			var _again = !0;
			_function: while (_again) {
				var object = _x,
					property = _x2,
					receiver = _x3;
				_again = !1;
				if (object === null) object = Function.prototype;
				var desc = Object.getOwnPropertyDescriptor(object, property);
				if (desc === undefined) {
					var parent = Object.getPrototypeOf(object);
					if (parent === null) {
						return undefined
					} else {
						_x = parent;
						_x2 = property;
						_x3 = receiver;
						_again = !0;
						desc = parent = undefined;
						continue _function
					}
				} else if ('value' in desc) {
					return desc.value
				} else {
					var getter = desc.get;
					if (getter === undefined) {
						return undefined
					}
					return getter.call(receiver)
				}
			}
		};

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function')
			}
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== 'function' && superClass !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass)
			}
			subClass.prototype = Object.create(superClass && superClass.prototype, {
				constructor: {
					value: subClass,
					enumerable: !1,
					writable: !0,
					configurable: !0
				}
			});
			if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass
		}
		var _jquery = __webpack_require__(4);
		var _jquery2 = _interopRequireDefault(_jquery);
		var _dropDown = __webpack_require__(74);
		var _dropDown2 = _interopRequireDefault(_dropDown);
		var TopMenu = (function(_DropDown) {
			_inherits(TopMenu, _DropDown);

			function TopMenu() {
				_classCallCheck(this, TopMenu);
				_get(Object.getPrototypeOf(TopMenu.prototype), 'constructor', this).apply(this, arguments)
			}
			_createClass(TopMenu, [{
				key: 'init',
				value: function init() {
					var _this = this;
					var elmId = undefined;
					var self = this;
					this.el.find('li').hover(function(e) {
						if (_this.el.parent().hasClass('mobile')) {
							return
						}
						if (elmId !== (0, _jquery2['default'])(e.currentTarget).attr('id')) {
							if ((0, _jquery2['default'])(e.target).data('depth') === 0) {
								(0, _jquery2['default'])('#' + elmId + ' .js-sub-menu').hide()
							}
							elmId = (0, _jquery2['default'])(e.currentTarget).attr('id')
						}
						if (elmId && (0, _jquery2['default'])(e.target).data('depth') === 0) {
							(0, _jquery2['default'])('#' + elmId + ' .js-sub-menu').show().css({
								top: (0, _jquery2['default'])('#' + elmId).height() + (0, _jquery2['default'])('#' + elmId).position().top
							})
						}
					});
					(0, _jquery2['default'])('#menu-icon').on('click', function() {
						(0, _jquery2['default'])('#mobile_top_menu_wrapper').toggle();
						self.toggleMobileMenu()
					});
					(0, _jquery2['default'])('.js-top-menu').mouseleave(function() {
						if (_this.el.parent().hasClass('mobile')) {
							return
						}(0, _jquery2['default'])('#' + elmId + ' .js-sub-menu').hide()
					});
					this.el.on('click', function(e) {
						if (_this.el.parent().hasClass('mobile')) {
							return
						}
						e.stopPropagation()
					});
					prestashop.on('responsive update', function(event) {
						(0, _jquery2['default'])('.js-sub-menu').removeAttr('style');
						self.toggleMobileMenu()
					});
					_get(Object.getPrototypeOf(TopMenu.prototype), 'init', this).call(this)
				}
			}, {
				key: 'toggleMobileMenu',
				value: function toggleMobileMenu() {
					if ((0, _jquery2['default'])('#mobile_top_menu_wrapper').is(":visible")) {
						(0, _jquery2['default'])('#notifications').hide();
						(0, _jquery2['default'])('#wrapper').hide();
						(0, _jquery2['default'])('#footer').hide()
					} else {
						(0, _jquery2['default'])('#notifications').show();
						(0, _jquery2['default'])('#wrapper').show();
						(0, _jquery2['default'])('#footer').show()
					}
				}
			}]);
			return TopMenu
		})(_dropDown2['default']);
		exports['default'] = TopMenu;
		module.exports = exports['default']
	}, function(module, exports) {
		function EventEmitter() {
			this._events = this._events || {};
			this._maxListeners = this._maxListeners || undefined
		}
		module.exports = EventEmitter;
		EventEmitter.EventEmitter = EventEmitter;
		EventEmitter.prototype._events = undefined;
		EventEmitter.prototype._maxListeners = undefined;
		EventEmitter.defaultMaxListeners = 10;
		EventEmitter.prototype.setMaxListeners = function(n) {
			if (!isNumber(n) || n < 0 || isNaN(n))
				throw TypeError('n must be a positive number');
			this._maxListeners = n;
			return this
		};
		EventEmitter.prototype.emit = function(type) {
			var er, handler, len, args, i, listeners;
			if (!this._events)
				this._events = {};
			if (type === 'error') {
				if (!this._events.error || (isObject(this._events.error) && !this._events.error.length)) {
					er = arguments[1];
					if (er instanceof Error) {
						throw er
					} else {
						var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
						err.context = er;
						throw err
					}
				}
			}
			handler = this._events[type];
			if (isUndefined(handler))
				return !1;
			if (isFunction(handler)) {
				switch (arguments.length) {
					case 1:
						handler.call(this);
						break;
					case 2:
						handler.call(this, arguments[1]);
						break;
					case 3:
						handler.call(this, arguments[1], arguments[2]);
						break;
					default:
						args = Array.prototype.slice.call(arguments, 1);
						handler.apply(this, args)
				}
			} else if (isObject(handler)) {
				args = Array.prototype.slice.call(arguments, 1);
				listeners = handler.slice();
				len = listeners.length;
				for (i = 0; i < len; i++)
					listeners[i].apply(this, args);
			}
			return !0
		};
		EventEmitter.prototype.addListener = function(type, listener) {
			var m;
			if (!isFunction(listener))
				throw TypeError('listener must be a function');
			if (!this._events)
				this._events = {};
			if (this._events.newListener)
				this.emit('newListener', type, isFunction(listener.listener) ? listener.listener : listener);
			if (!this._events[type])
				this._events[type] = listener;
			else if (isObject(this._events[type]))
				this._events[type].push(listener);
			else this._events[type] = [this._events[type], listener];
			if (isObject(this._events[type]) && !this._events[type].warned) {
				if (!isUndefined(this._maxListeners)) {
					m = this._maxListeners
				} else {
					m = EventEmitter.defaultMaxListeners
				}
				if (m && m > 0 && this._events[type].length > m) {
					this._events[type].warned = !0;
					console.error('(node) warning: possible EventEmitter memory ' + 'leak detected. %d listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.', this._events[type].length);
					if (typeof console.trace === 'function') {
						console.trace()
					}
				}
			}
			return this
		};
		EventEmitter.prototype.on = EventEmitter.prototype.addListener;
		EventEmitter.prototype.once = function(type, listener) {
			if (!isFunction(listener))
				throw TypeError('listener must be a function');
			var fired = !1;

			function g() {
				this.removeListener(type, g);
				if (!fired) {
					fired = !0;
					listener.apply(this, arguments)
				}
			}
			g.listener = listener;
			this.on(type, g);
			return this
		};
		EventEmitter.prototype.removeListener = function(type, listener) {
			var list, position, length, i;
			if (!isFunction(listener))
				throw TypeError('listener must be a function');
			if (!this._events || !this._events[type])
				return this;
			list = this._events[type];
			length = list.length;
			position = -1;
			if (list === listener || (isFunction(list.listener) && list.listener === listener)) {
				delete this._events[type];
				if (this._events.removeListener)
					this.emit('removeListener', type, listener)
			} else if (isObject(list)) {
				for (i = length; i-- > 0;) {
					if (list[i] === listener || (list[i].listener && list[i].listener === listener)) {
						position = i;
						break
					}
				}
				if (position < 0)
					return this;
				if (list.length === 1) {
					list.length = 0;
					delete this._events[type]
				} else {
					list.splice(position, 1)
				}
				if (this._events.removeListener)
					this.emit('removeListener', type, listener)
			}
			return this
		};
		EventEmitter.prototype.removeAllListeners = function(type) {
			var key, listeners;
			if (!this._events)
				return this;
			if (!this._events.removeListener) {
				if (arguments.length === 0)
					this._events = {};
				else if (this._events[type])
					delete this._events[type];
				return this
			}
			if (arguments.length === 0) {
				for (key in this._events) {
					if (key === 'removeListener') continue;
					this.removeAllListeners(key)
				}
				this.removeAllListeners('removeListener');
				this._events = {};
				return this
			}
			listeners = this._events[type];
			if (isFunction(listeners)) {
				this.removeListener(type, listeners)
			} else if (listeners) {
				while (listeners.length)
					this.removeListener(type, listeners[listeners.length - 1])
			}
			delete this._events[type];
			return this
		};
		EventEmitter.prototype.listeners = function(type) {
			var ret;
			if (!this._events || !this._events[type])
				ret = [];
			else if (isFunction(this._events[type]))
				ret = [this._events[type]];
			else ret = this._events[type].slice();
			return ret
		};
		EventEmitter.prototype.listenerCount = function(type) {
			if (this._events) {
				var evlistener = this._events[type];
				if (isFunction(evlistener))
					return 1;
				else if (evlistener)
					return evlistener.length
			}
			return 0
		};
		EventEmitter.listenerCount = function(emitter, type) {
			return emitter.listenerCount(type)
		};

		function isFunction(arg) {
			return typeof arg === 'function'
		}

		function isNumber(arg) {
			return typeof arg === 'number'
		}

		function isObject(arg) {
			return typeof arg === 'object' && arg !== null
		}

		function isUndefined(arg) {
			return arg === void 0
		}
	}, function(module, exports) {
		"use strict";
		(function($) {
			var nextId = 0;
			var Filestyle = function Filestyle(element, options) {
				this.options = options;
				this.$elementFilestyle = [];
				this.$element = $(element)
			};
			Filestyle.prototype = {
				clear: function clear() {
					this.$element.val("");
					this.$elementFilestyle.find(":text").val("");
					this.$elementFilestyle.find(".badge").remove()
				},
				destroy: function destroy() {
					this.$element.removeAttr("style").removeData("filestyle");
					this.$elementFilestyle.remove()
				},
				disabled: function disabled(value) {
					if (value === !0) {
						if (!this.options.disabled) {
							this.$element.attr("disabled", "true");
							this.$elementFilestyle.find("label").attr("disabled", "true");
							this.options.disabled = !0
						}
					} else {
						if (value === !1) {
							if (this.options.disabled) {
								this.$element.removeAttr("disabled");
								this.$elementFilestyle.find("label").removeAttr("disabled");
								this.options.disabled = !1
							}
						} else {
							return this.options.disabled
						}
					}
				},
				buttonBefore: function buttonBefore(value) {
					if (value === !0) {
						if (!this.options.buttonBefore) {
							this.options.buttonBefore = !0;
							if (this.options.input) {
								this.$elementFilestyle.remove();
								this.constructor();
								this.pushNameFiles()
							}
						}
					} else {
						if (value === !1) {
							if (this.options.buttonBefore) {
								this.options.buttonBefore = !1;
								if (this.options.input) {
									this.$elementFilestyle.remove();
									this.constructor();
									this.pushNameFiles()
								}
							}
						} else {
							return this.options.buttonBefore
						}
					}
				},
				icon: function icon(value) {
					if (value === !0) {
						if (!this.options.icon) {
							this.options.icon = !0;
							this.$elementFilestyle.find("label").prepend(this.htmlIcon())
						}
					} else {
						if (value === !1) {
							if (this.options.icon) {
								this.options.icon = !1;
								this.$elementFilestyle.find(".icon-span-filestyle").remove()
							}
						} else {
							return this.options.icon
						}
					}
				},
				input: function input(value) {
					if (value === !0) {
						if (!this.options.input) {
							this.options.input = !0;
							if (this.options.buttonBefore) {
								this.$elementFilestyle.append(this.htmlInput())
							} else {
								this.$elementFilestyle.prepend(this.htmlInput())
							}
							this.$elementFilestyle.find(".badge").remove();
							this.pushNameFiles();
							this.$elementFilestyle.find(".group-span-filestyle").addClass("input-group-btn")
						}
					} else {
						if (value === !1) {
							if (this.options.input) {
								this.options.input = !1;
								this.$elementFilestyle.find(":text").remove();
								var files = this.pushNameFiles();
								if (files.length > 0 && this.options.badge) {
									this.$elementFilestyle.find("label").append(' <span class="badge">' + files.length + "</span>")
								}
								this.$elementFilestyle.find(".group-span-filestyle").removeClass("input-group-btn")
							}
						} else {
							return this.options.input
						}
					}
				},
				size: function size(value) {
					if (value !== undefined) {
						var btn = this.$elementFilestyle.find("label"),
							input = this.$elementFilestyle.find("input");
						btn.removeClass("btn-lg btn-sm");
						input.removeClass("input-lg input-sm");
						if (value != "nr") {
							btn.addClass("btn-" + value);
							input.addClass("input-" + value)
						}
					} else {
						return this.options.size
					}
				},
				placeholder: function placeholder(value) {
					if (value !== undefined) {
						this.options.placeholder = value;
						this.$elementFilestyle.find("input").attr("placeholder", value)
					} else {
						return this.options.placeholder
					}
				},
				buttonText: function buttonText(value) {
					if (value !== undefined) {
						this.options.buttonText = value;
						this.$elementFilestyle.find("label .buttonText").html(this.options.buttonText)
					} else {
						return this.options.buttonText
					}
				},
				buttonName: function buttonName(value) {
					if (value !== undefined) {
						this.options.buttonName = value;
						this.$elementFilestyle.find("label").attr({
							"class": "btn " + this.options.buttonName
						})
					} else {
						return this.options.buttonName
					}
				},
				iconName: function iconName(value) {
					if (value !== undefined) {
						this.$elementFilestyle.find(".icon-span-filestyle").attr({
							"class": "icon-span-filestyle " + this.options.iconName
						})
					} else {
						return this.options.iconName
					}
				},
				htmlIcon: function htmlIcon() {
					if (this.options.icon) {
						return '<span class="icon-span-filestyle ' + this.options.iconName + '"></span> '
					} else {
						return ""
					}
				},
				htmlInput: function htmlInput() {
					if (this.options.input) {
						return '<input type="text" class="form-control ' + (this.options.size == "nr" ? "" : "input-" + this.options.size) + '" placeholder="' + this.options.placeholder + '" disabled> '
					} else {
						return ""
					}
				},
				pushNameFiles: function pushNameFiles() {
					var content = "",
						files = [];
					if (this.$element[0].files === undefined) {
						files[0] = {
							name: this.$element[0] && this.$element[0].value
						}
					} else {
						files = this.$element[0].files
					}
					for (var i = 0; i < files.length; i++) {
						content += files[i].name.split("\\").pop() + ", "
					}
					if (content !== "") {
						this.$elementFilestyle.find(":text").val(content.replace(/\, $/g, ""))
					} else {
						this.$elementFilestyle.find(":text").val("")
					}
					return files
				},
				constructor: function constructor() {
					var _self = this,
						html = "",
						id = _self.$element.attr("id"),
						files = [],
						btn = "",
						$label;
					if (id === "" || !id) {
						id = "filestyle-" + nextId;
						_self.$element.attr({
							id: id
						});
						nextId++
					}
					btn = '<span class="group-span-filestyle ' + (_self.options.input ? "input-group-btn" : "") + '"><label for="' + id + '" class="btn ' + _self.options.buttonName + " " + (_self.options.size == "nr" ? "" : "btn-" + _self.options.size) + '" ' + (_self.options.disabled ? 'disabled="true"' : "") + ">" + _self.htmlIcon() + '<span class="buttonText">' + _self.options.buttonText + "</span></label></span>";
					html = _self.options.buttonBefore ? btn + _self.htmlInput() : _self.htmlInput() + btn;
					_self.$elementFilestyle = $('<div class="bootstrap-filestyle input-group">' + html + "</div>");
					_self.$elementFilestyle.find(".group-span-filestyle").attr("tabindex", "0").keypress(function(e) {
						if (e.keyCode === 13 || e.charCode === 32) {
							_self.$elementFilestyle.find("label").click();
							return !1
						}
					});
					_self.$element.css({
						position: "absolute",
						clip: "rect(0px 0px 0px 0px)"
					}).attr("tabindex", "-1").after(_self.$elementFilestyle);
					if (_self.options.disabled) {
						_self.$element.attr("disabled", "true")
					}
					_self.$element.change(function() {
						var files = _self.pushNameFiles();
						if (_self.options.input == !1 && _self.options.badge) {
							if (_self.$elementFilestyle.find(".badge").length == 0) {
								_self.$elementFilestyle.find("label").append(' <span class="badge">' + files.length + "</span>")
							} else {
								if (files.length == 0) {
									_self.$elementFilestyle.find(".badge").remove()
								} else {
									_self.$elementFilestyle.find(".badge").html(files.length)
								}
							}
						} else {
							_self.$elementFilestyle.find(".badge").remove()
						}
					});
					if (window.navigator.userAgent.search(/firefox/i) > -1) {
						_self.$elementFilestyle.find("label").click(function() {
							_self.$element.click();
							return !1
						})
					}
				}
			};
			var old = $.fn.filestyle;
			$.fn.filestyle = function(option, value) {
				var get = "",
					element = this.each(function() {
						if ($(this).attr("type") === "file") {
							var $this = $(this),
								data = $this.data("filestyle"),
								options = $.extend({}, $.fn.filestyle.defaults, option, typeof option === "object" && option);
							if (!data) {
								$this.data("filestyle", data = new Filestyle(this, options));
								data.constructor()
							}
							if (typeof option === "string") {
								get = data[option](value)
							}
						}
					});
				if (typeof get !== undefined) {
					return get
				} else {
					return element
				}
			};
			$.fn.filestyle.defaults = {
				buttonText: "Choose file",
				iconName: "glyphicon glyphicon-folder-open",
				buttonName: "btn-default",
				size: "nr",
				input: !0,
				badge: !0,
				icon: !0,
				buttonBefore: !1,
				disabled: !1,
				placeholder: ""
			};
			$.fn.filestyle.noConflict = function() {
				$.fn.filestyle = old;
				return this
			};
			$(function() {
				$(".filestyle").each(function() {
					var $this = $(this),
						options = {
							input: $this.attr("data-input") === "false" ? !1 : !0,
							icon: $this.attr("data-icon") === "false" ? !1 : !0,
							buttonBefore: $this.attr("data-buttonBefore") === "true" ? !0 : !1,
							disabled: $this.attr("data-disabled") === "true" ? !0 : !1,
							size: $this.attr("data-size"),
							buttonText: $this.attr("data-buttonText"),
							buttonName: $this.attr("data-buttonName"),
							iconName: $this.attr("data-iconName"),
							badge: $this.attr("data-badge") === "false" ? !1 : !0,
							placeholder: $this.attr("data-placeholder")
						};
					$this.filestyle(options)
				})
			})
		})(window.jQuery)
	}, function(module, exports) {
		"use strict";
		(function($) {
			$.fn.scrollbox = function(config) {
				var defConfig = {
					linear: !1,
					startDelay: 2,
					delay: 3,
					step: 5,
					speed: 32,
					switchItems: 1,
					direction: "vertical",
					distance: "auto",
					autoPlay: !0,
					onMouseOverPause: !0,
					paused: !1,
					queue: null,
					listElement: "ul",
					listItemElement: "li",
					infiniteLoop: !0,
					switchAmount: 0,
					afterForward: null,
					afterBackward: null,
					triggerStackable: !1
				};
				config = $.extend(defConfig, config);
				config.scrollOffset = config.direction === "vertical" ? "scrollTop" : "scrollLeft";
				if (config.queue) {
					config.queue = $("#" + config.queue)
				}
				return this.each(function() {
					var container = $(this),
						containerUL, scrollingId = null,
						nextScrollId = null,
						paused = !1,
						releaseStack, backward, forward, resetClock, scrollForward, scrollBackward, forwardHover, pauseHover, switchCount = 0,
						stackedTriggerIndex = 0;
					if (config.onMouseOverPause) {
						container.bind("mouseover", function() {
							paused = !0
						});
						container.bind("mouseout", function() {
							paused = !1
						})
					}
					containerUL = container.children(config.listElement + ":first-child");
					if (config.infiniteLoop === !1 && config.switchAmount === 0) {
						config.switchAmount = containerUL.children().length
					}
					scrollForward = function() {
						if (paused) {
							return
						}
						var curLi, i, newScrollOffset, scrollDistance, theStep;
						curLi = containerUL.children(config.listItemElement + ":first-child");
						scrollDistance = config.distance !== "auto" ? config.distance : config.direction === "vertical" ? curLi.outerHeight(!0) : curLi.outerWidth(!0);
						if (!config.linear) {
							theStep = Math.max(3, parseInt((scrollDistance - container[0][config.scrollOffset]) * .3, 10));
							newScrollOffset = Math.min(container[0][config.scrollOffset] + theStep, scrollDistance)
						} else {
							newScrollOffset = Math.min(container[0][config.scrollOffset] + config.step, scrollDistance)
						}
						container[0][config.scrollOffset] = newScrollOffset;
						if (newScrollOffset >= scrollDistance) {
							for (i = 0; i < config.switchItems; i++) {
								if (config.queue && config.queue.find(config.listItemElement).length > 0) {
									containerUL.append(config.queue.find(config.listItemElement)[0]);
									containerUL.children(config.listItemElement + ":first-child").remove()
								} else {
									containerUL.append(containerUL.children(config.listItemElement + ":first-child"))
								}++switchCount
							}
							container[0][config.scrollOffset] = 0;
							clearInterval(scrollingId);
							scrollingId = null;
							if ($.isFunction(config.afterForward)) {
								config.afterForward.call(container, {
									switchCount: switchCount,
									currentFirstChild: containerUL.children(config.listItemElement + ":first-child")
								})
							}
							if (config.triggerStackable && stackedTriggerIndex !== 0) {
								releaseStack();
								return
							}
							if (config.infiniteLoop === !1 && switchCount >= config.switchAmount) {
								return
							}
							if (config.autoPlay) {
								nextScrollId = setTimeout(forward, config.delay * 1e3)
							}
						}
					};
					scrollBackward = function() {
						if (paused) {
							return
						}
						var curLi, i, newScrollOffset, scrollDistance, theStep;
						if (container[0][config.scrollOffset] === 0) {
							for (i = 0; i < config.switchItems; i++) {
								containerUL.children(config.listItemElement + ":last-child").insertBefore(containerUL.children(config.listItemElement + ":first-child"))
							}
							curLi = containerUL.children(config.listItemElement + ":first-child");
							scrollDistance = config.distance !== "auto" ? config.distance : config.direction === "vertical" ? curLi.height() : curLi.width();
							container[0][config.scrollOffset] = scrollDistance
						}
						if (!config.linear) {
							theStep = Math.max(3, parseInt(container[0][config.scrollOffset] * .3, 10));
							newScrollOffset = Math.max(container[0][config.scrollOffset] - theStep, 0)
						} else {
							newScrollOffset = Math.max(container[0][config.scrollOffset] - config.step, 0)
						}
						container[0][config.scrollOffset] = newScrollOffset;
						if (newScrollOffset === 0) {
							--switchCount;
							clearInterval(scrollingId);
							scrollingId = null;
							if ($.isFunction(config.afterBackward)) {
								config.afterBackward.call(container, {
									switchCount: switchCount,
									currentFirstChild: containerUL.children(config.listItemElement + ":first-child")
								})
							}
							if (config.triggerStackable && stackedTriggerIndex !== 0) {
								releaseStack();
								return
							}
							if (config.autoPlay) {
								nextScrollId = setTimeout(forward, config.delay * 1e3)
							}
						}
					};
					releaseStack = function() {
						if (stackedTriggerIndex === 0) {
							return
						}
						if (stackedTriggerIndex > 0) {
							stackedTriggerIndex--;
							nextScrollId = setTimeout(forward, 0)
						} else {
							stackedTriggerIndex++;
							nextScrollId = setTimeout(backward, 0)
						}
					};
					forward = function() {
						clearInterval(scrollingId);
						scrollingId = setInterval(scrollForward, config.speed)
					};
					backward = function() {
						clearInterval(scrollingId);
						scrollingId = setInterval(scrollBackward, config.speed)
					};
					forwardHover = function() {
						config.autoPlay = !0;
						paused = !1;
						clearInterval(scrollingId);
						scrollingId = setInterval(scrollForward, config.speed)
					};
					pauseHover = function() {
						paused = !0
					};
					resetClock = function(delay) {
						config.delay = delay || config.delay;
						clearTimeout(nextScrollId);
						if (config.autoPlay) {
							nextScrollId = setTimeout(forward, config.delay * 1e3)
						}
					};
					if (config.autoPlay) {
						nextScrollId = setTimeout(forward, config.startDelay * 1e3)
					}
					container.bind("resetClock", function(delay) {
						resetClock(delay)
					});
					container.bind("forward", function() {
						if (config.triggerStackable) {
							if (scrollingId !== null) {
								stackedTriggerIndex++
							} else {
								forward()
							}
						} else {
							clearTimeout(nextScrollId);
							forward()
						}
					});
					container.bind("backward", function() {
						if (config.triggerStackable) {
							if (scrollingId !== null) {
								stackedTriggerIndex--
							} else {
								backward()
							}
						} else {
							clearTimeout(nextScrollId);
							backward()
						}
					});
					container.bind("pauseHover", function() {
						pauseHover()
					});
					container.bind("forwardHover", function() {
						forwardHover()
					});
					container.bind("speedUp", function(event, speed) {
						if (speed === "undefined") {
							speed = Math.max(1, parseInt(config.speed / 2, 10))
						}
						config.speed = speed
					});
					container.bind("speedDown", function(event, speed) {
						if (speed === "undefined") {
							speed = config.speed * 2
						}
						config.speed = speed
					});
					container.bind("updateConfig", function(event, options) {
						config = $.extend(config, options)
					})
				})
			}
		})(jQuery)
	}, function(module, exports, __webpack_require__) {
		'use strict';

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : {
				'default': obj
			}
		}
		var _prestashop = __webpack_require__(66);
		var _prestashop2 = _interopRequireDefault(_prestashop);
		var _jquery = __webpack_require__(4);
		var _jquery2 = _interopRequireDefault(_jquery);
		_prestashop2['default'].blockcart = _prestashop2['default'].blockcart || {};
		_prestashop2['default'].blockcart.showModal = function(html) {
			function getBlockCartModal() {
				return (0, _jquery2['default'])('#blockcart-modal')
			}
			var $blockCartModal = getBlockCartModal();
			if ($blockCartModal.length) {
				$blockCartModal.remove()
			}(0, _jquery2['default'])('body').append(html);
			$blockCartModal = getBlockCartModal();
			$blockCartModal.modal('show').on('hidden.bs.modal', function(event) {
				_prestashop2['default'].emit('updateProduct', {
					reason: event.currentTarget.dataset
				})
			})
		}
	}]);
(function(a) {
	var b = "0.3.4",
		c = "hasOwnProperty",
		d = /[\.\/]/,
		e = "*",
		f = function() {},
		g = function(a, b) {
			return a - b
		},
		h, i, j = {
			n: {}
		},
		k = function(a, b) {
			var c = j,
				d = i,
				e = Array.prototype.slice.call(arguments, 2),
				f = k.listeners(a),
				l = 0,
				m = !1,
				n, o = [],
				p = {},
				q = [],
				r = h,
				s = [];
			h = a, i = 0;
			for (var t = 0, u = f.length; t < u; t++) "zIndex" in f[t] && (o.push(f[t].zIndex), f[t].zIndex < 0 && (p[f[t].zIndex] = f[t]));
			o.sort(g);
			while (o[l] < 0) {
				n = p[o[l++]], q.push(n.apply(b, e));
				if (i) {
					i = d;
					return q
				}
			}
			for (t = 0; t < u; t++) {
				n = f[t];
				if ("zIndex" in n)
					if (n.zIndex == o[l]) {
						q.push(n.apply(b, e));
						if (i) break;
						do {
							l++, n = p[o[l]], n && q.push(n.apply(b, e));
							if (i) break
						} while (n)
					} else p[n.zIndex] = n;
				else {
					q.push(n.apply(b, e));
					if (i) break
				}
			}
			i = d, h = r;
			return q.length ? q : null
		};
	k.listeners = function(a) {
		var b = a.split(d),
			c = j,
			f, g, h, i, k, l, m, n, o = [c],
			p = [];
		for (i = 0, k = b.length; i < k; i++) {
			n = [];
			for (l = 0, m = o.length; l < m; l++) {
				c = o[l].n, g = [c[b[i]], c[e]], h = 2;
				while (h--) f = g[h], f && (n.push(f), p = p.concat(f.f || []))
			}
			o = n
		}
		return p
	}, k.on = function(a, b) {
		var c = a.split(d),
			e = j;
		for (var g = 0, h = c.length; g < h; g++) e = e.n, !e[c[g]] && (e[c[g]] = {
			n: {}
		}), e = e[c[g]];
		e.f = e.f || [];
		for (g = 0, h = e.f.length; g < h; g++)
			if (e.f[g] == b) return f;
		e.f.push(b);
		return function(a) {
			+a == +a && (b.zIndex = +a)
		}
	}, k.stop = function() {
		i = 1
	}, k.nt = function(a) {
		if (a) return (new RegExp("(?:\\.|\\/|^)" + a + "(?:\\.|\\/|$)")).test(h);
		return h
	}, k.off = k.unbind = function(a, b) {
		var f = a.split(d),
			g, h, i, k, l, m, n, o = [j];
		for (k = 0, l = f.length; k < l; k++)
			for (m = 0; m < o.length; m += i.length - 2) {
				i = [m, 1], g = o[m].n;
				if (f[k] != e) g[f[k]] && i.push(g[f[k]]);
				else
					for (h in g) g[c](h) && i.push(g[h]);
				o.splice.apply(o, i)
			}
		for (k = 0, l = o.length; k < l; k++) {
			g = o[k];
			while (g.n) {
				if (b) {
					if (g.f) {
						for (m = 0, n = g.f.length; m < n; m++)
							if (g.f[m] == b) {
								g.f.splice(m, 1);
								break
							}!g.f.length && delete g.f
					}
					for (h in g.n)
						if (g.n[c](h) && g.n[h].f) {
							var p = g.n[h].f;
							for (m = 0, n = p.length; m < n; m++)
								if (p[m] == b) {
									p.splice(m, 1);
									break
								}!p.length && delete g.n[h].f
						}
				} else {
					delete g.f;
					for (h in g.n) g.n[c](h) && g.n[h].f && delete g.n[h].f
				}
				g = g.n
			}
		}
	}, k.once = function(a, b) {
		var c = function() {
			var d = b.apply(this, arguments);
			k.unbind(a, c);
			return d
		};
		return k.on(a, c)
	}, k.version = b, k.toString = function() {
		return "You are running Eve " + b
	}, typeof module != "undefined" && module.exports ? module.exports = k : typeof define != "undefined" ? define("eve", [], function() {
		return k
	}) : a.eve = k
})(this),
	function() {
		function cF(a) {
			for (var b = 0; b < cy.length; b++) cy[b].el.paper == a && cy.splice(b--, 1)
		}

		function cE(b, d, e, f, h, i) {
			e = Q(e);
			var j, k, l, m = [],
				o, p, q, t = b.ms,
				u = {},
				v = {},
				w = {};
			if (f)
				for (y = 0, z = cy.length; y < z; y++) {
					var x = cy[y];
					if (x.el.id == d.id && x.anim == b) {
						x.percent != e ? (cy.splice(y, 1), l = 1) : k = x, d.attr(x.totalOrigin);
						break
					}
				} else f = +v;
			for (var y = 0, z = b.percents.length; y < z; y++) {
				if (b.percents[y] == e || b.percents[y] > f * b.top) {
					e = b.percents[y], p = b.percents[y - 1] || 0, t = t / b.top * (e - p), o = b.percents[y + 1], j = b.anim[e];
					break
				}
				f && d.attr(b.anim[b.percents[y]])
			}
			if (!!j) {
				if (!k) {
					for (var A in j)
						if (j[g](A))
							if (U[g](A) || d.paper.customAttributes[g](A)) {
								u[A] = d.attr(A), u[A] == null && (u[A] = T[A]), v[A] = j[A];
								switch (U[A]) {
									case C:
										w[A] = (v[A] - u[A]) / t;
										break;
									case "colour":
										u[A] = a.getRGB(u[A]);
										var B = a.getRGB(v[A]);
										w[A] = {
											r: (B.r - u[A].r) / t,
											g: (B.g - u[A].g) / t,
											b: (B.b - u[A].b) / t
										};
										break;
									case "path":
										var D = bR(u[A], v[A]),
											E = D[1];
										u[A] = D[0], w[A] = [];
										for (y = 0, z = u[A].length; y < z; y++) {
											w[A][y] = [0];
											for (var F = 1, G = u[A][y].length; F < G; F++) w[A][y][F] = (E[y][F] - u[A][y][F]) / t
										}
										break;
									case "transform":
										var H = d._,
											I = ca(H[A], v[A]);
										if (I) {
											u[A] = I.from, v[A] = I.to, w[A] = [], w[A].real = !0;
											for (y = 0, z = u[A].length; y < z; y++) {
												w[A][y] = [u[A][y][0]];
												for (F = 1, G = u[A][y].length; F < G; F++) w[A][y][F] = (v[A][y][F] - u[A][y][F]) / t
											}
										} else {
											var J = d.matrix || new cb,
												K = {
													_: {
														transform: H.transform
													},
													getBBox: function() {
														return d.getBBox(1)
													}
												};
											u[A] = [J.a, J.b, J.c, J.d, J.e, J.f], b$(K, v[A]), v[A] = K._.transform, w[A] = [(K.matrix.a - J.a) / t, (K.matrix.b - J.b) / t, (K.matrix.c - J.c) / t, (K.matrix.d - J.d) / t, (K.matrix.e - J.e) / t, (K.matrix.f - J.f) / t]
										}
										break;
									case "csv":
										var L = r(j[A])[s](c),
											M = r(u[A])[s](c);
										if (A == "clip-rect") {
											u[A] = M, w[A] = [], y = M.length;
											while (y--) w[A][y] = (L[y] - u[A][y]) / t
										}
										v[A] = L;
										break;
									default:
										L = [][n](j[A]), M = [][n](u[A]), w[A] = [], y = d.paper.customAttributes[A].length;
										while (y--) w[A][y] = ((L[y] || 0) - (M[y] || 0)) / t
								}
							}
					var O = j.easing,
						P = a.easing_formulas[O];
					if (!P) {
						P = r(O).match(N);
						if (P && P.length == 5) {
							var R = P;
							P = function(a) {
								return cC(a, +R[1], +R[2], +R[3], +R[4], t)
							}
						} else P = bf
					}
					q = j.start || b.start || +(new Date), x = {
						anim: b,
						percent: e,
						timestamp: q,
						start: q + (b.del || 0),
						status: 0,
						initstatus: f || 0,
						stop: !1,
						ms: t,
						easing: P,
						from: u,
						diff: w,
						to: v,
						el: d,
						callback: j.callback,
						prev: p,
						next: o,
						repeat: i || b.times,
						origin: d.attr(),
						totalOrigin: h
					}, cy.push(x);
					if (f && !k && !l) {
						x.stop = !0, x.start = new Date - t * f;
						if (cy.length == 1) return cA()
					}
					l && (x.start = new Date - x.ms * f), cy.length == 1 && cz(cA)
				} else k.initstatus = f, k.start = new Date - k.ms * f;
				eve("raphael.anim.start." + d.id, d, b)
			}
		}

		function cD(a, b) {
			var c = [],
				d = {};
			this.ms = b, this.times = 1;
			if (a) {
				for (var e in a) a[g](e) && (d[Q(e)] = a[e], c.push(Q(e)));
				c.sort(bd)
			}
			this.anim = d, this.top = c[c.length - 1], this.percents = c
		}

		function cC(a, b, c, d, e, f) {
			function o(a, b) {
				var c, d, e, f, j, k;
				for (e = a, k = 0; k < 8; k++) {
					f = m(e) - a;
					if (z(f) < b) return e;
					j = (3 * i * e + 2 * h) * e + g;
					if (z(j) < 1e-6) break;
					e = e - f / j
				}
				c = 0, d = 1, e = a;
				if (e < c) return c;
				if (e > d) return d;
				while (c < d) {
					f = m(e);
					if (z(f - a) < b) return e;
					a > f ? c = e : d = e, e = (d - c) / 2 + c
				}
				return e
			}

			function n(a, b) {
				var c = o(a, b);
				return ((l * c + k) * c + j) * c
			}

			function m(a) {
				return ((i * a + h) * a + g) * a
			}
			var g = 3 * b,
				h = 3 * (d - b) - g,
				i = 1 - g - h,
				j = 3 * c,
				k = 3 * (e - c) - j,
				l = 1 - j - k;
			return n(a, 1 / (200 * f))
		}

		function cq() {
			return this.x + q + this.y + q + this.width + " Ã— " + this.height
		}

		function cp() {
			return this.x + q + this.y
		}

		function cb(a, b, c, d, e, f) {
			a != null ? (this.a = +a, this.b = +b, this.c = +c, this.d = +d, this.e = +e, this.f = +f) : (this.a = 1, this.b = 0, this.c = 0, this.d = 1, this.e = 0, this.f = 0)
		}

		function bH(b, c, d) {
			b = a._path2curve(b), c = a._path2curve(c);
			var e, f, g, h, i, j, k, l, m, n, o = d ? 0 : [];
			for (var p = 0, q = b.length; p < q; p++) {
				var r = b[p];
				if (r[0] == "M") e = i = r[1], f = j = r[2];
				else {
					r[0] == "C" ? (m = [e, f].concat(r.slice(1)), e = m[6], f = m[7]) : (m = [e, f, e, f, i, j, i, j], e = i, f = j);
					for (var s = 0, t = c.length; s < t; s++) {
						var u = c[s];
						if (u[0] == "M") g = k = u[1], h = l = u[2];
						else {
							u[0] == "C" ? (n = [g, h].concat(u.slice(1)), g = n[6], h = n[7]) : (n = [g, h, g, h, k, l, k, l], g = k, h = l);
							var v = bG(m, n, d);
							if (d) o += v;
							else {
								for (var w = 0, x = v.length; w < x; w++) v[w].segment1 = p, v[w].segment2 = s, v[w].bez1 = m, v[w].bez2 = n;
								o = o.concat(v)
							}
						}
					}
				}
			}
			return o
		}

		function bG(b, c, d) {
			var e = a.bezierBBox(b),
				f = a.bezierBBox(c);
			if (!a.isBBoxIntersect(e, f)) return d ? 0 : [];
			var g = bB.apply(0, b),
				h = bB.apply(0, c),
				i = ~~(g / 5),
				j = ~~(h / 5),
				k = [],
				l = [],
				m = {},
				n = d ? 0 : [];
			for (var o = 0; o < i + 1; o++) {
				var p = a.findDotsAtSegment.apply(a, b.concat(o / i));
				k.push({
					x: p.x,
					y: p.y,
					t: o / i
				})
			}
			for (o = 0; o < j + 1; o++) p = a.findDotsAtSegment.apply(a, c.concat(o / j)), l.push({
				x: p.x,
				y: p.y,
				t: o / j
			});
			for (o = 0; o < i; o++)
				for (var q = 0; q < j; q++) {
					var r = k[o],
						s = k[o + 1],
						t = l[q],
						u = l[q + 1],
						v = z(s.x - r.x) < .001 ? "y" : "x",
						w = z(u.x - t.x) < .001 ? "y" : "x",
						x = bD(r.x, r.y, s.x, s.y, t.x, t.y, u.x, u.y);
					if (x) {
						if (m[x.x.toFixed(4)] == x.y.toFixed(4)) continue;
						m[x.x.toFixed(4)] = x.y.toFixed(4);
						var y = r.t + z((x[v] - r[v]) / (s[v] - r[v])) * (s.t - r.t),
							A = t.t + z((x[w] - t[w]) / (u[w] - t[w])) * (u.t - t.t);
						y >= 0 && y <= 1 && A >= 0 && A <= 1 && (d ? n++ : n.push({
							x: x.x,
							y: x.y,
							t1: y,
							t2: A
						}))
					}
				}
			return n
		}

		function bF(a, b) {
			return bG(a, b, 1)
		}

		function bE(a, b) {
			return bG(a, b)
		}

		function bD(a, b, c, d, e, f, g, h) {
			if (!(x(a, c) < y(e, g) || y(a, c) > x(e, g) || x(b, d) < y(f, h) || y(b, d) > x(f, h))) {
				var i = (a * d - b * c) * (e - g) - (a - c) * (e * h - f * g),
					j = (a * d - b * c) * (f - h) - (b - d) * (e * h - f * g),
					k = (a - c) * (f - h) - (b - d) * (e - g);
				if (!k) return;
				var l = i / k,
					m = j / k,
					n = +l.toFixed(2),
					o = +m.toFixed(2);
				if (n < +y(a, c).toFixed(2) || n > +x(a, c).toFixed(2) || n < +y(e, g).toFixed(2) || n > +x(e, g).toFixed(2) || o < +y(b, d).toFixed(2) || o > +x(b, d).toFixed(2) || o < +y(f, h).toFixed(2) || o > +x(f, h).toFixed(2)) return;
				return {
					x: l,
					y: m
				}
			}
		}

		function bC(a, b, c, d, e, f, g, h, i) {
			if (!(i < 0 || bB(a, b, c, d, e, f, g, h) < i)) {
				var j = 1,
					k = j / 2,
					l = j - k,
					m, n = .01;
				m = bB(a, b, c, d, e, f, g, h, l);
				while (z(m - i) > n) k /= 2, l += (m < i ? 1 : -1) * k, m = bB(a, b, c, d, e, f, g, h, l);
				return l
			}
		}

		function bB(a, b, c, d, e, f, g, h, i) {
			i == null && (i = 1), i = i > 1 ? 1 : i < 0 ? 0 : i;
			var j = i / 2,
				k = 12,
				l = [-0.1252, .1252, -0.3678, .3678, -0.5873, .5873, -0.7699, .7699, -0.9041, .9041, -0.9816, .9816],
				m = [.2491, .2491, .2335, .2335, .2032, .2032, .1601, .1601, .1069, .1069, .0472, .0472],
				n = 0;
			for (var o = 0; o < k; o++) {
				var p = j * l[o] + j,
					q = bA(p, a, c, e, g),
					r = bA(p, b, d, f, h),
					s = q * q + r * r;
				n += m[o] * w.sqrt(s)
			}
			return j * n
		}

		function bA(a, b, c, d, e) {
			var f = -3 * b + 9 * c - 9 * d + 3 * e,
				g = a * f + 6 * b - 12 * c + 6 * d;
			return a * g - 3 * b + 3 * c
		}

		function by(a, b) {
			var c = [];
			for (var d = 0, e = a.length; e - 2 * !b > d; d += 2) {
				var f = [{
					x: +a[d - 2],
					y: +a[d - 1]
				}, {
					x: +a[d],
					y: +a[d + 1]
				}, {
					x: +a[d + 2],
					y: +a[d + 3]
				}, {
					x: +a[d + 4],
					y: +a[d + 5]
				}];
				b ? d ? e - 4 == d ? f[3] = {
					x: +a[0],
					y: +a[1]
				} : e - 2 == d && (f[2] = {
					x: +a[0],
					y: +a[1]
				}, f[3] = {
					x: +a[2],
					y: +a[3]
				}) : f[0] = {
					x: +a[e - 2],
					y: +a[e - 1]
				} : e - 4 == d ? f[3] = f[2] : d || (f[0] = {
					x: +a[d],
					y: +a[d + 1]
				}), c.push(["C", (-f[0].x + 6 * f[1].x + f[2].x) / 6, (-f[0].y + 6 * f[1].y + f[2].y) / 6, (f[1].x + 6 * f[2].x - f[3].x) / 6, (f[1].y + 6 * f[2].y - f[3].y) / 6, f[2].x, f[2].y])
			}
			return c
		}

		function bx() {
			return this.hex
		}

		function bv(a, b, c) {
			function d() {
				var e = Array.prototype.slice.call(arguments, 0),
					f = e.join("â€"),
					h = d.cache = d.cache || {},
					i = d.count = d.count || [];
				if (h[g](f)) {
					bu(i, f);
					return c ? c(h[f]) : h[f]
				}
				i.length >= 1e3 && delete h[i.shift()], i.push(f), h[f] = a[m](b, e);
				return c ? c(h[f]) : h[f]
			}
			return d
		}

		function bu(a, b) {
			for (var c = 0, d = a.length; c < d; c++)
				if (a[c] === b) return a.push(a.splice(c, 1)[0])
		}

		function bm(a) {
			if (Object(a) !== a) return a;
			var b = new a.constructor;
			for (var c in a) a[g](c) && (b[c] = bm(a[c]));
			return b
		}

		function a(c) {
			if (a.is(c, "function")) return b ? c() : eve.on("raphael.DOMload", c);
			if (a.is(c, E)) return a._engine.create[m](a, c.splice(0, 3 + a.is(c[0], C))).add(c);
			var d = Array.prototype.slice.call(arguments, 0);
			if (a.is(d[d.length - 1], "function")) {
				var e = d.pop();
				return b ? e.call(a._engine.create[m](a, d)) : eve.on("raphael.DOMload", function() {
					e.call(a._engine.create[m](a, d))
				})
			}
			return a._engine.create[m](a, arguments)
		}
		a.version = "2.1.0", a.eve = eve;
		var b, c = /[, ]+/,
			d = {
				circle: 1,
				rect: 1,
				path: 1,
				ellipse: 1,
				text: 1,
				image: 1
			},
			e = /\{(\d+)\}/g,
			f = "prototype",
			g = "hasOwnProperty",
			h = {
				doc: document,
				win: window
			},
			i = {
				was: Object.prototype[g].call(h.win, "Raphael"),
				is: h.win.Raphael
			},
			j = function() {
				this.ca = this.customAttributes = {}
			},
			k, l = "appendChild",
			m = "apply",
			n = "concat",
			o = "createTouch" in h.doc,
			p = "",
			q = " ",
			r = String,
			s = "split",
			t = "click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel" [s](q),
			u = {
				mousedown: "touchstart",
				mousemove: "touchmove",
				mouseup: "touchend"
			},
			v = r.prototype.toLowerCase,
			w = Math,
			x = w.max,
			y = w.min,
			z = w.abs,
			A = w.pow,
			B = w.PI,
			C = "number",
			D = "string",
			E = "array",
			F = "toString",
			G = "fill",
			H = Object.prototype.toString,
			I = {},
			J = "push",
			K = a._ISURL = /^url\(['"]?([^\)]+?)['"]?\)$/i,
			L = /^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\))\s*$/i,
			M = {
				NaN: 1,
				Infinity: 1,
				"-Infinity": 1
			},
			N = /^(?:cubic-)?bezier\(([^,]+),([^,]+),([^,]+),([^\)]+)\)/,
			O = w.round,
			P = "setAttribute",
			Q = parseFloat,
			R = parseInt,
			S = r.prototype.toUpperCase,
			T = a._availableAttrs = {
				"arrow-end": "none",
				"arrow-start": "none",
				blur: 0,
				"clip-rect": "0 0 1e9 1e9",
				cursor: "default",
				cx: 0,
				cy: 0,
				fill: "#fff",
				"fill-opacity": 1,
				font: '10px "Arial"',
				"font-family": '"Arial"',
				"font-size": "10",
				"font-style": "normal",
				"font-weight": 400,
				gradient: 0,
				height: 0,
				href: "http://raphaeljs.com/",
				"letter-spacing": 0,
				opacity: 1,
				path: "M0,0",
				r: 0,
				rx: 0,
				ry: 0,
				src: "",
				stroke: "#000",
				"stroke-dasharray": "",
				"stroke-linecap": "butt",
				"stroke-linejoin": "butt",
				"stroke-miterlimit": 0,
				"stroke-opacity": 1,
				"stroke-width": 1,
				target: "_blank",
				"text-anchor": "middle",
				title: "Raphael",
				transform: "",
				width: 0,
				x: 0,
				y: 0
			},
			U = a._availableAnimAttrs = {
				blur: C,
				"clip-rect": "csv",
				cx: C,
				cy: C,
				fill: "colour",
				"fill-opacity": C,
				"font-size": C,
				height: C,
				opacity: C,
				path: "path",
				r: C,
				rx: C,
				ry: C,
				stroke: "colour",
				"stroke-opacity": C,
				"stroke-width": C,
				transform: "transform",
				width: C,
				x: C,
				y: C
			},
			V = /[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]/g,
			W = /[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/,
			X = {
				hs: 1,
				rg: 1
			},
			Y = /,?([achlmqrstvxz]),?/gi,
			Z = /([achlmrqstvz])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/ig,
			$ = /([rstm])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/ig,
			_ = /(-?\d*\.?\d*(?:e[\-+]?\d+)?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/ig,
			ba = a._radial_gradient = /^r(?:\(([^,]+?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*([^\)]+?)\))?/,
			bb = {},
			bc = function(a, b) {
				return a.key - b.key
			},
			bd = function(a, b) {
				return Q(a) - Q(b)
			},
			be = function() {},
			bf = function(a) {
				return a
			},
			bg = a._rectPath = function(a, b, c, d, e) {
				if (e) return [
					["M", a + e, b],
					["l", c - e * 2, 0],
					["a", e, e, 0, 0, 1, e, e],
					["l", 0, d - e * 2],
					["a", e, e, 0, 0, 1, -e, e],
					["l", e * 2 - c, 0],
					["a", e, e, 0, 0, 1, -e, -e],
					["l", 0, e * 2 - d],
					["a", e, e, 0, 0, 1, e, -e],
					["z"]
				];
				return [
					["M", a, b],
					["l", c, 0],
					["l", 0, d],
					["l", -c, 0],
					["z"]
				]
			},
			bh = function(a, b, c, d) {
				d == null && (d = c);
				return [
					["M", a, b],
					["m", 0, -d],
					["a", c, d, 0, 1, 1, 0, 2 * d],
					["a", c, d, 0, 1, 1, 0, -2 * d],
					["z"]
				]
			},
			bi = a._getPath = {
				path: function(a) {
					return a.attr("path")
				},
				circle: function(a) {
					var b = a.attrs;
					return bh(b.cx, b.cy, b.r)
				},
				ellipse: function(a) {
					var b = a.attrs;
					return bh(b.cx, b.cy, b.rx, b.ry)
				},
				rect: function(a) {
					var b = a.attrs;
					return bg(b.x, b.y, b.width, b.height, b.r)
				},
				image: function(a) {
					var b = a.attrs;
					return bg(b.x, b.y, b.width, b.height)
				},
				text: function(a) {
					var b = a._getBBox();
					return bg(b.x, b.y, b.width, b.height)
				}
			},
			bj = a.mapPath = function(a, b) {
				if (!b) return a;
				var c, d, e, f, g, h, i;
				a = bR(a);
				for (e = 0, g = a.length; e < g; e++) {
					i = a[e];
					for (f = 1, h = i.length; f < h; f += 2) c = b.x(i[f], i[f + 1]), d = b.y(i[f], i[f + 1]), i[f] = c, i[f + 1] = d
				}
				return a
			};
		a._g = h, a.type = h.win.SVGAngle || h.doc.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1") ? "SVG" : "VML";
		if (a.type == "VML") {
			var bk = h.doc.createElement("div"),
				bl;
			bk.innerHTML = '<v:shape adj="1"/>', bl = bk.firstChild, bl.style.behavior = "url(#default#VML)";
			if (!bl || typeof bl.adj != "object") return a.type = p;
			bk = null
		}
		a.svg = !(a.vml = a.type == "VML"), a._Paper = j, a.fn = k = j.prototype = a.prototype, a._id = 0, a._oid = 0, a.is = function(a, b) {
			b = v.call(b);
			if (b == "finite") return !M[g](+a);
			if (b == "array") return a instanceof Array;
			return b == "null" && a === null || b == typeof a && a !== null || b == "object" && a === Object(a) || b == "array" && Array.isArray && Array.isArray(a) || H.call(a).slice(8, -1).toLowerCase() == b
		}, a.angle = function(b, c, d, e, f, g) {
			if (f == null) {
				var h = b - d,
					i = c - e;
				if (!h && !i) return 0;
				return (180 + w.atan2(-i, -h) * 180 / B + 360) % 360
			}
			return a.angle(b, c, f, g) - a.angle(d, e, f, g)
		}, a.rad = function(a) {
			return a % 360 * B / 180
		}, a.deg = function(a) {
			return a * 180 / B % 360
		}, a.snapTo = function(b, c, d) {
			d = a.is(d, "finite") ? d : 10;
			if (a.is(b, E)) {
				var e = b.length;
				while (e--)
					if (z(b[e] - c) <= d) return b[e]
			} else {
				b = +b;
				var f = c % b;
				if (f < d) return c - f;
				if (f > b - d) return c - f + b
			}
			return c
		};
		var bn = a.createUUID = function(a, b) {
			return function() {
				return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(a, b).toUpperCase()
			}
		}(/[xy]/g, function(a) {
			var b = w.random() * 16 | 0,
				c = a == "x" ? b : b & 3 | 8;
			return c.toString(16)
		});
		a.setWindow = function(b) {
			eve("raphael.setWindow", a, h.win, b), h.win = b, h.doc = h.win.document, a._engine.initWin && a._engine.initWin(h.win)
		};
		var bo = function(b) {
				if (a.vml) {
					var c = /^\s+|\s+$/g,
						d;
					try {
						var e = new ActiveXObject("htmlfile");
						e.write("<body>"), e.close(), d = e.body
					} catch (f) {
						d = createPopup().document.body
					}
					var g = d.createTextRange();
					bo = bv(function(a) {
						try {
							d.style.color = r(a).replace(c, p);
							var b = g.queryCommandValue("ForeColor");
							b = (b & 255) << 16 | b & 65280 | (b & 16711680) >>> 16;
							return "#" + ("000000" + b.toString(16)).slice(-6)
						} catch (e) {
							return "none"
						}
					})
				} else {
					var i = h.doc.createElement("i");
					i.title = "RaphaÃ«l Colour Picker", i.style.display = "none", h.doc.body.appendChild(i), bo = bv(function(a) {
						i.style.color = a;
						return h.doc.defaultView.getComputedStyle(i, p).getPropertyValue("color")
					})
				}
				return bo(b)
			},
			bp = function() {
				return "hsb(" + [this.h, this.s, this.b] + ")"
			},
			bq = function() {
				return "hsl(" + [this.h, this.s, this.l] + ")"
			},
			br = function() {
				return this.hex
			},
			bs = function(b, c, d) {
				c == null && a.is(b, "object") && "r" in b && "g" in b && "b" in b && (d = b.b, c = b.g, b = b.r);
				if (c == null && a.is(b, D)) {
					var e = a.getRGB(b);
					b = e.r, c = e.g, d = e.b
				}
				if (b > 1 || c > 1 || d > 1) b /= 255, c /= 255, d /= 255;
				return [b, c, d]
			},
			bt = function(b, c, d, e) {
				b *= 255, c *= 255, d *= 255;
				var f = {
					r: b,
					g: c,
					b: d,
					hex: a.rgb(b, c, d),
					toString: br
				};
				a.is(e, "finite") && (f.opacity = e);
				return f
			};
		a.color = function(b) {
			var c;
			a.is(b, "object") && "h" in b && "s" in b && "b" in b ? (c = a.hsb2rgb(b), b.r = c.r, b.g = c.g, b.b = c.b, b.hex = c.hex) : a.is(b, "object") && "h" in b && "s" in b && "l" in b ? (c = a.hsl2rgb(b), b.r = c.r, b.g = c.g, b.b = c.b, b.hex = c.hex) : (a.is(b, "string") && (b = a.getRGB(b)), a.is(b, "object") && "r" in b && "g" in b && "b" in b ? (c = a.rgb2hsl(b), b.h = c.h, b.s = c.s, b.l = c.l, c = a.rgb2hsb(b), b.v = c.b) : (b = {
				hex: "none"
			}, b.r = b.g = b.b = b.h = b.s = b.v = b.l = -1)), b.toString = br;
			return b
		}, a.hsb2rgb = function(a, b, c, d) {
			this.is(a, "object") && "h" in a && "s" in a && "b" in a && (c = a.b, b = a.s, a = a.h, d = a.o), a *= 360;
			var e, f, g, h, i;
			a = a % 360 / 60, i = c * b, h = i * (1 - z(a % 2 - 1)), e = f = g = c - i, a = ~~a, e += [i, h, 0, 0, h, i][a], f += [h, i, i, h, 0, 0][a], g += [0, 0, h, i, i, h][a];
			return bt(e, f, g, d)
		}, a.hsl2rgb = function(a, b, c, d) {
			this.is(a, "object") && "h" in a && "s" in a && "l" in a && (c = a.l, b = a.s, a = a.h);
			if (a > 1 || b > 1 || c > 1) a /= 360, b /= 100, c /= 100;
			a *= 360;
			var e, f, g, h, i;
			a = a % 360 / 60, i = 2 * b * (c < .5 ? c : 1 - c), h = i * (1 - z(a % 2 - 1)), e = f = g = c - i / 2, a = ~~a, e += [i, h, 0, 0, h, i][a], f += [h, i, i, h, 0, 0][a], g += [0, 0, h, i, i, h][a];
			return bt(e, f, g, d)
		}, a.rgb2hsb = function(a, b, c) {
			c = bs(a, b, c), a = c[0], b = c[1], c = c[2];
			var d, e, f, g;
			f = x(a, b, c), g = f - y(a, b, c), d = g == 0 ? null : f == a ? (b - c) / g : f == b ? (c - a) / g + 2 : (a - b) / g + 4, d = (d + 360) % 6 * 60 / 360, e = g == 0 ? 0 : g / f;
			return {
				h: d,
				s: e,
				b: f,
				toString: bp
			}
		}, a.rgb2hsl = function(a, b, c) {
			c = bs(a, b, c), a = c[0], b = c[1], c = c[2];
			var d, e, f, g, h, i;
			g = x(a, b, c), h = y(a, b, c), i = g - h, d = i == 0 ? null : g == a ? (b - c) / i : g == b ? (c - a) / i + 2 : (a - b) / i + 4, d = (d + 360) % 6 * 60 / 360, f = (g + h) / 2, e = i == 0 ? 0 : f < .5 ? i / (2 * f) : i / (2 - 2 * f);
			return {
				h: d,
				s: e,
				l: f,
				toString: bq
			}
		}, a._path2string = function() {
			return this.join(",").replace(Y, "$1")
		};
		var bw = a._preload = function(a, b) {
			var c = h.doc.createElement("img");
			c.style.cssText = "position:absolute;left:-9999em;top:-9999em", c.onload = function() {
				b.call(this), this.onload = null, h.doc.body.removeChild(this)
			}, c.onerror = function() {
				h.doc.body.removeChild(this)
			}, h.doc.body.appendChild(c), c.src = a
		};
		a.getRGB = bv(function(b) {
			if (!b || !!((b = r(b)).indexOf("-") + 1)) return {
				r: -1,
				g: -1,
				b: -1,
				hex: "none",
				error: 1,
				toString: bx
			};
			if (b == "none") return {
				r: -1,
				g: -1,
				b: -1,
				hex: "none",
				toString: bx
			};
			!X[g](b.toLowerCase().substring(0, 2)) && b.charAt() != "#" && (b = bo(b));
			var c, d, e, f, h, i, j, k = b.match(L);
			if (k) {
				k[2] && (f = R(k[2].substring(5), 16), e = R(k[2].substring(3, 5), 16), d = R(k[2].substring(1, 3), 16)), k[3] && (f = R((i = k[3].charAt(3)) + i, 16), e = R((i = k[3].charAt(2)) + i, 16), d = R((i = k[3].charAt(1)) + i, 16)), k[4] && (j = k[4][s](W), d = Q(j[0]), j[0].slice(-1) == "%" && (d *= 2.55), e = Q(j[1]), j[1].slice(-1) == "%" && (e *= 2.55), f = Q(j[2]), j[2].slice(-1) == "%" && (f *= 2.55), k[1].toLowerCase().slice(0, 4) == "rgba" && (h = Q(j[3])), j[3] && j[3].slice(-1) == "%" && (h /= 100));
				if (k[5]) {
					j = k[5][s](W), d = Q(j[0]), j[0].slice(-1) == "%" && (d *= 2.55), e = Q(j[1]), j[1].slice(-1) == "%" && (e *= 2.55), f = Q(j[2]), j[2].slice(-1) == "%" && (f *= 2.55), (j[0].slice(-3) == "deg" || j[0].slice(-1) == "Â°") && (d /= 360), k[1].toLowerCase().slice(0, 4) == "hsba" && (h = Q(j[3])), j[3] && j[3].slice(-1) == "%" && (h /= 100);
					return a.hsb2rgb(d, e, f, h)
				}
				if (k[6]) {
					j = k[6][s](W), d = Q(j[0]), j[0].slice(-1) == "%" && (d *= 2.55), e = Q(j[1]), j[1].slice(-1) == "%" && (e *= 2.55), f = Q(j[2]), j[2].slice(-1) == "%" && (f *= 2.55), (j[0].slice(-3) == "deg" || j[0].slice(-1) == "Â°") && (d /= 360), k[1].toLowerCase().slice(0, 4) == "hsla" && (h = Q(j[3])), j[3] && j[3].slice(-1) == "%" && (h /= 100);
					return a.hsl2rgb(d, e, f, h)
				}
				k = {
					r: d,
					g: e,
					b: f,
					toString: bx
				}, k.hex = "#" + (16777216 | f | e << 8 | d << 16).toString(16).slice(1), a.is(h, "finite") && (k.opacity = h);
				return k
			}
			return {
				r: -1,
				g: -1,
				b: -1,
				hex: "none",
				error: 1,
				toString: bx
			}
		}, a), a.hsb = bv(function(b, c, d) {
			return a.hsb2rgb(b, c, d).hex
		}), a.hsl = bv(function(b, c, d) {
			return a.hsl2rgb(b, c, d).hex
		}), a.rgb = bv(function(a, b, c) {
			return "#" + (16777216 | c | b << 8 | a << 16).toString(16).slice(1)
		}), a.getColor = function(a) {
			var b = this.getColor.start = this.getColor.start || {
					h: 0,
					s: 1,
					b: a || .75
				},
				c = this.hsb2rgb(b.h, b.s, b.b);
			b.h += .075, b.h > 1 && (b.h = 0, b.s -= .2, b.s <= 0 && (this.getColor.start = {
				h: 0,
				s: 1,
				b: b.b
			}));
			return c.hex
		}, a.getColor.reset = function() {
			delete this.start
		}, a.parsePathString = function(b) {
			if (!b) return null;
			var c = bz(b);
			if (c.arr) return bJ(c.arr);
			var d = {
					a: 7,
					c: 6,
					h: 1,
					l: 2,
					m: 2,
					r: 4,
					q: 4,
					s: 4,
					t: 2,
					v: 1,
					z: 0
				},
				e = [];
			a.is(b, E) && a.is(b[0], E) && (e = bJ(b)), e.length || r(b).replace(Z, function(a, b, c) {
				var f = [],
					g = b.toLowerCase();
				c.replace(_, function(a, b) {
					b && f.push(+b)
				}), g == "m" && f.length > 2 && (e.push([b][n](f.splice(0, 2))), g = "l", b = b == "m" ? "l" : "L");
				if (g == "r") e.push([b][n](f));
				else
					while (f.length >= d[g]) {
						e.push([b][n](f.splice(0, d[g])));
						if (!d[g]) break
					}
			}), e.toString = a._path2string, c.arr = bJ(e);
			return e
		}, a.parseTransformString = bv(function(b) {
			if (!b) return null;
			var c = {
					r: 3,
					s: 4,
					t: 2,
					m: 6
				},
				d = [];
			a.is(b, E) && a.is(b[0], E) && (d = bJ(b)), d.length || r(b).replace($, function(a, b, c) {
				var e = [],
					f = v.call(b);
				c.replace(_, function(a, b) {
					b && e.push(+b)
				}), d.push([b][n](e))
			}), d.toString = a._path2string;
			return d
		});
		var bz = function(a) {
			var b = bz.ps = bz.ps || {};
			b[a] ? b[a].sleep = 100 : b[a] = {
				sleep: 100
			}, setTimeout(function() {
				for (var c in b) b[g](c) && c != a && (b[c].sleep--, !b[c].sleep && delete b[c])
			});
			return b[a]
		};
		a.findDotsAtSegment = function(a, b, c, d, e, f, g, h, i) {
			var j = 1 - i,
				k = A(j, 3),
				l = A(j, 2),
				m = i * i,
				n = m * i,
				o = k * a + l * 3 * i * c + j * 3 * i * i * e + n * g,
				p = k * b + l * 3 * i * d + j * 3 * i * i * f + n * h,
				q = a + 2 * i * (c - a) + m * (e - 2 * c + a),
				r = b + 2 * i * (d - b) + m * (f - 2 * d + b),
				s = c + 2 * i * (e - c) + m * (g - 2 * e + c),
				t = d + 2 * i * (f - d) + m * (h - 2 * f + d),
				u = j * a + i * c,
				v = j * b + i * d,
				x = j * e + i * g,
				y = j * f + i * h,
				z = 90 - w.atan2(q - s, r - t) * 180 / B;
			(q > s || r < t) && (z += 180);
			return {
				x: o,
				y: p,
				m: {
					x: q,
					y: r
				},
				n: {
					x: s,
					y: t
				},
				start: {
					x: u,
					y: v
				},
				end: {
					x: x,
					y: y
				},
				alpha: z
			}
		}, a.bezierBBox = function(b, c, d, e, f, g, h, i) {
			a.is(b, "array") || (b = [b, c, d, e, f, g, h, i]);
			var j = bQ.apply(null, b);
			return {
				x: j.min.x,
				y: j.min.y,
				x2: j.max.x,
				y2: j.max.y,
				width: j.max.x - j.min.x,
				height: j.max.y - j.min.y
			}
		}, a.isPointInsideBBox = function(a, b, c) {
			return b >= a.x && b <= a.x2 && c >= a.y && c <= a.y2
		}, a.isBBoxIntersect = function(b, c) {
			var d = a.isPointInsideBBox;
			return d(c, b.x, b.y) || d(c, b.x2, b.y) || d(c, b.x, b.y2) || d(c, b.x2, b.y2) || d(b, c.x, c.y) || d(b, c.x2, c.y) || d(b, c.x, c.y2) || d(b, c.x2, c.y2) || (b.x < c.x2 && b.x > c.x || c.x < b.x2 && c.x > b.x) && (b.y < c.y2 && b.y > c.y || c.y < b.y2 && c.y > b.y)
		}, a.pathIntersection = function(a, b) {
			return bH(a, b)
		}, a.pathIntersectionNumber = function(a, b) {
			return bH(a, b, 1)
		}, a.isPointInsidePath = function(b, c, d) {
			var e = a.pathBBox(b);
			return a.isPointInsideBBox(e, c, d) && bH(b, [
				["M", c, d],
				["H", e.x2 + 10]
			], 1) % 2 == 1
		}, a._removedFactory = function(a) {
			return function() {
				eve("raphael.log", null, "RaphaÃ«l: you are calling to method â€œ" + a + "â€ of removed object", a)
			}
		};
		var bI = a.pathBBox = function(a) {
				var b = bz(a);
				if (b.bbox) return b.bbox;
				if (!a) return {
					x: 0,
					y: 0,
					width: 0,
					height: 0,
					x2: 0,
					y2: 0
				};
				a = bR(a);
				var c = 0,
					d = 0,
					e = [],
					f = [],
					g;
				for (var h = 0, i = a.length; h < i; h++) {
					g = a[h];
					if (g[0] == "M") c = g[1], d = g[2], e.push(c), f.push(d);
					else {
						var j = bQ(c, d, g[1], g[2], g[3], g[4], g[5], g[6]);
						e = e[n](j.min.x, j.max.x), f = f[n](j.min.y, j.max.y), c = g[5], d = g[6]
					}
				}
				var k = y[m](0, e),
					l = y[m](0, f),
					o = x[m](0, e),
					p = x[m](0, f),
					q = {
						x: k,
						y: l,
						x2: o,
						y2: p,
						width: o - k,
						height: p - l
					};
				b.bbox = bm(q);
				return q
			},
			bJ = function(b) {
				var c = bm(b);
				c.toString = a._path2string;
				return c
			},
			bK = a._pathToRelative = function(b) {
				var c = bz(b);
				if (c.rel) return bJ(c.rel);
				if (!a.is(b, E) || !a.is(b && b[0], E)) b = a.parsePathString(b);
				var d = [],
					e = 0,
					f = 0,
					g = 0,
					h = 0,
					i = 0;
				b[0][0] == "M" && (e = b[0][1], f = b[0][2], g = e, h = f, i++, d.push(["M", e, f]));
				for (var j = i, k = b.length; j < k; j++) {
					var l = d[j] = [],
						m = b[j];
					if (m[0] != v.call(m[0])) {
						l[0] = v.call(m[0]);
						switch (l[0]) {
							case "a":
								l[1] = m[1], l[2] = m[2], l[3] = m[3], l[4] = m[4], l[5] = m[5], l[6] = +(m[6] - e).toFixed(3), l[7] = +(m[7] - f).toFixed(3);
								break;
							case "v":
								l[1] = +(m[1] - f).toFixed(3);
								break;
							case "m":
								g = m[1], h = m[2];
							default:
								for (var n = 1, o = m.length; n < o; n++) l[n] = +(m[n] - (n % 2 ? e : f)).toFixed(3)
						}
					} else {
						l = d[j] = [], m[0] == "m" && (g = m[1] + e, h = m[2] + f);
						for (var p = 0, q = m.length; p < q; p++) d[j][p] = m[p]
					}
					var r = d[j].length;
					switch (d[j][0]) {
						case "z":
							e = g, f = h;
							break;
						case "h":
							e += +d[j][r - 1];
							break;
						case "v":
							f += +d[j][r - 1];
							break;
						default:
							e += +d[j][r - 2], f += +d[j][r - 1]
					}
				}
				d.toString = a._path2string, c.rel = bJ(d);
				return d
			},
			bL = a._pathToAbsolute = function(b) {
				var c = bz(b);
				if (c.abs) return bJ(c.abs);
				if (!a.is(b, E) || !a.is(b && b[0], E)) b = a.parsePathString(b);
				if (!b || !b.length) return [
					["M", 0, 0]
				];
				var d = [],
					e = 0,
					f = 0,
					g = 0,
					h = 0,
					i = 0;
				b[0][0] == "M" && (e = +b[0][1], f = +b[0][2], g = e, h = f, i++, d[0] = ["M", e, f]);
				var j = b.length == 3 && b[0][0] == "M" && b[1][0].toUpperCase() == "R" && b[2][0].toUpperCase() == "Z";
				for (var k, l, m = i, o = b.length; m < o; m++) {
					d.push(k = []), l = b[m];
					if (l[0] != S.call(l[0])) {
						k[0] = S.call(l[0]);
						switch (k[0]) {
							case "A":
								k[1] = l[1], k[2] = l[2], k[3] = l[3], k[4] = l[4], k[5] = l[5], k[6] = +(l[6] + e), k[7] = +(l[7] + f);
								break;
							case "V":
								k[1] = +l[1] + f;
								break;
							case "H":
								k[1] = +l[1] + e;
								break;
							case "R":
								var p = [e, f][n](l.slice(1));
								for (var q = 2, r = p.length; q < r; q++) p[q] = +p[q] + e, p[++q] = +p[q] + f;
								d.pop(), d = d[n](by(p, j));
								break;
							case "M":
								g = +l[1] + e, h = +l[2] + f;
							default:
								for (q = 1, r = l.length; q < r; q++) k[q] = +l[q] + (q % 2 ? e : f)
						}
					} else if (l[0] == "R") p = [e, f][n](l.slice(1)), d.pop(), d = d[n](by(p, j)), k = ["R"][n](l.slice(-2));
					else
						for (var s = 0, t = l.length; s < t; s++) k[s] = l[s];
					switch (k[0]) {
						case "Z":
							e = g, f = h;
							break;
						case "H":
							e = k[1];
							break;
						case "V":
							f = k[1];
							break;
						case "M":
							g = k[k.length - 2], h = k[k.length - 1];
						default:
							e = k[k.length - 2], f = k[k.length - 1]
					}
				}
				d.toString = a._path2string, c.abs = bJ(d);
				return d
			},
			bM = function(a, b, c, d) {
				return [a, b, c, d, c, d]
			},
			bN = function(a, b, c, d, e, f) {
				var g = 1 / 3,
					h = 2 / 3;
				return [g * a + h * c, g * b + h * d, g * e + h * c, g * f + h * d, e, f]
			},
			bO = function(a, b, c, d, e, f, g, h, i, j) {
				var k = B * 120 / 180,
					l = B / 180 * (+e || 0),
					m = [],
					o, p = bv(function(a, b, c) {
						var d = a * w.cos(c) - b * w.sin(c),
							e = a * w.sin(c) + b * w.cos(c);
						return {
							x: d,
							y: e
						}
					});
				if (!j) {
					o = p(a, b, -l), a = o.x, b = o.y, o = p(h, i, -l), h = o.x, i = o.y;
					var q = w.cos(B / 180 * e),
						r = w.sin(B / 180 * e),
						t = (a - h) / 2,
						u = (b - i) / 2,
						v = t * t / (c * c) + u * u / (d * d);
					v > 1 && (v = w.sqrt(v), c = v * c, d = v * d);
					var x = c * c,
						y = d * d,
						A = (f == g ? -1 : 1) * w.sqrt(z((x * y - x * u * u - y * t * t) / (x * u * u + y * t * t))),
						C = A * c * u / d + (a + h) / 2,
						D = A * -d * t / c + (b + i) / 2,
						E = w.asin(((b - D) / d).toFixed(9)),
						F = w.asin(((i - D) / d).toFixed(9));
					E = a < C ? B - E : E, F = h < C ? B - F : F, E < 0 && (E = B * 2 + E), F < 0 && (F = B * 2 + F), g && E > F && (E = E - B * 2), !g && F > E && (F = F - B * 2)
				} else E = j[0], F = j[1], C = j[2], D = j[3];
				var G = F - E;
				if (z(G) > k) {
					var H = F,
						I = h,
						J = i;
					F = E + k * (g && F > E ? 1 : -1), h = C + c * w.cos(F), i = D + d * w.sin(F), m = bO(h, i, c, d, e, 0, g, I, J, [F, H, C, D])
				}
				G = F - E;
				var K = w.cos(E),
					L = w.sin(E),
					M = w.cos(F),
					N = w.sin(F),
					O = w.tan(G / 4),
					P = 4 / 3 * c * O,
					Q = 4 / 3 * d * O,
					R = [a, b],
					S = [a + P * L, b - Q * K],
					T = [h + P * N, i - Q * M],
					U = [h, i];
				S[0] = 2 * R[0] - S[0], S[1] = 2 * R[1] - S[1];
				if (j) return [S, T, U][n](m);
				m = [S, T, U][n](m).join()[s](",");
				var V = [];
				for (var W = 0, X = m.length; W < X; W++) V[W] = W % 2 ? p(m[W - 1], m[W], l).y : p(m[W], m[W + 1], l).x;
				return V
			},
			bP = function(a, b, c, d, e, f, g, h, i) {
				var j = 1 - i;
				return {
					x: A(j, 3) * a + A(j, 2) * 3 * i * c + j * 3 * i * i * e + A(i, 3) * g,
					y: A(j, 3) * b + A(j, 2) * 3 * i * d + j * 3 * i * i * f + A(i, 3) * h
				}
			},
			bQ = bv(function(a, b, c, d, e, f, g, h) {
				var i = e - 2 * c + a - (g - 2 * e + c),
					j = 2 * (c - a) - 2 * (e - c),
					k = a - c,
					l = (-j + w.sqrt(j * j - 4 * i * k)) / 2 / i,
					n = (-j - w.sqrt(j * j - 4 * i * k)) / 2 / i,
					o = [b, h],
					p = [a, g],
					q;
				z(l) > "1e12" && (l = .5), z(n) > "1e12" && (n = .5), l > 0 && l < 1 && (q = bP(a, b, c, d, e, f, g, h, l), p.push(q.x), o.push(q.y)), n > 0 && n < 1 && (q = bP(a, b, c, d, e, f, g, h, n), p.push(q.x), o.push(q.y)), i = f - 2 * d + b - (h - 2 * f + d), j = 2 * (d - b) - 2 * (f - d), k = b - d, l = (-j + w.sqrt(j * j - 4 * i * k)) / 2 / i, n = (-j - w.sqrt(j * j - 4 * i * k)) / 2 / i, z(l) > "1e12" && (l = .5), z(n) > "1e12" && (n = .5), l > 0 && l < 1 && (q = bP(a, b, c, d, e, f, g, h, l), p.push(q.x), o.push(q.y)), n > 0 && n < 1 && (q = bP(a, b, c, d, e, f, g, h, n), p.push(q.x), o.push(q.y));
				return {
					min: {
						x: y[m](0, p),
						y: y[m](0, o)
					},
					max: {
						x: x[m](0, p),
						y: x[m](0, o)
					}
				}
			}),
			bR = a._path2curve = bv(function(a, b) {
				var c = !b && bz(a);
				if (!b && c.curve) return bJ(c.curve);
				var d = bL(a),
					e = b && bL(b),
					f = {
						x: 0,
						y: 0,
						bx: 0,
						by: 0,
						X: 0,
						Y: 0,
						qx: null,
						qy: null
					},
					g = {
						x: 0,
						y: 0,
						bx: 0,
						by: 0,
						X: 0,
						Y: 0,
						qx: null,
						qy: null
					},
					h = function(a, b) {
						var c, d;
						if (!a) return ["C", b.x, b.y, b.x, b.y, b.x, b.y];
						!(a[0] in {
							T: 1,
							Q: 1
						}) && (b.qx = b.qy = null);
						switch (a[0]) {
							case "M":
								b.X = a[1], b.Y = a[2];
								break;
							case "A":
								a = ["C"][n](bO[m](0, [b.x, b.y][n](a.slice(1))));
								break;
							case "S":
								c = b.x + (b.x - (b.bx || b.x)), d = b.y + (b.y - (b.by || b.y)), a = ["C", c, d][n](a.slice(1));
								break;
							case "T":
								b.qx = b.x + (b.x - (b.qx || b.x)), b.qy = b.y + (b.y - (b.qy || b.y)), a = ["C"][n](bN(b.x, b.y, b.qx, b.qy, a[1], a[2]));
								break;
							case "Q":
								b.qx = a[1], b.qy = a[2], a = ["C"][n](bN(b.x, b.y, a[1], a[2], a[3], a[4]));
								break;
							case "L":
								a = ["C"][n](bM(b.x, b.y, a[1], a[2]));
								break;
							case "H":
								a = ["C"][n](bM(b.x, b.y, a[1], b.y));
								break;
							case "V":
								a = ["C"][n](bM(b.x, b.y, b.x, a[1]));
								break;
							case "Z":
								a = ["C"][n](bM(b.x, b.y, b.X, b.Y))
						}
						return a
					},
					i = function(a, b) {
						if (a[b].length > 7) {
							a[b].shift();
							var c = a[b];
							while (c.length) a.splice(b++, 0, ["C"][n](c.splice(0, 6)));
							a.splice(b, 1), l = x(d.length, e && e.length || 0)
						}
					},
					j = function(a, b, c, f, g) {
						a && b && a[g][0] == "M" && b[g][0] != "M" && (b.splice(g, 0, ["M", f.x, f.y]), c.bx = 0, c.by = 0, c.x = a[g][1], c.y = a[g][2], l = x(d.length, e && e.length || 0))
					};
				for (var k = 0, l = x(d.length, e && e.length || 0); k < l; k++) {
					d[k] = h(d[k], f), i(d, k), e && (e[k] = h(e[k], g)), e && i(e, k), j(d, e, f, g, k), j(e, d, g, f, k);
					var o = d[k],
						p = e && e[k],
						q = o.length,
						r = e && p.length;
					f.x = o[q - 2], f.y = o[q - 1], f.bx = Q(o[q - 4]) || f.x, f.by = Q(o[q - 3]) || f.y, g.bx = e && (Q(p[r - 4]) || g.x), g.by = e && (Q(p[r - 3]) || g.y), g.x = e && p[r - 2], g.y = e && p[r - 1]
				}
				e || (c.curve = bJ(d));
				return e ? [d, e] : d
			}, null, bJ),
			bS = a._parseDots = bv(function(b) {
				var c = [];
				for (var d = 0, e = b.length; d < e; d++) {
					var f = {},
						g = b[d].match(/^([^:]*):?([\d\.]*)/);
					f.color = a.getRGB(g[1]);
					if (f.color.error) return null;
					f.color = f.color.hex, g[2] && (f.offset = g[2] + "%"), c.push(f)
				}
				for (d = 1, e = c.length - 1; d < e; d++)
					if (!c[d].offset) {
						var h = Q(c[d - 1].offset || 0),
							i = 0;
						for (var j = d + 1; j < e; j++)
							if (c[j].offset) {
								i = c[j].offset;
								break
							}
						i || (i = 100, j = e), i = Q(i);
						var k = (i - h) / (j - d + 1);
						for (; d < j; d++) h += k, c[d].offset = h + "%"
					}
				return c
			}),
			bT = a._tear = function(a, b) {
				a == b.top && (b.top = a.prev), a == b.bottom && (b.bottom = a.next), a.next && (a.next.prev = a.prev), a.prev && (a.prev.next = a.next)
			},
			bU = a._tofront = function(a, b) {
				b.top !== a && (bT(a, b), a.next = null, a.prev = b.top, b.top.next = a, b.top = a)
			},
			bV = a._toback = function(a, b) {
				b.bottom !== a && (bT(a, b), a.next = b.bottom, a.prev = null, b.bottom.prev = a, b.bottom = a)
			},
			bW = a._insertafter = function(a, b, c) {
				bT(a, c), b == c.top && (c.top = a), b.next && (b.next.prev = a), a.next = b.next, a.prev = b, b.next = a
			},
			bX = a._insertbefore = function(a, b, c) {
				bT(a, c), b == c.bottom && (c.bottom = a), b.prev && (b.prev.next = a), a.prev = b.prev, b.prev = a, a.next = b
			},
			bY = a.toMatrix = function(a, b) {
				var c = bI(a),
					d = {
						_: {
							transform: p
						},
						getBBox: function() {
							return c
						}
					};
				b$(d, b);
				return d.matrix
			},
			bZ = a.transformPath = function(a, b) {
				return bj(a, bY(a, b))
			},
			b$ = a._extractTransform = function(b, c) {
				if (c == null) return b._.transform;
				c = r(c).replace(/\.{3}|\u2026/g, b._.transform || p);
				var d = a.parseTransformString(c),
					e = 0,
					f = 0,
					g = 0,
					h = 1,
					i = 1,
					j = b._,
					k = new cb;
				j.transform = d || [];
				if (d)
					for (var l = 0, m = d.length; l < m; l++) {
						var n = d[l],
							o = n.length,
							q = r(n[0]).toLowerCase(),
							s = n[0] != q,
							t = s ? k.invert() : 0,
							u, v, w, x, y;
						q == "t" && o == 3 ? s ? (u = t.x(0, 0), v = t.y(0, 0), w = t.x(n[1], n[2]), x = t.y(n[1], n[2]), k.translate(w - u, x - v)) : k.translate(n[1], n[2]) : q == "r" ? o == 2 ? (y = y || b.getBBox(1), k.rotate(n[1], y.x + y.width / 2, y.y + y.height / 2), e += n[1]) : o == 4 && (s ? (w = t.x(n[2], n[3]), x = t.y(n[2], n[3]), k.rotate(n[1], w, x)) : k.rotate(n[1], n[2], n[3]), e += n[1]) : q == "s" ? o == 2 || o == 3 ? (y = y || b.getBBox(1), k.scale(n[1], n[o - 1], y.x + y.width / 2, y.y + y.height / 2), h *= n[1], i *= n[o - 1]) : o == 5 && (s ? (w = t.x(n[3], n[4]), x = t.y(n[3], n[4]), k.scale(n[1], n[2], w, x)) : k.scale(n[1], n[2], n[3], n[4]), h *= n[1], i *= n[2]) : q == "m" && o == 7 && k.add(n[1], n[2], n[3], n[4], n[5], n[6]), j.dirtyT = 1, b.matrix = k
					}
				b.matrix = k, j.sx = h, j.sy = i, j.deg = e, j.dx = f = k.e, j.dy = g = k.f, h == 1 && i == 1 && !e && j.bbox ? (j.bbox.x += +f, j.bbox.y += +g) : j.dirtyT = 1
			},
			b_ = function(a) {
				var b = a[0];
				switch (b.toLowerCase()) {
					case "t":
						return [b, 0, 0];
					case "m":
						return [b, 1, 0, 0, 1, 0, 0];
					case "r":
						return a.length == 4 ? [b, 0, a[2], a[3]] : [b, 0];
					case "s":
						return a.length == 5 ? [b, 1, 1, a[3], a[4]] : a.length == 3 ? [b, 1, 1] : [b, 1]
				}
			},
			ca = a._equaliseTransform = function(b, c) {
				c = r(c).replace(/\.{3}|\u2026/g, b), b = a.parseTransformString(b) || [], c = a.parseTransformString(c) || [];
				var d = x(b.length, c.length),
					e = [],
					f = [],
					g = 0,
					h, i, j, k;
				for (; g < d; g++) {
					j = b[g] || b_(c[g]), k = c[g] || b_(j);
					if (j[0] != k[0] || j[0].toLowerCase() == "r" && (j[2] != k[2] || j[3] != k[3]) || j[0].toLowerCase() == "s" && (j[3] != k[3] || j[4] != k[4])) return;
					e[g] = [], f[g] = [];
					for (h = 0, i = x(j.length, k.length); h < i; h++) h in j && (e[g][h] = j[h]), h in k && (f[g][h] = k[h])
				}
				return {
					from: e,
					to: f
				}
			};
		a._getContainer = function(b, c, d, e) {
			var f;
			f = e == null && !a.is(b, "object") ? h.doc.getElementById(b) : b;
			if (f != null) {
				if (f.tagName) return c == null ? {
					container: f,
					width: f.style.pixelWidth || f.offsetWidth,
					height: f.style.pixelHeight || f.offsetHeight
				} : {
					container: f,
					width: c,
					height: d
				};
				return {
					container: 1,
					x: b,
					y: c,
					width: d,
					height: e
				}
			}
		}, a.pathToRelative = bK, a._engine = {}, a.path2curve = bR, a.matrix = function(a, b, c, d, e, f) {
			return new cb(a, b, c, d, e, f)
		},
			function(b) {
				function d(a) {
					var b = w.sqrt(c(a));
					a[0] && (a[0] /= b), a[1] && (a[1] /= b)
				}

				function c(a) {
					return a[0] * a[0] + a[1] * a[1]
				}
				b.add = function(a, b, c, d, e, f) {
					var g = [
							[],
							[],
							[]
						],
						h = [
							[this.a, this.c, this.e],
							[this.b, this.d, this.f],
							[0, 0, 1]
						],
						i = [
							[a, c, e],
							[b, d, f],
							[0, 0, 1]
						],
						j, k, l, m;
					a && a instanceof cb && (i = [
						[a.a, a.c, a.e],
						[a.b, a.d, a.f],
						[0, 0, 1]
					]);
					for (j = 0; j < 3; j++)
						for (k = 0; k < 3; k++) {
							m = 0;
							for (l = 0; l < 3; l++) m += h[j][l] * i[l][k];
							g[j][k] = m
						}
					this.a = g[0][0], this.b = g[1][0], this.c = g[0][1], this.d = g[1][1], this.e = g[0][2], this.f = g[1][2]
				}, b.invert = function() {
					var a = this,
						b = a.a * a.d - a.b * a.c;
					return new cb(a.d / b, -a.b / b, -a.c / b, a.a / b, (a.c * a.f - a.d * a.e) / b, (a.b * a.e - a.a * a.f) / b)
				}, b.clone = function() {
					return new cb(this.a, this.b, this.c, this.d, this.e, this.f)
				}, b.translate = function(a, b) {
					this.add(1, 0, 0, 1, a, b)
				}, b.scale = function(a, b, c, d) {
					b == null && (b = a), (c || d) && this.add(1, 0, 0, 1, c, d), this.add(a, 0, 0, b, 0, 0), (c || d) && this.add(1, 0, 0, 1, -c, -d)
				}, b.rotate = function(b, c, d) {
					b = a.rad(b), c = c || 0, d = d || 0;
					var e = +w.cos(b).toFixed(9),
						f = +w.sin(b).toFixed(9);
					this.add(e, f, -f, e, c, d), this.add(1, 0, 0, 1, -c, -d)
				}, b.x = function(a, b) {
					return a * this.a + b * this.c + this.e
				}, b.y = function(a, b) {
					return a * this.b + b * this.d + this.f
				}, b.get = function(a) {
					return +this[r.fromCharCode(97 + a)].toFixed(4)
				}, b.toString = function() {
					return a.svg ? "matrix(" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + ")" : [this.get(0), this.get(2), this.get(1), this.get(3), 0, 0].join()
				}, b.toFilter = function() {
					return "progid:DXImageTransform.Microsoft.Matrix(M11=" + this.get(0) + ", M12=" + this.get(2) + ", M21=" + this.get(1) + ", M22=" + this.get(3) + ", Dx=" + this.get(4) + ", Dy=" + this.get(5) + ", sizingmethod='auto expand')"
				}, b.offset = function() {
					return [this.e.toFixed(4), this.f.toFixed(4)]
				}, b.split = function() {
					var b = {};
					b.dx = this.e, b.dy = this.f;
					var e = [
						[this.a, this.c],
						[this.b, this.d]
					];
					b.scalex = w.sqrt(c(e[0])), d(e[0]), b.shear = e[0][0] * e[1][0] + e[0][1] * e[1][1], e[1] = [e[1][0] - e[0][0] * b.shear, e[1][1] - e[0][1] * b.shear], b.scaley = w.sqrt(c(e[1])), d(e[1]), b.shear /= b.scaley;
					var f = -e[0][1],
						g = e[1][1];
					g < 0 ? (b.rotate = a.deg(w.acos(g)), f < 0 && (b.rotate = 360 - b.rotate)) : b.rotate = a.deg(w.asin(f)), b.isSimple = !+b.shear.toFixed(9) && (b.scalex.toFixed(9) == b.scaley.toFixed(9) || !b.rotate), b.isSuperSimple = !+b.shear.toFixed(9) && b.scalex.toFixed(9) == b.scaley.toFixed(9) && !b.rotate, b.noRotation = !+b.shear.toFixed(9) && !b.rotate;
					return b
				}, b.toTransformString = function(a) {
					var b = a || this[s]();
					if (b.isSimple) {
						b.scalex = +b.scalex.toFixed(4), b.scaley = +b.scaley.toFixed(4), b.rotate = +b.rotate.toFixed(4);
						return (b.dx || b.dy ? "t" + [b.dx, b.dy] : p) + (b.scalex != 1 || b.scaley != 1 ? "s" + [b.scalex, b.scaley, 0, 0] : p) + (b.rotate ? "r" + [b.rotate, 0, 0] : p)
					}
					return "m" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)]
				}
			}(cb.prototype);
		var cc = navigator.userAgent.match(/Version\/(.*?)\s/) || navigator.userAgent.match(/Chrome\/(\d+)/);
		navigator.vendor == "Apple Computer, Inc." && (cc && cc[1] < 4 || navigator.platform.slice(0, 2) == "iP") || navigator.vendor == "Google Inc." && cc && cc[1] < 8 ? k.safari = function() {
			var a = this.rect(-99, -99, this.width + 99, this.height + 99).attr({
				stroke: "none"
			});
			setTimeout(function() {
				a.remove()
			})
		} : k.safari = be;
		var cd = function() {
				this.returnValue = !1
			},
			ce = function() {
				return this.originalEvent.preventDefault()
			},
			cf = function() {
				this.cancelBubble = !0
			},
			cg = function() {
				return this.originalEvent.stopPropagation()
			},
			ch = function() {
				if (h.doc.addEventListener) return function(a, b, c, d) {
					var e = o && u[b] ? u[b] : b,
						f = function(e) {
							var f = h.doc.documentElement.scrollTop || h.doc.body.scrollTop,
								i = h.doc.documentElement.scrollLeft || h.doc.body.scrollLeft,
								j = e.clientX + i,
								k = e.clientY + f;
							if (o && u[g](b))
								for (var l = 0, m = e.targetTouches && e.targetTouches.length; l < m; l++)
									if (e.targetTouches[l].target == a) {
										var n = e;
										e = e.targetTouches[l], e.originalEvent = n, e.preventDefault = ce, e.stopPropagation = cg;
										break
									}
							return c.call(d, e, j, k)
						};
					a.addEventListener(e, f, !1);
					return function() {
						a.removeEventListener(e, f, !1);
						return !0
					}
				};
				if (h.doc.attachEvent) return function(a, b, c, d) {
					var e = function(a) {
						a = a || h.win.event;
						var b = h.doc.documentElement.scrollTop || h.doc.body.scrollTop,
							e = h.doc.documentElement.scrollLeft || h.doc.body.scrollLeft,
							f = a.clientX + e,
							g = a.clientY + b;
						a.preventDefault = a.preventDefault || cd, a.stopPropagation = a.stopPropagation || cf;
						return c.call(d, a, f, g)
					};
					a.attachEvent("on" + b, e);
					var f = function() {
						a.detachEvent("on" + b, e);
						return !0
					};
					return f
				}
			}(),
			ci = [],
			cj = function(a) {
				var b = a.clientX,
					c = a.clientY,
					d = h.doc.documentElement.scrollTop || h.doc.body.scrollTop,
					e = h.doc.documentElement.scrollLeft || h.doc.body.scrollLeft,
					f, g = ci.length;
				while (g--) {
					f = ci[g];
					if (o) {
						var i = a.touches.length,
							j;
						while (i--) {
							j = a.touches[i];
							if (j.identifier == f.el._drag.id) {
								b = j.clientX, c = j.clientY, (a.originalEvent ? a.originalEvent : a).preventDefault();
								break
							}
						}
					} else a.preventDefault();
					var k = f.el.node,
						l, m = k.nextSibling,
						n = k.parentNode,
						p = k.style.display;
					h.win.opera && n.removeChild(k), k.style.display = "none", l = f.el.paper.getElementByPoint(b, c), k.style.display = p, h.win.opera && (m ? n.insertBefore(k, m) : n.appendChild(k)), l && eve("raphael.drag.over." + f.el.id, f.el, l), b += e, c += d, eve("raphael.drag.move." + f.el.id, f.move_scope || f.el, b - f.el._drag.x, c - f.el._drag.y, b, c, a)
				}
			},
			ck = function(b) {
				a.unmousemove(cj).unmouseup(ck);
				var c = ci.length,
					d;
				while (c--) d = ci[c], d.el._drag = {}, eve("raphael.drag.end." + d.el.id, d.end_scope || d.start_scope || d.move_scope || d.el, b);
				ci = []
			},
			cl = a.el = {};
		for (var cm = t.length; cm--;)(function(b) {
			a[b] = cl[b] = function(c, d) {
				a.is(c, "function") && (this.events = this.events || [], this.events.push({
					name: b,
					f: c,
					unbind: ch(this.shape || this.node || h.doc, b, c, d || this)
				}));
				return this
			}, a["un" + b] = cl["un" + b] = function(a) {
				var c = this.events || [],
					d = c.length;
				while (d--)
					if (c[d].name == b && c[d].f == a) {
						c[d].unbind(), c.splice(d, 1), !c.length && delete this.events;
						return this
					}
				return this
			}
		})(t[cm]);
		cl.data = function(b, c) {
			var d = bb[this.id] = bb[this.id] || {};
			if (arguments.length == 1) {
				if (a.is(b, "object")) {
					for (var e in b) b[g](e) && this.data(e, b[e]);
					return this
				}
				eve("raphael.data.get." + this.id, this, d[b], b);
				return d[b]
			}
			d[b] = c, eve("raphael.data.set." + this.id, this, c, b);
			return this
		}, cl.removeData = function(a) {
			a == null ? bb[this.id] = {} : bb[this.id] && delete bb[this.id][a];
			return this
		}, cl.hover = function(a, b, c, d) {
			return this.mouseover(a, c).mouseout(b, d || c)
		}, cl.unhover = function(a, b) {
			return this.unmouseover(a).unmouseout(b)
		};
		var cn = [];
		cl.drag = function(b, c, d, e, f, g) {
			function i(i) {
				(i.originalEvent || i).preventDefault();
				var j = h.doc.documentElement.scrollTop || h.doc.body.scrollTop,
					k = h.doc.documentElement.scrollLeft || h.doc.body.scrollLeft;
				this._drag.x = i.clientX + k, this._drag.y = i.clientY + j, this._drag.id = i.identifier, !ci.length && a.mousemove(cj).mouseup(ck), ci.push({
					el: this,
					move_scope: e,
					start_scope: f,
					end_scope: g
				}), c && eve.on("raphael.drag.start." + this.id, c), b && eve.on("raphael.drag.move." + this.id, b), d && eve.on("raphael.drag.end." + this.id, d), eve("raphael.drag.start." + this.id, f || e || this, i.clientX + k, i.clientY + j, i)
			}
			this._drag = {}, cn.push({
				el: this,
				start: i
			}), this.mousedown(i);
			return this
		}, cl.onDragOver = function(a) {
			a ? eve.on("raphael.drag.over." + this.id, a) : eve.unbind("raphael.drag.over." + this.id)
		}, cl.undrag = function() {
			var b = cn.length;
			while (b--) cn[b].el == this && (this.unmousedown(cn[b].start), cn.splice(b, 1), eve.unbind("raphael.drag.*." + this.id));
			!cn.length && a.unmousemove(cj).unmouseup(ck)
		}, k.circle = function(b, c, d) {
			var e = a._engine.circle(this, b || 0, c || 0, d || 0);
			this.__set__ && this.__set__.push(e);
			return e
		}, k.rect = function(b, c, d, e, f) {
			var g = a._engine.rect(this, b || 0, c || 0, d || 0, e || 0, f || 0);
			this.__set__ && this.__set__.push(g);
			return g
		}, k.ellipse = function(b, c, d, e) {
			var f = a._engine.ellipse(this, b || 0, c || 0, d || 0, e || 0);
			this.__set__ && this.__set__.push(f);
			return f
		}, k.path = function(b) {
			b && !a.is(b, D) && !a.is(b[0], E) && (b += p);
			var c = a._engine.path(a.format[m](a, arguments), this);
			this.__set__ && this.__set__.push(c);
			return c
		}, k.image = function(b, c, d, e, f) {
			var g = a._engine.image(this, b || "about:blank", c || 0, d || 0, e || 0, f || 0);
			this.__set__ && this.__set__.push(g);
			return g
		}, k.text = function(b, c, d) {
			var e = a._engine.text(this, b || 0, c || 0, r(d));
			this.__set__ && this.__set__.push(e);
			return e
		}, k.set = function(b) {
			!a.is(b, "array") && (b = Array.prototype.splice.call(arguments, 0, arguments.length));
			var c = new cG(b);
			this.__set__ && this.__set__.push(c);
			return c
		}, k.setStart = function(a) {
			this.__set__ = a || this.set()
		}, k.setFinish = function(a) {
			var b = this.__set__;
			delete this.__set__;
			return b
		}, k.setSize = function(b, c) {
			return a._engine.setSize.call(this, b, c)
		}, k.setViewBox = function(b, c, d, e, f) {
			return a._engine.setViewBox.call(this, b, c, d, e, f)
		}, k.top = k.bottom = null, k.raphael = a;
		var co = function(a) {
			var b = a.getBoundingClientRect(),
				c = a.ownerDocument,
				d = c.body,
				e = c.documentElement,
				f = e.clientTop || d.clientTop || 0,
				g = e.clientLeft || d.clientLeft || 0,
				i = b.top + (h.win.pageYOffset || e.scrollTop || d.scrollTop) - f,
				j = b.left + (h.win.pageXOffset || e.scrollLeft || d.scrollLeft) - g;
			return {
				y: i,
				x: j
			}
		};
		k.getElementByPoint = function(a, b) {
			var c = this,
				d = c.canvas,
				e = h.doc.elementFromPoint(a, b);
			if (h.win.opera && e.tagName == "svg") {
				var f = co(d),
					g = d.createSVGRect();
				g.x = a - f.x, g.y = b - f.y, g.width = g.height = 1;
				var i = d.getIntersectionList(g, null);
				i.length && (e = i[i.length - 1])
			}
			if (!e) return null;
			while (e.parentNode && e != d.parentNode && !e.raphael) e = e.parentNode;
			e == c.canvas.parentNode && (e = d), e = e && e.raphael ? c.getById(e.raphaelid) : null;
			return e
		}, k.getById = function(a) {
			var b = this.bottom;
			while (b) {
				if (b.id == a) return b;
				b = b.next
			}
			return null
		}, k.forEach = function(a, b) {
			var c = this.bottom;
			while (c) {
				if (a.call(b, c) === !1) return this;
				c = c.next
			}
			return this
		}, k.getElementsByPoint = function(a, b) {
			var c = this.set();
			this.forEach(function(d) {
				d.isPointInside(a, b) && c.push(d)
			});
			return c
		}, cl.isPointInside = function(b, c) {
			var d = this.realPath = this.realPath || bi[this.type](this);
			return a.isPointInsidePath(d, b, c)
		}, cl.getBBox = function(a) {
			if (this.removed) return {};
			var b = this._;
			if (a) {
				if (b.dirty || !b.bboxwt) this.realPath = bi[this.type](this), b.bboxwt = bI(this.realPath), b.bboxwt.toString = cq, b.dirty = 0;
				return b.bboxwt
			}
			if (b.dirty || b.dirtyT || !b.bbox) {
				if (b.dirty || !this.realPath) b.bboxwt = 0, this.realPath = bi[this.type](this);
				b.bbox = bI(bj(this.realPath, this.matrix)), b.bbox.toString = cq, b.dirty = b.dirtyT = 0
			}
			return b.bbox
		}, cl.clone = function() {
			if (this.removed) return null;
			var a = this.paper[this.type]().attr(this.attr());
			this.__set__ && this.__set__.push(a);
			return a
		}, cl.glow = function(a) {
			if (this.type == "text") return null;
			a = a || {};
			var b = {
					width: (a.width || 10) + (+this.attr("stroke-width") || 1),
					fill: a.fill || !1,
					opacity: a.opacity || .5,
					offsetx: a.offsetx || 0,
					offsety: a.offsety || 0,
					color: a.color || "#000"
				},
				c = b.width / 2,
				d = this.paper,
				e = d.set(),
				f = this.realPath || bi[this.type](this);
			f = this.matrix ? bj(f, this.matrix) : f;
			for (var g = 1; g < c + 1; g++) e.push(d.path(f).attr({
				stroke: b.color,
				fill: b.fill ? b.color : "none",
				"stroke-linejoin": "round",
				"stroke-linecap": "round",
				"stroke-width": +(b.width / c * g).toFixed(3),
				opacity: +(b.opacity / c).toFixed(3)
			}));
			return e.insertBefore(this).translate(b.offsetx, b.offsety)
		};
		var cr = {},
			cs = function(b, c, d, e, f, g, h, i, j) {
				return j == null ? bB(b, c, d, e, f, g, h, i) : a.findDotsAtSegment(b, c, d, e, f, g, h, i, bC(b, c, d, e, f, g, h, i, j))
			},
			ct = function(b, c) {
				return function(d, e, f) {
					d = bR(d);
					var g, h, i, j, k = "",
						l = {},
						m, n = 0;
					for (var o = 0, p = d.length; o < p; o++) {
						i = d[o];
						if (i[0] == "M") g = +i[1], h = +i[2];
						else {
							j = cs(g, h, i[1], i[2], i[3], i[4], i[5], i[6]);
							if (n + j > e) {
								if (c && !l.start) {
									m = cs(g, h, i[1], i[2], i[3], i[4], i[5], i[6], e - n), k += ["C" + m.start.x, m.start.y, m.m.x, m.m.y, m.x, m.y];
									if (f) return k;
									l.start = k, k = ["M" + m.x, m.y + "C" + m.n.x, m.n.y, m.end.x, m.end.y, i[5], i[6]].join(), n += j, g = +i[5], h = +i[6];
									continue
								}
								if (!b && !c) {
									m = cs(g, h, i[1], i[2], i[3], i[4], i[5], i[6], e - n);
									return {
										x: m.x,
										y: m.y,
										alpha: m.alpha
									}
								}
							}
							n += j, g = +i[5], h = +i[6]
						}
						k += i.shift() + i
					}
					l.end = k, m = b ? n : c ? l : a.findDotsAtSegment(g, h, i[0], i[1], i[2], i[3], i[4], i[5], 1), m.alpha && (m = {
						x: m.x,
						y: m.y,
						alpha: m.alpha
					});
					return m
				}
			},
			cu = ct(1),
			cv = ct(),
			cw = ct(0, 1);
		a.getTotalLength = cu, a.getPointAtLength = cv, a.getSubpath = function(a, b, c) {
			if (this.getTotalLength(a) - c < 1e-6) return cw(a, b).end;
			var d = cw(a, c, 1);
			return b ? cw(d, b).end : d
		}, cl.getTotalLength = function() {
			if (this.type == "path") {
				if (this.node.getTotalLength) return this.node.getTotalLength();
				return cu(this.attrs.path)
			}
		}, cl.getPointAtLength = function(a) {
			if (this.type == "path") return cv(this.attrs.path, a)
		}, cl.getSubpath = function(b, c) {
			if (this.type == "path") return a.getSubpath(this.attrs.path, b, c)
		};
		var cx = a.easing_formulas = {
			linear: function(a) {
				return a
			},
			"<": function(a) {
				return A(a, 1.7)
			},
			">": function(a) {
				return A(a, .48)
			},
			"<>": function(a) {
				var b = .48 - a / 1.04,
					c = w.sqrt(.1734 + b * b),
					d = c - b,
					e = A(z(d), 1 / 3) * (d < 0 ? -1 : 1),
					f = -c - b,
					g = A(z(f), 1 / 3) * (f < 0 ? -1 : 1),
					h = e + g + .5;
				return (1 - h) * 3 * h * h + h * h * h
			},
			backIn: function(a) {
				var b = 1.70158;
				return a * a * ((b + 1) * a - b)
			},
			backOut: function(a) {
				a = a - 1;
				var b = 1.70158;
				return a * a * ((b + 1) * a + b) + 1
			},
			elastic: function(a) {
				if (a == !!a) return a;
				return A(2, -10 * a) * w.sin((a - .075) * 2 * B / .3) + 1
			},
			bounce: function(a) {
				var b = 7.5625,
					c = 2.75,
					d;
				a < 1 / c ? d = b * a * a : a < 2 / c ? (a -= 1.5 / c, d = b * a * a + .75) : a < 2.5 / c ? (a -= 2.25 / c, d = b * a * a + .9375) : (a -= 2.625 / c, d = b * a * a + .984375);
				return d
			}
		};
		cx.easeIn = cx["ease-in"] = cx["<"], cx.easeOut = cx["ease-out"] = cx[">"], cx.easeInOut = cx["ease-in-out"] = cx["<>"], cx["back-in"] = cx.backIn, cx["back-out"] = cx.backOut;
		var cy = [],
			cz = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(a) {
				setTimeout(a, 16)
			},
			cA = function() {
				var b = +(new Date),
					c = 0;
				for (; c < cy.length; c++) {
					var d = cy[c];
					if (d.el.removed || d.paused) continue;
					var e = b - d.start,
						f = d.ms,
						h = d.easing,
						i = d.from,
						j = d.diff,
						k = d.to,
						l = d.t,
						m = d.el,
						o = {},
						p, r = {},
						s;
					d.initstatus ? (e = (d.initstatus * d.anim.top - d.prev) / (d.percent - d.prev) * f, d.status = d.initstatus, delete d.initstatus, d.stop && cy.splice(c--, 1)) : d.status = (d.prev + (d.percent - d.prev) * (e / f)) / d.anim.top;
					if (e < 0) continue;
					if (e < f) {
						var t = h(e / f);
						for (var u in i)
							if (i[g](u)) {
								switch (U[u]) {
									case C:
										p = +i[u] + t * f * j[u];
										break;
									case "colour":
										p = "rgb(" + [cB(O(i[u].r + t * f * j[u].r)), cB(O(i[u].g + t * f * j[u].g)), cB(O(i[u].b + t * f * j[u].b))].join(",") + ")";
										break;
									case "path":
										p = [];
										for (var v = 0, w = i[u].length; v < w; v++) {
											p[v] = [i[u][v][0]];
											for (var x = 1, y = i[u][v].length; x < y; x++) p[v][x] = +i[u][v][x] + t * f * j[u][v][x];
											p[v] = p[v].join(q)
										}
										p = p.join(q);
										break;
									case "transform":
										if (j[u].real) {
											p = [];
											for (v = 0, w = i[u].length; v < w; v++) {
												p[v] = [i[u][v][0]];
												for (x = 1, y = i[u][v].length; x < y; x++) p[v][x] = i[u][v][x] + t * f * j[u][v][x]
											}
										} else {
											var z = function(a) {
												return +i[u][a] + t * f * j[u][a]
											};
											p = [
												["m", z(0), z(1), z(2), z(3), z(4), z(5)]
											]
										}
										break;
									case "csv":
										if (u == "clip-rect") {
											p = [], v = 4;
											while (v--) p[v] = +i[u][v] + t * f * j[u][v]
										}
										break;
									default:
										var A = [][n](i[u]);
										p = [], v = m.paper.customAttributes[u].length;
										while (v--) p[v] = +A[v] + t * f * j[u][v]
								}
								o[u] = p
							}
						m.attr(o),
							function(a, b, c) {
								setTimeout(function() {
									eve("raphael.anim.frame." + a, b, c)
								})
							}(m.id, m, d.anim)
					} else {
						(function(b, c, d) {
							setTimeout(function() {
								eve("raphael.anim.frame." + c.id, c, d), eve("raphael.anim.finish." + c.id, c, d), a.is(b, "function") && b.call(c)
							})
						})(d.callback, m, d.anim), m.attr(k), cy.splice(c--, 1);
						if (d.repeat > 1 && !d.next) {
							for (s in k) k[g](s) && (r[s] = d.totalOrigin[s]);
							d.el.attr(r), cE(d.anim, d.el, d.anim.percents[0], null, d.totalOrigin, d.repeat - 1)
						}
						d.next && !d.stop && cE(d.anim, d.el, d.next, null, d.totalOrigin, d.repeat)
					}
				}
				a.svg && m && m.paper && m.paper.safari(), cy.length && cz(cA)
			},
			cB = function(a) {
				return a > 255 ? 255 : a < 0 ? 0 : a
			};
		cl.animateWith = function(b, c, d, e, f, g) {
			var h = this;
			if (h.removed) {
				g && g.call(h);
				return h
			}
			var i = d instanceof cD ? d : a.animation(d, e, f, g),
				j, k;
			cE(i, h, i.percents[0], null, h.attr());
			for (var l = 0, m = cy.length; l < m; l++)
				if (cy[l].anim == c && cy[l].el == b) {
					cy[m - 1].start = cy[l].start;
					break
				}
			return h
		}, cl.onAnimation = function(a) {
			a ? eve.on("raphael.anim.frame." + this.id, a) : eve.unbind("raphael.anim.frame." + this.id);
			return this
		}, cD.prototype.delay = function(a) {
			var b = new cD(this.anim, this.ms);
			b.times = this.times, b.del = +a || 0;
			return b
		}, cD.prototype.repeat = function(a) {
			var b = new cD(this.anim, this.ms);
			b.del = this.del, b.times = w.floor(x(a, 0)) || 1;
			return b
		}, a.animation = function(b, c, d, e) {
			if (b instanceof cD) return b;
			if (a.is(d, "function") || !d) e = e || d || null, d = null;
			b = Object(b), c = +c || 0;
			var f = {},
				h, i;
			for (i in b) b[g](i) && Q(i) != i && Q(i) + "%" != i && (h = !0, f[i] = b[i]);
			if (!h) return new cD(b, c);
			d && (f.easing = d), e && (f.callback = e);
			return new cD({
				100: f
			}, c)
		}, cl.animate = function(b, c, d, e) {
			var f = this;
			if (f.removed) {
				e && e.call(f);
				return f
			}
			var g = b instanceof cD ? b : a.animation(b, c, d, e);
			cE(g, f, g.percents[0], null, f.attr());
			return f
		}, cl.setTime = function(a, b) {
			a && b != null && this.status(a, y(b, a.ms) / a.ms);
			return this
		}, cl.status = function(a, b) {
			var c = [],
				d = 0,
				e, f;
			if (b != null) {
				cE(a, this, -1, y(b, 1));
				return this
			}
			e = cy.length;
			for (; d < e; d++) {
				f = cy[d];
				if (f.el.id == this.id && (!a || f.anim == a)) {
					if (a) return f.status;
					c.push({
						anim: f.anim,
						status: f.status
					})
				}
			}
			if (a) return 0;
			return c
		}, cl.pause = function(a) {
			for (var b = 0; b < cy.length; b++) cy[b].el.id == this.id && (!a || cy[b].anim == a) && eve("raphael.anim.pause." + this.id, this, cy[b].anim) !== !1 && (cy[b].paused = !0);
			return this
		}, cl.resume = function(a) {
			for (var b = 0; b < cy.length; b++)
				if (cy[b].el.id == this.id && (!a || cy[b].anim == a)) {
					var c = cy[b];
					eve("raphael.anim.resume." + this.id, this, c.anim) !== !1 && (delete c.paused, this.status(c.anim, c.status))
				}
			return this
		}, cl.stop = function(a) {
			for (var b = 0; b < cy.length; b++) cy[b].el.id == this.id && (!a || cy[b].anim == a) && eve("raphael.anim.stop." + this.id, this, cy[b].anim) !== !1 && cy.splice(b--, 1);
			return this
		}, eve.on("raphael.remove", cF), eve.on("raphael.clear", cF), cl.toString = function() {
			return "RaphaÃ«lâ€™s object"
		};
		var cG = function(a) {
				this.items = [], this.length = 0, this.type = "set";
				if (a)
					for (var b = 0, c = a.length; b < c; b++) a[b] && (a[b].constructor == cl.constructor || a[b].constructor == cG) && (this[this.items.length] = this.items[this.items.length] = a[b], this.length++)
			},
			cH = cG.prototype;
		cH.push = function() {
			var a, b;
			for (var c = 0, d = arguments.length; c < d; c++) a = arguments[c], a && (a.constructor == cl.constructor || a.constructor == cG) && (b = this.items.length, this[b] = this.items[b] = a, this.length++);
			return this
		}, cH.pop = function() {
			this.length && delete this[this.length--];
			return this.items.pop()
		}, cH.forEach = function(a, b) {
			for (var c = 0, d = this.items.length; c < d; c++)
				if (a.call(b, this.items[c], c) === !1) return this;
			return this
		};
		for (var cI in cl) cl[g](cI) && (cH[cI] = function(a) {
			return function() {
				var b = arguments;
				return this.forEach(function(c) {
					c[a][m](c, b)
				})
			}
		}(cI));
		cH.attr = function(b, c) {
			if (b && a.is(b, E) && a.is(b[0], "object"))
				for (var d = 0, e = b.length; d < e; d++) this.items[d].attr(b[d]);
			else
				for (var f = 0, g = this.items.length; f < g; f++) this.items[f].attr(b, c);
			return this
		}, cH.clear = function() {
			while (this.length) this.pop()
		}, cH.splice = function(a, b, c) {
			a = a < 0 ? x(this.length + a, 0) : a, b = x(0, y(this.length - a, b));
			var d = [],
				e = [],
				f = [],
				g;
			for (g = 2; g < arguments.length; g++) f.push(arguments[g]);
			for (g = 0; g < b; g++) e.push(this[a + g]);
			for (; g < this.length - a; g++) d.push(this[a + g]);
			var h = f.length;
			for (g = 0; g < h + d.length; g++) this.items[a + g] = this[a + g] = g < h ? f[g] : d[g - h];
			g = this.items.length = this.length -= b - h;
			while (this[g]) delete this[g++];
			return new cG(e)
		}, cH.exclude = function(a) {
			for (var b = 0, c = this.length; b < c; b++)
				if (this[b] == a) {
					this.splice(b, 1);
					return !0
				}
		}, cH.animate = function(b, c, d, e) {
			(a.is(d, "function") || !d) && (e = d || null);
			var f = this.items.length,
				g = f,
				h, i = this,
				j;
			if (!f) return this;
			e && (j = function() {
				!--f && e.call(i)
			}), d = a.is(d, D) ? d : j;
			var k = a.animation(b, c, d, j);
			h = this.items[--g].animate(k);
			while (g--) this.items[g] && !this.items[g].removed && this.items[g].animateWith(h, k, k);
			return this
		}, cH.insertAfter = function(a) {
			var b = this.items.length;
			while (b--) this.items[b].insertAfter(a);
			return this
		}, cH.getBBox = function() {
			var a = [],
				b = [],
				c = [],
				d = [];
			for (var e = this.items.length; e--;)
				if (!this.items[e].removed) {
					var f = this.items[e].getBBox();
					a.push(f.x), b.push(f.y), c.push(f.x + f.width), d.push(f.y + f.height)
				}
			a = y[m](0, a), b = y[m](0, b), c = x[m](0, c), d = x[m](0, d);
			return {
				x: a,
				y: b,
				x2: c,
				y2: d,
				width: c - a,
				height: d - b
			}
		}, cH.clone = function(a) {
			a = new cG;
			for (var b = 0, c = this.items.length; b < c; b++) a.push(this.items[b].clone());
			return a
		}, cH.toString = function() {
			return "RaphaÃ«lâ€˜s set"
		}, a.registerFont = function(a) {
			if (!a.face) return a;
			this.fonts = this.fonts || {};
			var b = {
					w: a.w,
					face: {},
					glyphs: {}
				},
				c = a.face["font-family"];
			for (var d in a.face) a.face[g](d) && (b.face[d] = a.face[d]);
			this.fonts[c] ? this.fonts[c].push(b) : this.fonts[c] = [b];
			if (!a.svg) {
				b.face["units-per-em"] = R(a.face["units-per-em"], 10);
				for (var e in a.glyphs)
					if (a.glyphs[g](e)) {
						var f = a.glyphs[e];
						b.glyphs[e] = {
							w: f.w,
							k: {},
							d: f.d && "M" + f.d.replace(/[mlcxtrv]/g, function(a) {
								return {
									l: "L",
									c: "C",
									x: "z",
									t: "m",
									r: "l",
									v: "c"
								}[a] || "M"
							}) + "z"
						};
						if (f.k)
							for (var h in f.k) f[g](h) && (b.glyphs[e].k[h] = f.k[h])
					}
			}
			return a
		}, k.getFont = function(b, c, d, e) {
			e = e || "normal", d = d || "normal", c = +c || {
				normal: 400,
				bold: 700,
				lighter: 300,
				bolder: 800
			}[c] || 400;
			if (!!a.fonts) {
				var f = a.fonts[b];
				if (!f) {
					var h = new RegExp("(^|\\s)" + b.replace(/[^\w\d\s+!~.:_-]/g, p) + "(\\s|$)", "i");
					for (var i in a.fonts)
						if (a.fonts[g](i) && h.test(i)) {
							f = a.fonts[i];
							break
						}
				}
				var j;
				if (f)
					for (var k = 0, l = f.length; k < l; k++) {
						j = f[k];
						if (j.face["font-weight"] == c && (j.face["font-style"] == d || !j.face["font-style"]) && j.face["font-stretch"] == e) break
					}
				return j
			}
		}, k.print = function(b, d, e, f, g, h, i) {
			h = h || "middle", i = x(y(i || 0, 1), -1);
			var j = r(e)[s](p),
				k = 0,
				l = 0,
				m = p,
				n;
			a.is(f, e) && (f = this.getFont(f));
			if (f) {
				n = (g || 16) / f.face["units-per-em"];
				var o = f.face.bbox[s](c),
					q = +o[0],
					t = o[3] - o[1],
					u = 0,
					v = +o[1] + (h == "baseline" ? t + +f.face.descent : t / 2);
				for (var w = 0, z = j.length; w < z; w++) {
					if (j[w] == "\n") k = 0, B = 0, l = 0, u += t;
					else {
						var A = l && f.glyphs[j[w - 1]] || {},
							B = f.glyphs[j[w]];
						k += l ? (A.w || f.w) + (A.k && A.k[j[w]] || 0) + f.w * i : 0, l = 1
					}
					B && B.d && (m += a.transformPath(B.d, ["t", k * n, u * n, "s", n, n, q, v, "t", (b - q) / n, (d - v) / n]))
				}
			}
			return this.path(m).attr({
				fill: "#000",
				stroke: "none"
			})
		}, k.add = function(b) {
			if (a.is(b, "array")) {
				var c = this.set(),
					e = 0,
					f = b.length,
					h;
				for (; e < f; e++) h = b[e] || {}, d[g](h.type) && c.push(this[h.type]().attr(h))
			}
			return c
		}, a.format = function(b, c) {
			var d = a.is(c, E) ? [0][n](c) : arguments;
			b && a.is(b, D) && d.length - 1 && (b = b.replace(e, function(a, b) {
				return d[++b] == null ? p : d[b]
			}));
			return b || p
		}, a.fullfill = function() {
			var a = /\{([^\}]+)\}/g,
				b = /(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[('|")(.+?)\2\])(\(\))?/g,
				c = function(a, c, d) {
					var e = d;
					c.replace(b, function(a, b, c, d, f) {
						b = b || d, e && (b in e && (e = e[b]), typeof e == "function" && f && (e = e()))
					}), e = (e == null || e == d ? a : e) + "";
					return e
				};
			return function(b, d) {
				return String(b).replace(a, function(a, b) {
					return c(a, b, d)
				})
			}
		}(), a.ninja = function() {
			i.was ? h.win.Raphael = i.is : delete Raphael;
			return a
		}, a.st = cH,
			function(b, c, d) {
				function e() {
					/in/.test(b.readyState) ? setTimeout(e, 9) : a.eve("raphael.DOMload")
				}
				b.readyState == null && b.addEventListener && (b.addEventListener(c, d = function() {
					b.removeEventListener(c, d, !1), b.readyState = "complete"
				}, !1), b.readyState = "loading"), e()
			}(document, "DOMContentLoaded"), i.was ? h.win.Raphael = a : Raphael = a, eve.on("raphael.DOMload", function() {
			b = !0
		})
	}(), window.Raphael.svg && function(a) {
	var b = "hasOwnProperty",
		c = String,
		d = parseFloat,
		e = parseInt,
		f = Math,
		g = f.max,
		h = f.abs,
		i = f.pow,
		j = /[, ]+/,
		k = a.eve,
		l = "",
		m = " ",
		n = "http://www.w3.org/1999/xlink",
		o = {
			block: "M5,0 0,2.5 5,5z",
			classic: "M5,0 0,2.5 5,5 3.5,3 3.5,2z",
			diamond: "M2.5,0 5,2.5 2.5,5 0,2.5z",
			open: "M6,1 1,3.5 6,6",
			oval: "M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z"
		},
		p = {};
	a.toString = function() {
		return "Your browser supports SVG.\nYou are running RaphaÃ«l " + this.version
	};
	var q = function(d, e) {
			if (e) {
				typeof d == "string" && (d = q(d));
				for (var f in e) e[b](f) && (f.substring(0, 6) == "xlink:" ? d.setAttributeNS(n, f.substring(6), c(e[f])) : d.setAttribute(f, c(e[f])))
			} else d = a._g.doc.createElementNS("http://www.w3.org/2000/svg", d), d.style && (d.style.webkitTapHighlightColor = "rgba(0,0,0,0)");
			return d
		},
		r = function(b, e) {
			var j = "linear",
				k = b.id + e,
				m = .5,
				n = .5,
				o = b.node,
				p = b.paper,
				r = o.style,
				s = a._g.doc.getElementById(k);
			if (!s) {
				e = c(e).replace(a._radial_gradient, function(a, b, c) {
					j = "radial";
					if (b && c) {
						m = d(b), n = d(c);
						var e = (n > .5) * 2 - 1;
						i(m - .5, 2) + i(n - .5, 2) > .25 && (n = f.sqrt(.25 - i(m - .5, 2)) * e + .5) && n != .5 && (n = n.toFixed(5) - 1e-5 * e)
					}
					return l
				}), e = e.split(/\s*\-\s*/);
				if (j == "linear") {
					var t = e.shift();
					t = -d(t);
					if (isNaN(t)) return null;
					var u = [0, 0, f.cos(a.rad(t)), f.sin(a.rad(t))],
						v = 1 / (g(h(u[2]), h(u[3])) || 1);
					u[2] *= v, u[3] *= v, u[2] < 0 && (u[0] = -u[2], u[2] = 0), u[3] < 0 && (u[1] = -u[3], u[3] = 0)
				}
				var w = a._parseDots(e);
				if (!w) return null;
				k = k.replace(/[\(\)\s,\xb0#]/g, "_"), b.gradient && k != b.gradient.id && (p.defs.removeChild(b.gradient), delete b.gradient);
				if (!b.gradient) {
					s = q(j + "Gradient", {
						id: k
					}), b.gradient = s, q(s, j == "radial" ? {
						fx: m,
						fy: n
					} : {
						x1: u[0],
						y1: u[1],
						x2: u[2],
						y2: u[3],
						gradientTransform: b.matrix.invert()
					}), p.defs.appendChild(s);
					for (var x = 0, y = w.length; x < y; x++) s.appendChild(q("stop", {
						offset: w[x].offset ? w[x].offset : x ? "100%" : "0%",
						"stop-color": w[x].color || "#fff"
					}))
				}
			}
			q(o, {
				fill: "url(#" + k + ")",
				opacity: 1,
				"fill-opacity": 1
			}), r.fill = l, r.opacity = 1, r.fillOpacity = 1;
			return 1
		},
		s = function(a) {
			var b = a.getBBox(1);
			q(a.pattern, {
				patternTransform: a.matrix.invert() + " translate(" + b.x + "," + b.y + ")"
			})
		},
		t = function(d, e, f) {
			if (d.type == "path") {
				var g = c(e).toLowerCase().split("-"),
					h = d.paper,
					i = f ? "end" : "start",
					j = d.node,
					k = d.attrs,
					m = k["stroke-width"],
					n = g.length,
					r = "classic",
					s, t, u, v, w, x = 3,
					y = 3,
					z = 5;
				while (n--) switch (g[n]) {
					case "block":
					case "classic":
					case "oval":
					case "diamond":
					case "open":
					case "none":
						r = g[n];
						break;
					case "wide":
						y = 5;
						break;
					case "narrow":
						y = 2;
						break;
					case "long":
						x = 5;
						break;
					case "short":
						x = 2
				}
				r == "open" ? (x += 2, y += 2, z += 2, u = 1, v = f ? 4 : 1, w = {
					fill: "none",
					stroke: k.stroke
				}) : (v = u = x / 2, w = {
					fill: k.stroke,
					stroke: "none"
				}), d._.arrows ? f ? (d._.arrows.endPath && p[d._.arrows.endPath]--, d._.arrows.endMarker && p[d._.arrows.endMarker]--) : (d._.arrows.startPath && p[d._.arrows.startPath]--, d._.arrows.startMarker && p[d._.arrows.startMarker]--) : d._.arrows = {};
				if (r != "none") {
					var A = "raphael-marker-" + r,
						B = "raphael-marker-" + i + r + x + y;
					a._g.doc.getElementById(A) ? p[A]++ : (h.defs.appendChild(q(q("path"), {
						"stroke-linecap": "round",
						d: o[r],
						id: A
					})), p[A] = 1);
					var C = a._g.doc.getElementById(B),
						D;
					C ? (p[B]++, D = C.getElementsByTagName("use")[0]) : (C = q(q("marker"), {
						id: B,
						markerHeight: y,
						markerWidth: x,
						orient: "auto",
						refX: v,
						refY: y / 2
					}), D = q(q("use"), {
						"xlink:href": "#" + A,
						transform: (f ? "rotate(180 " + x / 2 + " " + y / 2 + ") " : l) + "scale(" + x / z + "," + y / z + ")",
						"stroke-width": (1 / ((x / z + y / z) / 2)).toFixed(4)
					}), C.appendChild(D), h.defs.appendChild(C), p[B] = 1), q(D, w);
					var F = u * (r != "diamond" && r != "oval");
					f ? (s = d._.arrows.startdx * m || 0, t = a.getTotalLength(k.path) - F * m) : (s = F * m, t = a.getTotalLength(k.path) - (d._.arrows.enddx * m || 0)), w = {}, w["marker-" + i] = "url(#" + B + ")";
					if (t || s) w.d = Raphael.getSubpath(k.path, s, t);
					q(j, w), d._.arrows[i + "Path"] = A, d._.arrows[i + "Marker"] = B, d._.arrows[i + "dx"] = F, d._.arrows[i + "Type"] = r, d._.arrows[i + "String"] = e
				} else f ? (s = d._.arrows.startdx * m || 0, t = a.getTotalLength(k.path) - s) : (s = 0, t = a.getTotalLength(k.path) - (d._.arrows.enddx * m || 0)), d._.arrows[i + "Path"] && q(j, {
					d: Raphael.getSubpath(k.path, s, t)
				}), delete d._.arrows[i + "Path"], delete d._.arrows[i + "Marker"], delete d._.arrows[i + "dx"], delete d._.arrows[i + "Type"], delete d._.arrows[i + "String"];
				for (w in p)
					if (p[b](w) && !p[w]) {
						var G = a._g.doc.getElementById(w);
						G && G.parentNode.removeChild(G)
					}
			}
		},
		u = {
			"": [0],
			none: [0],
			"-": [3, 1],
			".": [1, 1],
			"-.": [3, 1, 1, 1],
			"-..": [3, 1, 1, 1, 1, 1],
			". ": [1, 3],
			"- ": [4, 3],
			"--": [8, 3],
			"- .": [4, 3, 1, 3],
			"--.": [8, 3, 1, 3],
			"--..": [8, 3, 1, 3, 1, 3]
		},
		v = function(a, b, d) {
			b = u[c(b).toLowerCase()];
			if (b) {
				var e = a.attrs["stroke-width"] || "1",
					f = {
						round: e,
						square: e,
						butt: 0
					}[a.attrs["stroke-linecap"] || d["stroke-linecap"]] || 0,
					g = [],
					h = b.length;
				while (h--) g[h] = b[h] * e + (h % 2 ? 1 : -1) * f;
				q(a.node, {
					"stroke-dasharray": g.join(",")
				})
			}
		},
		w = function(d, f) {
			var i = d.node,
				k = d.attrs,
				m = i.style.visibility;
			i.style.visibility = "hidden";
			for (var o in f)
				if (f[b](o)) {
					if (!a._availableAttrs[b](o)) continue;
					var p = f[o];
					k[o] = p;
					switch (o) {
						case "blur":
							d.blur(p);
							break;
						case "href":
						case "title":
						case "target":
							var u = i.parentNode;
							if (u.tagName.toLowerCase() != "a") {
								var w = q("a");
								u.insertBefore(w, i), w.appendChild(i), u = w
							}
							o == "target" ? u.setAttributeNS(n, "show", p == "blank" ? "new" : p) : u.setAttributeNS(n, o, p);
							break;
						case "cursor":
							i.style.cursor = p;
							break;
						case "transform":
							d.transform(p);
							break;
						case "arrow-start":
							t(d, p);
							break;
						case "arrow-end":
							t(d, p, 1);
							break;
						case "clip-rect":
							var x = c(p).split(j);
							if (x.length == 4) {
								d.clip && d.clip.parentNode.parentNode.removeChild(d.clip.parentNode);
								var z = q("clipPath"),
									A = q("rect");
								z.id = a.createUUID(), q(A, {
									x: x[0],
									y: x[1],
									width: x[2],
									height: x[3]
								}), z.appendChild(A), d.paper.defs.appendChild(z), q(i, {
									"clip-path": "url(#" + z.id + ")"
								}), d.clip = A
							}
							if (!p) {
								var B = i.getAttribute("clip-path");
								if (B) {
									var C = a._g.doc.getElementById(B.replace(/(^url\(#|\)$)/g, l));
									C && C.parentNode.removeChild(C), q(i, {
										"clip-path": l
									}), delete d.clip
								}
							}
							break;
						case "path":
							d.type == "path" && (q(i, {
								d: p ? k.path = a._pathToAbsolute(p) : "M0,0"
							}), d._.dirty = 1, d._.arrows && ("startString" in d._.arrows && t(d, d._.arrows.startString), "endString" in d._.arrows && t(d, d._.arrows.endString, 1)));
							break;
						case "width":
							i.setAttribute(o, p), d._.dirty = 1;
							if (k.fx) o = "x", p = k.x;
							else break;
						case "x":
							k.fx && (p = -k.x - (k.width || 0));
						case "rx":
							if (o == "rx" && d.type == "rect") break;
						case "cx":
							i.setAttribute(o, p), d.pattern && s(d), d._.dirty = 1;
							break;
						case "height":
							i.setAttribute(o, p), d._.dirty = 1;
							if (k.fy) o = "y", p = k.y;
							else break;
						case "y":
							k.fy && (p = -k.y - (k.height || 0));
						case "ry":
							if (o == "ry" && d.type == "rect") break;
						case "cy":
							i.setAttribute(o, p), d.pattern && s(d), d._.dirty = 1;
							break;
						case "r":
							d.type == "rect" ? q(i, {
								rx: p,
								ry: p
							}) : i.setAttribute(o, p), d._.dirty = 1;
							break;
						case "src":
							d.type == "image" && i.setAttributeNS(n, "href", p);
							break;
						case "stroke-width":
							if (d._.sx != 1 || d._.sy != 1) p /= g(h(d._.sx), h(d._.sy)) || 1;
							d.paper._vbSize && (p *= d.paper._vbSize), i.setAttribute(o, p), k["stroke-dasharray"] && v(d, k["stroke-dasharray"], f), d._.arrows && ("startString" in d._.arrows && t(d, d._.arrows.startString), "endString" in d._.arrows && t(d, d._.arrows.endString, 1));
							break;
						case "stroke-dasharray":
							v(d, p, f);
							break;
						case "fill":
							var D = c(p).match(a._ISURL);
							if (D) {
								z = q("pattern");
								var F = q("image");
								z.id = a.createUUID(), q(z, {
									x: 0,
									y: 0,
									patternUnits: "userSpaceOnUse",
									height: 1,
									width: 1
								}), q(F, {
									x: 0,
									y: 0,
									"xlink:href": D[1]
								}), z.appendChild(F),
									function(b) {
										a._preload(D[1], function() {
											var a = this.offsetWidth,
												c = this.offsetHeight;
											q(b, {
												width: a,
												height: c
											}), q(F, {
												width: a,
												height: c
											}), d.paper.safari()
										})
									}(z), d.paper.defs.appendChild(z), q(i, {
									fill: "url(#" + z.id + ")"
								}), d.pattern = z, d.pattern && s(d);
								break
							}
							var G = a.getRGB(p);
							if (!G.error) delete f.gradient, delete k.gradient, !a.is(k.opacity, "undefined") && a.is(f.opacity, "undefined") && q(i, {
								opacity: k.opacity
							}), !a.is(k["fill-opacity"], "undefined") && a.is(f["fill-opacity"], "undefined") && q(i, {
								"fill-opacity": k["fill-opacity"]
							});
							else if ((d.type == "circle" || d.type == "ellipse" || c(p).charAt() != "r") && r(d, p)) {
								if ("opacity" in k || "fill-opacity" in k) {
									var H = a._g.doc.getElementById(i.getAttribute("fill").replace(/^url\(#|\)$/g, l));
									if (H) {
										var I = H.getElementsByTagName("stop");
										q(I[I.length - 1], {
											"stop-opacity": ("opacity" in k ? k.opacity : 1) * ("fill-opacity" in k ? k["fill-opacity"] : 1)
										})
									}
								}
								k.gradient = p, k.fill = "none";
								break
							}
							G[b]("opacity") && q(i, {
								"fill-opacity": G.opacity > 1 ? G.opacity / 100 : G.opacity
							});
						case "stroke":
							G = a.getRGB(p), i.setAttribute(o, G.hex), o == "stroke" && G[b]("opacity") && q(i, {
								"stroke-opacity": G.opacity > 1 ? G.opacity / 100 : G.opacity
							}), o == "stroke" && d._.arrows && ("startString" in d._.arrows && t(d, d._.arrows.startString), "endString" in d._.arrows && t(d, d._.arrows.endString, 1));
							break;
						case "gradient":
							(d.type == "circle" || d.type == "ellipse" || c(p).charAt() != "r") && r(d, p);
							break;
						case "opacity":
							k.gradient && !k[b]("stroke-opacity") && q(i, {
								"stroke-opacity": p > 1 ? p / 100 : p
							});
						case "fill-opacity":
							if (k.gradient) {
								H = a._g.doc.getElementById(i.getAttribute("fill").replace(/^url\(#|\)$/g, l)), H && (I = H.getElementsByTagName("stop"), q(I[I.length - 1], {
									"stop-opacity": p
								}));
								break
							};
						default:
							o == "font-size" && (p = e(p, 10) + "px");
							var J = o.replace(/(\-.)/g, function(a) {
								return a.substring(1).toUpperCase()
							});
							i.style[J] = p, d._.dirty = 1, i.setAttribute(o, p)
					}
				}
			y(d, f), i.style.visibility = m
		},
		x = 1.2,
		y = function(d, f) {
			if (d.type == "text" && !!(f[b]("text") || f[b]("font") || f[b]("font-size") || f[b]("x") || f[b]("y"))) {
				var g = d.attrs,
					h = d.node,
					i = h.firstChild ? e(a._g.doc.defaultView.getComputedStyle(h.firstChild, l).getPropertyValue("font-size"), 10) : 10;
				if (f[b]("text")) {
					g.text = f.text;
					while (h.firstChild) h.removeChild(h.firstChild);
					var j = c(f.text).split("\n"),
						k = [],
						m;
					for (var n = 0, o = j.length; n < o; n++) m = q("tspan"), n && q(m, {
						dy: i * x,
						x: g.x
					}), m.appendChild(a._g.doc.createTextNode(j[n])), h.appendChild(m), k[n] = m
				} else {
					k = h.getElementsByTagName("tspan");
					for (n = 0, o = k.length; n < o; n++) n ? q(k[n], {
						dy: i * x,
						x: g.x
					}) : q(k[0], {
						dy: 0
					})
				}
				q(h, {
					x: g.x,
					y: g.y
				}), d._.dirty = 1;
				var p = d._getBBox(),
					r = g.y - (p.y + p.height / 2);
				r && a.is(r, "finite") && q(k[0], {
					dy: r
				})
			}
		},
		z = function(b, c) {
			var d = 0,
				e = 0;
			this[0] = this.node = b, b.raphael = !0, this.id = a._oid++, b.raphaelid = this.id, this.matrix = a.matrix(), this.realPath = null, this.paper = c, this.attrs = this.attrs || {}, this._ = {
				transform: [],
				sx: 1,
				sy: 1,
				deg: 0,
				dx: 0,
				dy: 0,
				dirty: 1
			}, !c.bottom && (c.bottom = this), this.prev = c.top, c.top && (c.top.next = this), c.top = this, this.next = null
		},
		A = a.el;
	z.prototype = A, A.constructor = z, a._engine.path = function(a, b) {
		var c = q("path");
		b.canvas && b.canvas.appendChild(c);
		var d = new z(c, b);
		d.type = "path", w(d, {
			fill: "none",
			stroke: "#000",
			path: a
		});
		return d
	}, A.rotate = function(a, b, e) {
		if (this.removed) return this;
		a = c(a).split(j), a.length - 1 && (b = d(a[1]), e = d(a[2])), a = d(a[0]), e == null && (b = e);
		if (b == null || e == null) {
			var f = this.getBBox(1);
			b = f.x + f.width / 2, e = f.y + f.height / 2
		}
		this.transform(this._.transform.concat([
			["r", a, b, e]
		]));
		return this
	}, A.scale = function(a, b, e, f) {
		if (this.removed) return this;
		a = c(a).split(j), a.length - 1 && (b = d(a[1]), e = d(a[2]), f = d(a[3])), a = d(a[0]), b == null && (b = a), f == null && (e = f);
		if (e == null || f == null) var g = this.getBBox(1);
		e = e == null ? g.x + g.width / 2 : e, f = f == null ? g.y + g.height / 2 : f, this.transform(this._.transform.concat([
			["s", a, b, e, f]
		]));
		return this
	}, A.translate = function(a, b) {
		if (this.removed) return this;
		a = c(a).split(j), a.length - 1 && (b = d(a[1])), a = d(a[0]) || 0, b = +b || 0, this.transform(this._.transform.concat([
			["t", a, b]
		]));
		return this
	}, A.transform = function(c) {
		var d = this._;
		if (c == null) return d.transform;
		a._extractTransform(this, c), this.clip && q(this.clip, {
			transform: this.matrix.invert()
		}), this.pattern && s(this), this.node && q(this.node, {
			transform: this.matrix
		});
		if (d.sx != 1 || d.sy != 1) {
			var e = this.attrs[b]("stroke-width") ? this.attrs["stroke-width"] : 1;
			this.attr({
				"stroke-width": e
			})
		}
		return this
	}, A.hide = function() {
		!this.removed && this.paper.safari(this.node.style.display = "none");
		return this
	}, A.show = function() {
		!this.removed && this.paper.safari(this.node.style.display = "");
		return this
	}, A.remove = function() {
		if (!this.removed && !!this.node.parentNode) {
			var b = this.paper;
			b.__set__ && b.__set__.exclude(this), k.unbind("raphael.*.*." + this.id), this.gradient && b.defs.removeChild(this.gradient), a._tear(this, b), this.node.parentNode.tagName.toLowerCase() == "a" ? this.node.parentNode.parentNode.removeChild(this.node.parentNode) : this.node.parentNode.removeChild(this.node);
			for (var c in this) this[c] = typeof this[c] == "function" ? a._removedFactory(c) : null;
			this.removed = !0
		}
	}, A._getBBox = function() {
		if (this.node.style.display == "none") {
			this.show();
			var a = !0
		}
		var b = {};
		try {
			b = this.node.getBBox()
		} catch (c) {} finally {
			b = b || {}
		}
		a && this.hide();
		return b
	}, A.attr = function(c, d) {
		if (this.removed) return this;
		if (c == null) {
			var e = {};
			for (var f in this.attrs) this.attrs[b](f) && (e[f] = this.attrs[f]);
			e.gradient && e.fill == "none" && (e.fill = e.gradient) && delete e.gradient, e.transform = this._.transform;
			return e
		}
		if (d == null && a.is(c, "string")) {
			if (c == "fill" && this.attrs.fill == "none" && this.attrs.gradient) return this.attrs.gradient;
			if (c == "transform") return this._.transform;
			var g = c.split(j),
				h = {};
			for (var i = 0, l = g.length; i < l; i++) c = g[i], c in this.attrs ? h[c] = this.attrs[c] : a.is(this.paper.customAttributes[c], "function") ? h[c] = this.paper.customAttributes[c].def : h[c] = a._availableAttrs[c];
			return l - 1 ? h : h[g[0]]
		}
		if (d == null && a.is(c, "array")) {
			h = {};
			for (i = 0, l = c.length; i < l; i++) h[c[i]] = this.attr(c[i]);
			return h
		}
		if (d != null) {
			var m = {};
			m[c] = d
		} else c != null && a.is(c, "object") && (m = c);
		for (var n in m) k("raphael.attr." + n + "." + this.id, this, m[n]);
		for (n in this.paper.customAttributes)
			if (this.paper.customAttributes[b](n) && m[b](n) && a.is(this.paper.customAttributes[n], "function")) {
				var o = this.paper.customAttributes[n].apply(this, [].concat(m[n]));
				this.attrs[n] = m[n];
				for (var p in o) o[b](p) && (m[p] = o[p])
			}
		w(this, m);
		return this
	}, A.toFront = function() {
		if (this.removed) return this;
		this.node.parentNode.tagName.toLowerCase() == "a" ? this.node.parentNode.parentNode.appendChild(this.node.parentNode) : this.node.parentNode.appendChild(this.node);
		var b = this.paper;
		b.top != this && a._tofront(this, b);
		return this
	}, A.toBack = function() {
		if (this.removed) return this;
		var b = this.node.parentNode;
		b.tagName.toLowerCase() == "a" ? b.parentNode.insertBefore(this.node.parentNode, this.node.parentNode.parentNode.firstChild) : b.firstChild != this.node && b.insertBefore(this.node, this.node.parentNode.firstChild), a._toback(this, this.paper);
		var c = this.paper;
		return this
	}, A.insertAfter = function(b) {
		if (this.removed) return this;
		var c = b.node || b[b.length - 1].node;
		c.nextSibling ? c.parentNode.insertBefore(this.node, c.nextSibling) : c.parentNode.appendChild(this.node), a._insertafter(this, b, this.paper);
		return this
	}, A.insertBefore = function(b) {
		if (this.removed) return this;
		var c = b.node || b[0].node;
		c.parentNode.insertBefore(this.node, c), a._insertbefore(this, b, this.paper);
		return this
	}, A.blur = function(b) {
		var c = this;
		if (+b !== 0) {
			var d = q("filter"),
				e = q("feGaussianBlur");
			c.attrs.blur = b, d.id = a.createUUID(), q(e, {
				stdDeviation: +b || 1.5
			}), d.appendChild(e), c.paper.defs.appendChild(d), c._blur = d, q(c.node, {
				filter: "url(#" + d.id + ")"
			})
		} else c._blur && (c._blur.parentNode.removeChild(c._blur), delete c._blur, delete c.attrs.blur), c.node.removeAttribute("filter")
	}, a._engine.circle = function(a, b, c, d) {
		var e = q("circle");
		a.canvas && a.canvas.appendChild(e);
		var f = new z(e, a);
		f.attrs = {
			cx: b,
			cy: c,
			r: d,
			fill: "none",
			stroke: "#000"
		}, f.type = "circle", q(e, f.attrs);
		return f
	}, a._engine.rect = function(a, b, c, d, e, f) {
		var g = q("rect");
		a.canvas && a.canvas.appendChild(g);
		var h = new z(g, a);
		h.attrs = {
			x: b,
			y: c,
			width: d,
			height: e,
			r: f || 0,
			rx: f || 0,
			ry: f || 0,
			fill: "none",
			stroke: "#000"
		}, h.type = "rect", q(g, h.attrs);
		return h
	}, a._engine.ellipse = function(a, b, c, d, e) {
		var f = q("ellipse");
		a.canvas && a.canvas.appendChild(f);
		var g = new z(f, a);
		g.attrs = {
			cx: b,
			cy: c,
			rx: d,
			ry: e,
			fill: "none",
			stroke: "#000"
		}, g.type = "ellipse", q(f, g.attrs);
		return g
	}, a._engine.image = function(a, b, c, d, e, f) {
		var g = q("image");
		q(g, {
			x: c,
			y: d,
			width: e,
			height: f,
			preserveAspectRatio: "none"
		}), g.setAttributeNS(n, "href", b), a.canvas && a.canvas.appendChild(g);
		var h = new z(g, a);
		h.attrs = {
			x: c,
			y: d,
			width: e,
			height: f,
			src: b
		}, h.type = "image";
		return h
	}, a._engine.text = function(b, c, d, e) {
		var f = q("text");
		b.canvas && b.canvas.appendChild(f);
		var g = new z(f, b);
		g.attrs = {
			x: c,
			y: d,
			"text-anchor": "middle",
			text: e,
			font: a._availableAttrs.font,
			stroke: "none",
			fill: "#000"
		}, g.type = "text", w(g, g.attrs);
		return g
	}, a._engine.setSize = function(a, b) {
		this.width = a || this.width, this.height = b || this.height, this.canvas.setAttribute("width", this.width), this.canvas.setAttribute("height", this.height), this._viewBox && this.setViewBox.apply(this, this._viewBox);
		return this
	}, a._engine.create = function() {
		var b = a._getContainer.apply(0, arguments),
			c = b && b.container,
			d = b.x,
			e = b.y,
			f = b.width,
			g = b.height;
		if (!c) throw new Error("SVG container not found.");
		var h = q("svg"),
			i = "overflow:hidden;",
			j;
		d = d || 0, e = e || 0, f = f || 512, g = g || 342, q(h, {
			height: g,
			version: 1.1,
			width: f,
			xmlns: "http://www.w3.org/2000/svg"
		}), c == 1 ? (h.style.cssText = i + "position:absolute;left:" + d + "px;top:" + e + "px", a._g.doc.body.appendChild(h), j = 1) : (h.style.cssText = i + "position:relative", c.firstChild ? c.insertBefore(h, c.firstChild) : c.appendChild(h)), c = new a._Paper, c.width = f, c.height = g, c.canvas = h, c.clear(), c._left = c._top = 0, j && (c.renderfix = function() {}), c.renderfix();
		return c
	}, a._engine.setViewBox = function(a, b, c, d, e) {
		k("raphael.setViewBox", this, this._viewBox, [a, b, c, d, e]);
		var f = g(c / this.width, d / this.height),
			h = this.top,
			i = e ? "meet" : "xMinYMin",
			j, l;
		a == null ? (this._vbSize && (f = 1), delete this._vbSize, j = "0 0 " + this.width + m + this.height) : (this._vbSize = f, j = a + m + b + m + c + m + d), q(this.canvas, {
			viewBox: j,
			preserveAspectRatio: i
		});
		while (f && h) l = "stroke-width" in h.attrs ? h.attrs["stroke-width"] : 1, h.attr({
			"stroke-width": l
		}), h._.dirty = 1, h._.dirtyT = 1, h = h.prev;
		this._viewBox = [a, b, c, d, !!e];
		return this
	}, a.prototype.renderfix = function() {
		var a = this.canvas,
			b = a.style,
			c;
		try {
			c = a.getScreenCTM() || a.createSVGMatrix()
		} catch (d) {
			c = a.createSVGMatrix()
		}
		var e = -c.e % 1,
			f = -c.f % 1;
		if (e || f) e && (this._left = (this._left + e) % 1, b.left = this._left + "px"), f && (this._top = (this._top + f) % 1, b.top = this._top + "px")
	}, a.prototype.clear = function() {
		a.eve("raphael.clear", this);
		var b = this.canvas;
		while (b.firstChild) b.removeChild(b.firstChild);
		this.bottom = this.top = null, (this.desc = q("desc")).appendChild(a._g.doc.createTextNode("Created with RaphaÃ«l " + a.version)), b.appendChild(this.desc), b.appendChild(this.defs = q("defs"))
	}, a.prototype.remove = function() {
		k("raphael.remove", this), this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas);
		for (var b in this) this[b] = typeof this[b] == "function" ? a._removedFactory(b) : null
	};
	var B = a.st;
	for (var C in A) A[b](C) && !B[b](C) && (B[C] = function(a) {
		return function() {
			var b = arguments;
			return this.forEach(function(c) {
				c[a].apply(c, b)
			})
		}
	}(C))
}(window.Raphael), window.Raphael.vml && function(a) {
	var b = "hasOwnProperty",
		c = String,
		d = parseFloat,
		e = Math,
		f = e.round,
		g = e.max,
		h = e.min,
		i = e.abs,
		j = "fill",
		k = /[, ]+/,
		l = a.eve,
		m = " progid:DXImageTransform.Microsoft",
		n = " ",
		o = "",
		p = {
			M: "m",
			L: "l",
			C: "c",
			Z: "x",
			m: "t",
			l: "r",
			c: "v",
			z: "x"
		},
		q = /([clmz]),?([^clmz]*)/gi,
		r = / progid:\S+Blur\([^\)]+\)/g,
		s = /-?[^,\s-]+/g,
		t = "position:absolute;left:0;top:0;width:1px;height:1px",
		u = 21600,
		v = {
			path: 1,
			rect: 1,
			image: 1
		},
		w = {
			circle: 1,
			ellipse: 1
		},
		x = function(b) {
			var d = /[ahqstv]/ig,
				e = a._pathToAbsolute;
			c(b).match(d) && (e = a._path2curve), d = /[clmz]/g;
			if (e == a._pathToAbsolute && !c(b).match(d)) {
				var g = c(b).replace(q, function(a, b, c) {
					var d = [],
						e = b.toLowerCase() == "m",
						g = p[b];
					c.replace(s, function(a) {
						e && d.length == 2 && (g += d + p[b == "m" ? "l" : "L"], d = []), d.push(f(a * u))
					});
					return g + d
				});
				return g
			}
			var h = e(b),
				i, j;
			g = [];
			for (var k = 0, l = h.length; k < l; k++) {
				i = h[k], j = h[k][0].toLowerCase(), j == "z" && (j = "x");
				for (var m = 1, r = i.length; m < r; m++) j += f(i[m] * u) + (m != r - 1 ? "," : o);
				g.push(j)
			}
			return g.join(n)
		},
		y = function(b, c, d) {
			var e = a.matrix();
			e.rotate(-b, .5, .5);
			return {
				dx: e.x(c, d),
				dy: e.y(c, d)
			}
		},
		z = function(a, b, c, d, e, f) {
			var g = a._,
				h = a.matrix,
				k = g.fillpos,
				l = a.node,
				m = l.style,
				o = 1,
				p = "",
				q, r = u / b,
				s = u / c;
			m.visibility = "hidden";
			if (!!b && !!c) {
				l.coordsize = i(r) + n + i(s), m.rotation = f * (b * c < 0 ? -1 : 1);
				if (f) {
					var t = y(f, d, e);
					d = t.dx, e = t.dy
				}
				b < 0 && (p += "x"), c < 0 && (p += " y") && (o = -1), m.flip = p, l.coordorigin = d * -r + n + e * -s;
				if (k || g.fillsize) {
					var v = l.getElementsByTagName(j);
					v = v && v[0], l.removeChild(v), k && (t = y(f, h.x(k[0], k[1]), h.y(k[0], k[1])), v.position = t.dx * o + n + t.dy * o), g.fillsize && (v.size = g.fillsize[0] * i(b) + n + g.fillsize[1] * i(c)), l.appendChild(v)
				}
				m.visibility = "visible"
			}
		};
	a.toString = function() {
		return "Your browser doesnâ€™t support SVG. Falling down to VML.\nYou are running RaphaÃ«l " + this.version
	};
	var A = function(a, b, d) {
			var e = c(b).toLowerCase().split("-"),
				f = d ? "end" : "start",
				g = e.length,
				h = "classic",
				i = "medium",
				j = "medium";
			while (g--) switch (e[g]) {
				case "block":
				case "classic":
				case "oval":
				case "diamond":
				case "open":
				case "none":
					h = e[g];
					break;
				case "wide":
				case "narrow":
					j = e[g];
					break;
				case "long":
				case "short":
					i = e[g]
			}
			var k = a.node.getElementsByTagName("stroke")[0];
			k[f + "arrow"] = h, k[f + "arrowlength"] = i, k[f + "arrowwidth"] = j
		},
		B = function(e, i) {
			e.attrs = e.attrs || {};
			var l = e.node,
				m = e.attrs,
				p = l.style,
				q, r = v[e.type] && (i.x != m.x || i.y != m.y || i.width != m.width || i.height != m.height || i.cx != m.cx || i.cy != m.cy || i.rx != m.rx || i.ry != m.ry || i.r != m.r),
				s = w[e.type] && (m.cx != i.cx || m.cy != i.cy || m.r != i.r || m.rx != i.rx || m.ry != i.ry),
				t = e;
			for (var y in i) i[b](y) && (m[y] = i[y]);
			r && (m.path = a._getPath[e.type](e), e._.dirty = 1), i.href && (l.href = i.href), i.title && (l.title = i.title), i.target && (l.target = i.target), i.cursor && (p.cursor = i.cursor), "blur" in i && e.blur(i.blur);
			if (i.path && e.type == "path" || r) l.path = x(~c(m.path).toLowerCase().indexOf("r") ? a._pathToAbsolute(m.path) : m.path), e.type == "image" && (e._.fillpos = [m.x, m.y], e._.fillsize = [m.width, m.height], z(e, 1, 1, 0, 0, 0));
			"transform" in i && e.transform(i.transform);
			if (s) {
				var B = +m.cx,
					D = +m.cy,
					E = +m.rx || +m.r || 0,
					G = +m.ry || +m.r || 0;
				l.path = a.format("ar{0},{1},{2},{3},{4},{1},{4},{1}x", f((B - E) * u), f((D - G) * u), f((B + E) * u), f((D + G) * u), f(B * u))
			}
			if ("clip-rect" in i) {
				var H = c(i["clip-rect"]).split(k);
				if (H.length == 4) {
					H[2] = +H[2] + +H[0], H[3] = +H[3] + +H[1];
					var I = l.clipRect || a._g.doc.createElement("div"),
						J = I.style;
					J.clip = a.format("rect({1}px {2}px {3}px {0}px)", H), l.clipRect || (J.position = "absolute", J.top = 0, J.left = 0, J.width = e.paper.width + "px", J.height = e.paper.height + "px", l.parentNode.insertBefore(I, l), I.appendChild(l), l.clipRect = I)
				}
				i["clip-rect"] || l.clipRect && (l.clipRect.style.clip = "auto")
			}
			if (e.textpath) {
				var K = e.textpath.style;
				i.font && (K.font = i.font), i["font-family"] && (K.fontFamily = '"' + i["font-family"].split(",")[0].replace(/^['"]+|['"]+$/g, o) + '"'), i["font-size"] && (K.fontSize = i["font-size"]), i["font-weight"] && (K.fontWeight = i["font-weight"]), i["font-style"] && (K.fontStyle = i["font-style"])
			}
			"arrow-start" in i && A(t, i["arrow-start"]), "arrow-end" in i && A(t, i["arrow-end"], 1);
			if (i.opacity != null || i["stroke-width"] != null || i.fill != null || i.src != null || i.stroke != null || i["stroke-width"] != null || i["stroke-opacity"] != null || i["fill-opacity"] != null || i["stroke-dasharray"] != null || i["stroke-miterlimit"] != null || i["stroke-linejoin"] != null || i["stroke-linecap"] != null) {
				var L = l.getElementsByTagName(j),
					M = !1;
				L = L && L[0], !L && (M = L = F(j)), e.type == "image" && i.src && (L.src = i.src), i.fill && (L.on = !0);
				if (L.on == null || i.fill == "none" || i.fill === null) L.on = !1;
				if (L.on && i.fill) {
					var N = c(i.fill).match(a._ISURL);
					if (N) {
						L.parentNode == l && l.removeChild(L), L.rotate = !0, L.src = N[1], L.type = "tile";
						var O = e.getBBox(1);
						L.position = O.x + n + O.y, e._.fillpos = [O.x, O.y], a._preload(N[1], function() {
							e._.fillsize = [this.offsetWidth, this.offsetHeight]
						})
					} else L.color = a.getRGB(i.fill).hex, L.src = o, L.type = "solid", a.getRGB(i.fill).error && (t.type in {
						circle: 1,
						ellipse: 1
					} || c(i.fill).charAt() != "r") && C(t, i.fill, L) && (m.fill = "none", m.gradient = i.fill, L.rotate = !1)
				}
				if ("fill-opacity" in i || "opacity" in i) {
					var P = ((+m["fill-opacity"] + 1 || 2) - 1) * ((+m.opacity + 1 || 2) - 1) * ((+a.getRGB(i.fill).o + 1 || 2) - 1);
					P = h(g(P, 0), 1), L.opacity = P, L.src && (L.color = "none")
				}
				l.appendChild(L);
				var Q = l.getElementsByTagName("stroke") && l.getElementsByTagName("stroke")[0],
					T = !1;
				!Q && (T = Q = F("stroke"));
				if (i.stroke && i.stroke != "none" || i["stroke-width"] || i["stroke-opacity"] != null || i["stroke-dasharray"] || i["stroke-miterlimit"] || i["stroke-linejoin"] || i["stroke-linecap"]) Q.on = !0;
				(i.stroke == "none" || i.stroke === null || Q.on == null || i.stroke == 0 || i["stroke-width"] == 0) && (Q.on = !1);
				var U = a.getRGB(i.stroke);
				Q.on && i.stroke && (Q.color = U.hex), P = ((+m["stroke-opacity"] + 1 || 2) - 1) * ((+m.opacity + 1 || 2) - 1) * ((+U.o + 1 || 2) - 1);
				var V = (d(i["stroke-width"]) || 1) * .75;
				P = h(g(P, 0), 1), i["stroke-width"] == null && (V = m["stroke-width"]), i["stroke-width"] && (Q.weight = V), V && V < 1 && (P *= V) && (Q.weight = 1), Q.opacity = P, i["stroke-linejoin"] && (Q.joinstyle = i["stroke-linejoin"] || "miter"), Q.miterlimit = i["stroke-miterlimit"] || 8, i["stroke-linecap"] && (Q.endcap = i["stroke-linecap"] == "butt" ? "flat" : i["stroke-linecap"] == "square" ? "square" : "round");
				if (i["stroke-dasharray"]) {
					var W = {
						"-": "shortdash",
						".": "shortdot",
						"-.": "shortdashdot",
						"-..": "shortdashdotdot",
						". ": "dot",
						"- ": "dash",
						"--": "longdash",
						"- .": "dashdot",
						"--.": "longdashdot",
						"--..": "longdashdotdot"
					};
					Q.dashstyle = W[b](i["stroke-dasharray"]) ? W[i["stroke-dasharray"]] : o
				}
				T && l.appendChild(Q)
			}
			if (t.type == "text") {
				t.paper.canvas.style.display = o;
				var X = t.paper.span,
					Y = 100,
					Z = m.font && m.font.match(/\d+(?:\.\d*)?(?=px)/);
				p = X.style, m.font && (p.font = m.font), m["font-family"] && (p.fontFamily = m["font-family"]), m["font-weight"] && (p.fontWeight = m["font-weight"]), m["font-style"] && (p.fontStyle = m["font-style"]), Z = d(m["font-size"] || Z && Z[0]) || 10, p.fontSize = Z * Y + "px", t.textpath.string && (X.innerHTML = c(t.textpath.string).replace(/</g, "&#60;").replace(/&/g, "&#38;").replace(/\n/g, "<br>"));
				var $ = X.getBoundingClientRect();
				t.W = m.w = ($.right - $.left) / Y, t.H = m.h = ($.bottom - $.top) / Y, t.X = m.x, t.Y = m.y + t.H / 2, ("x" in i || "y" in i) && (t.path.v = a.format("m{0},{1}l{2},{1}", f(m.x * u), f(m.y * u), f(m.x * u) + 1));
				var _ = ["x", "y", "text", "font", "font-family", "font-weight", "font-style", "font-size"];
				for (var ba = 0, bb = _.length; ba < bb; ba++)
					if (_[ba] in i) {
						t._.dirty = 1;
						break
					}
				switch (m["text-anchor"]) {
					case "start":
						t.textpath.style["v-text-align"] = "left", t.bbx = t.W / 2;
						break;
					case "end":
						t.textpath.style["v-text-align"] = "right", t.bbx = -t.W / 2;
						break;
					default:
						t.textpath.style["v-text-align"] = "center", t.bbx = 0
				}
				t.textpath.style["v-text-kern"] = !0
			}
		},
		C = function(b, f, g) {
			b.attrs = b.attrs || {};
			var h = b.attrs,
				i = Math.pow,
				j, k, l = "linear",
				m = ".5 .5";
			b.attrs.gradient = f, f = c(f).replace(a._radial_gradient, function(a, b, c) {
				l = "radial", b && c && (b = d(b), c = d(c), i(b - .5, 2) + i(c - .5, 2) > .25 && (c = e.sqrt(.25 - i(b - .5, 2)) * ((c > .5) * 2 - 1) + .5), m = b + n + c);
				return o
			}), f = f.split(/\s*\-\s*/);
			if (l == "linear") {
				var p = f.shift();
				p = -d(p);
				if (isNaN(p)) return null
			}
			var q = a._parseDots(f);
			if (!q) return null;
			b = b.shape || b.node;
			if (q.length) {
				b.removeChild(g), g.on = !0, g.method = "none", g.color = q[0].color, g.color2 = q[q.length - 1].color;
				var r = [];
				for (var s = 0, t = q.length; s < t; s++) q[s].offset && r.push(q[s].offset + n + q[s].color);
				g.colors = r.length ? r.join() : "0% " + g.color, l == "radial" ? (g.type = "gradientTitle", g.focus = "100%", g.focussize = "0 0", g.focusposition = m, g.angle = 0) : (g.type = "gradient", g.angle = (270 - p) % 360), b.appendChild(g)
			}
			return 1
		},
		D = function(b, c) {
			this[0] = this.node = b, b.raphael = !0, this.id = a._oid++, b.raphaelid = this.id, this.X = 0, this.Y = 0, this.attrs = {}, this.paper = c, this.matrix = a.matrix(), this._ = {
				transform: [],
				sx: 1,
				sy: 1,
				dx: 0,
				dy: 0,
				deg: 0,
				dirty: 1,
				dirtyT: 1
			}, !c.bottom && (c.bottom = this), this.prev = c.top, c.top && (c.top.next = this), c.top = this, this.next = null
		},
		E = a.el;
	D.prototype = E, E.constructor = D, E.transform = function(b) {
		if (b == null) return this._.transform;
		var d = this.paper._viewBoxShift,
			e = d ? "s" + [d.scale, d.scale] + "-1-1t" + [d.dx, d.dy] : o,
			f;
		d && (f = b = c(b).replace(/\.{3}|\u2026/g, this._.transform || o)), a._extractTransform(this, e + b);
		var g = this.matrix.clone(),
			h = this.skew,
			i = this.node,
			j, k = ~c(this.attrs.fill).indexOf("-"),
			l = !c(this.attrs.fill).indexOf("url(");
		g.translate(-0.5, -0.5);
		if (l || k || this.type == "image") {
			h.matrix = "1 0 0 1", h.offset = "0 0", j = g.split();
			if (k && j.noRotation || !j.isSimple) {
				i.style.filter = g.toFilter();
				var m = this.getBBox(),
					p = this.getBBox(1),
					q = m.x - p.x,
					r = m.y - p.y;
				i.coordorigin = q * -u + n + r * -u, z(this, 1, 1, q, r, 0)
			} else i.style.filter = o, z(this, j.scalex, j.scaley, j.dx, j.dy, j.rotate)
		} else i.style.filter = o, h.matrix = c(g), h.offset = g.offset();
		f && (this._.transform = f);
		return this
	}, E.rotate = function(a, b, e) {
		if (this.removed) return this;
		if (a != null) {
			a = c(a).split(k), a.length - 1 && (b = d(a[1]), e = d(a[2])), a = d(a[0]), e == null && (b = e);
			if (b == null || e == null) {
				var f = this.getBBox(1);
				b = f.x + f.width / 2, e = f.y + f.height / 2
			}
			this._.dirtyT = 1, this.transform(this._.transform.concat([
				["r", a, b, e]
			]));
			return this
		}
	}, E.translate = function(a, b) {
		if (this.removed) return this;
		a = c(a).split(k), a.length - 1 && (b = d(a[1])), a = d(a[0]) || 0, b = +b || 0, this._.bbox && (this._.bbox.x += a, this._.bbox.y += b), this.transform(this._.transform.concat([
			["t", a, b]
		]));
		return this
	}, E.scale = function(a, b, e, f) {
		if (this.removed) return this;
		a = c(a).split(k), a.length - 1 && (b = d(a[1]), e = d(a[2]), f = d(a[3]), isNaN(e) && (e = null), isNaN(f) && (f = null)), a = d(a[0]), b == null && (b = a), f == null && (e = f);
		if (e == null || f == null) var g = this.getBBox(1);
		e = e == null ? g.x + g.width / 2 : e, f = f == null ? g.y + g.height / 2 : f, this.transform(this._.transform.concat([
			["s", a, b, e, f]
		])), this._.dirtyT = 1;
		return this
	}, E.hide = function() {
		!this.removed && (this.node.style.display = "none");
		return this
	}, E.show = function() {
		!this.removed && (this.node.style.display = o);
		return this
	}, E._getBBox = function() {
		if (this.removed) return {};
		return {
			x: this.X + (this.bbx || 0) - this.W / 2,
			y: this.Y - this.H,
			width: this.W,
			height: this.H
		}
	}, E.remove = function() {
		if (!this.removed && !!this.node.parentNode) {
			this.paper.__set__ && this.paper.__set__.exclude(this), a.eve.unbind("raphael.*.*." + this.id), a._tear(this, this.paper), this.node.parentNode.removeChild(this.node), this.shape && this.shape.parentNode.removeChild(this.shape);
			for (var b in this) this[b] = typeof this[b] == "function" ? a._removedFactory(b) : null;
			this.removed = !0
		}
	}, E.attr = function(c, d) {
		if (this.removed) return this;
		if (c == null) {
			var e = {};
			for (var f in this.attrs) this.attrs[b](f) && (e[f] = this.attrs[f]);
			e.gradient && e.fill == "none" && (e.fill = e.gradient) && delete e.gradient, e.transform = this._.transform;
			return e
		}
		if (d == null && a.is(c, "string")) {
			if (c == j && this.attrs.fill == "none" && this.attrs.gradient) return this.attrs.gradient;
			var g = c.split(k),
				h = {};
			for (var i = 0, m = g.length; i < m; i++) c = g[i], c in this.attrs ? h[c] = this.attrs[c] : a.is(this.paper.customAttributes[c], "function") ? h[c] = this.paper.customAttributes[c].def : h[c] = a._availableAttrs[c];
			return m - 1 ? h : h[g[0]]
		}
		if (this.attrs && d == null && a.is(c, "array")) {
			h = {};
			for (i = 0, m = c.length; i < m; i++) h[c[i]] = this.attr(c[i]);
			return h
		}
		var n;
		d != null && (n = {}, n[c] = d), d == null && a.is(c, "object") && (n = c);
		for (var o in n) l("raphael.attr." + o + "." + this.id, this, n[o]);
		if (n) {
			for (o in this.paper.customAttributes)
				if (this.paper.customAttributes[b](o) && n[b](o) && a.is(this.paper.customAttributes[o], "function")) {
					var p = this.paper.customAttributes[o].apply(this, [].concat(n[o]));
					this.attrs[o] = n[o];
					for (var q in p) p[b](q) && (n[q] = p[q])
				}
			n.text && this.type == "text" && (this.textpath.string = n.text), B(this, n)
		}
		return this
	}, E.toFront = function() {
		!this.removed && this.node.parentNode.appendChild(this.node), this.paper && this.paper.top != this && a._tofront(this, this.paper);
		return this
	}, E.toBack = function() {
		if (this.removed) return this;
		this.node.parentNode.firstChild != this.node && (this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild), a._toback(this, this.paper));
		return this
	}, E.insertAfter = function(b) {
		if (this.removed) return this;
		b.constructor == a.st.constructor && (b = b[b.length - 1]), b.node.nextSibling ? b.node.parentNode.insertBefore(this.node, b.node.nextSibling) : b.node.parentNode.appendChild(this.node), a._insertafter(this, b, this.paper);
		return this
	}, E.insertBefore = function(b) {
		if (this.removed) return this;
		b.constructor == a.st.constructor && (b = b[0]), b.node.parentNode.insertBefore(this.node, b.node), a._insertbefore(this, b, this.paper);
		return this
	}, E.blur = function(b) {
		var c = this.node.runtimeStyle,
			d = c.filter;
		d = d.replace(r, o), +b !== 0 ? (this.attrs.blur = b, c.filter = d + n + m + ".Blur(pixelradius=" + (+b || 1.5) + ")", c.margin = a.format("-{0}px 0 0 -{0}px", f(+b || 1.5))) : (c.filter = d, c.margin = 0, delete this.attrs.blur)
	}, a._engine.path = function(a, b) {
		var c = F("shape");
		c.style.cssText = t, c.coordsize = u + n + u, c.coordorigin = b.coordorigin;
		var d = new D(c, b),
			e = {
				fill: "none",
				stroke: "#000"
			};
		a && (e.path = a), d.type = "path", d.path = [], d.Path = o, B(d, e), b.canvas.appendChild(c);
		var f = F("skew");
		f.on = !0, c.appendChild(f), d.skew = f, d.transform(o);
		return d
	}, a._engine.rect = function(b, c, d, e, f, g) {
		var h = a._rectPath(c, d, e, f, g),
			i = b.path(h),
			j = i.attrs;
		i.X = j.x = c, i.Y = j.y = d, i.W = j.width = e, i.H = j.height = f, j.r = g, j.path = h, i.type = "rect";
		return i
	}, a._engine.ellipse = function(a, b, c, d, e) {
		var f = a.path(),
			g = f.attrs;
		f.X = b - d, f.Y = c - e, f.W = d * 2, f.H = e * 2, f.type = "ellipse", B(f, {
			cx: b,
			cy: c,
			rx: d,
			ry: e
		});
		return f
	}, a._engine.circle = function(a, b, c, d) {
		var e = a.path(),
			f = e.attrs;
		e.X = b - d, e.Y = c - d, e.W = e.H = d * 2, e.type = "circle", B(e, {
			cx: b,
			cy: c,
			r: d
		});
		return e
	}, a._engine.image = function(b, c, d, e, f, g) {
		var h = a._rectPath(d, e, f, g),
			i = b.path(h).attr({
				stroke: "none"
			}),
			k = i.attrs,
			l = i.node,
			m = l.getElementsByTagName(j)[0];
		k.src = c, i.X = k.x = d, i.Y = k.y = e, i.W = k.width = f, i.H = k.height = g, k.path = h, i.type = "image", m.parentNode == l && l.removeChild(m), m.rotate = !0, m.src = c, m.type = "tile", i._.fillpos = [d, e], i._.fillsize = [f, g], l.appendChild(m), z(i, 1, 1, 0, 0, 0);
		return i
	}, a._engine.text = function(b, d, e, g) {
		var h = F("shape"),
			i = F("path"),
			j = F("textpath");
		d = d || 0, e = e || 0, g = g || "", i.v = a.format("m{0},{1}l{2},{1}", f(d * u), f(e * u), f(d * u) + 1), i.textpathok = !0, j.string = c(g), j.on = !0, h.style.cssText = t, h.coordsize = u + n + u, h.coordorigin = "0 0";
		var k = new D(h, b),
			l = {
				fill: "#000",
				stroke: "none",
				font: a._availableAttrs.font,
				text: g
			};
		k.shape = h, k.path = i, k.textpath = j, k.type = "text", k.attrs.text = c(g), k.attrs.x = d, k.attrs.y = e, k.attrs.w = 1, k.attrs.h = 1, B(k, l), h.appendChild(j), h.appendChild(i), b.canvas.appendChild(h);
		var m = F("skew");
		m.on = !0, h.appendChild(m), k.skew = m, k.transform(o);
		return k
	}, a._engine.setSize = function(b, c) {
		var d = this.canvas.style;
		this.width = b, this.height = c, b == +b && (b += "px"), c == +c && (c += "px"), d.width = b, d.height = c, d.clip = "rect(0 " + b + " " + c + " 0)", this._viewBox && a._engine.setViewBox.apply(this, this._viewBox);
		return this
	}, a._engine.setViewBox = function(b, c, d, e, f) {
		a.eve("raphael.setViewBox", this, this._viewBox, [b, c, d, e, f]);
		var h = this.width,
			i = this.height,
			j = 1 / g(d / h, e / i),
			k, l;
		f && (k = i / e, l = h / d, d * k < h && (b -= (h - d * k) / 2 / k), e * l < i && (c -= (i - e * l) / 2 / l)), this._viewBox = [b, c, d, e, !!f], this._viewBoxShift = {
			dx: -b,
			dy: -c,
			scale: j
		}, this.forEach(function(a) {
			a.transform("...")
		});
		return this
	};
	var F;
	a._engine.initWin = function(a) {
		var b = a.document;
		b.createStyleSheet().addRule(".rvml", "behavior:url(#default#VML)");
		try {
			!b.namespaces.rvml && b.namespaces.add("rvml", "urn:schemas-microsoft-com:vml"), F = function(a) {
				return b.createElement("<rvml:" + a + ' class="rvml">')
			}
		} catch (c) {
			F = function(a) {
				return b.createElement("<" + a + ' xmlns="urn:schemas-microsoft.com:vml" class="rvml">')
			}
		}
	}, a._engine.initWin(a._g.win), a._engine.create = function() {
		var b = a._getContainer.apply(0, arguments),
			c = b.container,
			d = b.height,
			e, f = b.width,
			g = b.x,
			h = b.y;
		if (!c) throw new Error("VML container not found.");
		var i = new a._Paper,
			j = i.canvas = a._g.doc.createElement("div"),
			k = j.style;
		g = g || 0, h = h || 0, f = f || 512, d = d || 342, i.width = f, i.height = d, f == +f && (f += "px"), d == +d && (d += "px"), i.coordsize = u * 1e3 + n + u * 1e3, i.coordorigin = "0 0", i.span = a._g.doc.createElement("span"), i.span.style.cssText = "position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;", j.appendChild(i.span), k.cssText = a.format("top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden", f, d), c == 1 ? (a._g.doc.body.appendChild(j), k.left = g + "px", k.top = h + "px", k.position = "absolute") : c.firstChild ? c.insertBefore(j, c.firstChild) : c.appendChild(j), i.renderfix = function() {};
		return i
	}, a.prototype.clear = function() {
		a.eve("raphael.clear", this), this.canvas.innerHTML = o, this.span = a._g.doc.createElement("span"), this.span.style.cssText = "position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;", this.canvas.appendChild(this.span), this.bottom = this.top = null
	}, a.prototype.remove = function() {
		a.eve("raphael.remove", this), this.canvas.parentNode.removeChild(this.canvas);
		for (var b in this) this[b] = typeof this[b] == "function" ? a._removedFactory(b) : null;
		return !0
	};
	var G = a.st;
	for (var H in E) E[b](H) && !G[b](H) && (G[H] = function(a) {
		return function() {
			var b = arguments;
			return this.forEach(function(c) {
				c[a].apply(c, b)
			})
		}
	}(H))
}(window.Raphael);
(function($, window, undefined) {
	var iView = function(el, options) {
		var iv = this;
		iv.options = options;
		iv.sliderContent = el, iv.sliderInner = iv.sliderContent.html();
		iv.sliderContent.html("<div class='iviewSlider'>" + iv.sliderInner + "</div>");
		iv.slider = $('.iviewSlider', iv.sliderContent);
		iv.slider.css('position', 'relative');
		iv.slider.css('height', options.height + 'px');
		iv.defs = {
			slide: 0,
			total: 0,
			image: '',
			images: [],
			width: iv.sliderContent.width(),
			height: iv.sliderContent.height(),
			timer: options.timer.toLowerCase(),
			lock: !1,
			paused: (options.autoAdvance) ? !1 : !0,
			time: options.pauseTime,
			easing: options.easing
		};
		iv.disableSelection(iv.slider[0]);
		iv.slides = iv.slider.children();
		iv.slides.each(function(i) {
			var slide = $(this);
			iv.defs.images.push(slide.data("leo_image"));
			if (slide.data("leo_thumbnail")) iv.defs.images.push(slide.data("leo_thumbnail"));
			slide.css('display', 'none');
			if (slide.data("leo_type") == "video") {
				var element = slide.children().eq(0),
					video = $('<div class="iview-video-show"><div class="iview-video-container"><a class="iview-video-close" title="' + options.closeLabel + '">&#735;</a></div></div>');
				slide.append(video);
				element.appendTo($('div.iview-video-container', video));
				video.css({
					width: '100%',
					height: iv.defs.height,
					top: '-' + iv.defs.height + 'px'
				}).hide();
				slide.addClass('iview-video').css({
					'cursor': 'pointer'
				})
			}
			iv.defs.total++
		}).css({
				width: iv.defs.width,
				height: iv.defs.height
			});
		iv.sliderContent.append('<div class="iview-preloader"><div></div></div>');
		var iviewPreloader = $('.iview-preloader', iv.sliderContent);
		var preloaderBar = $('div', iviewPreloader);
		iviewPreloader.css({
			top: ((iv.defs.height / 2) - (iviewPreloader.height() / 2)) + 'px',
			left: ((iv.defs.width / 2) - (iviewPreloader.width() / 2)) + 'px'
		});
		iv.sliderContent.append('<div class="iview-timer"><div></div></div>');
		iv.iviewTimer = $('.iview-timer', iv.sliderContent);
		iv.iviewTimer.hide();
		$('.tp-caption', iv.slider).each(function(i) {
			var caption = $(this);
			caption.html('<div class="caption-contain">' + caption.html() + '</div>')
		});
		options.startSlide = (options.randomStart) ? Math.floor(Math.random() * iv.defs.total) : options.startSlide;
		options.startSlide = (options.startSlide > 0 && options.startSlide >= iv.defs.total) ? iv.defs.total - 1 : options.startSlide;
		iv.defs.slide = options.startSlide;
		iv.defs.image = iv.slides.eq(iv.defs.slide);
		iv.defs.time = (iv.defs.image.data('leo_pausetime')) ? iv.defs.image.data('leo_pausetime') : options.pauseTime;
		iv.defs.easing = (iv.defs.image.data('leo_easing')) ? iv.defs.image.data('leo_easing') : options.easing;
		iv.pieDegree = 0;
		var padding = options.timerPadding,
			diameter = options.timerDiameter,
			stroke = options.timerStroke;
		if (iv.defs.total > 1 && iv.defs.timer != "bar") {
			stroke = (iv.defs.timer == "360bar") ? options.timerStroke : 0;
			var width = (diameter + (padding * 2) + (stroke * 2)),
				height = width,
				r = Raphael(iv.iviewTimer[0], width, height);
			iv.R = (diameter / 2);
			var param = {
					stroke: options.timerBg,
					"stroke-width": (stroke + (padding * 2))
				},
				param2 = {
					stroke: options.timerColor,
					"stroke-width": stroke,
					"stroke-linecap": "round"
				},
				param3 = {
					fill: options.timerColor,
					stroke: 'none',
					"stroke-width": 0
				},
				bgParam = {
					fill: options.timerBg,
					stroke: 'none',
					"stroke-width": 0
				};
			r.customAttributes.arc = function(value, R) {
				var total = 360,
					alpha = 360 / total * value,
					a = (90 - alpha) * Math.PI / 180,
					cx = ((diameter / 2) + padding + stroke),
					cy = ((diameter / 2) + padding + stroke),
					x = cx + R * Math.cos(a),
					y = cy - R * Math.sin(a),
					path;
				if (total == value) {
					path = [
						["M", cx, cy - R],
						["A", R, R, 0, 1, 1, 299.99, cy - R]
					]
				} else {
					path = [
						["M", cx, cy - R],
						["A", R, R, 0, +(alpha > 180), 1, x, y]
					]
				}
				return {
					path: path
				}
			};
			r.customAttributes.segment = function(angle, R) {
				var a1 = -90;
				R = R - 1;
				angle = (a1 + angle);
				var flag = (angle - a1) > 180,
					x = ((diameter / 2) + padding),
					y = ((diameter / 2) + padding);
				a1 = (a1 % 360) * Math.PI / 180;
				angle = (angle % 360) * Math.PI / 180;
				return {
					path: [
						["M", x, y],
						["l", R * Math.cos(a1), R * Math.sin(a1)],
						["A", R, R, 0, +flag, 1, x + R * Math.cos(angle), y + R * Math.sin(angle)],
						["z"]
					]
				}
			};
			if (iv.defs.total > 1 && iv.defs.timer == "pie") {
				r.circle(iv.R + padding, iv.R + padding, iv.R + padding - 1).attr(bgParam)
			}
			iv.timerBgPath = r.path().attr(param), iv.timerPath = r.path().attr(param2), iv.pieTimer = r.path().attr(param3)
		}
		iv.barTimer = $('div', iv.iviewTimer);
		if (iv.defs.total > 1 && iv.defs.timer == "360bar") {
			iv.timerBgPath.attr({
				arc: [359.9, iv.R]
			})
		}
		if (iv.defs.timer == "bar") {
			iv.iviewTimer.css({
				opacity: options.timerOpacity,
				width: diameter,
				height: stroke,
				border: options.timerBarStroke + 'px ' + options.timerBarStrokeColor + ' ' + options.timerBarStrokeStyle,
				padding: padding,
				background: options.timerBg
			});
			iv.barTimer.css({
				width: 0,
				height: stroke,
				background: options.timerColor,
				'float': 'left'
			})
		} else {
			iv.iviewTimer.css({
				opacity: options.timerOpacity,
				width: width,
				height: height
			})
		}
		iv.setTimerPosition();
		new ImagePreload(iv.defs.images, function(i) {
			var percent = (i * 10);
			preloaderBar.stop().animate({
				width: percent + '%'
			})
		}, function() {
			preloaderBar.stop().animate({
				width: '100%'
			}, function() {
				iviewPreloader.remove();
				iv.startSlider();
				options.onAfterLoad.call(this)
			})
		});
		iv.sliderContent.bind('swipeleft', function() {
			if (iv.defs.lock) return !1;
			iv.cleanTimer();
			iv.goTo('next')
		}).bind('swiperight', function() {
				if (iv.defs.lock) return !1;
				iv.cleanTimer();
				iv.defs.slide -= 2;
				iv.goTo('prev')
			});
		if (options.keyboardNav) {
			$(document).bind('keyup.iView', function(event) {
				if (event.keyCode == '37') {
					if (iv.defs.lock) return !1;
					iv.cleanTimer();
					iv.defs.slide -= 2;
					iv.goTo('prev')
				}
				if (event.keyCode == '39') {
					if (iv.defs.lock) return !1;
					iv.cleanTimer();
					iv.goTo('next')
				}
			})
		}
		iv.iviewTimer.on('click', function() {
			if (iv.iviewTimer.hasClass('paused')) {
				iv.playSlider()
			} else {
				iv.stopSlider()
			}
		});
		iv.sliderContent.bind('leo_pause', function() {
			iv.stopSlider()
		});
		iv.sliderContent.bind('leo_play', function() {
			iv.playSlider()
		});
		iv.sliderContent.bind('leo_previous', function() {
			if (iv.defs.lock) return !1;
			iv.cleanTimer();
			iv.defs.slide -= 2;
			iv.goTo('prev')
		});
		iv.sliderContent.bind('leo_next', function() {
			if (iv.defs.lock) return !1;
			iv.cleanTimer();
			iv.goTo('next')
		});
		iv.sliderContent.bind('leo_goSlide', function(event, slide) {
			if (iv.defs.lock || iv.defs.slide == slide) return !1;
			if ($(this).hasClass('active')) return !1;
			iv.cleanTimer();
			if (iv.defs.image.data('leo_background') == 'image') {
				iv.slider.css('background', 'url("' + iv.defs.image.data('leo_image') + '") no-repeat');
				iv.slider.css('background-size', '100%')
			}
			if (iv.defs.image.data('leo_background') == 'color') {
				if (iv.defs.image.data('leo_background_color') != undefined) {
					iv.slider.css('background-color', iv.defs.image.data('leo_background_color'))
				}
			}
			iv.defs.slide = slide - 1;
			iv.goTo('control')
		});
		iv.sliderContent.bind('resize', function() {
			t = $(this), tW = t.width(), tH = t.height(), width = iv.slider.width(), height = iv.slider.height();
			if (iv.defs.width != tW) {
				iv.options.customWidth
				if (width <= iv.options.customWidth) {
					width = iv.options.customWidth;
					$('.iviewSlider').width(iv.options.customWidth)
				}
				if (tW > iv.options.customWidth + 5) {
					$('.iviewSlider').css('width', '100%')
				}
				var ratio = (tW / width);
				if (ratio > 0.985) {
					ratio = 1
				}
				newHeight = Math.round(iv.defs.height * ratio);
				if (iv.options.rtl == !0) {
					iv.slider.css({
						'-webkit-transform-origin': '100% 0',
						'-moz-transform-origin': '100% 0',
						'-o-transform-origin': '100% 0',
						'-ms-transform-origin': '100% 0',
						'transform-origin': '100% 0',
						'-webkit-transform': 'scale(' + ratio + ')',
						'-moz-transform': 'scale(' + ratio + ')',
						'-o-transform': 'scale(' + ratio + ')',
						'-ms-transform': 'scale(' + ratio + ')',
						'transform': 'scale(' + ratio + ')'
					})
				} else {
					iv.slider.css({
						'-webkit-transform-origin': '0 0',
						'-moz-transform-origin': '0 0',
						'-o-transform-origin': '0 0',
						'-ms-transform-origin': '0 0',
						'transform-origin': '0 0',
						'-webkit-transform': 'scale(' + ratio + ')',
						'-moz-transform': 'scale(' + ratio + ')',
						'-o-transform': 'scale(' + ratio + ')',
						'-ms-transform': 'scale(' + ratio + ')',
						'transform': 'scale(' + ratio + ')'
					})
				}
				t.css({
					height: newHeight
				});
				iv.defs.width = tW;
				iv.setTimerPosition()
			}
		});
		$('.iview-video', iv.slider).click(function(e) {
			var t = $(this),
				video = $('.iview-video-show', t);
			if (!$(e.target).hasClass('iview-video-close') && !$(e.target).hasClass('tp-caption') && !$(e.target).parents().hasClass('tp-caption')) {
				video.show().animate({
					top: 0
				}, 1000, 'easeOutBounce');
				iv.sliderContent.trigger('leo_pause')
			}
		});
		$('.iview-video-close', iv.slider).click(function() {
			var video = $(this).parents('.iview-video-show'),
				iframe = $('iframe', video),
				src = iframe.attr('src');
			iframe.removeAttr('src').attr('src', src);
			video.animate({
				top: '-' + iv.defs.height + 'px'
			}, 1000, 'easeOutBounce', function() {
				video.hide();
				iv.sliderContent.trigger('leo_play')
			})
		})
	};
	iView.prototype = {
		timer: null,
		startSlider: function() {
			var iv = this;
			var img = new Image();
			img.src = iv.slides.eq(0).data('leo_image');
			imgWidth = img.width;
			if (imgWidth != iv.defs.width) {
				iv.defs.width = imgWidth;
				iv.sliderContent.trigger('resize')
			}
			iv.iviewTimer.show();
			iv.slides.eq(iv.defs.slide).css('display', 'block');
			if (iv.defs.image.data('leo_background') == 'image') {
				iv.slider.css('background', 'url("' + iv.defs.image.data('leo_image') + '") no-repeat');
				iv.slider.css('background-size', '100%')
			}
			if (iv.defs.image.data('leo_background') == 'color') {
				if (iv.defs.image.data('leo_background_color') != undefined) {
					iv.slider.css('background-color', iv.defs.image.data('leo_background_color'))
				}
			}
			iv.setCaption(iv.options);
			iv.iviewTimer.addClass('paused').attr('title', iv.options.playLabel);
			if (iv.options.autoAdvance && iv.defs.total > 1) {
				iv.iviewTimer.removeClass('paused').attr('title', iv.options.pauseLabel);
				iv.setTimer()
			}
			if (iv.options.directionNav) {
				iv.sliderContent.append('<div class="iview-directionNav"><a class="iview-prevNav" title="' + iv.options.previousLabel + '">' + iv.options.previousLabel + '</a><a class="iview-nextNav" title="' + iv.options.nextLabel + '">' + iv.options.nextLabel + '</a></div>');
				$('.iview-directionNav', iv.sliderContent).css({
					opacity: iv.options.directionNavHoverOpacity
				});
				iv.sliderContent.hover(function() {
					$('.iview-directionNav', iv.sliderContent).stop().animate({
						opacity: 1
					}, 300)
				}, function() {
					$('.iview-directionNav', iv.sliderContent).stop().animate({
						opacity: iv.options.directionNavHoverOpacity
					}, 300)
				});
				$('a.iview-prevNav', iv.sliderContent).on('click', function() {
					if (iv.defs.lock) return !1;
					iv.cleanTimer();
					iv.defs.slide -= 2;
					iv.goTo('prev')
				});
				$('a.iview-nextNav', iv.sliderContent).on('click', function() {
					if (iv.defs.lock) return !1;
					iv.cleanTimer();
					iv.goTo('next')
				})
			}
			if (iv.options.controlNav) {
				if (iv.options.controlNavThumbs) {
					var class_navigation = 'iview-thumbnail'
				} else {
					var class_navigation = 'iview-bullet'
				}
				var iviewControl = '<div class="iview-controlNav ' + class_navigation + '">',
					iviewTooltip = '';
				if (!iv.options.directionNav && iv.options.controlNavNextPrev) iviewControl += '<a class="iview-controlPrevNav" title="' + iv.options.previousLabel + '">' + iv.options.previousLabel + '</a>';
				if (iv.options.customHtmlBullet) {
					iviewControl += '<div class="iview-items customHtmlBullet"><ul>'
				} else {
					iviewControl += '<div class="iview-items"><ul>'
				}
				for (var i = 0; i < iv.defs.total; i++) {
					var slide = iv.slides.eq(i);
					iviewControl += '<li>';
					if (iv.options.controlNavThumbs) {
						var thumb = (slide.data('leo_thumbnail')) ? slide.data('leo_thumbnail') : slide.data('leo_image');
						iviewControl += '<a class="iview-control" rel="' + i + '"><img src="' + thumb + '" /></a>'
					} else {
						var thumb = (slide.data('leo_thumbnail')) ? slide.data('leo_thumbnail') : slide.data('leo_image');
						var bullet_number = '<span>' + (i + 1) + '</span>';
						var bullet_class = iv.getSlideData(slide, 'leo_bullet_class');
						var bullet_description = iv.getSlideData(slide, 'leo_bullet_description');
						iviewControl += '<a class="iview-control ' + bullet_class + '" rel="' + i + '">' + bullet_number + ' ' + bullet_description + '</a>';
						if (iv.options.controlNavTooltip) iviewTooltip += '<div rel="' + i + '"><img src="' + thumb + '" /></div>'
					}
					iviewControl += '</li>'
				}
				iviewControl += '</ul></div>';
				if (!iv.options.directionNav && iv.options.controlNavNextPrev) iviewControl += '<a class="iview-controlNextNav" title="' + iv.options.nextLabel + '">' + iv.options.nextLabel + '</a>';
				iviewControl += '</div>';
				if (!iv.options.controlNavThumbs && iv.options.controlNavTooltip) iviewControl += '<div class="iview-tooltip"><div class="holder"><div class="container">' + iviewTooltip + '</div></div></div>';
				iv.sliderContent.append(iviewControl);
				$('.iview-controlNav a.iview-control:eq(' + iv.defs.slide + ')', iv.sliderContent).addClass('active');
				$('a.iview-controlPrevNav', iv.sliderContent).one('click', function() {
					if (iv.defs.lock) return !1;
					iv.cleanTimer();
					iv.defs.slide -= 2;
					iv.goTo('prev')
				});
				$('a.iview-controlNextNav', iv.sliderContent).on('click', function() {
					if (iv.defs.lock) return !1;
					iv.cleanTimer();
					iv.goTo('next')
				});
				$('.iview-controlNav a.iview-control', iv.sliderContent).on('click', function() {
					if (iv.defs.lock) return !1;
					if ($(this).hasClass('active')) return !1;
					iv.cleanTimer();
					if (iv.defs.image.data('leo_background') == 'image') {
						iv.slider.css('background', 'url("' + iv.defs.image.data('leo_image') + '") no-repeat');
						iv.slider.css('background-size', '100%')
					}
					if (iv.defs.image.data('leo_background') == 'color') {
						if (iv.defs.image.data('leo_background_color') != undefined) {
							iv.slider.css('background-color', iv.defs.image.data('leo_background_color'))
						}
					}
					iv.defs.slide = $(this).attr('rel') - 1;
					iv.goTo('control')
				});
				$('.iview-controlNav', iv.sliderContent).css({
					opacity: iv.options.controlNavHoverOpacity
				});
				iv.sliderContent.hover(function() {
					$('.iview-controlNav', iv.sliderContent).stop().animate({
						opacity: 1
					}, 300);
					iv.sliderContent.addClass('iview-hover')
				}, function() {
					$('.iview-controlNav', iv.sliderContent).stop().animate({
						opacity: iv.options.controlNavHoverOpacity
					}, 300);
					iv.sliderContent.removeClass('iview-hover')
				});
				var tooltipTimer = null;
				$('.iview-controlNav a.iview-control', iv.sliderContent).hover(function(e) {
					var t = $(this),
						i = t.attr('rel'),
						tooltip = $('.iview-tooltip', iv.sliderContent),
						holder = $('div.holder', tooltip),
						x = t.offset().left - iv.sliderContent.offset().left - (tooltip.outerWidth() / 2) + iv.options.tooltipX,
						y = t.offset().top - iv.sliderContent.offset().top - tooltip.outerHeight() + iv.options.tooltipY,
						imD = $('div[rel=' + i + ']')
					scrollLeft = (i * imD.width());
					tooltip.stop().animate({
						left: x,
						top: y,
						opacity: 1
					}, 300);
					if (tooltip.not(':visible')) tooltip.fadeIn(300);
					holder.stop().animate({
						scrollLeft: scrollLeft
					}, 300);
					clearTimeout(tooltipTimer)
				}, function(e) {
					var tooltip = $('.iview-tooltip', iv.sliderContent);
					tooltipTimer = setTimeout(function() {
						tooltip.animate({
							opacity: 0
						}, 300, function() {
							tooltip.hide()
						})
					}, 200)
				})
			}
			iv.sliderContent.bind('mouseover.iView mousemove.iView', function() {
				if (iv.options.pauseOnHover && !iv.defs.paused) iv.cleanTimer();
				iv.sliderContent.addClass('iview-hover')
			}).bind('mouseout.iView', function() {
					if (iv.options.pauseOnHover && !iv.defs.paused && iv.timer == null && iv.pieDegree <= 359 && iv.options.autoAdvance) iv.setTimer();
					iv.sliderContent.removeClass('iview-hover')
				})
		},
		getSlideData: function(slide, param) {
			var result = '';
			if (slide.data(param) !== undefined) {
				return slide.data(param)
			}
			return result
		},
		setCaption: function() {
			var iv = this,
				slide = iv.slides.eq(iv.defs.slide),
				captions = $('.tp-caption', slide),
				timeEx = 0;
			captions.each(function(i) {
				var caption = $(this),
					fx = (caption.data('transition')) ? $.trim(caption.data('transition').toLowerCase()) : "fade",
					speed = (caption.data('speed')) ? caption.data('speed') : iv.options.captionSpeed,
					easing = (caption.data('easing')) ? caption.data('easing') : iv.options.captionEasing,
					x = (caption.data('x') != "undefined") ? caption.data('x') : "center",
					y = (caption.data('y') != "undefined") ? caption.data('y') : "center",
					w = (caption.data('width')) ? caption.data('width') : caption.outerWidth() + 1,
					h = (caption.data('height')) ? caption.data('height') : caption.outerHeight(),
					oW = caption.outerWidth(),
					oH = caption.outerHeight();
				if (x == "center") x = ((iv.defs.width / 2) - (oW / 2));
				if (y == "center") y = ((iv.defs.height / 2) - (oH / 2));
				var captionContain = $('.caption-contain', caption);
				caption.css({
					opacity: 0
				});
				captionContain.css({
					opacity: 0,
					position: 'relative',
					width: w,
					height: h
				});
				switch (fx) {
					case "wipedown":
						caption.css({
							top: (y - h),
							left: x
						});
						captionContain.css({
							top: (h + (h * 3)),
							left: 0
						});
						break;
					case "wipeup":
						caption.css({
							top: (y + h),
							left: x
						});
						captionContain.css({
							top: (h - (h * 3)),
							left: 0
						});
						break;
					case "wiperight":
						caption.css({
							top: y,
							left: (x - w)
						});
						captionContain.css({
							top: 0,
							left: (w + (w * 2))
						});
						break;
					case "wipeleft":
						caption.css({
							top: y,
							left: (x + w)
						});
						captionContain.css({
							top: 0,
							left: (w - (w * 2))
						});
						break;
					case "fade":
						caption.css({
							top: y,
							left: x
						});
						captionContain.css({
							top: 0,
							left: 0
						});
						break;
					case "expanddown":
						caption.css({
							top: y,
							left: x,
							height: 0
						});
						captionContain.css({
							top: (h + (h * 3)),
							left: 0
						});
						break;
					case "expandup":
						caption.css({
							top: (y + h),
							left: x,
							height: 0
						});
						captionContain.css({
							top: (h - (h * 3)),
							left: 0
						});
						break;
					case "expandright":
						caption.css({
							top: y,
							left: x,
							width: 0
						});
						captionContain.css({
							top: 0,
							left: (w + (w * 2))
						});
						break;
					case "expandleft":
						caption.css({
							top: y,
							left: (x + w),
							width: 0
						});
						captionContain.css({
							top: 0,
							left: (w - (w * 2))
						});
						break
				}
				setTimeout(function() {
					caption.animate({
						opacity: iv.options.captionOpacity,
						top: y,
						left: x,
						width: w,
						height: h
					}, speed, easing, function() {})
				}, timeEx);
				setTimeout(function() {
					captionContain.animate({
						opacity: iv.options.captionOpacity,
						top: 0,
						left: 0
					}, speed, easing)
				}, (timeEx + 100));
				timeEx += 250
			})
		},
		processTimer: function() {
			var iv = this;
			if (iv.defs.timer == "360bar") {
				var degree = (iv.pieDegree == 0) ? 0 : iv.pieDegree + .9;
				if (iv.timerPath != undefined) {
					iv.timerPath.attr({
						arc: [degree, iv.R]
					})
				}
			} else if (iv.defs.timer == "pie") {
				var degree = (iv.pieDegree == 0) ? 0 : iv.pieDegree + .9;
				if (iv.timerPath != undefined) {
					iv.pieTimer.attr({
						segment: [degree, iv.R]
					})
				}
			} else {
				iv.barTimer.css({
					width: ((iv.pieDegree / 360) * 100) + '%'
				})
			}
			iv.pieDegree += 3
		},
		transitionEnd: function(iv) {
			iv.options.onAfterChange.call(this);
			iv.defs.lock = !1;
			iv.slides.css('display', 'none');
			iv.slides.eq(iv.defs.slide).show();
			if (iv.defs.image.data('leo_background') == 'image') {
				iv.slider.css('background', 'url("' + iv.defs.image.data('leo_image') + '") no-repeat');
				iv.slider.css('background-size', '100%')
			}
			if (iv.defs.image.data('leo_background') == 'color') {
				if (iv.defs.image.data('leo_background_color') != undefined) {
					iv.slider.css('background-color', iv.defs.image.data('leo_background_color'))
				}
			}
			$('.iview-strip, .iview-block', '.iviewSlider').remove();
			iv.defs.time = (iv.defs.image.data('leo_pausetime')) ? iv.defs.image.data('leo_pausetime') : iv.options.pauseTime;
			iv.iviewTimer.animate({
				opacity: iv.options.timerOpacity
			});
			iv.pieDegree = 0;
			iv.processTimer();
			iv.setCaption(iv.options);
			if (iv.timer == null && !iv.defs.paused) iv.timer = setInterval(function() {
				iv.timerCall(iv)
			}, (iv.defs.time / 120))
		},
		addStrips: function(vertical, opts) {
			var iv = this;
			opts = (opts) ? opts : iv.options;
			for (var i = 0; i < opts.strips; i++) {
				var stripWidth = Math.round(iv.slider.width() / opts.strips),
					stripHeight = Math.round(iv.slider.height() / opts.strips),
					bgPosition = '-' + ((stripWidth + (i * stripWidth)) - stripWidth) + 'px 0%',
					top = ((vertical) ? (stripHeight * i) + 'px' : '0px'),
					left = ((vertical) ? '0px' : (stripWidth * i) + 'px');
				if (vertical) bgPosition = '0% -' + ((stripHeight + (i * stripHeight)) - stripHeight) + 'px';
				if (i == opts.strips - 1) {
					var width = ((vertical) ? '0px' : (iv.slider.width() - (stripWidth * i)) + 'px'),
						height = ((vertical) ? (iv.slider.height() - (stripHeight * i)) + 'px' : '0px')
				} else {
					var width = ((vertical) ? '0px' : stripWidth + 'px'),
						height = ((vertical) ? stripHeight + 'px' : '0px')
				}
				if (iv.defs.image.data('leo_background') == 'image') {
					var strip = $('<div class="iview-strip"></div>').css({
						width: width,
						height: height,
						top: top,
						left: left,
						background: 'url("' + iv.defs.image.data('leo_image') + '") no-repeat ' + bgPosition,
						"background-size": "100%",
						opacity: 0
					})
				}
				if (iv.defs.image.data('leo_background') == 'color') {
					var strip = $('<div class="iview-strip"></div>').css({
						width: width,
						height: height,
						top: top,
						left: left,
						"background-size": "100%",
						opacity: 0
					})
				}
				iv.slider.append(strip)
			}
		},
		addBlocks: function() {
			var iv = this,
				blockWidth = Math.round(iv.slider.width() / iv.options.blockCols),
				blockHeight = Math.round(iv.slider.height() / iv.options.blockRows);
			for (var rows = 0; rows < iv.options.blockRows; rows++) {
				for (var columns = 0; columns < iv.options.blockCols; columns++) {
					var top = (rows * blockHeight) + 'px',
						left = (columns * blockWidth) + 'px',
						width = blockWidth + 'px',
						height = blockHeight + 'px',
						bgPosition = '-' + ((blockWidth + (columns * blockWidth)) - blockWidth) + 'px -' + ((blockHeight + (rows * blockHeight)) - blockHeight) + 'px';
					if (columns == iv.options.blockCols - 1) width = (iv.slider.width() - (blockWidth * columns)) + 'px';
					if (iv.defs.image.data('leo_background') == 'image') {
						var block = $('<div class="iview-block"></div>').css({
							width: blockWidth + 'px',
							height: blockHeight + 'px',
							top: (rows * blockHeight) + 'px',
							left: (columns * blockWidth) + 'px',
							background: 'url("' + iv.defs.image.data('leo_image') + '") no-repeat ' + bgPosition,
							"background-size": "100%",
							opacity: 0
						})
					}
					if (iv.defs.image.data('leo_background') == 'color') {
						var block = $('<div class="iview-block"></div>').css({
							width: blockWidth + 'px',
							height: blockHeight + 'px',
							top: (rows * blockHeight) + 'px',
							left: (columns * blockWidth) + 'px',
							background: 'url("' + iv.defs.image.data('leo_image') + '") no-repeat ' + bgPosition,
							"background-size": "100%",
							opacity: 0
						})
					}
					iv.slider.append(block)
				}
			}
		},
		runTransition: function(fx) {
			var iv = this;
			switch (fx) {
				case 'strip-up-right':
				case 'strip-up-left':
					iv.addStrips();
					var timeDelay = 0;
					i = 0, strips = $('.iview-strip', iv.slider);
					if (fx == 'strip-up-left') strips = $('.iview-strip', iv.slider).reverse();
					strips.each(function() {
						var strip = $(this);
						strip.css({
							top: '',
							bottom: '0px'
						});
						setTimeout(function() {
							strip.animate({
								height: '100%',
								opacity: '1.0'
							}, iv.options.animationSpeed, iv.defs.easing, function() {
								if (i == iv.options.strips - 1) iv.transitionEnd(iv);
								i++
							})
						}, (100 + timeDelay));
						timeDelay += 50
					});
					break;
				case 'strip-down':
				case 'strip-down-right':
				case 'strip-down-left':
					iv.addStrips();
					var timeDelay = 0,
						i = 0,
						strips = $('.iview-strip', iv.slider);
					if (fx == 'strip-down-left') strips = $('.iview-strip', iv.slider).reverse();
					strips.each(function() {
						var strip = $(this);
						strip.css({
							bottom: '',
							top: '0px'
						});
						setTimeout(function() {
							strip.animate({
								height: '100%',
								opacity: '1.0'
							}, iv.options.animationSpeed, iv.defs.easing, function() {
								if (i == iv.options.strips - 1) iv.transitionEnd(iv);
								i++
							})
						}, (100 + timeDelay));
						timeDelay += 50
					});
					break;
				case 'strip-left-right':
				case 'strip-left-right-up':
				case 'strip-left-right-down':
					iv.addStrips(!0);
					var timeDelay = 0,
						i = 0,
						v = 0,
						strips = $('.iview-strip', iv.slider);
					if (fx == 'strip-left-right-down') strips = $('.iview-strip', iv.slider).reverse();
					strips.each(function() {
						var strip = $(this);
						if (i == 0) {
							strip.css({
								right: '',
								left: '0px'
							});
							i++
						} else {
							strip.css({
								left: '',
								right: '0px'
							});
							i = 0
						}
						setTimeout(function() {
							strip.animate({
								width: '100%',
								opacity: '1.0'
							}, iv.options.animationSpeed, iv.defs.easing, function() {
								if (v == iv.options.strips - 1) iv.transitionEnd(iv);
								v++
							})
						}, (100 + timeDelay));
						timeDelay += 50
					});
					break;
				case 'strip-up-down':
				case 'strip-up-down-right':
				case 'strip-up-down-left':
					iv.addStrips();
					var timeDelay = 0,
						i = 0,
						v = 0,
						strips = $('.iview-strip', iv.slider);
					if (fx == 'strip-up-down-left') strips = $('.iview-strip', iv.slider).reverse();
					strips.each(function() {
						var strip = $(this);
						if (i == 0) {
							strip.css({
								bottom: '',
								top: '0px'
							});
							i++
						} else {
							strip.css({
								top: '',
								bottom: '0px'
							});
							i = 0
						}
						setTimeout(function() {
							strip.animate({
								height: '100%',
								opacity: '1.0'
							}, iv.options.animationSpeed, iv.defs.easing, function() {
								if (v == iv.options.strips - 1) iv.transitionEnd(iv);
								v++
							})
						}, (100 + timeDelay));
						timeDelay += 50
					});
					break;
				case 'left-curtain':
				case 'right-curtain':
				case 'top-curtain':
				case 'bottom-curtain':
					if (fx == 'left-curtain' || fx == 'right-curtain') iv.addStrips();
					else iv.addStrips(!0);
					var timeDelay = 0,
						i = 0,
						strips = $('.iview-strip', iv.slider);
					if (fx == 'right-curtain' || fx == 'bottom-curtain') strips = $('.iview-strip', iv.slider).reverse();
					strips.each(function() {
						var strip = $(this);
						var width = strip.width();
						var height = strip.height();
						if (fx == 'left-curtain' || fx == 'right-curtain') strip.css({
							top: '0px',
							height: '100%',
							width: '0px'
						});
						else strip.css({
							left: '0px',
							height: '0px',
							width: '100%'
						});
						setTimeout(function() {
							if (fx == 'left-curtain' || fx == 'right-curtain') strip.animate({
								width: width,
								opacity: '1.0'
							}, iv.options.animationSpeed, iv.defs.easing, function() {
								if (i == iv.options.strips - 1) iv.transitionEnd(iv);
								i++
							});
							else strip.animate({
								height: height,
								opacity: '1.0'
							}, iv.options.animationSpeed, iv.defs.easing, function() {
								if (i == iv.options.strips - 1) iv.transitionEnd(iv);
								i++
							})
						}, (100 + timeDelay));
						timeDelay += 50
					});
					break;
				case 'strip-up-right':
				case 'strip-up-left':
					iv.addStrips();
					var timeDelay = 0,
						i = 0,
						strips = $('.iview-strip', iv.slider);
					if (fx == 'strip-up-left') strips = $('.iview-strip', iv.slider).reverse();
					strips.each(function() {
						var strip = $(this);
						strip.css({
							'bottom': '0px'
						});
						setTimeout(function() {
							strip.animate({
								height: '100%',
								opacity: '1.0'
							}, iv.options.animationSpeed, iv.defs.easing, function() {
								if (i == iv.options.strips - 1) iv.transitionEnd(iv);
								i++
							})
						}, (100 + timeDelay));
						timeDelay += 50
					});
					break;
				case 'strip-left-fade':
				case 'strip-right-fade':
				case 'strip-top-fade':
				case 'strip-bottom-fade':
					if (fx == 'strip-left-fade' || fx == 'strip-right-fade') iv.addStrips();
					else iv.addStrips(!0);
					var timeDelay = 0,
						i = 0,
						strips = $('.iview-strip', iv.slider);
					if (fx == 'strip-right-fade' || fx == 'strip-bottom-fade') strips = $('.iview-strip', iv.slider).reverse();
					strips.each(function() {
						var strip = $(this);
						var width = strip.width();
						var height = strip.height();
						if (fx == 'strip-left-fade' || fx == 'strip-right-fade') strip.css({
							top: '0px',
							height: '100%',
							width: width
						});
						else strip.css({
							left: '0px',
							height: height,
							width: '100%'
						});
						setTimeout(function() {
							strip.animate({
								opacity: '1.0'
							}, iv.options.animationSpeed * 1.7, iv.defs.easing, function() {
								if (i == iv.options.strips - 1) iv.transitionEnd(iv);
								i++
							})
						}, (100 + timeDelay));
						timeDelay += 35
					});
					break;
				case 'slide-in-up':
				case 'slide-in-down':
					opts = {
						strips: 1
					};
					iv.addStrips(!1, opts);
					var strip = $('.iview-strip:first', iv.slider),
						top = 0;
					if (fx == 'slide-in-up') top = '-' + iv.defs.height + 'px';
					else top = iv.defs.height + 'px';
					strip.css({
						top: top,
						'height': '100%',
						'width': '100%',
					});
					strip.animate({
						'top': '0px',
						opacity: 1
					}, (iv.options.animationSpeed * 2), iv.defs.easing, function() {
						iv.transitionEnd(iv)
					});
					break;
				case 'zigzag-top':
				case 'zigzag-bottom':
				case 'zigzag-grow-top':
				case 'zigzag-grow-bottom':
				case 'zigzag-drop-top':
				case 'zigzag-drop-bottom':
					iv.addBlocks();
					var totalBlocks = (iv.options.blockCols * iv.options.blockRows),
						timeDelay = 0,
						blockToArr = new Array(),
						blocks = $('.iview-block', iv.slider);
					for (var rows = 0; rows < iv.options.blockRows; rows++) {
						var odd = (rows % 2),
							start = (rows * iv.options.blockCols),
							end = ((rows + 1) * iv.options.blockCols);
						if (odd == 1) {
							for (var columns = end - 1; columns >= start; columns--) {
								blockToArr.push($(blocks[columns]))
							}
						} else {
							for (var columns = start; columns < end; columns++) {
								blockToArr.push($(blocks[columns]))
							}
						}
					}
					if (fx == 'zigzag-bottom' || fx == 'zigzag-grow-bottom' || fx == 'zigzag-drop-bottom') blockToArr.reverse();
					blocks.each(function(i) {
						var block = $(blockToArr[i]),
							h = block.height(),
							w = block.width(),
							top = block.css('top');
						if (fx == 'zigzag-grow-top' || fx == 'zigzag-grow-bottom') block.width(0).height(0);
						else if (fx == 'zigzag-drop-top' || fx == 'zigzag-drop-bottom') block.css({
							top: '-=50'
						});
						setTimeout(function() {
							if (fx == 'zigzag-grow-top' || fx == 'zigzag-grow-bottom') block.animate({
								opacity: '1',
								height: h,
								width: w
							}, iv.options.animationSpeed, iv.defs.easing, function() {
								if (i == totalBlocks - 1) iv.transitionEnd(iv)
							});
							else if (fx == 'zigzag-drop-top' || fx == 'zigzag-drop-bottom') block.animate({
								top: top,
								opacity: '1'
							}, iv.options.animationSpeed, iv.defs.easing, function() {
								if (i == totalBlocks - 1) iv.transitionEnd(iv)
							});
							else block.animate({
									opacity: '1'
								}, (iv.options.animationSpeed * 2), 'easeInOutExpo', function() {
									if (i == totalBlocks - 1) iv.transitionEnd(iv)
								})
						}, (100 + timeDelay));
						timeDelay += 20
					});
					break;
				case 'block-fade':
				case 'block-fade-reverse':
				case 'block-expand':
				case 'block-expand-reverse':
					iv.addBlocks();
					var totalBlocks = (iv.options.blockCols * iv.options.blockRows),
						i = 0,
						timeDelay = 0;
					var rowIndex = 0;
					var colIndex = 0;
					var blockToArr = new Array();
					blockToArr[rowIndex] = new Array();
					var blocks = $('.iview-block', iv.slider);
					if (fx == 'block-fade-reverse' || fx == 'block-expand-reverse') {
						blocks = $('.iview-block', iv.slider).reverse()
					}
					blocks.each(function() {
						blockToArr[rowIndex][colIndex] = $(this);
						colIndex++;
						if (colIndex == iv.options.blockCols) {
							rowIndex++;
							colIndex = 0;
							blockToArr[rowIndex] = new Array()
						}
					});
					for (var columns = 0; columns < (iv.options.blockCols * 2); columns++) {
						var Col = columns;
						for (var rows = 0; rows < iv.options.blockRows; rows++) {
							if (Col >= 0 && Col < iv.options.blockCols) {
								(function() {
									var block = $(blockToArr[rows][Col]);
									var w = block.width();
									var h = block.height();
									if (fx == 'block-expand' || fx == 'block-expand-reverse') {
										block.width(0).height(0)
									}
									setTimeout(function() {
										block.animate({
											opacity: '1',
											width: w,
											height: h
										}, iv.options.animationSpeed / 1.3, iv.defs.easing, function() {
											if (i == totalBlocks - 1) iv.transitionEnd(iv);
											i++
										})
									}, (100 + timeDelay))
								})()
							}
							Col--
						}
						timeDelay += 100
					}
					break;
				case 'block-random':
				case 'block-expand-random':
				case 'block-drop-random':
					iv.addBlocks();
					var totalBlocks = (iv.options.blockCols * iv.options.blockRows),
						timeDelay = 0;
					var blocks = iv.shuffle($('.iview-block', iv.slider));
					blocks.each(function(i) {
						var block = $(this),
							h = block.height(),
							w = block.width(),
							top = block.css('top');
						if (fx == 'block-expand-random') block.width(0).height(0);
						if (fx == 'block-drop-random') block.css({
							top: '-=50'
						});
						setTimeout(function() {
							block.animate({
								top: top,
								opacity: '1',
								height: h,
								width: w
							}, iv.options.animationSpeed, iv.defs.easing, function() {
								if (i == totalBlocks - 1) iv.transitionEnd(iv)
							})
						}, (100 + timeDelay));
						timeDelay += 20
					});
					break;
				case 'slide-in-right':
				case 'slide-in-left':
				case 'fade':
				default:
					opts = {
						strips: 1
					};
					iv.addStrips(!1, opts);
					var strip = $('.iview-strip:first', iv.slider);
					strip.css({
						'height': '100%',
						'width': '100%',
					});
					if (fx == 'slide-in-right') strip.css({
						'height': '100%',
						'width': '100%',
						'left': iv.defs.width + 'px',
						'right': ''
					});
					else if (fx == 'slide-in-left') strip.css({
						'left': '-' + iv.defs.width + 'px'
					});
					strip.animate({
						left: '0px',
						opacity: 1
					}, (iv.options.animationSpeed * 2), iv.defs.easing, function() {
						iv.transitionEnd(iv)
					});
					break
			}
		},
		shuffle: function(oldArray) {
			var newArray = oldArray.slice();
			var len = newArray.length;
			var i = len;
			while (i--) {
				var p = parseInt(Math.random() * len);
				var t = newArray[i];
				newArray[i] = newArray[p];
				newArray[p] = t
			}
			return newArray
		},
		timerCall: function(iv) {
			iv.processTimer();
			if (iv.pieDegree >= 360) {
				iv.cleanTimer();
				iv.goTo(!1)
			}
		},
		setTimer: function() {
			var iv = this;
			iv.timer = setInterval(function() {
				iv.timerCall(iv)
			}, (iv.defs.time / 120))
		},
		cleanTimer: function() {
			var iv = this;
			clearInterval(iv.timer);
			iv.timer = null
		},
		goTo: function(action) {
			var iv = this;
			if (iv.defs && (iv.defs.slide == iv.defs.total - 1)) {
				iv.options.onLastSlide.call(this)
			}
			iv.cleanTimer();
			iv.iviewTimer.animate({
				opacity: 0
			});
			iv.options.onBeforeChange.call(this);
			if (!action) {
				if (iv.defs.image.data('leo_background') == 'image') {
					iv.slider.css('background', 'url("' + iv.defs.image.data('leo_image') + '") no-repeat');
					iv.slider.css('background-size', '100%')
				}
				if (iv.defs.image.data('leo_background') == 'color') {
					if (iv.defs.image.data('leo_background_color') != undefined) {
						iv.slider.css('background-color', iv.defs.image.data('leo_background_color'))
					}
				}
			} else {
				if (action == 'prev' || action == 'next') {
					if (iv.defs.image.data('leo_background') == 'image') {
						iv.slider.css('background', 'url("' + iv.defs.image.data('leo_image') + '") no-repeat');
						iv.slider.css('background-size', '100%')
					}
					if (iv.defs.image.data('leo_background') == 'color') {
						if (iv.defs.image.data('leo_background_color') != undefined) {
							iv.slider.css('background-color', iv.defs.image.data('leo_background_color'))
						}
					}
				}
			}
			iv.defs.slide++;
			if (iv.defs.slide == iv.defs.total) {
				iv.defs.slide = 0;
				iv.options.onSlideShowEnd.call(this)
			}
			if (iv.defs.slide < 0) iv.defs.slide = (iv.defs.total - 1);
			iv.defs.image = iv.slides.eq(iv.defs.slide);
			if (iv.options.timer_show == 1) {
				iv.playSlider();
				$('.iview-timer').hide()
			}
			if (iv.options.timer_show == 2) {
				iv.stopSlider();
				$('.iview-timer').hide()
			}
			if (iv.options.timer_show == 3) {
				$('.iview-timer').show();
				iv.playSlider()
			}
			if (iv.defs.image.data('leo_type') == "video") {
				$('.iview-video', iv.slider).trigger('click');
				$('.iview-video-close').hide();
				$('.iview-timer').hide()
			}
			if (iv.defs.image.data('autoplay') == !0) {
				var current_video = $('.iviewSlider').children().eq(iv.defs.slide);
				var video_src = $("iframe", current_video).attr('src');
				$("iframe", current_video).attr('src', video_src + '&autoplay=1')
			}
			if (iv.options.controlNav) {
				$('.iview-controlNav a.iview-control', iv.sliderContent).removeClass('active');
				$('.iview-controlNav a.iview-control:eq(' + iv.defs.slide + ')', iv.sliderContent).addClass('active')
			}
			var fx = iv.options.fx;
			if (iv.options.fx.toLowerCase() == 'random') {
				var transitions = new Array('left-curtain', 'right-curtain', 'top-curtain', 'bottom-curtain', 'strip-down-right', 'strip-down-left', 'strip-up-right', 'strip-up-left', 'strip-up-down', 'strip-up-down-left', 'strip-left-right', 'strip-left-right-down', 'slide-in-right', 'slide-in-left', 'slide-in-up', 'slide-in-down', 'fade', 'strip-left-fade', 'strip-right-fade', 'strip-top-fade', 'strip-bottom-fade');
				fx = transitions[Math.floor(Math.random() * (transitions.length + 1))];
				if (fx == undefined) fx = 'fade';
				fx = $.trim(fx.toLowerCase())
			}
			if (iv.options.fx.indexOf(',') != -1) {
				var transitions = iv.options.fx.split(',');
				fx = transitions[Math.floor(Math.random() * (transitions.length))];
				if (fx == undefined) fx = 'fade';
				fx = $.trim(fx.toLowerCase())
			}
			if (iv.defs.image.data('leo_transition')) {
				var transitions = iv.defs.image.data('leo_transition').split(',');
				fx = transitions[Math.floor(Math.random() * (transitions.length))];
				fx = $.trim(fx.toLowerCase())
			}
			iv.defs.easing = (iv.defs.image.data('leo_easing')) ? iv.defs.image.data('leo_easing') : iv.options.easing;
			iv.defs.lock = !0;
			iv.runTransition(fx)
		},
		playSlider: function() {
			var iv = this;
			if (iv.timer == null && iv.defs.paused) {
				iv.iviewTimer.removeClass('paused').attr('title', iv.options.pauseLabel);
				iv.setTimer();
				iv.defs.paused = !1;
				iv.options.onPlay.call(this)
			}
		},
		stopSlider: function() {
			var iv = this;
			iv.iviewTimer.addClass('paused').attr('title', iv.options.playLabel);
			iv.cleanTimer();
			iv.defs.paused = !0;
			iv.options.onPause.call(this)
		},
		setTimerPosition: function() {
			var iv = this,
				position = iv.options.timerPosition.toLowerCase().split('-');
			for (var i = 0; i < position.length; i++) {
				if (position[i] == 'top') {
					iv.iviewTimer.css({
						top: iv.options.timerY + 'px',
						bottom: ''
					})
				} else if (position[i] == 'middle') {
					iv.iviewTimer.css({
						top: (iv.options.timerY + (iv.defs.height / 2) - (iv.options.timerDiameter / 2)) + 'px',
						bottom: ''
					})
				} else if (position[i] == 'bottom') {
					iv.iviewTimer.css({
						bottom: iv.options.timerY + 'px',
						top: ''
					})
				} else if (position[i] == 'left') {
					iv.iviewTimer.css({
						left: iv.options.timerX + 'px',
						right: ''
					})
				} else if (position[i] == 'center') {
					iv.iviewTimer.css({
						left: (iv.options.timerX + (iv.defs.width / 2) - (iv.options.timerDiameter / 2)) + 'px',
						right: ''
					})
				} else if (position[i] == 'right') {
					iv.iviewTimer.css({
						right: iv.options.timerX + 'px',
						left: ''
					})
				}
			}
		},
		disableSelection: function(target) {
			if (typeof target.onselectstart != "undefined") target.onselectstart = function() {
				return !1
			};
			else if (typeof target.style.MozUserSelect != "undefined") target.style.MozUserSelect = "none";
			else if (typeof target.style.webkitUserSelect != "undefined") target.style.webkitUserSelect = "none";
			else if (typeof target.style.userSelect != "undefined") target.style.userSelect = "none";
			else target.onmousedown = function() {
					return !1
				};
			target.unselectable = "on"
		},
		isTouch: function() {
			return !!('ontouchstart' in window)
		}
	};
	var ImagePreload = function(p_aImages, p_pfnPercent, p_pfnFinished) {
		this.m_pfnPercent = p_pfnPercent;
		this.m_pfnFinished = p_pfnFinished;
		this.m_nLoaded = 0;
		this.m_nProcessed = 0;
		this.m_aImages = new Array;
		this.m_nICount = p_aImages.length;
		for (var i = 0; i < p_aImages.length; i++) this.Preload(p_aImages[i])
	};
	ImagePreload.prototype = {
		Preload: function(p_oImage) {
			var oImage = new Image;
			this.m_aImages.push(oImage);
			oImage.onload = ImagePreload.prototype.OnLoad;
			oImage.onerror = ImagePreload.prototype.OnError;
			oImage.onabort = ImagePreload.prototype.OnAbort;
			oImage.oImagePreload = this;
			oImage.bLoaded = !1;
			oImage.source = p_oImage;
			oImage.src = p_oImage
		},
		OnComplete: function() {
			this.m_nProcessed++;
			if (this.m_nProcessed == this.m_nICount) this.m_pfnFinished();
			else this.m_pfnPercent(Math.round((this.m_nProcessed / this.m_nICount) * 10))
		},
		OnLoad: function() {
			this.bLoaded = !0;
			this.oImagePreload.m_nLoaded++;
			this.oImagePreload.OnComplete()
		},
		OnError: function() {
			this.bError = !0;
			this.oImagePreload.OnComplete()
		},
		OnAbort: function() {
			this.bAbort = !0;
			this.oImagePreload.OnComplete()
		}
	}
	$.fn.iView = function(options) {
		options = jQuery.extend({
			fx: 'random',
			easing: 'easeOutQuad',
			strips: 20,
			blockCols: 10,
			blockRows: 5,
			animationSpeed: 500,
			pauseTime: 5000,
			startSlide: 0,
			directionNav: !0,
			directionNavHoverOpacity: 0.6,
			controlNav: !1,
			controlNavNextPrev: !0,
			controlNavHoverOpacity: 0.6,
			controlNavThumbs: !1,
			controlNavTooltip: !0,
			captionSpeed: 500,
			captionEasing: 'easeInOutSine',
			captionOpacity: 1,
			autoAdvance: !0,
			keyboardNav: !0,
			touchNav: !0,
			pauseOnHover: !1,
			nextLabel: "Next",
			previousLabel: "Previous",
			playLabel: "Play",
			pauseLabel: "Pause",
			closeLabel: "Close",
			randomStart: !1,
			timer: 'Pie',
			timerBg: '#000',
			timerColor: '#EEE',
			timerOpacity: 0.5,
			timerDiameter: 30,
			timerPadding: 4,
			timerStroke: 3,
			timerBarStroke: 1,
			timerBarStrokeColor: '#EEE',
			timerBarStrokeStyle: 'solid',
			timerPosition: 'top-right',
			timerX: 10,
			timerY: 10,
			tooltipX: 5,
			tooltipY: -5,
			onBeforeChange: function() {},
			onAfterChange: function() {},
			onAfterLoad: function() {},
			onLastSlide: function() {},
			onSlideShowEnd: function() {},
			onPause: function() {},
			onPlay: function() {}
		}, options);
		$(this).each(function() {
			var el = $(this);
			new iView(el, options)
		})
	};
	$.fn.reverse = [].reverse;
	var elems = $([]),
		jq_resize = $.resize = $.extend($.resize, {}),
		timeout_id, str_setTimeout = "setTimeout",
		str_resize = "resize",
		str_data = str_resize + "-special-event",
		str_delay = "delay",
		str_throttle = "throttleWindow";
	jq_resize[str_delay] = 250;
	jq_resize[str_throttle] = !0;
	$.event.special[str_resize] = {
		setup: function() {
			if (!jq_resize[str_throttle] && this[str_setTimeout]) {
				return !1
			}
			var elem = $(this);
			elems = elems.add(elem);
			$.data(this, str_data, {
				w: elem.width(),
				h: elem.height()
			});
			if (elems.length === 1) {
				loopy()
			}
		},
		teardown: function() {
			if (!jq_resize[str_throttle] && this[str_setTimeout]) {
				return !1
			}
			var elem = $(this);
			elems = elems.not(elem);
			elem.removeData(str_data);
			if (!elems.length) {
				clearTimeout(timeout_id)
			}
		},
		add: function(handleObj) {
			if (!jq_resize[str_throttle] && this[str_setTimeout]) {
				return !1
			}
			var old_handler;

			function new_handler(e, w, h) {
				var elem = $(this),
					data = $.data(this, str_data);
				if (data !== undefined) {
					data.w = w !== undefined ? w : elem.width();
					data.h = h !== undefined ? h : elem.height()
				}
				old_handler.apply(this, arguments)
			}
			if ($.isFunction(handleObj)) {
				old_handler = handleObj;
				return new_handler
			} else {
				old_handler = handleObj.handler;
				handleObj.handler = new_handler
			}
		}
	};

	function loopy() {
		timeout_id = window[str_setTimeout](function() {
			elems.each(function() {
				var elem = $(this),
					width = elem.width(),
					height = elem.height(),
					data = $.data(this, str_data);
				if (width !== data.w || height !== data.h) {
					elem.trigger(str_resize, [data.w = width, data.h = height])
				}
			});
			loopy()
		}, jq_resize[str_delay])
	}
	var supportTouch = !!('ontouchstart' in window),
		touchStartEvent = supportTouch ? "touchstart" : "mousedown",
		touchStopEvent = supportTouch ? "touchend" : "mouseup",
		touchMoveEvent = supportTouch ? "touchmove" : "mousemove";
	$.event.special.swipe = {
		scrollSupressionThreshold: 10,
		durationThreshold: 1000,
		horizontalDistanceThreshold: 30,
		verticalDistanceThreshold: 75,
		setup: function() {
			var thisObject = this,
				$this = $(thisObject);
			$this.bind(touchStartEvent, function(event) {
				var data = event.originalEvent.touches ? event.originalEvent.touches[0] : event,
					start = {
						time: (new Date()).getTime(),
						coords: [data.pageX, data.pageY],
						origin: $(event.target)
					},
					stop;

				function moveHandler(event) {
					if (!start) {
						return
					}
					var data = event.originalEvent.touches ? event.originalEvent.touches[0] : event;
					stop = {
						time: (new Date()).getTime(),
						coords: [data.pageX, data.pageY]
					};
					if (Math.abs(start.coords[0] - stop.coords[0]) > $.event.special.swipe.scrollSupressionThreshold) {
						event.preventDefault()
					}
				}
				$this.bind(touchMoveEvent, moveHandler).one(touchStopEvent, function(event) {
					$this.unbind(touchMoveEvent, moveHandler);
					if (start && stop) {
						if (stop.time - start.time < $.event.special.swipe.durationThreshold && Math.abs(start.coords[0] - stop.coords[0]) > $.event.special.swipe.horizontalDistanceThreshold && Math.abs(start.coords[1] - stop.coords[1]) < $.event.special.swipe.verticalDistanceThreshold) {
							start.origin.trigger("swipe").trigger(start.coords[0] > stop.coords[0] ? "swipeleft" : "swiperight")
						}
					}
					start = stop = undefined
				})
			})
		}
	};
	$.each({
		swipeleft: "swipe",
		swiperight: "swipe"
	}, function(event, sourceEvent) {
		$.event.special[event] = {
			setup: function() {
				$(this).bind(sourceEvent, $.noop)
			}
		}
	})
})(jQuery, this);
$(document).ready(function() {
	if (typeof(leoslideshow_list_functions) != 'undefined') {
		for (var i = 0; i < leoslideshow_list_functions.length; i++) {
			leoslideshow_list_functions[i]()
		}
	}
});
(function() {
	var t = [].indexOf || function(t) {
			for (var e = 0, n = this.length; e < n; e++) {
				if (e in this && this[e] === t)
					return e
			}
			return -1
		},
		e = [].slice;
	(function(t, e) {
		if (typeof define === "function" && define.amd) {
			return define("waypoints", ["../../../../."], function(n) {
				return e(n, t)
			})
		} else {
			return e(t.jQuery, t)
		}
	})(this, function(n, r) {
		var i, o, l, s, f, u, a, c, h, d, p, y, v, w, g, m;
		i = n(r);
		c = t.call(r, "ontouchstart") >= 0;
		s = {
			horizontal: {},
			vertical: {}
		};
		f = 1;
		a = {};
		u = "waypoints-context-id";
		p = "resize.waypoints";
		y = "scroll.waypoints";
		v = 1;
		w = "waypoints-waypoint-ids";
		g = "waypoint";
		m = "waypoints";
		o = function() {
			function t(t) {
				var e = this;
				this.$element = t;
				this.element = t[0];
				this.didResize = !1;
				this.didScroll = !1;
				this.id = "context" + f++;
				this.oldScroll = {
					x: t.scrollLeft(),
					y: t.scrollTop()
				};
				this.waypoints = {
					horizontal: {},
					vertical: {}
				};
				t.data(u, this.id);
				a[this.id] = this;
				t.bind(y, function() {
					var t;
					if (!(e.didScroll || c)) {
						e.didScroll = !0;
						t = function() {
							e.doScroll();
							return e.didScroll = !1
						};
						return r.setTimeout(t, n[m].settings.scrollThrottle)
					}
				});
				t.bind(p, function() {
					var t;
					if (!e.didResize) {
						e.didResize = !0;
						t = function() {
							n[m]("refresh");
							return e.didResize = !1
						};
						return r.setTimeout(t, n[m].settings.resizeThrottle)
					}
				})
			}
			t.prototype.doScroll = function() {
				var t, e = this;
				t = {
					horizontal: {
						newScroll: this.$element.scrollLeft(),
						oldScroll: this.oldScroll.x,
						forward: "right",
						backward: "left"
					},
					vertical: {
						newScroll: this.$element.scrollTop(),
						oldScroll: this.oldScroll.y,
						forward: "down",
						backward: "up"
					}
				};
				if (c && (!t.vertical.oldScroll || !t.vertical.newScroll)) {
					n[m]("refresh")
				}
				n.each(t, function(t, r) {
					var i, o, l;
					l = [];
					o = r.newScroll > r.oldScroll;
					i = o ? r.forward : r.backward;
					n.each(e.waypoints[t], function(t, e) {
						var n, i;
						if (r.oldScroll < (n = e.offset) && n <= r.newScroll) {
							return l.push(e)
						} else if (r.newScroll < (i = e.offset) && i <= r.oldScroll) {
							return l.push(e)
						}
					});
					l.sort(function(t, e) {
						return t.offset - e.offset
					});
					if (!o) {
						l.reverse()
					}
					return n.each(l, function(t, e) {
						if (e.options.continuous || t === l.length - 1) {
							return e.trigger([i])
						}
					})
				});
				return this.oldScroll = {
					x: t.horizontal.newScroll,
					y: t.vertical.newScroll
				}
			};
			t.prototype.refresh = function() {
				var t, e, r, i = this;
				r = n.isWindow(this.element);
				e = this.$element.offset();
				this.doScroll();
				t = {
					horizontal: {
						contextOffset: r ? 0 : e.left,
						contextScroll: r ? 0 : this.oldScroll.x,
						contextDimension: this.$element.width(),
						oldScroll: this.oldScroll.x,
						forward: "right",
						backward: "left",
						offsetProp: "left"
					},
					vertical: {
						contextOffset: r ? 0 : e.top,
						contextScroll: r ? 0 : this.oldScroll.y,
						contextDimension: r ? n[m]("viewportHeight") : this.$element.height(),
						oldScroll: this.oldScroll.y,
						forward: "down",
						backward: "up",
						offsetProp: "top"
					}
				};
				return n.each(t, function(t, e) {
					return n.each(i.waypoints[t], function(t, r) {
						var i, o, l, s, f;
						i = r.options.offset;
						l = r.offset;
						o = n.isWindow(r.element) ? 0 : r.$element.offset()[e.offsetProp];
						if (n.isFunction(i)) {
							i = i.apply(r.element)
						} else if (typeof i === "string") {
							i = parseFloat(i);
							if (r.options.offset.indexOf("%") > -1) {
								i = Math.ceil(e.contextDimension * i / 100)
							}
						}
						r.offset = o - e.contextOffset + e.contextScroll - i;
						if (r.options.onlyOnScroll && l != null || !r.enabled) {
							return
						}
						if (l !== null && l < (s = e.oldScroll) && s <= r.offset) {
							return r.trigger([e.backward])
						} else if (l !== null && l > (f = e.oldScroll) && f >= r.offset) {
							return r.trigger([e.forward])
						} else if (l === null && e.oldScroll >= r.offset) {
							return r.trigger([e.forward])
						}
					})
				})
			};
			t.prototype.checkEmpty = function() {
				if (n.isEmptyObject(this.waypoints.horizontal) && n.isEmptyObject(this.waypoints.vertical)) {
					this.$element.unbind([p, y].join(" "));
					return delete a[this.id]
				}
			};
			return t
		}();
		l = function() {
			function t(t, e, r) {
				var i, o;
				r = n.extend({}, n.fn[g].defaults, r);
				if (r.offset === "bottom-in-view") {
					r.offset = function() {
						var t;
						t = n[m]("viewportHeight");
						if (!n.isWindow(e.element)) {
							t = e.$element.height()
						}
						return t - n(this).outerHeight()
					}
				}
				this.$element = t;
				this.element = t[0];
				this.axis = r.horizontal ? "horizontal" : "vertical";
				this.callback = r.handler;
				this.context = e;
				this.enabled = r.enabled;
				this.id = "waypoints" + v++;
				this.offset = null;
				this.options = r;
				e.waypoints[this.axis][this.id] = this;
				s[this.axis][this.id] = this;
				i = (o = t.data(w)) != null ? o : [];
				i.push(this.id);
				t.data(w, i)
			}
			t.prototype.trigger = function(t) {
				if (!this.enabled) {
					return
				}
				if (this.callback != null) {
					this.callback.apply(this.element, t)
				}
				if (this.options.triggerOnce) {
					return this.destroy()
				}
			};
			t.prototype.disable = function() {
				return this.enabled = !1
			};
			t.prototype.enable = function() {
				this.context.refresh();
				return this.enabled = !0
			};
			t.prototype.destroy = function() {
				delete s[this.axis][this.id];
				delete this.context.waypoints[this.axis][this.id];
				return this.context.checkEmpty()
			};
			t.getWaypointsByElement = function(t) {
				var e, r;
				r = n(t).data(w);
				if (!r) {
					return []
				}
				e = n.extend({}, s.horizontal, s.vertical);
				return n.map(r, function(t) {
					return e[t]
				})
			};
			return t
		}();
		d = {
			init: function(t, e) {
				var r;
				if (e == null) {
					e = {}
				}
				if ((r = e.handler) == null) {
					e.handler = t
				}
				this.each(function() {
					var t, r, i, s;
					t = n(this);
					i = (s = e.context) != null ? s : n.fn[g].defaults.context;
					if (!n.isWindow(i)) {
						i = t.closest(i)
					}
					i = n(i);
					r = a[i.data(u)];
					if (!r) {
						r = new o(i)
					}
					return new l(t, r, e)
				});
				n[m]("refresh");
				return this
			},
			disable: function() {
				return d._invoke(this, "disable")
			},
			enable: function() {
				return d._invoke(this, "enable")
			},
			destroy: function() {
				return d._invoke(this, "destroy")
			},
			prev: function(t, e) {
				return d._traverse.call(this, t, e, function(t, e, n) {
					if (e > 0) {
						return t.push(n[e - 1])
					}
				})
			},
			next: function(t, e) {
				return d._traverse.call(this, t, e, function(t, e, n) {
					if (e < n.length - 1) {
						return t.push(n[e + 1])
					}
				})
			},
			_traverse: function(t, e, i) {
				var o, l;
				if (t == null) {
					t = "vertical"
				}
				if (e == null) {
					e = r
				}
				l = h.aggregate(e);
				o = [];
				this.each(function() {
					var e;
					e = n.inArray(this, l[t]);
					return i(o, e, l[t])
				});
				return this.pushStack(o)
			},
			_invoke: function(t, e) {
				t.each(function() {
					var t;
					t = l.getWaypointsByElement(this);
					return n.each(t, function(t, n) {
						n[e]();
						return !0
					})
				});
				return this
			}
		};
		n.fn[g] = function() {
			var t, r;
			r = arguments[0], t = 2 <= arguments.length ? e.call(arguments, 1) : [];
			if (d[r]) {
				return d[r].apply(this, t)
			} else if (n.isFunction(r)) {
				return d.init.apply(this, arguments)
			} else if (n.isPlainObject(r)) {
				return d.init.apply(this, [null, r])
			} else if (!r) {
				return n.error("jQuery Waypoints needs a callback function or handler option.")
			} else {
				return n.error("The " + r + " method does not exist in jQuery Waypoints.")
			}
		};
		n.fn[g].defaults = {
			context: r,
			continuous: !0,
			enabled: !0,
			horizontal: !1,
			offset: 0,
			triggerOnce: !1
		};
		h = {
			refresh: function() {
				return n.each(a, function(t, e) {
					return e.refresh()
				})
			},
			viewportHeight: function() {
				var t;
				return (t = r.innerHeight) != null ? t : i.height()
			},
			aggregate: function(t) {
				var e, r, i;
				e = s;
				if (t) {
					e = (i = a[n(t).data(u)]) != null ? i.waypoints : void 0
				}
				if (!e) {
					return []
				}
				r = {
					horizontal: [],
					vertical: []
				};
				n.each(r, function(t, i) {
					n.each(e[t], function(t, e) {
						return i.push(e)
					});
					i.sort(function(t, e) {
						return t.offset - e.offset
					});
					r[t] = n.map(i, function(t) {
						return t.element
					});
					return r[t] = n.unique(r[t])
				});
				return r
			},
			above: function(t) {
				if (t == null) {
					t = r
				}
				return h._filter(t, "vertical", function(t, e) {
					return e.offset <= t.oldScroll.y
				})
			},
			below: function(t) {
				if (t == null) {
					t = r
				}
				return h._filter(t, "vertical", function(t, e) {
					return e.offset > t.oldScroll.y
				})
			},
			left: function(t) {
				if (t == null) {
					t = r
				}
				return h._filter(t, "horizontal", function(t, e) {
					return e.offset <= t.oldScroll.x
				})
			},
			right: function(t) {
				if (t == null) {
					t = r
				}
				return h._filter(t, "horizontal", function(t, e) {
					return e.offset > t.oldScroll.x
				})
			},
			enable: function() {
				return h._invoke("enable")
			},
			disable: function() {
				return h._invoke("disable")
			},
			destroy: function() {
				return h._invoke("destroy")
			},
			extendFn: function(t, e) {
				return d[t] = e
			},
			_invoke: function(t) {
				var e;
				e = n.extend({}, s.vertical, s.horizontal);
				return n.each(e, function(e, n) {
					n[t]();
					return !0
				})
			},
			_filter: function(t, e, r) {
				var i, o;
				i = a[n(t).data(u)];
				if (!i) {
					return []
				}
				o = [];
				n.each(i.waypoints[e], function(t, e) {
					if (r(i, e)) {
						return o.push(e)
					}
				});
				o.sort(function(t, e) {
					return t.offset - e.offset
				});
				return n.map(o, function(t) {
					return t.element
				})
			}
		};
		n[m] = function() {
			var t, n;
			n = arguments[0], t = 2 <= arguments.length ? e.call(arguments, 1) : [];
			if (h[n]) {
				return h[n].apply(null, t)
			} else {
				return h.aggregate.call(null, n)
			}
		};
		n[m].settings = {
			resizeThrottle: 100,
			scrollThrottle: 30
		};
		return i.load(function() {
			return n[m]("refresh")
		})
	})
}).call(this);
(function() {
	var e;
	e = function() {
		function e(e, t) {
			var n, r;
			this.options = {
				target: "instafeed",
				get: "popular",
				resolution: "thumbnail",
				sortBy: "none",
				links: !0,
				mock: !1,
				useHttp: !1
			};
			if (typeof e == "object")
				for (n in e)
					r = e[n], this.options[n] = r;
			this.context = t != null ? t : this, this.unique = this._genKey()
		}
		return e.prototype.hasNext = function() {
			return typeof this.context.nextUrl == "string" && this.context.nextUrl.length > 0
		}, e.prototype.next = function() {
			return this.hasNext() ? this.run(this.context.nextUrl) : !1
		}, e.prototype.run = function(t) {
			var n, r, i;
			if (typeof this.options.clientId != "string" && typeof this.options.accessToken != "string")
				throw new Error("Missing clientId or accessToken.");
			if (typeof this.options.accessToken != "string" && typeof this.options.clientId != "string")
				throw new Error("Missing clientId or accessToken.");
			return this.options.before != null && typeof this.options.before == "function" && this.options.before.call(this), typeof document != "undefined" && document !== null && (i = document.createElement("script"), i.id = "instafeed-fetcher", i.src = t || this._buildUrl(), n = document.getElementsByTagName("head"), n[0].appendChild(i), r = "instafeedCache" + this.unique, window[r] = new e(this.options, this), window[r].unique = this.unique), !0
		}, e.prototype.parse = function(e) {
			var t, n, r, i, s, o, u, a, f, l, c, h, p, d, v, m, g, y, b, w, E, S, x, T, N, C, k, L, A, O, M, _, D;
			if (typeof e != "object") {
				if (this.options.error != null && typeof this.options.error == "function")
					return this.options.error.call(this, "Invalid JSON data"), !1;
				throw new Error("Invalid JSON response")
			}
			if (e.meta.code !== 200) {
				if (this.options.error != null && typeof this.options.error == "function")
					return this.options.error.call(this, e.meta.error_message), !1;
				throw new Error("Error from Instagram: " + e.meta.error_message)
			}
			if (e.data.length === 0) {
				if (this.options.error != null && typeof this.options.error == "function")
					return this.options.error.call(this, "No images were returned from Instagram"), !1;
				throw new Error("No images were returned from Instagram")
			}
			this.options.success != null && typeof this.options.success == "function" && this.options.success.call(this, e), this.context.nextUrl = "", e.pagination != null && (this.context.nextUrl = e.pagination.next_url);
			if (this.options.sortBy !== "none") {
				this.options.sortBy === "random" ? M = ["", "random"] : M = this.options.sortBy.split("-"), O = M[0] === "least" ? !0 : !1;
				switch (M[1]) {
					case "random":
						e.data.sort(function() {
							return .5 - Math.random()
						});
						break;
					case "recent":
						e.data = this._sortBy(e.data, "created_time", O);
						break;
					case "liked":
						e.data = this._sortBy(e.data, "likes.count", O);
						break;
					case "commented":
						e.data = this._sortBy(e.data, "comments.count", O);
						break;
					default:
						throw new Error("Invalid option for sortBy: '" + this.options.sortBy + "'.")
				}
			}
			if (typeof document != "undefined" && document !== null && this.options.mock === !1) {
				m = e.data, A = parseInt(this.options.limit, 10), this.options.limit != null && m.length > A && (m = m.slice(0, A)), u = document.createDocumentFragment(), this.options.filter != null && typeof this.options.filter == "function" && (m = this._filter(m, this.options.filter));
				if (this.options.template != null && typeof this.options.template == "string") {
					f = "", d = "", w = "", D = document.createElement("div");
					for (c = 0, N = m.length; c < N; c++) {
						h = m[c], p = h.images[this.options.resolution];
						if (typeof p != "object")
							throw o = "No image found for resolution: " + this.options.resolution + ".", new Error(o);
						E = p.width, y = p.height, b = "square", E > y && (b = "landscape"), E < y && (b = "portrait"), v = p.url, l = window.location.protocol.indexOf("http") >= 0, l && !this.options.useHttp && (v = v.replace(/https?:\/\//, "//")), d = this._makeTemplate(this.options.template, {
							model: h,
							id: h.id,
							link: h.link,
							type: h.type,
							image: v,
							width: E,
							height: y,
							orientation: b,
							caption: this._getObjectProperty(h, "caption.text"),
							likes: h.likes.count,
							comments: h.comments.count,
							location: this._getObjectProperty(h, "location.name")
						}), f += d
					}
					D.innerHTML = f, i = [], r = 0, n = D.childNodes.length;
					while (r < n)
						i.push(D.childNodes[r]), r += 1;
					for (x = 0, C = i.length; x < C; x++)
						L = i[x], u.appendChild(L)
				} else
					for (T = 0, k = m.length; T < k; T++) {
						h = m[T], g = document.createElement("img"), p = h.images[this.options.resolution];
						if (typeof p != "object")
							throw o = "No image found for resolution: " + this.options.resolution + ".", new Error(o);
						v = p.url, l = window.location.protocol.indexOf("http") >= 0, l && !this.options.useHttp && (v = v.replace(/https?:\/\//, "//")), g.src = v, this.options.links === !0 ? (t = document.createElement("a"), t.href = h.link, t.appendChild(g), u.appendChild(t)) : (t = document.createElement("a"), t.href = this.options.links, t.appendChild(g), u.appendChild(t))
					}
				_ = this.options.target, typeof _ == "string" && (_ = document.getElementById(_));
				if (_ == null)
					throw o = 'No element with id="' + this.options.target + '" on page.', new Error(o);
				_.appendChild(u), a = document.getElementsByTagName("head")[0], a.removeChild(document.getElementById("instafeed-fetcher")), S = "instafeedCache" + this.unique, window[S] = void 0;
				try {
					delete window[S]
				} catch (P) {
					s = P
				}
			}
			return this.options.after != null && typeof this.options.after == "function" && this.options.after.call(this), !0
		}, e.prototype._buildUrl = function() {
			var e, t, n;
			e = "https://api.instagram.com/v1";
			switch (this.options.get) {
				case "popular":
					t = "media/popular";
					break;
				case "tagged":
					if (!this.options.tagName)
						throw new Error("No tag name specified. Use the 'tagName' option.");
					t = "tags/" + this.options.tagName + "/media/recent";
					break;
				case "location":
					if (!this.options.locationId)
						throw new Error("No location specified. Use the 'locationId' option.");
					t = "locations/" + this.options.locationId + "/media/recent";
					break;
				case "user":
					if (!this.options.userId)
						throw new Error("No user specified. Use the 'userId' option.");
					t = "users/" + this.options.userId + "/media/recent";
					break;
				default:
					throw new Error("Invalid option for get: '" + this.options.get + "'.")
			}
			return n = e + "/" + t, this.options.accessToken != null ? n += "?access_token=" + this.options.accessToken : n += "?client_id=" + this.options.clientId, this.options.limit != null && (n += "&count=" + this.options.limit), n += "&callback=instafeedCache" + this.unique + ".parse", n
		}, e.prototype._genKey = function() {
			var e;
			return e = function() {
				return ((1 + Math.random()) * 65536 | 0).toString(16).substring(1)
			}, "" + e() + e() + e() + e()
		}, e.prototype._makeTemplate = function(e, t) {
			var n, r, i, s, o;
			r = /(?:\{{2})([\w\[\]\.]+)(?:\}{2})/, n = e;
			while (r.test(n))
				s = n.match(r)[1], o = (i = this._getObjectProperty(t, s)) != null ? i : "", n = n.replace(r, function() {
					return "" + o
				});
			return n
		}, e.prototype._getObjectProperty = function(e, t) {
			var n, r;
			t = t.replace(/\[(\w+)\]/g, ".$1"), r = t.split(".");
			while (r.length) {
				n = r.shift();
				if (!(e != null && n in e))
					return null;
				e = e[n]
			}
			return e
		}, e.prototype._sortBy = function(e, t, n) {
			var r;
			return r = function(e, r) {
				var i, s;
				return i = this._getObjectProperty(e, t), s = this._getObjectProperty(r, t), n ? i > s ? 1 : -1 : i < s ? 1 : -1
			}, e.sort(r.bind(this)), e
		}, e.prototype._filter = function(e, t) {
			var n, r, i, s, o;
			n = [], r = function(e) {
				if (t(e))
					return n.push(e)
			};
			for (i = 0, o = e.length; i < o; i++)
				s = e[i], r(s);
			return n
		}, e
	}(),
		function(e, t) {
			return typeof define == "function" && define.amd ? define([], t) : typeof module == "object" && module.exports ? module.exports = t() : e.Instafeed = t()
		}(this, function() {
			return e
		})
}).call(this);
(function($, window, document, undefined) {
	var pluginName = 'stellar',
		defaults = {
			scrollProperty: 'scroll',
			positionProperty: 'position',
			horizontalScrolling: !0,
			verticalScrolling: !0,
			horizontalOffset: 0,
			verticalOffset: 0,
			responsive: !1,
			parallaxBackgrounds: !0,
			parallaxElements: !0,
			hideDistantElements: !0,
			hideElement: function($elem) {
				$elem.hide()
			},
			showElement: function($elem) {
				$elem.show()
			}
		},
		scrollProperty = {
			scroll: {
				getLeft: function($elem) {
					return $elem.scrollLeft()
				},
				setLeft: function($elem, val) {
					$elem.scrollLeft(val)
				},
				getTop: function($elem) {
					return $elem.scrollTop()
				},
				setTop: function($elem, val) {
					$elem.scrollTop(val)
				}
			},
			position: {
				getLeft: function($elem) {
					return parseInt($elem.css('left'), 10) * -1
				},
				getTop: function($elem) {
					return parseInt($elem.css('top'), 10) * -1
				}
			},
			margin: {
				getLeft: function($elem) {
					return parseInt($elem.css('margin-left'), 10) * -1
				},
				getTop: function($elem) {
					return parseInt($elem.css('margin-top'), 10) * -1
				}
			},
			transform: {
				getLeft: function($elem) {
					var computedTransform = getComputedStyle($elem[0])[prefixedTransform];
					return (computedTransform !== 'none' ? parseInt(computedTransform.match(/(-?[0-9]+)/g)[4], 10) * -1 : 0)
				},
				getTop: function($elem) {
					var computedTransform = getComputedStyle($elem[0])[prefixedTransform];
					return (computedTransform !== 'none' ? parseInt(computedTransform.match(/(-?[0-9]+)/g)[5], 10) * -1 : 0)
				}
			}
		},
		positionProperty = {
			position: {
				setLeft: function($elem, left) {
					$elem.css('left', left)
				},
				setTop: function($elem, top) {
					$elem.css('top', top)
				}
			},
			transform: {
				setPosition: function($elem, left, startingLeft, top, startingTop) {
					$elem[0].style[prefixedTransform] = 'translate3d(' + (left - startingLeft) + 'px, ' + (top - startingTop) + 'px, 0)'
				}
			}
		},
		vendorPrefix = (function() {
			var prefixes = /^(Moz|Webkit|Khtml|O|ms|Icab)(?=[A-Z])/,
				style = $('script')[0].style,
				prefix = '',
				prop;
			for (prop in style) {
				if (prefixes.test(prop)) {
					prefix = prop.match(prefixes)[0];
					break
				}
			}
			if ('WebkitOpacity' in style) {
				prefix = 'Webkit'
			}
			if ('KhtmlOpacity' in style) {
				prefix = 'Khtml'
			}
			return function(property) {
				return prefix + (prefix.length > 0 ? property.charAt(0).toUpperCase() + property.slice(1) : property)
			}
		}()),
		prefixedTransform = vendorPrefix('transform'),
		supportsBackgroundPositionXY = $('<div />', {
			style: 'background:#fff'
		}).css('background-position-x') !== undefined,
		setBackgroundPosition = (supportsBackgroundPositionXY ? function($elem, x, y) {
			$elem.css({
				'background-position-x': x,
				'background-position-y': y
			})
		} : function($elem, x, y) {
			$elem.css('background-position', x + ' ' + y)
		}),
		getBackgroundPosition = (supportsBackgroundPositionXY ? function($elem) {
			return [$elem.css('background-position-x'), $elem.css('background-position-y')]
		} : function($elem) {
			return $elem.css('background-position').split(' ')
		}),
		requestAnimFrame = (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback) {
			setTimeout(callback, 1000 / 60)
		});

	function Plugin(element, options) {
		this.element = element;
		this.options = $.extend({}, defaults, options);
		this._defaults = defaults;
		this._name = pluginName;
		this.init()
	}
	Plugin.prototype = {
		init: function() {
			this.options.name = pluginName + '_' + Math.floor(Math.random() * 1e9);
			this._defineElements();
			this._defineGetters();
			this._defineSetters();
			this._handleWindowLoadAndResize();
			this._detectViewport();
			this.refresh({
				firstLoad: !0
			});
			if (this.options.scrollProperty === 'scroll') {
				this._handleScrollEvent()
			} else {
				this._startAnimationLoop()
			}
		},
		_defineElements: function() {
			if (this.element === document.body) this.element = window;
			this.$scrollElement = $(this.element);
			this.$element = (this.element === window ? $('body') : this.$scrollElement);
			this.$viewportElement = (this.options.viewportElement !== undefined ? $(this.options.viewportElement) : (this.$scrollElement[0] === window || this.options.scrollProperty === 'scroll' ? this.$scrollElement : this.$scrollElement.parent()))
		},
		_defineGetters: function() {
			var self = this,
				scrollPropertyAdapter = scrollProperty[self.options.scrollProperty];
			this._getScrollLeft = function() {
				return scrollPropertyAdapter.getLeft(self.$scrollElement)
			};
			this._getScrollTop = function() {
				return scrollPropertyAdapter.getTop(self.$scrollElement)
			}
		},
		_defineSetters: function() {
			var self = this,
				scrollPropertyAdapter = scrollProperty[self.options.scrollProperty],
				positionPropertyAdapter = positionProperty[self.options.positionProperty],
				setScrollLeft = scrollPropertyAdapter.setLeft,
				setScrollTop = scrollPropertyAdapter.setTop;
			this._setScrollLeft = (typeof setScrollLeft === 'function' ? function(val) {
				setScrollLeft(self.$scrollElement, val)
			} : $.noop);
			this._setScrollTop = (typeof setScrollTop === 'function' ? function(val) {
				setScrollTop(self.$scrollElement, val)
			} : $.noop);
			this._setPosition = positionPropertyAdapter.setPosition || function($elem, left, startingLeft, top, startingTop) {
				if (self.options.horizontalScrolling) {
					positionPropertyAdapter.setLeft($elem, left, startingLeft)
				}
				if (self.options.verticalScrolling) {
					positionPropertyAdapter.setTop($elem, top, startingTop)
				}
			}
		},
		_handleWindowLoadAndResize: function() {
			var self = this,
				$window = $(window);
			if (self.options.responsive) {
				$window.bind('load.' + this.name, function() {
					self.refresh()
				})
			}
			$window.bind('resize.' + this.name, function() {
				self._detectViewport();
				if (self.options.responsive) {
					self.refresh()
				}
			})
		},
		refresh: function(options) {
			var self = this,
				oldLeft = self._getScrollLeft(),
				oldTop = self._getScrollTop();
			if (!options || !options.firstLoad) {
				this._reset()
			}
			this._setScrollLeft(0);
			this._setScrollTop(0);
			this._setOffsets();
			this._findParticles();
			this._findBackgrounds();
			if (options && options.firstLoad && /WebKit/.test(navigator.userAgent)) {
				$(window).load(function() {
					var oldLeft = self._getScrollLeft(),
						oldTop = self._getScrollTop();
					self._setScrollLeft(oldLeft + 1);
					self._setScrollTop(oldTop + 1);
					self._setScrollLeft(oldLeft);
					self._setScrollTop(oldTop)
				})
			}
			this._setScrollLeft(oldLeft);
			this._setScrollTop(oldTop)
		},
		_detectViewport: function() {
			var viewportOffsets = this.$viewportElement.offset(),
				hasOffsets = viewportOffsets !== null && viewportOffsets !== undefined;
			this.viewportWidth = this.$viewportElement.width();
			this.viewportHeight = this.$viewportElement.height();
			this.viewportOffsetTop = (hasOffsets ? viewportOffsets.top : 0);
			this.viewportOffsetLeft = (hasOffsets ? viewportOffsets.left : 0)
		},
		_findParticles: function() {
			var self = this,
				scrollLeft = this._getScrollLeft(),
				scrollTop = this._getScrollTop();
			if (this.particles !== undefined) {
				for (var i = this.particles.length - 1; i >= 0; i--) {
					this.particles[i].$element.data('stellar-elementIsActive', undefined)
				}
			}
			this.particles = [];
			if (!this.options.parallaxElements) return;
			this.$element.find('[data-stellar-ratio]').each(function(i) {
				var $this = $(this),
					horizontalOffset, verticalOffset, positionLeft, positionTop, marginLeft, marginTop, $offsetParent, offsetLeft, offsetTop, parentOffsetLeft = 0,
					parentOffsetTop = 0,
					tempParentOffsetLeft = 0,
					tempParentOffsetTop = 0;
				if (!$this.data('stellar-elementIsActive')) {
					$this.data('stellar-elementIsActive', this)
				} else if ($this.data('stellar-elementIsActive') !== this) {
					return
				}
				self.options.showElement($this);
				if (!$this.data('stellar-startingLeft')) {
					$this.data('stellar-startingLeft', $this.css('left'));
					$this.data('stellar-startingTop', $this.css('top'))
				} else {
					$this.css('left', $this.data('stellar-startingLeft'));
					$this.css('top', $this.data('stellar-startingTop'))
				}
				positionLeft = $this.position().left;
				positionTop = $this.position().top;
				marginLeft = ($this.css('margin-left') === 'auto') ? 0 : parseInt($this.css('margin-left'), 10);
				marginTop = ($this.css('margin-top') === 'auto') ? 0 : parseInt($this.css('margin-top'), 10);
				offsetLeft = $this.offset().left - marginLeft;
				offsetTop = $this.offset().top - marginTop;
				$this.parents().each(function() {
					var $this = $(this);
					if ($this.data('stellar-offset-parent') === !0) {
						parentOffsetLeft = tempParentOffsetLeft;
						parentOffsetTop = tempParentOffsetTop;
						$offsetParent = $this;
						return !1
					} else {
						tempParentOffsetLeft += $this.position().left;
						tempParentOffsetTop += $this.position().top
					}
				});
				horizontalOffset = ($this.data('stellar-horizontal-offset') !== undefined ? $this.data('stellar-horizontal-offset') : ($offsetParent !== undefined && $offsetParent.data('stellar-horizontal-offset') !== undefined ? $offsetParent.data('stellar-horizontal-offset') : self.horizontalOffset));
				verticalOffset = ($this.data('stellar-vertical-offset') !== undefined ? $this.data('stellar-vertical-offset') : ($offsetParent !== undefined && $offsetParent.data('stellar-vertical-offset') !== undefined ? $offsetParent.data('stellar-vertical-offset') : self.verticalOffset));
				self.particles.push({
					$element: $this,
					$offsetParent: $offsetParent,
					isFixed: $this.css('position') === 'fixed',
					horizontalOffset: horizontalOffset,
					verticalOffset: verticalOffset,
					startingPositionLeft: positionLeft,
					startingPositionTop: positionTop,
					startingOffsetLeft: offsetLeft,
					startingOffsetTop: offsetTop,
					parentOffsetLeft: parentOffsetLeft,
					parentOffsetTop: parentOffsetTop,
					stellarRatio: ($this.data('stellar-ratio') !== undefined ? $this.data('stellar-ratio') : 1),
					width: $this.outerWidth(!0),
					height: $this.outerHeight(!0),
					isHidden: !1
				})
			})
		},
		_findBackgrounds: function() {
			var self = this,
				scrollLeft = this._getScrollLeft(),
				scrollTop = this._getScrollTop(),
				$backgroundElements;
			this.backgrounds = [];
			if (!this.options.parallaxBackgrounds) return;
			$backgroundElements = this.$element.find('[data-stellar-background-ratio]');
			if (this.$element.data('stellar-background-ratio')) {
				$backgroundElements = $backgroundElements.add(this.$element)
			}
			$backgroundElements.each(function() {
				var $this = $(this),
					backgroundPosition = getBackgroundPosition($this),
					horizontalOffset, verticalOffset, positionLeft, positionTop, marginLeft, marginTop, offsetLeft, offsetTop, $offsetParent, parentOffsetLeft = 0,
					parentOffsetTop = 0,
					tempParentOffsetLeft = 0,
					tempParentOffsetTop = 0;
				if (!$this.data('stellar-backgroundIsActive')) {
					$this.data('stellar-backgroundIsActive', this)
				} else if ($this.data('stellar-backgroundIsActive') !== this) {
					return
				}
				if (!$this.data('stellar-backgroundStartingLeft')) {
					$this.data('stellar-backgroundStartingLeft', backgroundPosition[0]);
					$this.data('stellar-backgroundStartingTop', backgroundPosition[1])
				} else {
					setBackgroundPosition($this, $this.data('stellar-backgroundStartingLeft'), $this.data('stellar-backgroundStartingTop'))
				}
				marginLeft = ($this.css('margin-left') === 'auto') ? 0 : parseInt($this.css('margin-left'), 10);
				marginTop = ($this.css('margin-top') === 'auto') ? 0 : parseInt($this.css('margin-top'), 10);
				offsetLeft = $this.offset().left - marginLeft - scrollLeft;
				offsetTop = $this.offset().top - marginTop - scrollTop;
				$this.parents().each(function() {
					var $this = $(this);
					if ($this.data('stellar-offset-parent') === !0) {
						parentOffsetLeft = tempParentOffsetLeft;
						parentOffsetTop = tempParentOffsetTop;
						$offsetParent = $this;
						return !1
					} else {
						tempParentOffsetLeft += $this.position().left;
						tempParentOffsetTop += $this.position().top
					}
				});
				horizontalOffset = ($this.data('stellar-horizontal-offset') !== undefined ? $this.data('stellar-horizontal-offset') : ($offsetParent !== undefined && $offsetParent.data('stellar-horizontal-offset') !== undefined ? $offsetParent.data('stellar-horizontal-offset') : self.horizontalOffset));
				verticalOffset = ($this.data('stellar-vertical-offset') !== undefined ? $this.data('stellar-vertical-offset') : ($offsetParent !== undefined && $offsetParent.data('stellar-vertical-offset') !== undefined ? $offsetParent.data('stellar-vertical-offset') : self.verticalOffset));
				self.backgrounds.push({
					$element: $this,
					$offsetParent: $offsetParent,
					isFixed: $this.css('background-attachment') === 'fixed',
					horizontalOffset: horizontalOffset,
					verticalOffset: verticalOffset,
					startingValueLeft: backgroundPosition[0],
					startingValueTop: backgroundPosition[1],
					startingBackgroundPositionLeft: (isNaN(parseInt(backgroundPosition[0], 10)) ? 0 : parseInt(backgroundPosition[0], 10)),
					startingBackgroundPositionTop: (isNaN(parseInt(backgroundPosition[1], 10)) ? 0 : parseInt(backgroundPosition[1], 10)),
					startingPositionLeft: $this.position().left,
					startingPositionTop: $this.position().top,
					startingOffsetLeft: offsetLeft,
					startingOffsetTop: offsetTop,
					parentOffsetLeft: parentOffsetLeft,
					parentOffsetTop: parentOffsetTop,
					stellarRatio: ($this.data('stellar-background-ratio') === undefined ? 1 : $this.data('stellar-background-ratio'))
				})
			})
		},
		_reset: function() {
			var particle, startingPositionLeft, startingPositionTop, background, i;
			for (i = this.particles.length - 1; i >= 0; i--) {
				particle = this.particles[i];
				startingPositionLeft = particle.$element.data('stellar-startingLeft');
				startingPositionTop = particle.$element.data('stellar-startingTop');
				this._setPosition(particle.$element, startingPositionLeft, startingPositionLeft, startingPositionTop, startingPositionTop);
				this.options.showElement(particle.$element);
				particle.$element.data('stellar-startingLeft', null).data('stellar-elementIsActive', null).data('stellar-backgroundIsActive', null)
			}
			for (i = this.backgrounds.length - 1; i >= 0; i--) {
				background = this.backgrounds[i];
				background.$element.data('stellar-backgroundStartingLeft', null).data('stellar-backgroundStartingTop', null);
				setBackgroundPosition(background.$element, background.startingValueLeft, background.startingValueTop)
			}
		},
		destroy: function() {
			this._reset();
			this.$scrollElement.unbind('resize.' + this.name).unbind('scroll.' + this.name);
			this._animationLoop = $.noop;
			$(window).unbind('load.' + this.name).unbind('resize.' + this.name)
		},
		_setOffsets: function() {
			var self = this,
				$window = $(window);
			$window.unbind('resize.horizontal-' + this.name).unbind('resize.vertical-' + this.name);
			if (typeof this.options.horizontalOffset === 'function') {
				this.horizontalOffset = this.options.horizontalOffset();
				$window.bind('resize.horizontal-' + this.name, function() {
					self.horizontalOffset = self.options.horizontalOffset()
				})
			} else {
				this.horizontalOffset = this.options.horizontalOffset
			}
			if (typeof this.options.verticalOffset === 'function') {
				this.verticalOffset = this.options.verticalOffset();
				$window.bind('resize.vertical-' + this.name, function() {
					self.verticalOffset = self.options.verticalOffset()
				})
			} else {
				this.verticalOffset = this.options.verticalOffset
			}
		},
		_repositionElements: function() {
			var scrollLeft = this._getScrollLeft(),
				scrollTop = this._getScrollTop(),
				horizontalOffset, verticalOffset, particle, fixedRatioOffset, background, bgLeft, bgTop, isVisibleVertical = !0,
				isVisibleHorizontal = !0,
				newPositionLeft, newPositionTop, newOffsetLeft, newOffsetTop, i;
			if (this.currentScrollLeft === scrollLeft && this.currentScrollTop === scrollTop && this.currentWidth === this.viewportWidth && this.currentHeight === this.viewportHeight) {
				return
			} else {
				this.currentScrollLeft = scrollLeft;
				this.currentScrollTop = scrollTop;
				this.currentWidth = this.viewportWidth;
				this.currentHeight = this.viewportHeight
			}
			for (i = this.particles.length - 1; i >= 0; i--) {
				particle = this.particles[i];
				fixedRatioOffset = (particle.isFixed ? 1 : 0);
				if (this.options.horizontalScrolling) {
					newPositionLeft = (scrollLeft + particle.horizontalOffset + this.viewportOffsetLeft + particle.startingPositionLeft - particle.startingOffsetLeft + particle.parentOffsetLeft) * -(particle.stellarRatio + fixedRatioOffset - 1) + particle.startingPositionLeft;
					newOffsetLeft = newPositionLeft - particle.startingPositionLeft + particle.startingOffsetLeft
				} else {
					newPositionLeft = particle.startingPositionLeft;
					newOffsetLeft = particle.startingOffsetLeft
				}
				if (this.options.verticalScrolling) {
					newPositionTop = (scrollTop + particle.verticalOffset + this.viewportOffsetTop + particle.startingPositionTop - particle.startingOffsetTop + particle.parentOffsetTop) * -(particle.stellarRatio + fixedRatioOffset - 1) + particle.startingPositionTop;
					newOffsetTop = newPositionTop - particle.startingPositionTop + particle.startingOffsetTop
				} else {
					newPositionTop = particle.startingPositionTop;
					newOffsetTop = particle.startingOffsetTop
				}
				if (this.options.hideDistantElements) {
					isVisibleHorizontal = !this.options.horizontalScrolling || newOffsetLeft + particle.width > (particle.isFixed ? 0 : scrollLeft) && newOffsetLeft < (particle.isFixed ? 0 : scrollLeft) + this.viewportWidth + this.viewportOffsetLeft;
					isVisibleVertical = !this.options.verticalScrolling || newOffsetTop + particle.height > (particle.isFixed ? 0 : scrollTop) && newOffsetTop < (particle.isFixed ? 0 : scrollTop) + this.viewportHeight + this.viewportOffsetTop
				}
				if (isVisibleHorizontal && isVisibleVertical) {
					if (particle.isHidden) {
						this.options.showElement(particle.$element);
						particle.isHidden = !1
					}
					this._setPosition(particle.$element, newPositionLeft, particle.startingPositionLeft, newPositionTop, particle.startingPositionTop)
				} else {
					if (!particle.isHidden) {
						this.options.hideElement(particle.$element);
						particle.isHidden = !0
					}
				}
			}
			for (i = this.backgrounds.length - 1; i >= 0; i--) {
				background = this.backgrounds[i];
				fixedRatioOffset = (background.isFixed ? 0 : 1);
				bgLeft = (this.options.horizontalScrolling ? (scrollLeft + background.horizontalOffset - this.viewportOffsetLeft - background.startingOffsetLeft + background.parentOffsetLeft - background.startingBackgroundPositionLeft) * (fixedRatioOffset - background.stellarRatio) + 'px' : background.startingValueLeft);
				bgTop = (this.options.verticalScrolling ? (scrollTop + background.verticalOffset - this.viewportOffsetTop - background.startingOffsetTop + background.parentOffsetTop - background.startingBackgroundPositionTop) * (fixedRatioOffset - background.stellarRatio) + 'px' : background.startingValueTop);
				setBackgroundPosition(background.$element, bgLeft, bgTop)
			}
		},
		_handleScrollEvent: function() {
			var self = this,
				ticking = !1;
			var update = function() {
				self._repositionElements();
				ticking = !1
			};
			var requestTick = function() {
				if (!ticking) {
					requestAnimFrame(update);
					ticking = !0
				}
			};
			this.$scrollElement.bind('scroll.' + this.name, requestTick);
			requestTick()
		},
		_startAnimationLoop: function() {
			var self = this;
			this._animationLoop = function() {
				requestAnimFrame(self._animationLoop);
				self._repositionElements()
			};
			this._animationLoop()
		}
	};
	$.fn[pluginName] = function(options) {
		var args = arguments;
		if (options === undefined || typeof options === 'object') {
			return this.each(function() {
				if (!$.data(this, 'plugin_' + pluginName)) {
					$.data(this, 'plugin_' + pluginName, new Plugin(this, options))
				}
			})
		} else if (typeof options === 'string' && options[0] !== '_' && options !== 'init') {
			return this.each(function() {
				var instance = $.data(this, 'plugin_' + pluginName);
				if (instance instanceof Plugin && typeof instance[options] === 'function') {
					instance[options].apply(instance, Array.prototype.slice.call(args, 1))
				}
				if (options === 'destroy') {
					$.data(this, 'plugin_' + pluginName, null)
				}
			})
		}
	};
	$[pluginName] = function(options) {
		var $window = $(window);
		return $window.stellar.apply($window, Array.prototype.slice.call(arguments, 0))
	};
	$[pluginName].scrollProperty = scrollProperty;
	$[pluginName].positionProperty = positionProperty;
	window.Stellar = Plugin
}(jQuery, this, document));
if (typeof Object.create !== "function") {
	Object.create = function(obj) {
		function F() {}
		F.prototype = obj;
		return new F()
	}
}(function($, window, document) {
	var Carousel = {
		init: function(options, el) {
			var base = this;
			base.$elem = $(el);
			base.options = $.extend({}, $.fn.owlCarousel.options, base.$elem.data(), options);
			base.userOptions = options;
			base.loadContent()
		},
		loadContent: function() {
			var base = this,
				url;

			function getData(data) {
				var i, content = "";
				if (typeof base.options.jsonSuccess === "function") {
					base.options.jsonSuccess.apply(this, [data])
				} else {
					for (i in data.owl) {
						if (data.owl.hasOwnProperty(i)) {
							content += data.owl[i].item
						}
					}
					base.$elem.html(content)
				}
				base.logIn();
			}
			if (typeof base.options.beforeInit === "function") {
				base.options.beforeInit.apply(this, [base.$elem])
			}
			if (typeof base.options.jsonPath === "string") {
				url = base.options.jsonPath;
				$.getJSON(url, getData)
			} else {
				base.logIn()
			}
		},
		logIn: function() {
			var base = this;
			base.$elem.data({
				"owl-originalStyles": base.$elem.attr("style"),
				"owl-originalClasses": base.$elem.attr("class")
			});
			base.orignalItems = base.options.items;
			base.checkBrowser();
			base.wrapperWidth = 0;
			base.checkVisible = null;
			base.setVars()
		},
		setVars: function() {
			var base = this;
			if (base.$elem.children().length === 0) {
				return !1
			}
			base.baseClass();
			base.eventTypes();
			base.$userItems = base.$elem.children();
			base.itemsAmount = base.$userItems.length;
			base.wrapItems();
			base.$owlItems = base.$elem.find(".owl-item");
			base.$owlWrapper = base.$elem.find(".owl-wrapper");
			base.playDirection = "next";
			base.prevItem = 0;
			base.prevArr = [0];
			base.currentItem = 0;
			base.customEvents();
			base.onStartup()
		},
		onStartup: function() {
			var base = this;
			base.updateItems();
			base.calculateAll();
			base.buildControls();
			base.updateControls();
			base.response();
			base.moveEvents();
			base.stopOnHover();
			base.owlStatus();
			if (base.options.transitionStyle !== !1) {
				base.transitionTypes(base.options.transitionStyle)
			}
			if (base.options.autoPlay === !0) {
				base.options.autoPlay = 5000
			}
			base.play();
			base.$elem.find(".owl-wrapper").css("display", "block");
			if (!base.$elem.is(":visible")) {
				base.watchVisibility()
			} else {}
			base.onstartup = !1;
			base.eachMoveUpdate();
			if (typeof base.options.afterInit === "function") {
				base.options.afterInit.apply(this, [base.$elem])
			}
		},
		eachMoveUpdate: function() {
			var base = this;
			if (base.options.lazyLoad === !0) {
				base.lazyLoad()
			}
			if (base.options.autoHeight === !0) {
				base.autoHeight()
			}
			base.onVisibleItems();
			if (typeof base.options.afterAction === "function") {
				base.options.afterAction.apply(this, [base.$elem])
			}
		},
		updateVars: function() {
			var base = this;
			if (typeof base.options.beforeUpdate === "function") {
				base.options.beforeUpdate.apply(this, [base.$elem])
			}
			base.watchVisibility();
			base.updateItems();
			base.calculateAll();
			base.updatePosition();
			base.updateControls();
			base.eachMoveUpdate();
			if (typeof base.options.afterUpdate === "function") {
				base.options.afterUpdate.apply(this, [base.$elem])
			}
		},
		reload: function() {
			var base = this;
			window.setTimeout(function() {
				base.updateVars()
			}, 0)
		},
		watchVisibility: function() {
			var base = this;
			if (base.$elem.is(":visible") === !1) {
				window.clearInterval(base.autoPlayInterval);
				window.clearInterval(base.checkVisible)
			} else {
				return !1
			}
			base.checkVisible = window.setInterval(function() {
				if (base.$elem.is(":visible")) {
					base.reload();
					window.clearInterval(base.checkVisible)
				}
			}, 500)
		},
		wrapItems: function() {
			var base = this;
			base.$userItems.wrapAll("<div class=\"owl-wrapper\">").wrap("<div class=\"owl-item\"></div>");
			base.$elem.find(".owl-wrapper").wrap("<div class=\"owl-wrapper-outer\">");
			base.wrapperOuter = base.$elem.find(".owl-wrapper-outer")
		},
		baseClass: function() {
			var base = this,
				hasBaseClass = base.$elem.hasClass(base.options.baseClass),
				hasThemeClass = base.$elem.hasClass(base.options.theme);
			if (!hasBaseClass) {
				base.$elem.addClass(base.options.baseClass)
			}
			if (!hasThemeClass) {
				base.$elem.addClass(base.options.theme)
			}
		},
		updateItems: function() {
			var base = this,
				width, i;
			if (base.options.responsive === !1) {
				return !1
			}
			if (base.options.singleItem === !0) {
				base.options.items = base.orignalItems = 1;
				base.options.itemsCustom = !1;
				base.options.itemsDesktop = !1;
				base.options.itemsDesktopSmall = !1;
				base.options.itemsTablet = !1;
				base.options.itemsTabletSmall = !1;
				base.options.itemsMobile = !1;
				return !1
			}
			width = $(base.options.responsiveBaseWidth).width();
			if (width >= (base.options.itemsDesktop[0] || base.orignalItems)) {
				base.options.items = base.orignalItems
			}
			if (base.options.itemsCustom !== !1) {
				base.options.itemsCustom.sort(function(a, b) {
					return a[0] - b[0]
				});
				for (i = 0; i < base.options.itemsCustom.length; i += 1) {
					if (base.options.itemsCustom[i][0] <= width) {
						base.options.items = base.options.itemsCustom[i][1]
					}
				}
			} else {
				if (width < base.options.itemsDesktop[0] && base.options.itemsDesktop !== !1) {
					base.options.items = base.options.itemsDesktop[1]
				}
				if (width < base.options.itemsDesktopSmall[0] && base.options.itemsDesktopSmall !== !1) {
					base.options.items = base.options.itemsDesktopSmall[1]
				}
				if (width < base.options.itemsTablet[0] && base.options.itemsTablet !== !1) {
					base.options.items = base.options.itemsTablet[1]
				}
				if (width < base.options.itemsTabletSmall[0] && base.options.itemsTabletSmall !== !1) {
					base.options.items = base.options.itemsTabletSmall[1]
				}
				if (width < base.options.itemsMobile[0] && base.options.itemsMobile !== !1) {
					base.options.items = base.options.itemsMobile[1]
				}
			}
			if (base.options.items > base.itemsAmount && base.options.itemsScaleUp === !0) {
				base.options.items = base.itemsAmount
			}
		},
		response: function() {
			var base = this,
				smallDelay, lastWindowWidth;
			if (base.options.responsive !== !0) {
				return !1
			}
			lastWindowWidth = $(window).width();
			base.resizer = function() {
				if ($(window).width() !== lastWindowWidth) {
					if (base.options.autoPlay !== !1) {
						window.clearInterval(base.autoPlayInterval)
					}
					window.clearTimeout(smallDelay);
					smallDelay = window.setTimeout(function() {
						lastWindowWidth = $(window).width();
						base.updateVars()
					}, base.options.responsiveRefreshRate)
				}
			};
			$(window).resize(base.resizer)
		},
		updatePosition: function() {
			var base = this;
			base.jumpTo(base.currentItem);
			if (base.options.autoPlay !== !1) {
				base.checkAp()
			}
		},
		appendItemsSizes: function() {
			var base = this,
				roundPages = 0,
				lastItem = base.itemsAmount - base.options.items;
			base.$owlItems.each(function(index) {
				var $this = $(this);
				$this.css({
					"width": base.itemWidth
				}).data("owl-item", Number(index));
				if (index % base.options.items === 0 || index === lastItem) {
					if (!(index > lastItem)) {
						roundPages += 1
					}
				}
				$this.data("owl-roundPages", roundPages)
			})
		},
		appendWrapperSizes: function() {
			var base = this,
				width = base.$owlItems.length * base.itemWidth,
				cssObj;
			base.options.direction == "rtl" ? cssObj = {
				"right": 0,
				direction: "rtl"
			} : cssObj = {
				"left": 0
			};
			base.$owlWrapper.css({
				"width": width * 2
			});
			base.appendItemsSizes()
		},
		calculateAll: function() {
			var base = this;
			base.calculateWidth();
			base.appendWrapperSizes();
			base.loops();
			base.max()
		},
		calculateWidth: function() {
			var base = this;
			base.itemWidth = Math.round(base.$elem.width() / base.options.items)
		},
		max: function() {
			var base = this,
				maximum = ((base.itemsAmount * base.itemWidth) - base.options.items * base.itemWidth) * -1;
			if (base.options.items > base.itemsAmount) {
				base.maximumItem = 0;
				maximum = 0;
				base.maximumPixels = 0
			} else {
				base.maximumItem = base.itemsAmount - base.options.items;
				base.maximumPixels = maximum
			}
			return maximum
		},
		min: function() {
			return 0
		},
		loops: function() {
			var base = this,
				prev = 0,
				elWidth = 0,
				i, item, roundPageNum;
			base.positionsInArray = [0];
			base.pagesInArray = [];
			for (i = 0; i < base.itemsAmount; i += 1) {
				elWidth += base.itemWidth;
				base.positionsInArray.push(-elWidth);
				if (base.options.scrollPerPage === !0) {
					item = $(base.$owlItems[i]);
					roundPageNum = item.data("owl-roundPages");
					if (roundPageNum !== prev) {
						base.pagesInArray[prev] = base.positionsInArray[i];
						prev = roundPageNum
					}
				}
			}
		},
		buildControls: function() {
			var base = this;
			if (base.options.navigation === !0 || base.options.pagination === !0) {
				base.owlControls = $("<div class=\"owl-controls\"/>").toggleClass("clickable", !base.browser.isTouch).appendTo(base.$elem)
			}
			if (base.options.pagination === !0) {
				base.buildPagination()
			}
			if (base.options.navigation === !0) {
				base.buildButtons()
			}
		},
		buildButtons: function() {
			var base = this,
				buttonsWrapper = $("<div class=\"owl-buttons\"/>");
			base.owlControls.append(buttonsWrapper);
			base.buttonPrev = $("<div/>", {
				"class": "owl-prev",
				"html": base.options.navigationText[0] || ""
			});
			base.buttonNext = $("<div/>", {
				"class": "owl-next",
				"html": base.options.navigationText[1] || ""
			});
			buttonsWrapper.append(base.buttonPrev).append(base.buttonNext);
			buttonsWrapper.on("touchstart.owlControls mousedown.owlControls", "div[class^=\"owl\"]", function(event) {
				event.preventDefault()
			});
			buttonsWrapper.on("touchend.owlControls mouseup.owlControls", "div[class^=\"owl\"]", function(event) {
				event.preventDefault();
				if ($(this).hasClass("owl-next")) {
					base.next()
				} else {
					base.prev()
				}
			})
		},
		buildPagination: function() {
			var base = this;
			base.paginationWrapper = $("<div class=\"owl-pagination\"/>");
			base.owlControls.append(base.paginationWrapper);
			base.paginationWrapper.on("touchend.owlControls mouseup.owlControls", ".owl-page", function(event) {
				event.preventDefault();
				if (Number($(this).data("owl-page")) !== base.currentItem) {
					base.goTo(Number($(this).data("owl-page")), !0)
				}
			})
		},
		updatePagination: function() {
			var base = this,
				counter, lastPage, lastItem, i, paginationButton, paginationButtonInner;
			if (base.options.pagination === !1) {
				return !1
			}
			base.paginationWrapper.html("");
			counter = 0;
			lastPage = base.itemsAmount - base.itemsAmount % base.options.items;
			for (i = 0; i < base.itemsAmount; i += 1) {
				if (i % base.options.items === 0) {
					counter += 1;
					if (lastPage === i) {
						lastItem = base.itemsAmount - base.options.items
					}
					paginationButton = $("<div/>", {
						"class": "owl-page"
					});
					paginationButtonInner = $("<span></span>", {
						"text": base.options.paginationNumbers === !0 ? counter : "",
						"class": base.options.paginationNumbers === !0 ? "owl-numbers" : ""
					});
					paginationButton.append(paginationButtonInner);
					paginationButton.data("owl-page", lastPage === i ? lastItem : i);
					paginationButton.data("owl-roundPages", counter);
					base.paginationWrapper.append(paginationButton)
				}
			}
			base.checkPagination()
		},
		checkPagination: function() {
			var base = this;
			if (base.options.pagination === !1) {
				return !1
			}
			base.paginationWrapper.find(".owl-page").each(function() {
				if ($(this).data("owl-roundPages") === $(base.$owlItems[base.currentItem]).data("owl-roundPages")) {
					base.paginationWrapper.find(".owl-page").removeClass("active");
					$(this).addClass("active")
				}
			})
		},
		checkNavigation: function() {
			var base = this;
			if (base.options.navigation === !1) {
				return !1
			}
			if (base.options.rewindNav === !1) {
				if (base.currentItem === 0 && base.maximumItem === 0) {
					base.buttonPrev.addClass("disabled");
					base.buttonNext.addClass("disabled")
				} else if (base.currentItem === 0 && base.maximumItem !== 0) {
					base.buttonPrev.addClass("disabled");
					base.buttonNext.removeClass("disabled")
				} else if (base.currentItem === base.maximumItem) {
					base.buttonPrev.removeClass("disabled");
					base.buttonNext.addClass("disabled")
				} else if (base.currentItem !== 0 && base.currentItem !== base.maximumItem) {
					base.buttonPrev.removeClass("disabled");
					base.buttonNext.removeClass("disabled")
				}
			}
		},
		updateControls: function() {
			var base = this;
			base.updatePagination();
			base.checkNavigation();
			if (base.owlControls) {
				if (base.options.items >= base.itemsAmount) {
					base.owlControls.hide()
				} else {
					base.owlControls.show()
				}
			}
		},
		destroyControls: function() {
			var base = this;
			if (base.owlControls) {
				base.owlControls.remove()
			}
		},
		next: function(speed) {
			var base = this;
			if (base.isTransition) {
				return !1
			}
			base.currentItem += base.options.scrollPerPage === !0 ? base.options.items : 1;
			if (base.currentItem > base.maximumItem + (base.options.scrollPerPage === !0 ? (base.options.items - 1) : 0)) {
				if (base.options.rewindNav === !0) {
					base.currentItem = 0;
					speed = "rewind"
				} else {
					base.currentItem = base.maximumItem;
					return !1
				}
			}
			base.goTo(base.currentItem, speed)
		},
		prev: function(speed) {
			var base = this;
			if (base.isTransition) {
				return !1
			}
			if (base.options.scrollPerPage === !0 && base.currentItem > 0 && base.currentItem < base.options.items) {
				base.currentItem = 0
			} else {
				base.currentItem -= base.options.scrollPerPage === !0 ? base.options.items : 1
			}
			if (base.currentItem < 0) {
				if (base.options.rewindNav === !0) {
					base.currentItem = base.maximumItem;
					speed = "rewind"
				} else {
					base.currentItem = 0;
					return !1
				}
			}
			base.goTo(base.currentItem, speed)
		},
		goTo: function(position, speed, drag) {
			var base = this,
				goToPixel;
			if (base.isTransition) {
				return !1
			}
			if (typeof base.options.beforeMove === "function") {
				base.options.beforeMove.apply(this, [base.$elem])
			}
			if (position >= base.maximumItem) {
				position = base.maximumItem
			} else if (position <= 0) {
				position = 0
			}
			base.currentItem = base.owl.currentItem = position;
			if (base.options.transitionStyle !== !1 && drag !== "drag" && base.options.items === 1 && base.browser.support3d === !0) {
				base.swapSpeed(0);
				if (base.browser.support3d === !0) {
					base.transition3d(base.positionsInArray[position])
				} else {
					base.css2slide(base.positionsInArray[position], 1)
				}
				base.afterGo();
				base.singleItemTransition();
				return !1
			}
			goToPixel = base.positionsInArray[position];
			if (base.browser.support3d === !0) {
				base.isCss3Finish = !1;
				if (speed === !0) {
					base.swapSpeed("paginationSpeed");
					window.setTimeout(function() {
						base.isCss3Finish = !0
					}, base.options.paginationSpeed)
				} else if (speed === "rewind") {
					base.swapSpeed(base.options.rewindSpeed);
					window.setTimeout(function() {
						base.isCss3Finish = !0
					}, base.options.rewindSpeed)
				} else {
					base.swapSpeed("slideSpeed");
					window.setTimeout(function() {
						base.isCss3Finish = !0
					}, base.options.slideSpeed)
				}
				base.transition3d(goToPixel)
			} else {
				if (speed === !0) {
					base.css2slide(goToPixel, base.options.paginationSpeed)
				} else if (speed === "rewind") {
					base.css2slide(goToPixel, base.options.rewindSpeed)
				} else {
					base.css2slide(goToPixel, base.options.slideSpeed)
				}
			}
			base.afterGo()
		},
		jumpTo: function(position) {
			var base = this;
			if (typeof base.options.beforeMove === "function") {
				base.options.beforeMove.apply(this, [base.$elem])
			}
			if (position >= base.maximumItem || position === -1) {
				position = base.maximumItem
			} else if (position <= 0) {
				position = 0
			}
			base.swapSpeed(0);
			if (base.browser.support3d === !0) {
				base.transition3d(base.positionsInArray[position])
			} else {
				base.css2slide(base.positionsInArray[position], 1)
			}
			base.currentItem = base.owl.currentItem = position;
			base.afterGo()
		},
		afterGo: function() {
			var base = this;
			base.prevArr.push(base.currentItem);
			base.prevItem = base.owl.prevItem = base.prevArr[base.prevArr.length - 2];
			base.prevArr.shift(0);
			if (base.prevItem !== base.currentItem) {
				base.checkPagination();
				base.checkNavigation();
				base.eachMoveUpdate();
				if (base.options.autoPlay !== !1) {
					base.checkAp()
				}
			}
			if (typeof base.options.afterMove === "function" && base.prevItem !== base.currentItem) {
				base.options.afterMove.apply(this, [base.$elem])
			}
		},
		stop: function() {
			var base = this;
			base.apStatus = "stop";
			window.clearInterval(base.autoPlayInterval)
		},
		checkAp: function() {
			var base = this;
			if (base.apStatus !== "stop") {
				base.play()
			}
		},
		play: function() {
			var base = this;
			base.apStatus = "play";
			if (base.options.autoPlay === !1) {
				return !1
			}
			window.clearInterval(base.autoPlayInterval);
			base.autoPlayInterval = window.setInterval(function() {
				base.next(!0)
			}, base.options.autoPlay)
		},
		swapSpeed: function(action) {
			var base = this;
			if (action === "slideSpeed") {
				base.$owlWrapper.css(base.addCssSpeed(base.options.slideSpeed))
			} else if (action === "paginationSpeed") {
				base.$owlWrapper.css(base.addCssSpeed(base.options.paginationSpeed))
			} else if (typeof action !== "string") {
				base.$owlWrapper.css(base.addCssSpeed(action))
			}
		},
		addCssSpeed: function(speed) {
			return {
				"-webkit-transition": "all " + speed + "ms ease",
				"-moz-transition": "all " + speed + "ms ease",
				"-o-transition": "all " + speed + "ms ease",
				"transition": "all " + speed + "ms ease"
			}
		},
		removeTransition: function() {
			return {
				"-webkit-transition": "",
				"-moz-transition": "",
				"-o-transition": "",
				"transition": ""
			}
		},
		doTranslate: function(pixels) {
			var base = this;
			base.options.direction == "rtl" ? pixels = -pixels : pixels = pixels;
			return {
				"-webkit-transform": "translate3d(" + pixels + "px, 0px, 0px)",
				"-moz-transform": "translate3d(" + pixels + "px, 0px, 0px)",
				"-o-transform": "translate3d(" + pixels + "px, 0px, 0px)",
				"-ms-transform": "translate3d(" + pixels + "px, 0px, 0px)",
				"transform": "translate3d(" + pixels + "px, 0px,0px)"
			}
		},
		transition3d: function(value) {
			var base = this;
			base.$owlWrapper.css(base.doTranslate(value))
		},
		css2move: function(value) {
			var base = this,
				cssObj;
			base.options.direction == "rtl" ? cssObj = {
				"right": value
			} : cssObj = {
				"left": value
			};
			base.$owlWrapper.css(cssObj)
		},
		css2slide: function(value, speed) {
			var base = this,
				cssObj;
			base.options.direction == "rtl" ? cssObj = {
				"right": value
			} : cssObj = {
				"left": value
			};
			base.isCssFinish = !1;
			base.$owlWrapper.stop(!0, !0).animate(cssObj, {
				duration: speed || base.options.slideSpeed,
				complete: function() {
					base.isCssFinish = !0
				}
			})
		},
		checkBrowser: function() {
			var base = this,
				translate3D = "translate3d(0px, 0px, 0px)",
				tempElem = document.createElement("div"),
				regex, asSupport, support3d, isTouch;
			tempElem.style.cssText = "  -moz-transform:" + translate3D + "; -ms-transform:" + translate3D + "; -o-transform:" + translate3D + "; -webkit-transform:" + translate3D + "; transform:" + translate3D;
			regex = /translate3d\(0px, 0px, 0px\)/g;
			asSupport = tempElem.style.cssText.match(regex);
			support3d = (asSupport !== null && asSupport.length === 1);
			isTouch = "ontouchstart" in window || window.navigator.msMaxTouchPoints;
			base.browser = {
				"support3d": support3d,
				"isTouch": isTouch
			}
		},
		moveEvents: function() {
			var base = this;
			if (base.options.mouseDrag !== !1 || base.options.touchDrag !== !1) {
				base.gestures();
				base.disabledEvents()
			}
		},
		eventTypes: function() {
			var base = this,
				types = ["s", "e", "x"];
			base.ev_types = {};
			if (base.options.mouseDrag === !0 && base.options.touchDrag === !0) {
				types = ["touchstart.owl mousedown.owl", "touchmove.owl mousemove.owl", "touchend.owl touchcancel.owl mouseup.owl"]
			} else if (base.options.mouseDrag === !1 && base.options.touchDrag === !0) {
				types = ["touchstart.owl", "touchmove.owl", "touchend.owl touchcancel.owl"]
			} else if (base.options.mouseDrag === !0 && base.options.touchDrag === !1) {
				types = ["mousedown.owl", "mousemove.owl", "mouseup.owl"]
			}
			base.ev_types.start = types[0];
			base.ev_types.move = types[1];
			base.ev_types.end = types[2]
		},
		disabledEvents: function() {
			var base = this;
			base.$elem.on("dragstart.owl", function(event) {
				event.preventDefault()
			});
			base.$elem.on("mousedown.disableTextSelect", function(e) {})
		},
		gestures: function() {
			var base = this,
				locals = {
					offsetX: 0,
					offsetY: 0,
					baseElWidth: 0,
					relativePos: 0,
					position: null,
					minSwipe: null,
					maxSwipe: null,
					sliding: null,
					dargging: null,
					targetElement: null
				};
			base.isCssFinish = !0;

			function getTouches(event) {
				if (event.touches !== undefined) {
					return {
						x: event.touches[0].pageX,
						y: event.touches[0].pageY
					}
				}
				if (event.touches === undefined) {
					if (event.pageX !== undefined) {
						return {
							x: event.pageX,
							y: event.pageY
						}
					}
					if (event.pageX === undefined) {
						return {
							x: event.clientX,
							y: event.clientY
						}
					}
				}
			}

			function swapEvents(type) {
				if (type === "on") {
					$(document).on(base.ev_types.move, dragMove);
					$(document).on(base.ev_types.end, dragEnd)
				} else if (type === "off") {
					$(document).off(base.ev_types.move);
					$(document).off(base.ev_types.end)
				}
			}

			function dragStart(event) {
				var ev = event.originalEvent || event || window.event,
					position;
				if (ev.which === 3) {
					return !1
				}
				if (base.itemsAmount <= base.options.items) {
					return
				}
				if (base.isCssFinish === !1 && !base.options.dragBeforeAnimFinish) {
					return !1
				}
				if (base.isCss3Finish === !1 && !base.options.dragBeforeAnimFinish) {
					return !1
				}
				if (base.options.autoPlay !== !1) {
					window.clearInterval(base.autoPlayInterval)
				}
				if (base.browser.isTouch !== !0 && !base.$owlWrapper.hasClass("grabbing")) {
					base.$owlWrapper.addClass("grabbing")
				}
				base.newPosX = 0;
				base.newRelativeX = 0;
				$(this).css(base.removeTransition());
				position = $(this).position();
				if (base.options.direction == "rtl") {
					positionRight = base.$owlItems.eq(0).width() * base.currentItem;
					locals.relativePos = positionRight;
					locals.offsetX = -getTouches(ev).x + positionRight
				} else {
					locals.relativePos = position.left;
					locals.offsetX = getTouches(ev).x - position.left
				}
				locals.offsetY = getTouches(ev).y - position.top;
				swapEvents("on");
				locals.sliding = !1;
				locals.targetElement = ev.target || ev.srcElement
			}

			function dragMove(event) {
				var ev = event.originalEvent || event || window.event,
					minSwipe;
				if (base.options.direction == "rtl") {
					base.newPosX = -getTouches(ev).x - locals.offsetX;
					base.newPosY = getTouches(ev).y - locals.offsetY;
					base.newRelativeX = base.newPosX + locals.relativePos
				} else {
					base.newPosX = getTouches(ev).x - locals.offsetX;
					base.newPosY = getTouches(ev).y - locals.offsetY;
					base.newRelativeX = base.newPosX - locals.relativePos
				}
				if (typeof base.options.startDragging === "function" && locals.dragging !== !0 && base.newRelativeX !== 0) {
					locals.dragging = !0;
					base.options.startDragging.apply(base, [base.$elem])
				}
				if ((base.newRelativeX > 8 || base.newRelativeX < -8) && (base.browser.isTouch === !0)) {
					if (ev.preventDefault !== undefined) {
						ev.preventDefault()
					} else {
						ev.returnValue = !1
					}
					locals.sliding = !0
				}
				if ((base.newPosY > 10 || base.newPosY < -10) && locals.sliding === !1) {
					$(document).off("touchmove.owl")
				}
				minSwipe = function() {
					return base.newRelativeX / 5
				};
				maxSwipe = function() {
					return base.maximumPixels + base.newRelativeX / 5
				};
				base.newPosX = Math.max(Math.min(base.newPosX, minSwipe()), maxSwipe());
				if (base.browser.support3d === !0) {
					base.transition3d(base.newPosX)
				} else {
					base.css2move(base.newPosX)
				}
			}

			function dragEnd(event) {
				var ev = event.originalEvent || event || window.event,
					newPosition, handlers, owlStopEvent;
				ev.target = ev.target || ev.srcElement;
				locals.dragging = !1;
				if (base.browser.isTouch !== !0) {
					base.$owlWrapper.removeClass("grabbing")
				}
				if (base.options.direction == "rtl") {
					if (base.newRelativeX < 0) {
						base.dragDirection = base.owl.dragDirection = "right"
					} else {
						base.dragDirection = base.owl.dragDirection = "left"
					}
				} else {
					if (base.newRelativeX < 0) {
						base.dragDirection = base.owl.dragDirection = "left"
					} else {
						base.dragDirection = base.owl.dragDirection = "right"
					}
				}
				if (base.newRelativeX !== 0) {
					newPosition = base.getNewPosition();
					base.goTo(newPosition, !1, "drag");
					if (locals.targetElement === ev.target && base.browser.isTouch !== !0) {
						$(ev.target).on("click.disable", function(ev) {
							ev.stopImmediatePropagation();
							ev.stopPropagation();
							ev.preventDefault();
							$(ev.target).off("click.disable")
						});
						handlers = $._data(ev.target, "events").click;
						owlStopEvent = handlers.pop();
						handlers.splice(0, 0, owlStopEvent)
					}
				}
				swapEvents("off")
			}
			base.$elem.on(base.ev_types.start, ".owl-wrapper", dragStart)
		},
		getNewPosition: function() {
			var base = this,
				newPosition = base.closestItem();
			if (newPosition > base.maximumItem) {
				base.currentItem = base.maximumItem;
				newPosition = base.maximumItem
			} else if (base.newPosX >= 0) {
				newPosition = 0;
				base.currentItem = 0
			}
			return newPosition
		},
		closestItem: function() {
			var base = this,
				array = base.options.scrollPerPage === !0 ? base.pagesInArray : base.positionsInArray,
				goal = base.newPosX,
				closest = null;
			$.each(array, function(i, v) {
				if (goal - (base.itemWidth / 20) > array[i + 1] && goal - (base.itemWidth / 20) < v && base.moveDirection() === "left") {
					closest = v;
					if (base.options.scrollPerPage === !0) {
						base.currentItem = $.inArray(closest, base.positionsInArray)
					} else {
						base.currentItem = i
					}
				} else if (goal + (base.itemWidth / 20) < v && goal + (base.itemWidth / 20) > (array[i + 1] || array[i] - base.itemWidth) && base.moveDirection() === "right") {
					if (base.options.scrollPerPage === !0) {
						closest = array[i + 1] || array[array.length - 1];
						base.currentItem = $.inArray(closest, base.positionsInArray)
					} else {
						closest = array[i + 1];
						base.currentItem = i + 1
					}
				}
			});
			return base.currentItem
		},
		moveDirection: function() {
			var base = this,
				direction;
			if (base.newRelativeX < 0) {
				direction = "right";
				base.playDirection = "next"
			} else {
				direction = "left";
				base.playDirection = "prev"
			}
			return direction
		},
		customEvents: function() {
			var base = this;
			base.$elem.on("owl.next", function() {
				base.next()
			});
			base.$elem.on("owl.prev", function() {
				base.prev()
			});
			base.$elem.on("owl.play", function(event, speed) {
				base.options.autoPlay = speed;
				base.play();
				base.hoverStatus = "play"
			});
			base.$elem.on("owl.stop", function() {
				base.stop();
				base.hoverStatus = "stop"
			});
			base.$elem.on("owl.goTo", function(event, item) {
				base.goTo(item)
			});
			base.$elem.on("owl.jumpTo", function(event, item) {
				base.jumpTo(item)
			})
		},
		stopOnHover: function() {
			var base = this;
			if (base.options.stopOnHover === !0 && base.browser.isTouch !== !0 && base.options.autoPlay !== !1) {
				base.$elem.on("mouseover", function() {
					base.stop()
				});
				base.$elem.on("mouseout", function() {
					if (base.hoverStatus !== "stop") {
						base.play()
					}
				})
			}
		},
		lazyLoad: function() {
			var base = this,
				i, $item, itemNumber, $lazyImg, follow;
			if (base.options.lazyLoad === !1) {
				return !1
			}
			for (i = 0; i < base.itemsAmount; i += 1) {
				$item = $(base.$owlItems[i]);
				if ($item.data("owl-loaded") === "loaded") {
					continue
				}
				itemNumber = $item.data("owl-item");
				$lazyImg = $item.find(".lazyOwl");
				if (typeof $lazyImg.data("src") !== "string") {
					$item.data("owl-loaded", "loaded");
					continue
				}
				if ($item.data("owl-loaded") === undefined) {
					$lazyImg.hide();
					$item.addClass("loading").data("owl-loaded", "checked")
				}
				if (base.options.lazyFollow === !0) {
					follow = itemNumber >= base.currentItem
				} else {
					follow = !0
				}
				if (follow && itemNumber < base.currentItem + base.options.items && $lazyImg.length) {
					$lazyImg.each(function() {
						base.lazyPreload($item, $(this))
					})
				}
			}
		},
		lazyPreload: function($item, $lazyImg) {
			var base = this,
				iterations = 0,
				isBackgroundImg;
			if ($lazyImg.prop("tagName") === "DIV") {
				$lazyImg.css("background-image", "url(" + $lazyImg.data("src") + ")");
				isBackgroundImg = !0
			} else {
				$lazyImg[0].src = $lazyImg.data("src")
			}

			function showImage() {
				$item.data("owl-loaded", "loaded").removeClass("loading");
				$lazyImg.removeAttr("data-src");
				if (base.options.lazyEffect === "fade") {
					$lazyImg.fadeIn(400)
				} else {
					$lazyImg.show()
				}
				if (typeof base.options.afterLazyLoad === "function") {
					base.options.afterLazyLoad.apply(this, [base.$elem])
				}
			}

			function checkLazyImage() {
				iterations += 1;
				if (base.completeImg($lazyImg.get(0)) || isBackgroundImg === !0) {
					showImage()
				} else if (iterations <= 100) {
					window.setTimeout(checkLazyImage, 100)
				} else {
					showImage()
				}
			}
			checkLazyImage()
		},
		autoHeight: function() {
			var base = this,
				$currentimg = $(base.$owlItems[base.currentItem]).find("img"),
				iterations;

			function addHeight() {
				var $currentItem = $(base.$owlItems[base.currentItem]).height();
				base.wrapperOuter.css("height", $currentItem + "px");
				if (!base.wrapperOuter.hasClass("autoHeight")) {
					window.setTimeout(function() {
						base.wrapperOuter.addClass("autoHeight")
					}, 0)
				}
			}

			function checkImage() {
				iterations += 1;
				if (base.completeImg($currentimg.get(0))) {
					addHeight()
				} else if (iterations <= 100) {
					window.setTimeout(checkImage, 100)
				} else {
					base.wrapperOuter.css("height", "")
				}
			}
			if ($currentimg.get(0) !== undefined) {
				iterations = 0;
				checkImage()
			} else {
				addHeight()
			}
		},
		completeImg: function(img) {
			var naturalWidthType;
			if (!img.complete) {
				return !1
			}
			naturalWidthType = typeof img.naturalWidth;
			if (naturalWidthType !== "undefined" && img.naturalWidth === 0) {
				return !1
			}
			return !0
		},
		onVisibleItems: function() {
			var base = this,
				i;
			if (base.options.addClassActive === !0) {
				base.$owlItems.removeClass("active")
			}
			base.visibleItems = [];
			for (i = base.currentItem; i < base.currentItem + base.options.items; i += 1) {
				base.visibleItems.push(i);
				if (base.options.addClassActive === !0) {
					$(base.$owlItems[i]).addClass("active")
				}
			}
			base.owl.visibleItems = base.visibleItems
		},
		transitionTypes: function(className) {
			var base = this;
			base.outClass = "owl-" + className + "-out";
			base.inClass = "owl-" + className + "-in"
		},
		singleItemTransition: function() {
			var base = this,
				outClass = base.outClass,
				inClass = base.inClass,
				$currentItem = base.$owlItems.eq(base.currentItem),
				$prevItem = base.$owlItems.eq(base.prevItem),
				prevPos = Math.abs(base.positionsInArray[base.currentItem]) + base.positionsInArray[base.prevItem],
				origin = Math.abs(base.positionsInArray[base.currentItem]) + base.itemWidth / 2,
				animEnd = 'webkitAnimationEnd oAnimationEnd MSAnimationEnd animationend';
			base.isTransition = !0;
			base.$owlWrapper.addClass('owl-origin').css({
				"-webkit-transform-origin": origin + "px",
				"-moz-perspective-origin": origin + "px",
				"perspective-origin": origin + "px"
			});

			function transStyles(prevPos) {
				return {
					"position": "relative",
					"left": prevPos + "px"
				}
			}
			$prevItem.css(transStyles(prevPos, 10)).addClass(outClass).on(animEnd, function() {
				base.endPrev = !0;
				$prevItem.off(animEnd);
				base.clearTransStyle($prevItem, outClass)
			});
			$currentItem.addClass(inClass).on(animEnd, function() {
				base.endCurrent = !0;
				$currentItem.off(animEnd);
				base.clearTransStyle($currentItem, inClass)
			})
		},
		clearTransStyle: function(item, classToRemove) {
			var base = this;
			item.css({
				"position": "",
				"left": ""
			}).removeClass(classToRemove);
			if (base.endPrev && base.endCurrent) {
				base.$owlWrapper.removeClass('owl-origin');
				base.endPrev = !1;
				base.endCurrent = !1;
				base.isTransition = !1
			}
		},
		owlStatus: function() {
			var base = this;
			base.owl = {
				"userOptions": base.userOptions,
				"baseElement": base.$elem,
				"userItems": base.$userItems,
				"owlItems": base.$owlItems,
				"currentItem": base.currentItem,
				"prevItem": base.prevItem,
				"visibleItems": base.visibleItems,
				"isTouch": base.browser.isTouch,
				"browser": base.browser,
				"dragDirection": base.dragDirection
			}
		},
		clearEvents: function() {
			var base = this;
			base.$elem.off(".owl owl mousedown.disableTextSelect");
			$(document).off(".owl owl");
			$(window).off("resize", base.resizer)
		},
		unWrap: function() {
			var base = this;
			if (base.$elem.children().length !== 0) {
				base.$owlWrapper.unwrap();
				base.$userItems.unwrap().unwrap();
				if (base.owlControls) {
					base.owlControls.remove()
				}
			}
			base.clearEvents();
			base.$elem.attr({
				style: base.$elem.data("owl-originalStyles") || "",
				class: base.$elem.data("owl-originalClasses")
			})
		},
		destroy: function() {
			var base = this;
			base.stop();
			window.clearInterval(base.checkVisible);
			base.unWrap();
			base.$elem.removeData()
		},
		reinit: function(newOptions) {
			var base = this,
				options = $.extend({}, base.userOptions, newOptions);
			base.unWrap();
			base.init(options, base.$elem)
		},
		addItem: function(htmlString, targetPosition) {
			var base = this,
				position;
			if (!htmlString) {
				return !1
			}
			if (base.$elem.children().length === 0) {
				base.$elem.append(htmlString);
				base.setVars();
				return !1
			}
			base.unWrap();
			if (targetPosition === undefined || targetPosition === -1) {
				position = -1
			} else {
				position = targetPosition
			}
			if (position >= base.$userItems.length || position === -1) {
				base.$userItems.eq(-1).after(htmlString)
			} else {
				base.$userItems.eq(position).before(htmlString)
			}
			base.setVars()
		},
		removeItem: function(targetPosition) {
			var base = this,
				position;
			if (base.$elem.children().length === 0) {
				return !1
			}
			if (targetPosition === undefined || targetPosition === -1) {
				position = -1
			} else {
				position = targetPosition
			}
			base.unWrap();
			base.$userItems.eq(position).remove();
			base.setVars()
		}
	};
	$.fn.owlCarousel = function(options) {
		return this.each(function() {
			if ($(this).data("owl-init") === !0) {
				return !1
			}
			$(this).data("owl-init", !0);
			var carousel = Object.create(Carousel);
			carousel.init(options, this);
			$.data(this, "owlCarousel", carousel)
		})
	};
	$.fn.owlCarousel.options = {
		direction: 'ltr',
		items: 5,
		itemsCustom: !1,
		itemsDesktop: [1199, 4],
		itemsDesktopSmall: [979, 3],
		itemsTablet: [768, 2],
		itemsTabletSmall: !1,
		itemsMobile: [479, 1],
		singleItem: !1,
		itemsScaleUp: !1,
		slideSpeed: 200,
		paginationSpeed: 800,
		rewindSpeed: 1000,
		autoPlay: !1,
		stopOnHover: !1,
		navigation: !1,
		navigationText: ["prev", "next"],
		rewindNav: !0,
		scrollPerPage: !1,
		pagination: !0,
		paginationNumbers: !1,
		responsive: !0,
		responsiveRefreshRate: 200,
		responsiveBaseWidth: window,
		baseClass: "owl-carousel",
		theme: "owl-theme",
		lazyLoad: !1,
		lazyFollow: !0,
		lazyEffect: "fade",
		autoHeight: !1,
		jsonPath: !1,
		jsonSuccess: !1,
		dragBeforeAnimFinish: !0,
		mouseDrag: !0,
		touchDrag: !0,
		addClassActive: !1,
		transitionStyle: !1,
		beforeUpdate: !1,
		afterUpdate: !1,
		beforeInit: !1,
		afterInit: !1,
		beforeMove: !1,
		afterMove: !1,
		afterAction: !1,
		startDragging: !1,
		afterLazyLoad: !1
	}
}(jQuery, window, document));
(function() {
	$.fn.lofCountDown = function(options) {
		return this.each(function() {
			new $.lofCountDown(this, options)
		})
	}
	$.lofCountDown = function(obj, options) {
		this.options = $.extend({
			autoStart: !0,
			LeadingZero: !0,
			DisplayFormat: "<div>%%D%% Days</div><div>%%H%% Hours</div><div>%%M%% Minutes</div><div>%%S%% Seconds</div>",
			FinishMessage: "Expired",
			CountActive: !0,
			TargetDate: null
		}, options || {});
		if (this.options.TargetDate == null || this.options.TargetDate == '') {
			return
		}
		this.timer = null;
		this.element = obj;
		this.CountStepper = -1;
		this.CountStepper = Math.ceil(this.CountStepper);
		this.SetTimeOutPeriod = (Math.abs(this.CountStepper) - 1) * 1000 + 990;
		var dthen = new Date(this.options.TargetDate);
		var dnow = new Date();
		if (this.CountStepper > 0) {
			ddiff = new Date(dnow - dthen)
		} else {
			ddiff = new Date(dthen - dnow)
		}
		gsecs = Math.floor(ddiff.valueOf() / 1000);
		this.CountBack(gsecs, this)
	};
	$.lofCountDown.fn = $.lofCountDown.prototype;
	$.lofCountDown.fn.extend = $.lofCountDown.extend = $.extend;
	$.lofCountDown.fn.extend({
		calculateDate: function(secs, num1, num2) {
			var s = ((Math.floor(secs / num1)) % num2).toString();
			if (this.options.LeadingZero && s.length < 2) {
				s = "0" + s
			}
			return "<b>" + s + "</b>"
		},
		CountBack: function(secs, self) {
			if (secs < 0) {
				self.element.innerHTML = '<div class="lof-labelexpired"> ' + self.options.FinishMessage + "</div>";
				return
			}
			clearInterval(self.timer);
			DisplayStr = self.options.DisplayFormat.replace(/%%D%%/g, self.calculateDate(secs, 86400, 100000));
			DisplayStr = DisplayStr.replace(/%%H%%/g, self.calculateDate(secs, 3600, 24));
			DisplayStr = DisplayStr.replace(/%%M%%/g, self.calculateDate(secs, 60, 60));
			DisplayStr = DisplayStr.replace(/%%S%%/g, self.calculateDate(secs, 1, 60));
			self.element.innerHTML = DisplayStr;
			if (self.options.CountActive) {
				self.timer = null;
				self.timer = setTimeout(function() {
					self.CountBack((secs + self.CountStepper), self)
				}, (self.SetTimeOutPeriod))
			}
		}
	})
})(jQuery);
(function($) {
	$.LeoCustomAjax = function() {
		this.leoData = 'leoajax=1'
	};
	$.LeoCustomAjax.prototype = {
		processAjax: function() {
			var myElement = this;
			if (leoOption.category_qty && $(".leo-qty").length)
				myElement.getCategoryList();
			else if ($(".leo-qty").length)
				$(".leo-qty").remove();
			if (leoOption.product_list_image && $(".leo-more-info").length)
				myElement.getProductListImage();
			else if ($(".leo-more-info").length)
				$(".leo-more-info").remove();
			if (leoOption.product_one_img && $(".product-additional").length)
				myElement.getProductOneImage();
			else if ($(".product-additional").length)
				$(".product-additional").remove();
			if (leoOption.productCdown && $(".leo-more-cdown").length)
				myElement.getProductCdownInfo();
			else if ($(".leo-more-cdown").length)
				$(".leo-more-cdown").remove();
			if (leoOption.productCdown && $(".leo-more-color").length)
				myElement.getProductColorInfo();
			else if ($(".leo-more-color").length)
				$(".leo-more-color").remove();
			if ($('.ap-total-wishlist').length || $('.ap-total-compare').length) {
				myElement.getCountWishlistCompare()
			}
			if (myElement.leoData != "leoajax=1") {
				$.ajax({
					type: 'POST',
					headers: {
						"cache-control": "no-cache"
					},
					url: prestashop.urls.base_url + 'modules/appagebuilder/apajax.php' + '?rand=' + new Date().getTime(),
					async: !0,
					cache: !1,
					dataType: "json",
					data: myElement.leoData,
					success: function(jsonData) {
						if (jsonData) {
							if (jsonData.cat) {
								for (i = 0; i < jsonData.cat.length; i++) {
									var str = jsonData.cat[i].total;
									var label = $("#leo-cat-" + jsonData.cat[i].id_category).data("str");
									if (typeof label != "undefined") {
										str += "<span>" + label + "</span>"
									}
									$("#leo-cat-" + jsonData.cat[i].id_category).html(str);
									$("#leo-cat-" + jsonData.cat[i].id_category).show()
								}
								$('.leo-qty').each(function() {
									if ($(this).html() == '') {
										$(this).html('0');
										$(this).show()
									}
								})
							}
							if (jsonData.product_list_image) {
								var listProduct = new Array();
								for (i = 0; i < jsonData.product_list_image.length; i++) {
									listProduct[jsonData.product_list_image[i].id] = jsonData.product_list_image[i].content
								}
								$(".leo-more-info").each(function() {
									$(this).html(listProduct[$(this).data("idproduct")])
								});
								addEffectProducts()
							}
							if (jsonData.pro_cdown) {
								var listProduct = new Array();
								for (i = 0; i < jsonData.pro_cdown.length; i++) {
									listProduct[jsonData.pro_cdown[i].id] = jsonData.pro_cdown[i].content
								}
								$(".leo-more-cdown").each(function() {
									$(this).html(listProduct[$(this).data("idproduct")])
								})
							}
							if (jsonData.pro_color) {
								var listProduct = new Array();
								for (i = 0; i < jsonData.pro_color.length; i++) {
									listProduct[jsonData.pro_color[i].id] = jsonData.pro_color[i].content
								}
								$(".leo-more-color").each(function() {
									$(this).html(listProduct[$(this).data("idproduct")])
								})
							}
							if (jsonData.product_one_img) {
								var listProductImg = new Array();
								var listProductName = new Array();
								for (i = 0; i < jsonData.product_one_img.length; i++) {
									listProductImg[jsonData.product_one_img[i].id] = jsonData.product_one_img[i].content;
									listProductName[jsonData.product_one_img[i].id] = jsonData.product_one_img[i].name
								}
								iw = 360;
								ih = 360;
								if (typeof leoOption.homeWidth !== 'undefined') {
									iw = leoOption.homeWidth;
									ih = leoOption.homeheight
								} else {
									iw = $('.product_img_link .img-fluid').first().attr('width');
									ih = $('.product_img_link .img-fluid').first().attr('height')
								}
								$(".product-additional").each(function() {
									if (listProductImg[$(this).data("idproduct")]) {
										var str_image = listProductImg[$(this).data("idproduct")];
										var src_image = str_image.replace('home_default', 'home_default');
										var name_image = listProductName[$(this).data("idproduct")];
										$(this).html('<img class="img-fluid" title="' + name_image + '" alt="' + name_image + '" src="' + src_image + '" width="' + iw + '" height="' + ih + '"/>')
									}
								})
							}
							if (jsonData.wishlist_products) {
								$('.ap-total-wishlist').text(jsonData.wishlist_products)
							} else {
								$('.ap-total-wishlist').text('0')
							}
							if (jsonData.compared_products) {
								$('.ap-total-compare').text(jsonData.compared_products)
							} else {
								$('.ap-total-compare').text('0')
							}
						}
					},
					error: function() {}
				})
			}
		},
		getCountWishlistCompare: function() {
			this.leoData += '&wishlist_compare=1'
		},
		getCategoryList: function() {
			var leoCatList = "";
			$(".leo-qty").each(function() {
				if (leoCatList)
					leoCatList += "," + $(this).attr("id");
				else leoCatList = $(this).attr("id")
			});
			if (leoCatList) {
				leoCatList = leoCatList.replace(/leo-cat-/g, "");
				this.leoData += '&cat_list=' + leoCatList
			}
			return !1
		},
		getProductListImage: function() {
			var leoProInfo = "";
			$(".leo-more-info").each(function() {
				if (!leoProInfo)
					leoProInfo += $(this).data("idproduct");
				else leoProInfo += "," + $(this).data("idproduct")
			});
			if (leoProInfo) {
				this.leoData += '&product_list_image=' + leoProInfo
			}
			return !1
		},
		getProductCdownInfo: function() {
			var leoProCdown = "";
			$(".leo-more-cdown").each(function() {
				if (!leoProCdown)
					leoProCdown += $(this).data("idproduct");
				else leoProCdown += "," + $(this).data("idproduct")
			});
			if (leoProCdown) {
				this.leoData += '&pro_cdown=' + leoProCdown
			}
			return !1
		},
		getProductColorInfo: function() {
			var leoProColor = "";
			$(".leo-more-color").each(function() {
				if (!leoProColor)
					leoProColor += $(this).data("idproduct");
				else leoProColor += "," + $(this).data("idproduct")
			});
			if (leoProColor) {
				this.leoData += '&pro_color=' + leoProColor
			}
			return !1
		},
		getProductOneImage: function() {
			var leoAdditional = "";
			$(".product-additional").each(function() {
				if (!leoAdditional)
					leoAdditional += $(this).data("idproduct");
				else leoAdditional += "," + $(this).data("idproduct")
			});
			if (leoAdditional) {
				this.leoData += '&product_one_img=' + leoAdditional
			}
			return !1
		}
	}
}(jQuery));

function addJSProduct(currentProduct) {
	$('.thumbs_list_' + currentProduct).serialScroll({
		items: 'li:visible',
		prev: '.view_scroll_left_' + currentProduct,
		next: '.view_scroll_right_' + currentProduct,
		axis: 'y',
		offset: 0,
		start: 0,
		stop: !0,
		duration: 700,
		step: 1,
		lazy: !0,
		lock: !1,
		force: !1,
		cycle: !1
	});
	$('.thumbs_list_' + currentProduct).trigger('goto', 1);
	$('.thumbs_list_' + currentProduct).trigger('goto', 0)
}

function addEffectProducts() {
	if (typeof(leoOption) != 'undefined' && leoOption.product_list_image) {
		$(".leo-more-info").each(function() {
			addJSProduct($(this).data("idproduct"))
		});
		addEffectProduct()
	}
}

function addEffectProduct() {
	var speed = 800;
	var effect = "easeInOutQuad";
	$(".leo-more-info").each(function() {
		var leo_preview = this;
		$(leo_preview).find(".leo-hover-image").each(function() {
			$(this).mouseover(function() {
				var big_image = $(this).attr("rel");
				var imgElement = $(leo_preview).parent().find(".product-thumbnail img").first();
				if (!imgElement.length) {
					imgElement = $(leo_preview).parent().find(".product_image img").first()
				}
				if (imgElement.length) {
					$(imgElement).stop().animate({
						opacity: 0
					}, {
						duration: speed,
						easing: effect
					});
					$(imgElement).first().attr("src", big_image);
					$(imgElement).first().attr("data-rel", big_image);
					$(imgElement).stop().animate({
						opacity: 1
					}, {
						duration: speed,
						easing: effect
					})
				}
			})
		});
		$('.thickbox-ajax-' + $(this).data("idproduct")).fancybox({
			helpers: {
				overlay: {
					locked: !1
				}
			},
			'hideOnContentClick': !0,
			'transitionIn': 'elastic',
			'transitionOut': 'elastic'
		})
	})
}

function addEffOneImg() {
	var speed = 800;
	var effect = "easeInOutQuad";
	$(".product-additional").each(function() {
		if ($(this).find("img").length) {
			var leo_hover_image = $(this).parent().find("img").first();
			var leo_preview = $(this);
			$(this).parent().mouseenter(function() {
				$(this).find("img").first().stop().animate({
					opacity: 0
				}, {
					duration: speed,
					easing: effect
				});
				$(leo_preview).stop().animate({
					opacity: 1
				}, {
					duration: speed,
					easing: effect
				})
			});
			$(this).parent().mouseleave(function() {
				$(this).find("img").first().stop().animate({
					opacity: 1
				}, {
					duration: speed,
					easing: effect
				});
				$(leo_preview).stop().animate({
					opacity: 0
				}, {
					duration: speed,
					easing: effect
				})
			})
		}
	})
}

function log(message) {
	console.log(message)
}

function onScrollInit(items) {
	items.each(function() {
		var osElement = $(this);
		var animation = $(osElement).data("animation");
		var osAnimationDelay = $(osElement).data("animation-delay");
		osElement.css({
			"-webkit-animation-delay": osAnimationDelay,
			"-moz-animation-delay": osAnimationDelay,
			"animation-delay": osAnimationDelay
		});
		osElement.waypoint(function() {
			osElement.addClass("animated").addClass(animation)
		}, {
			triggerOnce: !0,
			offset: '90%'
		})
	})
}

function synSize(name) {
	var obj = $("#" + name);
	var div = $(obj).closest(".gmap-cover");
	var gmap = $(div).find(".gmap");
	$(obj).height($(gmap).height())
}
$(function() {
	$(".btn-show-more").click(function() {
		var page = parseInt($(this).data('page'));
		var btn = $(this);
		var config = $(this).closest(".ApProductList").find(".apconfig").val();
		btn.data('reset-text', btn.html());
		btn.html(btn.data('loading-text'));
		$.ajax({
			headers: {
				"cache-control": "no-cache"
			},
			url: prestashop.urls.base_url + 'modules/appagebuilder/apajax.php',
			async: !0,
			cache: !1,
			dataType: "Json",
			data: {
				"config": config,
				"p": page
			},
			success: function(response) {
				var boxCover = $(btn).closest(".box-show-more");
				if (!response.is_more) {
					$(boxCover).removeClass("open")
				}
				if (response.html) {
					$(boxCover).prev().append(response.html)
				}
				$(btn).data("page", (page + 1))
			}
		}).always(function() {
				btn.html(btn.data('reset-text'))
			})
	});
	$(".has-animation").each(function() {
		onScrollInit($(this))
	})
});
(function($) {
	window.addRule = function(selector, styles, sheet) {
		styles = (function(styles) {
			if (typeof styles === "string") return styles;
			var clone = "";
			for (var prop in styles) {
				if (styles.hasOwnProperty(prop)) {
					var val = styles[prop];
					prop = prop.replace(/([A-Z])/g, "-$1").toLowerCase();
					clone += prop + ":" + (prop === "content" ? '"' + val + '"' : val) + "; "
				}
			}
			return clone
		}(styles));
		sheet = sheet || document.styleSheets[document.styleSheets.length - 1];
		if (sheet.insertRule) {
			if (sheet.cssRules !== null && sheet.cssRules.length !== 0)
				sheet.insertRule(selector + " {" + styles + "}", sheet.cssRules.length)
		} else if (sheet.addRule) sheet.addRule(selector, styles);
		return this
	};
	if ($) $.fn.addRule = function(styles, sheet) {
		addRule(this.selector, styles, sheet);
		return this
	}
}(this.jQuery || this.Zepto));

function apPopupForm() {
	if ($.totalStorage('apnewletter')) return;
	$.fancybox({
		'content': $(".ap-popup").html(),
		afterClose: function(event, ui) {
			$.totalStorage('apnewletter', '1')
		}
	})
}
$(document).ready(function() {
	if ($('.ap-popup').length) {
		if ($('.ap-popup').hasClass('index-only') && $('body').attr('id') == 'index')
			apPopupForm();
		else apPopupForm()
	}
	$(".has-bg.bg-fullwidth").each(function() {
		id = "#" + $(this).attr("id");
		bg = $(this).data("bg");
		$(id + ":before").addRule({
			background: bg
		})
	});
	if (typeof stellar !== 'undefined' && stellar)
		$.stellar({
			horizontalScrolling: !1
		});
	currentPosX = [];
	currentPosY = [];
	$("div[data-mouse-parallax-strength]").each(function() {
		currentPos = $(this).css("background-position");
		if (typeof currentPos == "string") {
			currentPosArray = currentPos.split(" ")
		} else {
			currentPosArray = [$(this).css("background-position-x"), $(this).css("background-position-y")]
		}
		currentPosX[$(this).data("mouse-parallax-rid")] = parseFloat(currentPosArray[0]);
		currentPosY[$(this).data("mouse-parallax-rid")] = parseFloat(currentPosArray[1]);
		$(this).mousemove(function(e) {
			newPosX = currentPosX[$(this).data("mouse-parallax-rid")];
			newPosY = currentPosY[$(this).data("mouse-parallax-rid")];
			if ($(this).data("mouse-parallax-axis") != "axis-y") {
				mparallaxPageX = e.pageX - $(this).offset().left;
				if ($(this).hasClass("full-bg-screen")) {
					mparallaxPageX = mparallaxPageX - 1000
				}
				newPosX = (mparallaxPageX * $(this).data("mouse-parallax-strength") * -1) + newPosX
			}
			if ($(this).data("mouse-parallax-axis") != "axis-x") {
				mparallaxPageY = e.pageY - $(this).offset().top;
				newPosY = mparallaxPageY * $(this).data("mouse-parallax-strength") * -1
			}
			$(this).css("background-position", newPosX + "px " + newPosY + "px")
		})
	});
	var ytIframeId;
	var ytVideoId;

	function onYouTubeIframeAPIReady() {
		$("div.iframe-youtube-api-tag").each(function() {
			ytIframeId = $(this).attr("id");
			ytVideoId = $(this).data("youtube-video-id");
			new YT.Player(ytIframeId, {
				videoId: ytVideoId,
				width: "100%",
				height: "100%",
				playerVars: {
					autoplay: 1,
					controls: 0,
					disablekb: 1,
					fs: 0,
					cc_load_policy: 0,
					iv_load_policy: 3,
					modestbranding: 0,
					rel: 0,
					showinfo: 0,
					start: 0
				},
				events: {
					"onReady": function(event) {
						event.target.mute();
						setInterval(function() {
							event.target.seekTo(0)
						}, (event.target.getDuration() - 1) * 1000)
					}
				}
			})
		})
	}
	onYouTubeIframeAPIReady();
	if (typeof MediaElementPlayer !== 'undefined') {
		var player1 = new MediaElementPlayer('#special-youtube-video1');
		var player2 = new MediaElementPlayer('#special-youtube-video2');
		if (player1) {
			var auto_find = setInterval(function() {
				if ($('#video-1 .mejs-overlay-play').html()) {
					$('#video-1 .mejs-overlay-play>.mejs-overlay-button').before('<div class="video-name">' + $('#special-youtube-video1').data('name') + '</div>');
					$('#video-1 .mejs-overlay-play').append('<div class="video-description">Watch video and <span>subscribe us<span></div>');
					clearInterval(auto_find)
				}
			}, 500)
		}
		if (player2) {
			var auto_find1 = setInterval(function() {
				if ($('#video-2 .mejs-overlay-play').html()) {
					$('#video-2 .mejs-overlay-play>.mejs-overlay-button').before('<div class="video-name">' + $('#special-youtube-video2').data('name') + '</div>');
					$('#video-2 .mejs-overlay-play').append('<div class="video-description">Watch video and <span>subscribe us<span></div>');
					clearInterval(auto_find1)
				}
			}, 500)
		}
	}
	current_url = window.location.href;
	$('.apconfig').each(function() {
		param = $(this).data('type');
		value = $(this).data('id');
		var re = new RegExp("([?|&])" + param + "=.*?(&|$)", "i");
		if (current_url.match(re))
			$(this).attr('href', current_url.replace(re, '$1' + param + "=" + value + '$2'));
		else {
			if (current_url.indexOf('?') == -1)
				$(this).attr('href', current_url + '?' + param + "=" + value);
			else $(this).attr('href', current_url + '&' + param + "=" + value)
		}
	});
	$(window).resize(function() {
		if ($('.tab-pane .owl-carousel').length) {
			$('.tab-pane .owl-carousel').each(function(index, element) {
				if (!$(element).parents('.tab-pane').hasClass('active') && typeof($(element).data('owlCarousel')) !== "undefined") {
					var w_owl_active_tab = $(element).parents('.tab-pane').siblings('.active').find('.owl-carousel').width();
					$(element).width(w_owl_active_tab);
					$(element).data('owlCarousel').updateVars();
					$(element).width('100%')
				}
			})
		}
	})
});

function SetOwlCarouselFirstLast(el) {
	el.find(".owl-item").removeClass("first");
	el.find(".owl-item.active").first().addClass("first");
	el.find(".owl-item").removeClass("last");
	el.find(".owl-item.active").last().addClass("last")
}
$(document).ready(function() {
	if (typeof(ap_list_functions) != 'undefined') {
		for (var i = 0; i < ap_list_functions.length; i++) {
			ap_list_functions[i]()
		}
	}
});
$(window).load(function() {
	if (typeof(ap_list_functions_loaded) != 'undefined') {
		for (var i = 0; i < ap_list_functions_loaded.length; i++) {
			ap_list_functions_loaded[i]()
		}
	}
});
(function($) {
	var ColorPicker = function() {
		var
			ids = {},
			inAction, charMin = 65,
			visible, tpl = '<div class="colorpicker"><div class="colorpicker_color"><div><div></div></div></div><div class="colorpicker_hue"><div></div></div><div class="colorpicker_new_color"></div><div class="colorpicker_current_color"></div><div class="colorpicker_hex"><input type="text" maxlength="6" size="6" /></div><div class="colorpicker_rgb_r colorpicker_field"><input type="text" maxlength="3" size="3" /><span></span></div><div class="colorpicker_rgb_g colorpicker_field"><input type="text" maxlength="3" size="3" /><span></span></div><div class="colorpicker_rgb_b colorpicker_field"><input type="text" maxlength="3" size="3" /><span></span></div><div class="colorpicker_hsb_h colorpicker_field"><input type="text" maxlength="3" size="3" /><span></span></div><div class="colorpicker_hsb_s colorpicker_field"><input type="text" maxlength="3" size="3" /><span></span></div><div class="colorpicker_hsb_b colorpicker_field"><input type="text" maxlength="3" size="3" /><span></span></div><div class="colorpicker_submit"></div></div>',
			defaults = {
				eventName: 'click',
				onShow: function() {},
				onBeforeShow: function() {},
				onHide: function() {},
				onChange: function() {},
				onSubmit: function() {},
				color: 'ff0000',
				livePreview: !0,
				flat: !1
			},
			fillRGBFields = function(hsb, cal) {
				var rgb = HSBToRGB(hsb);
				$(cal).data('colorpicker').fields.eq(1).val(rgb.r).end().eq(2).val(rgb.g).end().eq(3).val(rgb.b).end()
			},
			fillHSBFields = function(hsb, cal) {
				$(cal).data('colorpicker').fields.eq(4).val(hsb.h).end().eq(5).val(hsb.s).end().eq(6).val(hsb.b).end()
			},
			fillHexFields = function(hsb, cal) {
				$(cal).data('colorpicker').fields.eq(0).val(HSBToHex(hsb)).end()
			},
			setSelector = function(hsb, cal) {
				$(cal).data('colorpicker').selector.css('backgroundColor', '#' + HSBToHex({
					h: hsb.h,
					s: 100,
					b: 100
				}));
				$(cal).data('colorpicker').selectorIndic.css({
					left: parseInt(150 * hsb.s / 100, 10),
					top: parseInt(150 * (100 - hsb.b) / 100, 10)
				})
			},
			setHue = function(hsb, cal) {
				$(cal).data('colorpicker').hue.css('top', parseInt(150 - 150 * hsb.h / 360, 10))
			},
			setCurrentColor = function(hsb, cal) {
				$(cal).data('colorpicker').currentColor.css('backgroundColor', '#' + HSBToHex(hsb))
			},
			setNewColor = function(hsb, cal) {
				$(cal).data('colorpicker').newColor.css('backgroundColor', '#' + HSBToHex(hsb))
			},
			keyDown = function(ev) {
				var pressedKey = ev.charCode || ev.keyCode || -1;
				if ((pressedKey > charMin && pressedKey <= 90) || pressedKey == 32) {
					return !1
				}
				var cal = $(this).parent().parent();
				if (cal.data('colorpicker').livePreview === !0) {
					change.apply(this)
				}
			},
			change = function(ev) {
				var cal = $(this).parent().parent(),
					col;
				if (this.parentNode.className.indexOf('_hex') > 0) {
					cal.data('colorpicker').color = col = HexToHSB(fixHex(this.value))
				} else if (this.parentNode.className.indexOf('_hsb') > 0) {
					cal.data('colorpicker').color = col = fixHSB({
						h: parseInt(cal.data('colorpicker').fields.eq(4).val(), 10),
						s: parseInt(cal.data('colorpicker').fields.eq(5).val(), 10),
						b: parseInt(cal.data('colorpicker').fields.eq(6).val(), 10)
					})
				} else {
					cal.data('colorpicker').color = col = RGBToHSB(fixRGB({
						r: parseInt(cal.data('colorpicker').fields.eq(1).val(), 10),
						g: parseInt(cal.data('colorpicker').fields.eq(2).val(), 10),
						b: parseInt(cal.data('colorpicker').fields.eq(3).val(), 10)
					}))
				}
				if (ev) {
					fillRGBFields(col, cal.get(0));
					fillHexFields(col, cal.get(0));
					fillHSBFields(col, cal.get(0))
				}
				setSelector(col, cal.get(0));
				setHue(col, cal.get(0));
				setNewColor(col, cal.get(0));
				cal.data('colorpicker').onChange.apply(cal, [col, HSBToHex(col), HSBToRGB(col)])
			},
			blur = function(ev) {
				var cal = $(this).parent().parent();
				cal.data('colorpicker').fields.parent().removeClass('colorpicker_focus')
			},
			focus = function() {
				charMin = this.parentNode.className.indexOf('_hex') > 0 ? 70 : 65;
				$(this).parent().parent().data('colorpicker').fields.parent().removeClass('colorpicker_focus');
				$(this).parent().addClass('colorpicker_focus')
			},
			downIncrement = function(ev) {
				var field = $(this).parent().find('input').focus();
				var current = {
					el: $(this).parent().addClass('colorpicker_slider'),
					max: this.parentNode.className.indexOf('_hsb_h') > 0 ? 360 : (this.parentNode.className.indexOf('_hsb') > 0 ? 100 : 255),
					y: ev.pageY,
					field: field,
					val: parseInt(field.val(), 10),
					preview: $(this).parent().parent().data('colorpicker').livePreview
				};
				$(document).bind('mouseup', current, upIncrement);
				$(document).bind('mousemove', current, moveIncrement)
			},
			moveIncrement = function(ev) {
				ev.data.field.val(Math.max(0, Math.min(ev.data.max, parseInt(ev.data.val + ev.pageY - ev.data.y, 10))));
				if (ev.data.preview) {
					change.apply(ev.data.field.get(0), [!0])
				}
				return !1
			},
			upIncrement = function(ev) {
				change.apply(ev.data.field.get(0), [!0]);
				ev.data.el.removeClass('colorpicker_slider').find('input').focus();
				$(document).unbind('mouseup', upIncrement);
				$(document).unbind('mousemove', moveIncrement);
				return !1
			},
			downHue = function(ev) {
				var current = {
					cal: $(this).parent(),
					y: $(this).offset().top
				};
				current.preview = current.cal.data('colorpicker').livePreview;
				$(document).bind('mouseup', current, upHue);
				$(document).bind('mousemove', current, moveHue)
			},
			moveHue = function(ev) {
				change.apply(ev.data.cal.data('colorpicker').fields.eq(4).val(parseInt(360 * (150 - Math.max(0, Math.min(150, (ev.pageY - ev.data.y)))) / 150, 10)).get(0), [ev.data.preview]);
				return !1
			},
			upHue = function(ev) {
				fillRGBFields(ev.data.cal.data('colorpicker').color, ev.data.cal.get(0));
				fillHexFields(ev.data.cal.data('colorpicker').color, ev.data.cal.get(0));
				$(document).unbind('mouseup', upHue);
				$(document).unbind('mousemove', moveHue);
				return !1
			},
			downSelector = function(ev) {
				var current = {
					cal: $(this).parent(),
					pos: $(this).offset()
				};
				current.preview = current.cal.data('colorpicker').livePreview;
				$(document).bind('mouseup', current, upSelector);
				$(document).bind('mousemove', current, moveSelector)
			},
			moveSelector = function(ev) {
				change.apply(ev.data.cal.data('colorpicker').fields.eq(6).val(parseInt(100 * (150 - Math.max(0, Math.min(150, (ev.pageY - ev.data.pos.top)))) / 150, 10)).end().eq(5).val(parseInt(100 * (Math.max(0, Math.min(150, (ev.pageX - ev.data.pos.left)))) / 150, 10)).get(0), [ev.data.preview]);
				return !1
			},
			upSelector = function(ev) {
				fillRGBFields(ev.data.cal.data('colorpicker').color, ev.data.cal.get(0));
				fillHexFields(ev.data.cal.data('colorpicker').color, ev.data.cal.get(0));
				$(document).unbind('mouseup', upSelector);
				$(document).unbind('mousemove', moveSelector);
				return !1
			},
			enterSubmit = function(ev) {
				$(this).addClass('colorpicker_focus')
			},
			leaveSubmit = function(ev) {
				$(this).removeClass('colorpicker_focus')
			},
			clickSubmit = function(ev) {
				var cal = $(this).parent();
				var col = cal.data('colorpicker').color;
				cal.data('colorpicker').origColor = col;
				setCurrentColor(col, cal.get(0));
				cal.data('colorpicker').onSubmit(col, HSBToHex(col), HSBToRGB(col), cal.data('colorpicker').el)
			},
			show = function(ev) {
				var cal = $('#' + $(this).data('colorpickerId'));
				cal.data('colorpicker').onBeforeShow.apply(this, [cal.get(0)]);
				var pos = $(this).offset();
				var viewPort = getViewport();
				var top = pos.top + this.offsetHeight;
				var left = pos.left;
				if (top + 176 > viewPort.t + viewPort.h) {
					top -= this.offsetHeight + 176
				}
				if (left + 356 > viewPort.l + viewPort.w) {
					left -= 356
				}
				cal.css({
					left: left + 'px',
					top: top + 'px'
				});
				if (cal.data('colorpicker').onShow.apply(this, [cal.get(0)]) != !1) {
					cal.show()
				}
				$(document).bind('mousedown', {
					cal: cal
				}, hide);
				return !1
			},
			hide = function(ev) {
				if (!isChildOf(ev.data.cal.get(0), ev.target, ev.data.cal.get(0))) {
					if (ev.data.cal.data('colorpicker').onHide.apply(this, [ev.data.cal.get(0)]) != !1) {
						ev.data.cal.hide()
					}
					$(document).unbind('mousedown', hide)
				}
			},
			isChildOf = function(parentEl, el, container) {
				if (parentEl == el) {
					return !0
				}
				if (parentEl.contains) {
					return parentEl.contains(el)
				}
				if (parentEl.compareDocumentPosition) {
					return !!(parentEl.compareDocumentPosition(el) & 16)
				}
				var prEl = el.parentNode;
				while (prEl && prEl != container) {
					if (prEl == parentEl)
						return !0;
					prEl = prEl.parentNode
				}
				return !1
			},
			getViewport = function() {
				var m = document.compatMode == 'CSS1Compat';
				return {
					l: window.pageXOffset || (m ? document.documentElement.scrollLeft : document.body.scrollLeft),
					t: window.pageYOffset || (m ? document.documentElement.scrollTop : document.body.scrollTop),
					w: window.innerWidth || (m ? document.documentElement.clientWidth : document.body.clientWidth),
					h: window.innerHeight || (m ? document.documentElement.clientHeight : document.body.clientHeight)
				}
			},
			fixHSB = function(hsb) {
				return {
					h: Math.min(360, Math.max(0, hsb.h)),
					s: Math.min(100, Math.max(0, hsb.s)),
					b: Math.min(100, Math.max(0, hsb.b))
				}
			},
			fixRGB = function(rgb) {
				return {
					r: Math.min(255, Math.max(0, rgb.r)),
					g: Math.min(255, Math.max(0, rgb.g)),
					b: Math.min(255, Math.max(0, rgb.b))
				}
			},
			fixHex = function(hex) {
				var len = 6 - hex.length;
				if (len > 0) {
					var o = [];
					for (var i = 0; i < len; i++) {
						o.push('0')
					}
					o.push(hex);
					hex = o.join('')
				}
				return hex
			},
			HexToRGB = function(hex) {
				var hex = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);
				return {
					r: hex >> 16,
					g: (hex & 0x00FF00) >> 8,
					b: (hex & 0x0000FF)
				}
			},
			HexToHSB = function(hex) {
				return RGBToHSB(HexToRGB(hex))
			},
			RGBToHSB = function(rgb) {
				var hsb = {
					h: 0,
					s: 0,
					b: 0
				};
				var min = Math.min(rgb.r, rgb.g, rgb.b);
				var max = Math.max(rgb.r, rgb.g, rgb.b);
				var delta = max - min;
				hsb.b = max;
				if (max != 0) {}
				hsb.s = max != 0 ? 255 * delta / max : 0;
				if (hsb.s != 0) {
					if (rgb.r == max) {
						hsb.h = (rgb.g - rgb.b) / delta
					} else if (rgb.g == max) {
						hsb.h = 2 + (rgb.b - rgb.r) / delta
					} else {
						hsb.h = 4 + (rgb.r - rgb.g) / delta
					}
				} else {
					hsb.h = -1
				}
				hsb.h *= 60;
				if (hsb.h < 0) {
					hsb.h += 360
				}
				hsb.s *= 100 / 255;
				hsb.b *= 100 / 255;
				return hsb
			},
			HSBToRGB = function(hsb) {
				var rgb = {};
				var h = Math.round(hsb.h);
				var s = Math.round(hsb.s * 255 / 100);
				var v = Math.round(hsb.b * 255 / 100);
				if (s == 0) {
					rgb.r = rgb.g = rgb.b = v
				} else {
					var t1 = v;
					var t2 = (255 - s) * v / 255;
					var t3 = (t1 - t2) * (h % 60) / 60;
					if (h == 360) h = 0;
					if (h < 60) {
						rgb.r = t1;
						rgb.b = t2;
						rgb.g = t2 + t3
					} else if (h < 120) {
						rgb.g = t1;
						rgb.b = t2;
						rgb.r = t1 - t3
					} else if (h < 180) {
						rgb.g = t1;
						rgb.r = t2;
						rgb.b = t2 + t3
					} else if (h < 240) {
						rgb.b = t1;
						rgb.r = t2;
						rgb.g = t1 - t3
					} else if (h < 300) {
						rgb.b = t1;
						rgb.g = t2;
						rgb.r = t2 + t3
					} else if (h < 360) {
						rgb.r = t1;
						rgb.g = t2;
						rgb.b = t1 - t3
					} else {
						rgb.r = 0;
						rgb.g = 0;
						rgb.b = 0
					}
				}
				return {
					r: Math.round(rgb.r),
					g: Math.round(rgb.g),
					b: Math.round(rgb.b)
				}
			},
			RGBToHex = function(rgb) {
				var hex = [rgb.r.toString(16), rgb.g.toString(16), rgb.b.toString(16)];
				$.each(hex, function(nr, val) {
					if (val.length == 1) {
						hex[nr] = '0' + val
					}
				});
				return hex.join('')
			},
			HSBToHex = function(hsb) {
				return RGBToHex(HSBToRGB(hsb))
			},
			restoreOriginal = function() {
				var cal = $(this).parent();
				var col = cal.data('colorpicker').origColor;
				cal.data('colorpicker').color = col;
				fillRGBFields(col, cal.get(0));
				fillHexFields(col, cal.get(0));
				fillHSBFields(col, cal.get(0));
				setSelector(col, cal.get(0));
				setHue(col, cal.get(0));
				setNewColor(col, cal.get(0))
			};
		return {
			init: function(opt) {
				opt = $.extend({}, defaults, opt || {});
				if (typeof opt.color == 'string') {
					opt.color = HexToHSB(opt.color)
				} else if (opt.color.r != undefined && opt.color.g != undefined && opt.color.b != undefined) {
					opt.color = RGBToHSB(opt.color)
				} else if (opt.color.h != undefined && opt.color.s != undefined && opt.color.b != undefined) {
					opt.color = fixHSB(opt.color)
				} else {
					return this
				}
				return this.each(function() {
					if (!$(this).data('colorpickerId')) {
						var options = $.extend({}, opt);
						options.origColor = opt.color;
						var id = 'collorpicker_' + parseInt(Math.random() * 1000);
						$(this).data('colorpickerId', id);
						var cal = $(tpl).attr('id', id);
						if (options.flat) {
							cal.appendTo(this).show()
						} else {
							cal.appendTo(document.body)
						}
						options.fields = cal.find('input').bind('keyup', keyDown).bind('change', change).bind('blur', blur).bind('focus', focus);
						cal.find('span').bind('mousedown', downIncrement).end().find('>div.colorpicker_current_color').bind('click', restoreOriginal);
						options.selector = cal.find('div.colorpicker_color').bind('mousedown', downSelector);
						options.selectorIndic = options.selector.find('div div');
						options.el = this;
						options.hue = cal.find('div.colorpicker_hue div');
						cal.find('div.colorpicker_hue').bind('mousedown', downHue);
						options.newColor = cal.find('div.colorpicker_new_color');
						options.currentColor = cal.find('div.colorpicker_current_color');
						cal.data('colorpicker', options);
						cal.find('div.colorpicker_submit').bind('mouseenter', enterSubmit).bind('mouseleave', leaveSubmit).bind('click', clickSubmit);
						fillRGBFields(options.color, cal.get(0));
						fillHSBFields(options.color, cal.get(0));
						fillHexFields(options.color, cal.get(0));
						setHue(options.color, cal.get(0));
						setSelector(options.color, cal.get(0));
						setCurrentColor(options.color, cal.get(0));
						setNewColor(options.color, cal.get(0));
						if (options.flat) {
							cal.css({
								position: 'relative',
								display: 'block'
							})
						} else {
							$(this).bind(options.eventName, show)
						}
					}
				})
			},
			showPicker: function() {
				return this.each(function() {
					if ($(this).data('colorpickerId')) {
						show.apply(this)
					}
				})
			},
			hidePicker: function() {
				return this.each(function() {
					if ($(this).data('colorpickerId')) {
						$('#' + $(this).data('colorpickerId')).hide()
					}
				})
			},
			setColor: function(col) {
				if (typeof col == 'string') {
					col = HexToHSB(col)
				} else if (col.r != undefined && col.g != undefined && col.b != undefined) {
					col = RGBToHSB(col)
				} else if (col.h != undefined && col.s != undefined && col.b != undefined) {
					col = fixHSB(col)
				} else {
					return this
				}
				return this.each(function() {
					if ($(this).data('colorpickerId')) {
						var cal = $('#' + $(this).data('colorpickerId'));
						cal.data('colorpicker').color = col;
						cal.data('colorpicker').origColor = col;
						fillRGBFields(col, cal.get(0));
						fillHSBFields(col, cal.get(0));
						fillHexFields(col, cal.get(0));
						setHue(col, cal.get(0));
						setSelector(col, cal.get(0));
						setCurrentColor(col, cal.get(0));
						setNewColor(col, cal.get(0))
					}
				})
			}
		}
	}();
	$.fn.extend({
		ColorPicker: ColorPicker.init,
		ColorPickerHide: ColorPicker.hidePicker,
		ColorPickerShow: ColorPicker.showPicker,
		ColorPickerSetColor: ColorPicker.setColor
	})
})(jQuery);
$(document).ready(function() {
	$('#panelTab a').click(function(e) {
		e.preventDefault();
		$(this).tab('show')
	});
	var expiresThemConfigDay = 1;
	$('#panelTab a:first').tab('show');
	$(".bg-config").hide();
	var $MAINCONTAINER = $("html");
	$(".background-images").each(function() {
		var $parent = this;
		var $input = $(".input-setting", $parent);
		$(".bi-wrapper > div", this).click(function() {
			$input.val($(this).data('val'));
			$(".bg-config", $parent).show();
			$('.bi-wrapper > div', $parent).removeClass('active');
			$(this).addClass('active');
			if ($input.data('selector')) {
				$($input.data('selector'), $($MAINCONTAINER)).css($input.data('attrs'), 'url(' + $(this).data('image') + ')')
			}
		});
		$(".bg-config select", this).change(function() {
			if ($input.data('selector')) {
				$($input.data('selector'), $($MAINCONTAINER)).css($(this).data('attrs'), $(this).val())
			}
		})
	});
	$(".clear-bg").click(function() {
		var $parent = $(this).parent();
		var $input = $(".input-setting", $parent);
		if ($input.val('')) {
			if ($parent.hasClass("background-images")) {
				$('.bi-wrapper > div', $parent).removeClass('active');
				$($input.data('selector'), $($MAINCONTAINER)).css($input.data('attrs'), 'none');
				$('ul select', $parent).each(function() {
					$($input.data('selector'), $($MAINCONTAINER)).css($(this).data('attrs'), '')
				});
				$('ul.bg-config', $parent).hide();
				$('ul select', $parent).val("")
			} else {
				$input.attr('style', '')
			}
			$($input.data('selector'), $($MAINCONTAINER)).css($input.data('attrs'), 'inherit')
		}
		$input.val('');
		return !1
	});
	$('.accordion-group input.input-setting').each(function() {
		var input = this;
		$(input).attr('readonly', 'readonly');
		$(input).ColorPicker({
			onChange: function(hsb, hex, rgb) {
				$(input).css('backgroundColor', '#' + hex);
				$(input).val(hex);
				if ($(input).data('selector')) {
					$($MAINCONTAINER).find($(input).data('selector')).css($(input).data('attrs'), "#" + $(input).val())
				}
			}
		})
	});
	$('.accordion-group select.input-setting').change(function() {
		var input = this;
		if ($(input).data('selector')) {
			var ex = $(input).data('attrs') == 'font-size' ? 'px' : "";
			$($MAINCONTAINER).find($(input).data('selector')).css($(input).data('attrs'), $(input).val() + ex)
		}
	});
	$(".paneltool .panelbutton").click(function() {
		$(this).parent().toggleClass("active")
	});
	$('.leo-dynamic-theme-skin').click(function() {
		if (!$(this).hasClass('current-theme-skin')) {
			$('.leo-dynamic-theme-skin').removeClass('current-theme-skin');
			$(this).addClass('current-theme-skin');
			var selectedSkin = $(this).data('theme-skin-id');
			$('.leo-dynamic-theme-skin').each(function() {
				$('html').removeClass($(this).data('theme-skin-id'))
			});
			$('html').addClass(selectedSkin);
			if (selectedSkin == 'default') {
				$('head #leo-dynamic-skin-css').remove();
				$('head #leo-dynamic-skin-css-rtl').remove()
			} else {
				var skinRTLCss = $(this).data('theme-skin-rtl');
				var skinFileUrl = $(this).data('theme-skin-css');
				if ($('head #leo-dynamic-skin-css').length) {
					$('head #leo-dynamic-skin-css').attr('href', skinFileUrl + 'skin.css')
				} else {
					$('head').append('<link rel="stylesheet" id="leo-dynamic-skin-css" href="' + skinFileUrl + 'skin.css" type="text/css" media="all" />')
				}
				if ($('head #leo-dynamic-skin-css-rtl').length && skinRTLCss) {
					$('head #leo-dynamic-skin-css-rtl').attr('href', skinFileUrl + 'custom-rtl.css')
				} else if (skinRTLCss) {
					$('head').append('<link rel="stylesheet" id="leo-dynamic-skin-css-rtl" href="' + skinFileUrl + 'custom-rtl.css" type="text/css" media="all" />')
				} else {
					$('head #leo-dynamic-skin-css-rtl').remove()
				}
			}
			var configName = $('#leo-paneltool').data('cname') + '_default_skin';
			$.cookie(configName, selectedSkin, {
				expires: expiresThemConfigDay,
				path: '/'
			})
		}
	});
	$('.enable_fheader').click(function() {
		if (!$(this).hasClass('current')) {
			var configName = $('#leo-paneltool').data('cname') + '_enable_fheader';
			$('.enable_fheader').removeClass('current');
			$(this).addClass('current');
			if ($(this).data('value')) {
				$('body').addClass('keep-header');
				$.cookie(configName, 1, {
					expires: expiresThemConfigDay,
					path: '/'
				});
				if (typeof floatHeader == 'function')
					floatHeader()
			} else {
				$('body').removeClass('keep-header');
				$.cookie(configName, 0, {
					expires: expiresThemConfigDay,
					path: '/'
				});
				if (typeof processFloatHeader == 'function')
					processFloatHeader(0, 0)
			}
		}
	});
	var currentHeaderStyle = $('.leo-dynamic-update-header.current-header').data('header-style');
	$('.leo-dynamic-update-header').click(function() {
		if (!$(this).hasClass('current-header')) {
			$('.leo-dynamic-update-header').removeClass('current-header');
			$(this).addClass('current-header');
			var selectedHeader = $(this).data('header-style');
			$('body').removeClass(currentHeaderStyle);
			$('body').addClass(selectedHeader);
			currentHeaderStyle = selectedHeader;
			var configName = $('#leo-paneltool').data('cname') + '_header_style';
			$.cookie(configName, selectedHeader, {
				expires: expiresThemConfigDay,
				path: '/'
			})
		}
	});
	var currentSideBarStyle = $('.leo-dynamic-update-side.current-sidebar').data('sidebar');
	var sideBarStyleList = [];
	$('.leo-dynamic-update-side').each(function(i) {
		sideBarStyleList[i] = $(this).data('sidebar')
	});
	$('.leo-dynamic-update-side').click(function() {
		if (!$(this).hasClass('current-sidebar')) {
			$('.leo-dynamic-update-side').removeClass('current-sidebar');
			$(this).addClass('current-sidebar');
			var selectedHeader = $(this).data('sidebar');
			$.each(sideBarStyleList, function(index, value) {
				$('body').removeClass(value)
			});
			$('body').addClass(selectedHeader);
			currentSideBarStyle = selectedHeader;
			getBodyClassByMenu();
			var configName = $('#leo-paneltool').data('cname') + '_sidebarmenu';
			$.cookie(configName, selectedHeader, {
				expires: expiresThemConfigDay,
				path: '/'
			})
		}
	});
	var currentLayoutMode = $('.leo-dynamic-update-layout.current-layout-mod').data('layout-mod');
	$('.leo-dynamic-update-layout').click(function() {
		if (!$(this).hasClass('current-layout-mod')) {
			$('.leo-dynamic-update-layout').removeClass('current-layout-mod');
			$(this).addClass('current-layout-mod');
			var selectedLayout = $(this).data('layout-mod');
			$('body').removeClass(currentLayoutMode);
			$('body').addClass(selectedLayout);
			currentLayoutMode = selectedLayout;
			getBodyClassByMenu();
			var configName = $('#leo-paneltool').data('cname') + '_layout_mode';
			$.cookie(configName, selectedLayout, {
				expires: expiresThemConfigDay,
				path: '/'
			})
		}
	});

	function getBodyClassByMenu() {
		if ($('body').hasClass('sidebar-hide') || $('body').hasClass('header-hide-topmenu'))
			$('body').removeClass('double-menu');
		else if (!$('body').hasClass('double-menu')) $('body').addClass('double-menu')
	}
});
! function(a, b) {
	function e(b, c) {
		var d, e, g, h = b.nodeName.toLowerCase();
		return "area" === h ? (d = b.parentNode, e = d.name, !(!b.href || !e || "map" !== d.nodeName.toLowerCase()) && (g = a("img[usemap=#" + e + "]")[0], !!g && f(g))) : (/input|select|textarea|button|object/.test(h) ? !b.disabled : "a" === h ? b.href || c : c) && f(b)
	}

	function f(b) {
		return a.expr.filters.visible(b) && !a(b).parents().addBack().filter(function() {
			return "hidden" === a.css(this, "visibility")
		}).length
	}
	var c = 0,
		d = /^ui-id-\d+$/;
	a.ui = a.ui || {}, a.extend(a.ui, {
		version: "1.10.3",
		keyCode: {
			BACKSPACE: 8,
			COMMA: 188,
			DELETE: 46,
			DOWN: 40,
			END: 35,
			ENTER: 13,
			ESCAPE: 27,
			HOME: 36,
			LEFT: 37,
			NUMPAD_ADD: 107,
			NUMPAD_DECIMAL: 110,
			NUMPAD_DIVIDE: 111,
			NUMPAD_ENTER: 108,
			NUMPAD_MULTIPLY: 106,
			NUMPAD_SUBTRACT: 109,
			PAGE_DOWN: 34,
			PAGE_UP: 33,
			PERIOD: 190,
			RIGHT: 39,
			SPACE: 32,
			TAB: 9,
			UP: 38
		}
	}), a.fn.extend({
		focus: function(b) {
			return function(c, d) {
				return "number" == typeof c ? this.each(function() {
					var b = this;
					setTimeout(function() {
						a(b).focus(), d && d.call(b)
					}, c)
				}) : b.apply(this, arguments)
			}
		}(a.fn.focus),
		scrollParent: function() {
			var b;
			return b = a.ui.ie && /(static|relative)/.test(this.css("position")) || /absolute/.test(this.css("position")) ? this.parents().filter(function() {
				return /(relative|absolute|fixed)/.test(a.css(this, "position")) && /(auto|scroll)/.test(a.css(this, "overflow") + a.css(this, "overflow-y") + a.css(this, "overflow-x"))
			}).eq(0) : this.parents().filter(function() {
				return /(auto|scroll)/.test(a.css(this, "overflow") + a.css(this, "overflow-y") + a.css(this, "overflow-x"))
			}).eq(0), /fixed/.test(this.css("position")) || !b.length ? a(document) : b
		},
		zIndex: function(c) {
			if (c !== b) return this.css("zIndex", c);
			if (this.length)
				for (var e, f, d = a(this[0]); d.length && d[0] !== document;) {
					if (e = d.css("position"), ("absolute" === e || "relative" === e || "fixed" === e) && (f = parseInt(d.css("zIndex"), 10), !isNaN(f) && 0 !== f)) return f;
					d = d.parent()
				}
			return 0
		},
		uniqueId: function() {
			return this.each(function() {
				this.id || (this.id = "ui-id-" + ++c)
			})
		},
		removeUniqueId: function() {
			return this.each(function() {
				d.test(this.id) && a(this).removeAttr("id")
			})
		}
	}), a.extend(a.expr[":"], {
		data: a.expr.createPseudo ? a.expr.createPseudo(function(b) {
			return function(c) {
				return !!a.data(c, b)
			}
		}) : function(b, c, d) {
			return !!a.data(b, d[3])
		},
		focusable: function(b) {
			return e(b, !isNaN(a.attr(b, "tabindex")))
		},
		tabbable: function(b) {
			var c = a.attr(b, "tabindex"),
				d = isNaN(c);
			return (d || c >= 0) && e(b, !d)
		}
	}), a("<a>").outerWidth(1).jquery || a.each(["Width", "Height"], function(c, d) {
		function h(b, c, d, f) {
			return a.each(e, function() {
				c -= parseFloat(a.css(b, "padding" + this)) || 0, d && (c -= parseFloat(a.css(b, "border" + this + "Width")) || 0), f && (c -= parseFloat(a.css(b, "margin" + this)) || 0)
			}), c
		}
		var e = "Width" === d ? ["Left", "Right"] : ["Top", "Bottom"],
			f = d.toLowerCase(),
			g = {
				innerWidth: a.fn.innerWidth,
				innerHeight: a.fn.innerHeight,
				outerWidth: a.fn.outerWidth,
				outerHeight: a.fn.outerHeight
			};
		a.fn["inner" + d] = function(c) {
			return c === b ? g["inner" + d].call(this) : this.each(function() {
				a(this).css(f, h(this, c) + "px")
			})
		}, a.fn["outer" + d] = function(b, c) {
			return "number" != typeof b ? g["outer" + d].call(this, b) : this.each(function() {
				a(this).css(f, h(this, b, !0, c) + "px")
			})
		}
	}), a.fn.addBack || (a.fn.addBack = function(a) {
		return this.add(null == a ? this.prevObject : this.prevObject.filter(a))
	}), a("<a>").data("a-b", "a").removeData("a-b").data("a-b") && (a.fn.removeData = function(b) {
		return function(c) {
			return arguments.length ? b.call(this, a.camelCase(c)) : b.call(this)
		}
	}(a.fn.removeData)), a.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()), a.support.selectstart = "onselectstart" in document.createElement("div"), a.fn.extend({
		disableSelection: function() {
			return this.bind((a.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function(a) {
				a.preventDefault()
			})
		},
		enableSelection: function() {
			return this.unbind(".ui-disableSelection")
		}
	}), a.extend(a.ui, {
		plugin: {
			add: function(b, c, d) {
				var e, f = a.ui[b].prototype;
				for (e in d) f.plugins[e] = f.plugins[e] || [], f.plugins[e].push([c, d[e]])
			},
			call: function(a, b, c) {
				var d, e = a.plugins[b];
				if (e && a.element[0].parentNode && 11 !== a.element[0].parentNode.nodeType)
					for (d = 0; d < e.length; d++) a.options[e[d][0]] && e[d][1].apply(a.element, c)
			}
		},
		hasScroll: function(b, c) {
			if ("hidden" === a(b).css("overflow")) return !1;
			var d = c && "left" === c ? "scrollLeft" : "scrollTop",
				e = !1;
			return b[d] > 0 || (b[d] = 1, e = b[d] > 0, b[d] = 0, e)
		}
	})
}(jQuery),
	function(a, b) {
		var c = 0,
			d = Array.prototype.slice,
			e = a.cleanData;
		a.cleanData = function(b) {
			for (var d, c = 0; null != (d = b[c]); c++) try {
				a(d).triggerHandler("remove")
			} catch (a) {}
			e(b)
		}, a.widget = function(b, c, d) {
			var e, f, g, h, i = {},
				j = b.split(".")[0];
			b = b.split(".")[1], e = j + "-" + b, d || (d = c, c = a.Widget), a.expr[":"][e.toLowerCase()] = function(b) {
				return !!a.data(b, e)
			}, a[j] = a[j] || {}, f = a[j][b], g = a[j][b] = function(a, b) {
				return this._createWidget ? void(arguments.length && this._createWidget(a, b)) : new g(a, b)
			}, a.extend(g, f, {
				version: d.version,
				_proto: a.extend({}, d),
				_childConstructors: []
			}), h = new c, h.options = a.widget.extend({}, h.options), a.each(d, function(b, d) {
				return a.isFunction(d) ? void(i[b] = function() {
					var a = function() {
							return c.prototype[b].apply(this, arguments)
						},
						e = function(a) {
							return c.prototype[b].apply(this, a)
						};
					return function() {
						var f, b = this._super,
							c = this._superApply;
						return this._super = a, this._superApply = e, f = d.apply(this, arguments), this._super = b, this._superApply = c, f
					}
				}()) : void(i[b] = d)
			}), g.prototype = a.widget.extend(h, {
				widgetEventPrefix: f ? h.widgetEventPrefix : b
			}, i, {
				constructor: g,
				namespace: j,
				widgetName: b,
				widgetFullName: e
			}), f ? (a.each(f._childConstructors, function(b, c) {
				var d = c.prototype;
				a.widget(d.namespace + "." + d.widgetName, g, c._proto)
			}), delete f._childConstructors) : c._childConstructors.push(g), a.widget.bridge(b, g)
		}, a.widget.extend = function(c) {
			for (var h, i, e = d.call(arguments, 1), f = 0, g = e.length; f < g; f++)
				for (h in e[f]) i = e[f][h], e[f].hasOwnProperty(h) && i !== b && (a.isPlainObject(i) ? c[h] = a.isPlainObject(c[h]) ? a.widget.extend({}, c[h], i) : a.widget.extend({}, i) : c[h] = i);
			return c
		}, a.widget.bridge = function(c, e) {
			var f = e.prototype.widgetFullName || c;
			a.fn[c] = function(g) {
				var h = "string" == typeof g,
					i = d.call(arguments, 1),
					j = this;
				return g = !h && i.length ? a.widget.extend.apply(null, [g].concat(i)) : g, h ? this.each(function() {
					var d, e = a.data(this, f);
					return e ? a.isFunction(e[g]) && "_" !== g.charAt(0) ? (d = e[g].apply(e, i), d !== e && d !== b ? (j = d && d.jquery ? j.pushStack(d.get()) : d, !1) : void 0) : a.error("no such method '" + g + "' for " + c + " widget instance") : a.error("cannot call methods on " + c + " prior to initialization; attempted to call method '" + g + "'")
				}) : this.each(function() {
					var b = a.data(this, f);
					b ? b.option(g || {})._init() : a.data(this, f, new e(g, this))
				}), j
			}
		}, a.Widget = function() {}, a.Widget._childConstructors = [], a.Widget.prototype = {
			widgetName: "widget",
			widgetEventPrefix: "",
			defaultElement: "<div>",
			options: {
				disabled: !1,
				create: null
			},
			_createWidget: function(b, d) {
				d = a(d || this.defaultElement || this)[0], this.element = a(d), this.uuid = c++, this.eventNamespace = "." + this.widgetName + this.uuid, this.options = a.widget.extend({}, this.options, this._getCreateOptions(), b), this.bindings = a(), this.hoverable = a(), this.focusable = a(), d !== this && (a.data(d, this.widgetFullName, this), this._on(!0, this.element, {
					remove: function(a) {
						a.target === d && this.destroy()
					}
				}), this.document = a(d.style ? d.ownerDocument : d.document || d), this.window = a(this.document[0].defaultView || this.document[0].parentWindow)), this._create(), this._trigger("create", null, this._getCreateEventData()), this._init()
			},
			_getCreateOptions: a.noop,
			_getCreateEventData: a.noop,
			_create: a.noop,
			_init: a.noop,
			destroy: function() {
				this._destroy(), this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(a.camelCase(this.widgetFullName)), this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled ui-state-disabled"), this.bindings.unbind(this.eventNamespace), this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus")
			},
			_destroy: a.noop,
			widget: function() {
				return this.element
			},
			option: function(c, d) {
				var f, g, h, e = c;
				if (0 === arguments.length) return a.widget.extend({}, this.options);
				if ("string" == typeof c)
					if (e = {}, f = c.split("."), c = f.shift(), f.length) {
						for (g = e[c] = a.widget.extend({}, this.options[c]), h = 0; h < f.length - 1; h++) g[f[h]] = g[f[h]] || {}, g = g[f[h]];
						if (c = f.pop(), d === b) return g[c] === b ? null : g[c];
						g[c] = d
					} else {
						if (d === b) return this.options[c] === b ? null : this.options[c];
						e[c] = d
					}
				return this._setOptions(e), this
			},
			_setOptions: function(a) {
				var b;
				for (b in a) this._setOption(b, a[b]);
				return this
			},
			_setOption: function(a, b) {
				return this.options[a] = b, "disabled" === a && (this.widget().toggleClass(this.widgetFullName + "-disabled ui-state-disabled", !!b).attr("aria-disabled", b), this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus")), this
			},
			enable: function() {
				return this._setOption("disabled", !1)
			},
			disable: function() {
				return this._setOption("disabled", !0)
			},
			_on: function(b, c, d) {
				var e, f = this;
				"boolean" != typeof b && (d = c, c = b, b = !1), d ? (c = e = a(c), this.bindings = this.bindings.add(c)) : (d = c, c = this.element, e = this.widget()), a.each(d, function(d, g) {
					function h() {
						if (b || f.options.disabled !== !0 && !a(this).hasClass("ui-state-disabled")) return ("string" == typeof g ? f[g] : g).apply(f, arguments)
					}
					"string" != typeof g && (h.guid = g.guid = g.guid || h.guid || a.guid++);
					var i = d.match(/^(\w+)\s*(.*)$/),
						j = i[1] + f.eventNamespace,
						k = i[2];
					k ? e.delegate(k, j, h) : c.bind(j, h)
				})
			},
			_off: function(a, b) {
				b = (b || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace, a.unbind(b).undelegate(b)
			},
			_delay: function(a, b) {
				function c() {
					return ("string" == typeof a ? d[a] : a).apply(d, arguments)
				}
				var d = this;
				return setTimeout(c, b || 0)
			},
			_hoverable: function(b) {
				this.hoverable = this.hoverable.add(b), this._on(b, {
					mouseenter: function(b) {
						a(b.currentTarget).addClass("ui-state-hover")
					},
					mouseleave: function(b) {
						a(b.currentTarget).removeClass("ui-state-hover")
					}
				})
			},
			_focusable: function(b) {
				this.focusable = this.focusable.add(b), this._on(b, {
					focusin: function(b) {
						a(b.currentTarget).addClass("ui-state-focus")
					},
					focusout: function(b) {
						a(b.currentTarget).removeClass("ui-state-focus")
					}
				})
			},
			_trigger: function(b, c, d) {
				var e, f, g = this.options[b];
				if (d = d || {}, c = a.Event(c), c.type = (b === this.widgetEventPrefix ? b : this.widgetEventPrefix + b).toLowerCase(), c.target = this.element[0], f = c.originalEvent)
					for (e in f) e in c || (c[e] = f[e]);
				return this.element.trigger(c, d), !(a.isFunction(g) && g.apply(this.element[0], [c].concat(d)) === !1 || c.isDefaultPrevented())
			}
		}, a.each({
			show: "fadeIn",
			hide: "fadeOut"
		}, function(b, c) {
			a.Widget.prototype["_" + b] = function(d, e, f) {
				"string" == typeof e && (e = {
					effect: e
				});
				var g, h = e ? e === !0 || "number" == typeof e ? c : e.effect || c : b;
				e = e || {}, "number" == typeof e && (e = {
					duration: e
				}), g = !a.isEmptyObject(e), e.complete = f, e.delay && d.delay(e.delay), g && a.effects && a.effects.effect[h] ? d[b](e) : h !== b && d[h] ? d[h](e.duration, e.easing, f) : d.queue(function(c) {
					a(this)[b](), f && f.call(d[0]), c()
				})
			}
		})
	}(jQuery),
	function(a, b) {
		var c = !1;
		a(document).mouseup(function() {
			c = !1
		}), a.widget("ui.mouse", {
			version: "1.10.3",
			options: {
				cancel: "input,textarea,button,select,option",
				distance: 1,
				delay: 0
			},
			_mouseInit: function() {
				var b = this;
				this.element.bind("mousedown." + this.widgetName, function(a) {
					return b._mouseDown(a)
				}).bind("click." + this.widgetName, function(c) {
						if (!0 === a.data(c.target, b.widgetName + ".preventClickEvent")) return a.removeData(c.target, b.widgetName + ".preventClickEvent"), c.stopImmediatePropagation(), !1
					}), this.started = !1
			},
			_mouseDestroy: function() {
				this.element.unbind("." + this.widgetName), this._mouseMoveDelegate && a(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate)
			},
			_mouseDown: function(b) {
				if (!c) {
					this._mouseStarted && this._mouseUp(b), this._mouseDownEvent = b;
					var d = this,
						e = 1 === b.which,
						f = !("string" != typeof this.options.cancel || !b.target.nodeName) && a(b.target).closest(this.options.cancel).length;
					return !(e && !f && this._mouseCapture(b)) || (this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function() {
						d.mouseDelayMet = !0
					}, this.options.delay)), this._mouseDistanceMet(b) && this._mouseDelayMet(b) && (this._mouseStarted = this._mouseStart(b) !== !1, !this._mouseStarted) ? (b.preventDefault(), !0) : (!0 === a.data(b.target, this.widgetName + ".preventClickEvent") && a.removeData(b.target, this.widgetName + ".preventClickEvent"), this._mouseMoveDelegate = function(a) {
						return d._mouseMove(a)
					}, this._mouseUpDelegate = function(a) {
						return d._mouseUp(a)
					}, a(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate), b.preventDefault(), c = !0, !0))
				}
			},
			_mouseMove: function(b) {
				return a.ui.ie && (!document.documentMode || document.documentMode < 9) && !b.button ? this._mouseUp(b) : this._mouseStarted ? (this._mouseDrag(b), b.preventDefault()) : (this._mouseDistanceMet(b) && this._mouseDelayMet(b) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, b) !== !1, this._mouseStarted ? this._mouseDrag(b) : this._mouseUp(b)), !this._mouseStarted)
			},
			_mouseUp: function(b) {
				return a(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = !1, b.target === this._mouseDownEvent.target && a.data(b.target, this.widgetName + ".preventClickEvent", !0), this._mouseStop(b)), !1
			},
			_mouseDistanceMet: function(a) {
				return Math.max(Math.abs(this._mouseDownEvent.pageX - a.pageX), Math.abs(this._mouseDownEvent.pageY - a.pageY)) >= this.options.distance
			},
			_mouseDelayMet: function() {
				return this.mouseDelayMet
			},
			_mouseStart: function() {},
			_mouseDrag: function() {},
			_mouseStop: function() {},
			_mouseCapture: function() {
				return !0
			}
		})
	}(jQuery),
	function(a, b) {
		a.widget("ui.draggable", a.ui.mouse, {
			version: "1.10.3",
			widgetEventPrefix: "drag",
			options: {
				addClasses: !0,
				appendTo: "parent",
				axis: !1,
				connectToSortable: !1,
				containment: !1,
				cursor: "auto",
				cursorAt: !1,
				grid: !1,
				handle: !1,
				helper: "original",
				iframeFix: !1,
				opacity: !1,
				refreshPositions: !1,
				revert: !1,
				revertDuration: 500,
				scope: "default",
				scroll: !0,
				scrollSensitivity: 20,
				scrollSpeed: 20,
				snap: !1,
				snapMode: "both",
				snapTolerance: 20,
				stack: !1,
				zIndex: !1,
				drag: null,
				start: null,
				stop: null
			},
			_create: function() {
				"original" !== this.options.helper || /^(?:r|a|f)/.test(this.element.css("position")) || (this.element[0].style.position = "relative"), this.options.addClasses && this.element.addClass("ui-draggable"), this.options.disabled && this.element.addClass("ui-draggable-disabled"), this._mouseInit()
			},
			_destroy: function() {
				this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"), this._mouseDestroy()
			},
			_mouseCapture: function(b) {
				var c = this.options;
				return !(this.helper || c.disabled || a(b.target).closest(".ui-resizable-handle").length > 0) && (this.handle = this._getHandle(b), !!this.handle && (a(c.iframeFix === !0 ? "iframe" : c.iframeFix).each(function() {
					a("<div class='ui-draggable-iframeFix' style='background: #fff;'></div>").css({
						width: this.offsetWidth + "px",
						height: this.offsetHeight + "px",
						position: "absolute",
						opacity: "0.001",
						zIndex: 1e3
					}).css(a(this).offset()).appendTo("body")
				}), !0))
			},
			_mouseStart: function(b) {
				var c = this.options;
				return this.helper = this._createHelper(b), this.helper.addClass("ui-draggable-dragging"), this._cacheHelperProportions(), a.ui.ddmanager && (a.ui.ddmanager.current = this), this._cacheMargins(), this.cssPosition = this.helper.css("position"), this.scrollParent = this.helper.scrollParent(), this.offsetParent = this.helper.offsetParent(), this.offsetParentCssPosition = this.offsetParent.css("position"), this.offset = this.positionAbs = this.element.offset(), this.offset = {
					top: this.offset.top - this.margins.top,
					left: this.offset.left - this.margins.left
				}, this.offset.scroll = !1, a.extend(this.offset, {
					click: {
						left: b.pageX - this.offset.left,
						top: b.pageY - this.offset.top
					},
					parent: this._getParentOffset(),
					relative: this._getRelativeOffset()
				}), this.originalPosition = this.position = this._generatePosition(b), this.originalPageX = b.pageX, this.originalPageY = b.pageY, c.cursorAt && this._adjustOffsetFromHelper(c.cursorAt), this._setContainment(), this._trigger("start", b) === !1 ? (this._clear(), !1) : (this._cacheHelperProportions(), a.ui.ddmanager && !c.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, b), this._mouseDrag(b, !0), a.ui.ddmanager && a.ui.ddmanager.dragStart(this, b), !0)
			},
			_mouseDrag: function(b, c) {
				if ("fixed" === this.offsetParentCssPosition && (this.offset.parent = this._getParentOffset()), this.position = this._generatePosition(b), this.positionAbs = this._convertPositionTo("absolute"), !c) {
					var d = this._uiHash();
					if (this._trigger("drag", b, d) === !1) return this._mouseUp({}), !1;
					this.position = d.position
				}
				return this.options.axis && "y" === this.options.axis || (this.helper[0].style.left = this.position.left + "px"), this.options.axis && "x" === this.options.axis || (this.helper[0].style.top = this.position.top + "px"), a.ui.ddmanager && a.ui.ddmanager.drag(this, b), !1
			},
			_mouseStop: function(b) {
				var c = this,
					d = !1;
				return a.ui.ddmanager && !this.options.dropBehaviour && (d = a.ui.ddmanager.drop(this, b)), this.dropped && (d = this.dropped, this.dropped = !1), !("original" === this.options.helper && !a.contains(this.element[0].ownerDocument, this.element[0])) && ("invalid" === this.options.revert && !d || "valid" === this.options.revert && d || this.options.revert === !0 || a.isFunction(this.options.revert) && this.options.revert.call(this.element, d) ? a(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
					c._trigger("stop", b) !== !1 && c._clear()
				}) : this._trigger("stop", b) !== !1 && this._clear(), !1)
			},
			_mouseUp: function(b) {
				return a("div.ui-draggable-iframeFix").each(function() {
					this.parentNode.removeChild(this)
				}), a.ui.ddmanager && a.ui.ddmanager.dragStop(this, b), a.ui.mouse.prototype._mouseUp.call(this, b)
			},
			cancel: function() {
				return this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear(), this
			},
			_getHandle: function(b) {
				return !this.options.handle || !!a(b.target).closest(this.element.find(this.options.handle)).length
			},
			_createHelper: function(b) {
				var c = this.options,
					d = a.isFunction(c.helper) ? a(c.helper.apply(this.element[0], [b])) : "clone" === c.helper ? this.element.clone().removeAttr("id") : this.element;
				return d.parents("body").length || d.appendTo("parent" === c.appendTo ? this.element[0].parentNode : c.appendTo), d[0] === this.element[0] || /(fixed|absolute)/.test(d.css("position")) || d.css("position", "absolute"), d
			},
			_adjustOffsetFromHelper: function(b) {
				"string" == typeof b && (b = b.split(" ")), a.isArray(b) && (b = {
					left: +b[0],
					top: +b[1] || 0
				}), "left" in b && (this.offset.click.left = b.left + this.margins.left), "right" in b && (this.offset.click.left = this.helperProportions.width - b.right + this.margins.left), "top" in b && (this.offset.click.top = b.top + this.margins.top), "bottom" in b && (this.offset.click.top = this.helperProportions.height - b.bottom + this.margins.top)
			},
			_getParentOffset: function() {
				var b = this.offsetParent.offset();
				return "absolute" === this.cssPosition && this.scrollParent[0] !== document && a.contains(this.scrollParent[0], this.offsetParent[0]) && (b.left += this.scrollParent.scrollLeft(), b.top += this.scrollParent.scrollTop()), (this.offsetParent[0] === document.body || this.offsetParent[0].tagName && "html" === this.offsetParent[0].tagName.toLowerCase() && a.ui.ie) && (b = {
					top: 0,
					left: 0
				}), {
					top: b.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
					left: b.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
				}
			},
			_getRelativeOffset: function() {
				if ("relative" === this.cssPosition) {
					var a = this.element.position();
					return {
						top: a.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
						left: a.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
					}
				}
				return {
					top: 0,
					left: 0
				}
			},
			_cacheMargins: function() {
				this.margins = {
					left: parseInt(this.element.css("marginLeft"), 10) || 0,
					top: parseInt(this.element.css("marginTop"), 10) || 0,
					right: parseInt(this.element.css("marginRight"), 10) || 0,
					bottom: parseInt(this.element.css("marginBottom"), 10) || 0
				}
			},
			_cacheHelperProportions: function() {
				this.helperProportions = {
					width: this.helper.outerWidth(),
					height: this.helper.outerHeight()
				}
			},
			_setContainment: function() {
				var b, c, d, e = this.options;
				return e.containment ? "window" === e.containment ? void(this.containment = [a(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, a(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, a(window).scrollLeft() + a(window).width() - this.helperProportions.width - this.margins.left, a(window).scrollTop() + (a(window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]) : "document" === e.containment ? void(this.containment = [0, 0, a(document).width() - this.helperProportions.width - this.margins.left, (a(document).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]) : e.containment.constructor === Array ? void(this.containment = e.containment) : ("parent" === e.containment && (e.containment = this.helper[0].parentNode), c = a(e.containment), d = c[0], void(d && (b = "hidden" !== c.css("overflow"), this.containment = [(parseInt(c.css("borderLeftWidth"), 10) || 0) + (parseInt(c.css("paddingLeft"), 10) || 0), (parseInt(c.css("borderTopWidth"), 10) || 0) + (parseInt(c.css("paddingTop"), 10) || 0), (b ? Math.max(d.scrollWidth, d.offsetWidth) : d.offsetWidth) - (parseInt(c.css("borderRightWidth"), 10) || 0) - (parseInt(c.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (b ? Math.max(d.scrollHeight, d.offsetHeight) : d.offsetHeight) - (parseInt(c.css("borderBottomWidth"), 10) || 0) - (parseInt(c.css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom], this.relative_container = c))) : void(this.containment = null)
			},
			_convertPositionTo: function(b, c) {
				c || (c = this.position);
				var d = "absolute" === b ? 1 : -1,
					e = "absolute" !== this.cssPosition || this.scrollParent[0] !== document && a.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent;
				return this.offset.scroll || (this.offset.scroll = {
					top: e.scrollTop(),
					left: e.scrollLeft()
				}), {
					top: c.top + this.offset.relative.top * d + this.offset.parent.top * d - ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : this.offset.scroll.top) * d,
					left: c.left + this.offset.relative.left * d + this.offset.parent.left * d - ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : this.offset.scroll.left) * d
				}
			},
			_generatePosition: function(b) {
				var c, d, e, f, g = this.options,
					h = "absolute" !== this.cssPosition || this.scrollParent[0] !== document && a.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,
					i = b.pageX,
					j = b.pageY;
				return this.offset.scroll || (this.offset.scroll = {
					top: h.scrollTop(),
					left: h.scrollLeft()
				}), this.originalPosition && (this.containment && (this.relative_container ? (d = this.relative_container.offset(), c = [this.containment[0] + d.left, this.containment[1] + d.top, this.containment[2] + d.left, this.containment[3] + d.top]) : c = this.containment, b.pageX - this.offset.click.left < c[0] && (i = c[0] + this.offset.click.left), b.pageY - this.offset.click.top < c[1] && (j = c[1] + this.offset.click.top), b.pageX - this.offset.click.left > c[2] && (i = c[2] + this.offset.click.left), b.pageY - this.offset.click.top > c[3] && (j = c[3] + this.offset.click.top)), g.grid && (e = g.grid[1] ? this.originalPageY + Math.round((j - this.originalPageY) / g.grid[1]) * g.grid[1] : this.originalPageY, j = c ? e - this.offset.click.top >= c[1] || e - this.offset.click.top > c[3] ? e : e - this.offset.click.top >= c[1] ? e - g.grid[1] : e + g.grid[1] : e, f = g.grid[0] ? this.originalPageX + Math.round((i - this.originalPageX) / g.grid[0]) * g.grid[0] : this.originalPageX, i = c ? f - this.offset.click.left >= c[0] || f - this.offset.click.left > c[2] ? f : f - this.offset.click.left >= c[0] ? f - g.grid[0] : f + g.grid[0] : f)), {
					top: j - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : this.offset.scroll.top),
					left: i - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : this.offset.scroll.left)
				}
			},
			_clear: function() {
				this.helper.removeClass("ui-draggable-dragging"), this.helper[0] === this.element[0] || this.cancelHelperRemoval || this.helper.remove(), this.helper = null, this.cancelHelperRemoval = !1
			},
			_trigger: function(b, c, d) {
				return d = d || this._uiHash(), a.ui.plugin.call(this, b, [c, d]), "drag" === b && (this.positionAbs = this._convertPositionTo("absolute")), a.Widget.prototype._trigger.call(this, b, c, d)
			},
			plugins: {},
			_uiHash: function() {
				return {
					helper: this.helper,
					position: this.position,
					originalPosition: this.originalPosition,
					offset: this.positionAbs
				}
			}
		}), a.ui.plugin.add("draggable", "connectToSortable", {
			start: function(b, c) {
				var d = a(this).data("ui-draggable"),
					e = d.options,
					f = a.extend({}, c, {
						item: d.element
					});
				d.sortables = [], a(e.connectToSortable).each(function() {
					var c = a.data(this, "ui-sortable");
					c && !c.options.disabled && (d.sortables.push({
						instance: c,
						shouldRevert: c.options.revert
					}), c.refreshPositions(), c._trigger("activate", b, f))
				})
			},
			stop: function(b, c) {
				var d = a(this).data("ui-draggable"),
					e = a.extend({}, c, {
						item: d.element
					});
				a.each(d.sortables, function() {
					this.instance.isOver ? (this.instance.isOver = 0, d.cancelHelperRemoval = !0, this.instance.cancelHelperRemoval = !1, this.shouldRevert && (this.instance.options.revert = this.shouldRevert), this.instance._mouseStop(b), this.instance.options.helper = this.instance.options._helper, "original" === d.options.helper && this.instance.currentItem.css({
						top: "auto",
						left: "auto"
					})) : (this.instance.cancelHelperRemoval = !1, this.instance._trigger("deactivate", b, e))
				})
			},
			drag: function(b, c) {
				var d = a(this).data("ui-draggable"),
					e = this;
				a.each(d.sortables, function() {
					var f = !1,
						g = this;
					this.instance.positionAbs = d.positionAbs, this.instance.helperProportions = d.helperProportions, this.instance.offset.click = d.offset.click, this.instance._intersectsWith(this.instance.containerCache) && (f = !0, a.each(d.sortables, function() {
						return this.instance.positionAbs = d.positionAbs, this.instance.helperProportions = d.helperProportions, this.instance.offset.click = d.offset.click, this !== g && this.instance._intersectsWith(this.instance.containerCache) && a.contains(g.instance.element[0], this.instance.element[0]) && (f = !1), f
					})), f ? (this.instance.isOver || (this.instance.isOver = 1, this.instance.currentItem = a(e).clone().removeAttr("id").appendTo(this.instance.element).data("ui-sortable-item", !0), this.instance.options._helper = this.instance.options.helper, this.instance.options.helper = function() {
						return c.helper[0]
					}, b.target = this.instance.currentItem[0], this.instance._mouseCapture(b, !0), this.instance._mouseStart(b, !0, !0), this.instance.offset.click.top = d.offset.click.top, this.instance.offset.click.left = d.offset.click.left, this.instance.offset.parent.left -= d.offset.parent.left - this.instance.offset.parent.left, this.instance.offset.parent.top -= d.offset.parent.top - this.instance.offset.parent.top, d._trigger("toSortable", b), d.dropped = this.instance.element, d.currentItem = d.element, this.instance.fromOutside = d), this.instance.currentItem && this.instance._mouseDrag(b)) : this.instance.isOver && (this.instance.isOver = 0, this.instance.cancelHelperRemoval = !0, this.instance.options.revert = !1, this.instance._trigger("out", b, this.instance._uiHash(this.instance)), this.instance._mouseStop(b, !0), this.instance.options.helper = this.instance.options._helper, this.instance.currentItem.remove(), this.instance.placeholder && this.instance.placeholder.remove(), d._trigger("fromSortable", b), d.dropped = !1)
				})
			}
		}), a.ui.plugin.add("draggable", "cursor", {
			start: function() {
				var b = a("body"),
					c = a(this).data("ui-draggable").options;
				b.css("cursor") && (c._cursor = b.css("cursor")), b.css("cursor", c.cursor)
			},
			stop: function() {
				var b = a(this).data("ui-draggable").options;
				b._cursor && a("body").css("cursor", b._cursor)
			}
		}), a.ui.plugin.add("draggable", "opacity", {
			start: function(b, c) {
				var d = a(c.helper),
					e = a(this).data("ui-draggable").options;
				d.css("opacity") && (e._opacity = d.css("opacity")), d.css("opacity", e.opacity)
			},
			stop: function(b, c) {
				var d = a(this).data("ui-draggable").options;
				d._opacity && a(c.helper).css("opacity", d._opacity)
			}
		}), a.ui.plugin.add("draggable", "scroll", {
			start: function() {
				var b = a(this).data("ui-draggable");
				b.scrollParent[0] !== document && "HTML" !== b.scrollParent[0].tagName && (b.overflowOffset = b.scrollParent.offset())
			},
			drag: function(b) {
				var c = a(this).data("ui-draggable"),
					d = c.options,
					e = !1;
				c.scrollParent[0] !== document && "HTML" !== c.scrollParent[0].tagName ? (d.axis && "x" === d.axis || (c.overflowOffset.top + c.scrollParent[0].offsetHeight - b.pageY < d.scrollSensitivity ? c.scrollParent[0].scrollTop = e = c.scrollParent[0].scrollTop + d.scrollSpeed : b.pageY - c.overflowOffset.top < d.scrollSensitivity && (c.scrollParent[0].scrollTop = e = c.scrollParent[0].scrollTop - d.scrollSpeed)), d.axis && "y" === d.axis || (c.overflowOffset.left + c.scrollParent[0].offsetWidth - b.pageX < d.scrollSensitivity ? c.scrollParent[0].scrollLeft = e = c.scrollParent[0].scrollLeft + d.scrollSpeed : b.pageX - c.overflowOffset.left < d.scrollSensitivity && (c.scrollParent[0].scrollLeft = e = c.scrollParent[0].scrollLeft - d.scrollSpeed))) : (d.axis && "x" === d.axis || (b.pageY - a(document).scrollTop() < d.scrollSensitivity ? e = a(document).scrollTop(a(document).scrollTop() - d.scrollSpeed) : a(window).height() - (b.pageY - a(document).scrollTop()) < d.scrollSensitivity && (e = a(document).scrollTop(a(document).scrollTop() + d.scrollSpeed))), d.axis && "y" === d.axis || (b.pageX - a(document).scrollLeft() < d.scrollSensitivity ? e = a(document).scrollLeft(a(document).scrollLeft() - d.scrollSpeed) : a(window).width() - (b.pageX - a(document).scrollLeft()) < d.scrollSensitivity && (e = a(document).scrollLeft(a(document).scrollLeft() + d.scrollSpeed)))), e !== !1 && a.ui.ddmanager && !d.dropBehaviour && a.ui.ddmanager.prepareOffsets(c, b)
			}
		}), a.ui.plugin.add("draggable", "snap", {
			start: function() {
				var b = a(this).data("ui-draggable"),
					c = b.options;
				b.snapElements = [], a(c.snap.constructor !== String ? c.snap.items || ":data(ui-draggable)" : c.snap).each(function() {
					var c = a(this),
						d = c.offset();
					this !== b.element[0] && b.snapElements.push({
						item: this,
						width: c.outerWidth(),
						height: c.outerHeight(),
						top: d.top,
						left: d.left
					})
				})
			},
			drag: function(b, c) {
				var d, e, f, g, h, i, j, k, l, m, n = a(this).data("ui-draggable"),
					o = n.options,
					p = o.snapTolerance,
					q = c.offset.left,
					r = q + n.helperProportions.width,
					s = c.offset.top,
					t = s + n.helperProportions.height;
				for (l = n.snapElements.length - 1; l >= 0; l--) h = n.snapElements[l].left, i = h + n.snapElements[l].width, j = n.snapElements[l].top, k = j + n.snapElements[l].height, r < h - p || q > i + p || t < j - p || s > k + p || !a.contains(n.snapElements[l].item.ownerDocument, n.snapElements[l].item) ? (n.snapElements[l].snapping && n.options.snap.release && n.options.snap.release.call(n.element, b, a.extend(n._uiHash(), {
					snapItem: n.snapElements[l].item
				})), n.snapElements[l].snapping = !1) : ("inner" !== o.snapMode && (d = Math.abs(j - t) <= p, e = Math.abs(k - s) <= p, f = Math.abs(h - r) <= p, g = Math.abs(i - q) <= p, d && (c.position.top = n._convertPositionTo("relative", {
					top: j - n.helperProportions.height,
					left: 0
				}).top - n.margins.top), e && (c.position.top = n._convertPositionTo("relative", {
					top: k,
					left: 0
				}).top - n.margins.top), f && (c.position.left = n._convertPositionTo("relative", {
					top: 0,
					left: h - n.helperProportions.width
				}).left - n.margins.left), g && (c.position.left = n._convertPositionTo("relative", {
					top: 0,
					left: i
				}).left - n.margins.left)), m = d || e || f || g, "outer" !== o.snapMode && (d = Math.abs(j - s) <= p, e = Math.abs(k - t) <= p, f = Math.abs(h - q) <= p, g = Math.abs(i - r) <= p, d && (c.position.top = n._convertPositionTo("relative", {
					top: j,
					left: 0
				}).top - n.margins.top), e && (c.position.top = n._convertPositionTo("relative", {
					top: k - n.helperProportions.height,
					left: 0
				}).top - n.margins.top), f && (c.position.left = n._convertPositionTo("relative", {
					top: 0,
					left: h
				}).left - n.margins.left), g && (c.position.left = n._convertPositionTo("relative", {
					top: 0,
					left: i - n.helperProportions.width
				}).left - n.margins.left)), !n.snapElements[l].snapping && (d || e || f || g || m) && n.options.snap.snap && n.options.snap.snap.call(n.element, b, a.extend(n._uiHash(), {
					snapItem: n.snapElements[l].item
				})), n.snapElements[l].snapping = d || e || f || g || m)
			}
		}), a.ui.plugin.add("draggable", "stack", {
			start: function() {
				var b, c = this.data("ui-draggable").options,
					d = a.makeArray(a(c.stack)).sort(function(b, c) {
						return (parseInt(a(b).css("zIndex"), 10) || 0) - (parseInt(a(c).css("zIndex"), 10) || 0)
					});
				d.length && (b = parseInt(a(d[0]).css("zIndex"), 10) || 0, a(d).each(function(c) {
					a(this).css("zIndex", b + c)
				}), this.css("zIndex", b + d.length))
			}
		}), a.ui.plugin.add("draggable", "zIndex", {
			start: function(b, c) {
				var d = a(c.helper),
					e = a(this).data("ui-draggable").options;
				d.css("zIndex") && (e._zIndex = d.css("zIndex")), d.css("zIndex", e.zIndex)
			},
			stop: function(b, c) {
				var d = a(this).data("ui-draggable").options;
				d._zIndex && a(c.helper).css("zIndex", d._zIndex)
			}
		})
	}(jQuery),
	function(a, b) {
		function c(a, b, c) {
			return a > b && a < b + c
		}
		a.widget("ui.droppable", {
			version: "1.10.3",
			widgetEventPrefix: "drop",
			options: {
				accept: "*",
				activeClass: !1,
				addClasses: !0,
				greedy: !1,
				hoverClass: !1,
				scope: "default",
				tolerance: "intersect",
				activate: null,
				deactivate: null,
				drop: null,
				out: null,
				over: null
			},
			_create: function() {
				var b = this.options,
					c = b.accept;
				this.isover = !1, this.isout = !0, this.accept = a.isFunction(c) ? c : function(a) {
					return a.is(c)
				}, this.proportions = {
					width: this.element[0].offsetWidth,
					height: this.element[0].offsetHeight
				}, a.ui.ddmanager.droppables[b.scope] = a.ui.ddmanager.droppables[b.scope] || [], a.ui.ddmanager.droppables[b.scope].push(this), b.addClasses && this.element.addClass("ui-droppable")
			},
			_destroy: function() {
				for (var b = 0, c = a.ui.ddmanager.droppables[this.options.scope]; b < c.length; b++) c[b] === this && c.splice(b, 1);
				this.element.removeClass("ui-droppable ui-droppable-disabled")
			},
			_setOption: function(b, c) {
				"accept" === b && (this.accept = a.isFunction(c) ? c : function(a) {
					return a.is(c)
				}), a.Widget.prototype._setOption.apply(this, arguments)
			},
			_activate: function(b) {
				var c = a.ui.ddmanager.current;
				this.options.activeClass && this.element.addClass(this.options.activeClass), c && this._trigger("activate", b, this.ui(c))
			},
			_deactivate: function(b) {
				var c = a.ui.ddmanager.current;
				this.options.activeClass && this.element.removeClass(this.options.activeClass), c && this._trigger("deactivate", b, this.ui(c))
			},
			_over: function(b) {
				var c = a.ui.ddmanager.current;
				c && (c.currentItem || c.element)[0] !== this.element[0] && this.accept.call(this.element[0], c.currentItem || c.element) && (this.options.hoverClass && this.element.addClass(this.options.hoverClass), this._trigger("over", b, this.ui(c)))
			},
			_out: function(b) {
				var c = a.ui.ddmanager.current;
				c && (c.currentItem || c.element)[0] !== this.element[0] && this.accept.call(this.element[0], c.currentItem || c.element) && (this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("out", b, this.ui(c)))
			},
			_drop: function(b, c) {
				var d = c || a.ui.ddmanager.current,
					e = !1;
				return !(!d || (d.currentItem || d.element)[0] === this.element[0]) && (this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function() {
					var b = a.data(this, "ui-droppable");
					if (b.options.greedy && !b.options.disabled && b.options.scope === d.options.scope && b.accept.call(b.element[0], d.currentItem || d.element) && a.ui.intersect(d, a.extend(b, {
						offset: b.element.offset()
					}), b.options.tolerance)) return e = !0, !1
				}), !e && (!!this.accept.call(this.element[0], d.currentItem || d.element) && (this.options.activeClass && this.element.removeClass(this.options.activeClass), this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("drop", b, this.ui(d)), this.element)))
			},
			ui: function(a) {
				return {
					draggable: a.currentItem || a.element,
					helper: a.helper,
					position: a.position,
					offset: a.positionAbs
				}
			}
		}), a.ui.intersect = function(a, b, d) {
			if (!b.offset) return !1;
			var e, f, g = (a.positionAbs || a.position.absolute).left,
				h = g + a.helperProportions.width,
				i = (a.positionAbs || a.position.absolute).top,
				j = i + a.helperProportions.height,
				k = b.offset.left,
				l = k + b.proportions.width,
				m = b.offset.top,
				n = m + b.proportions.height;
			switch (d) {
				case "fit":
					return k <= g && h <= l && m <= i && j <= n;
				case "intersect":
					return k < g + a.helperProportions.width / 2 && h - a.helperProportions.width / 2 < l && m < i + a.helperProportions.height / 2 && j - a.helperProportions.height / 2 < n;
				case "pointer":
					return e = (a.positionAbs || a.position.absolute).left + (a.clickOffset || a.offset.click).left, f = (a.positionAbs || a.position.absolute).top + (a.clickOffset || a.offset.click).top, c(f, m, b.proportions.height) && c(e, k, b.proportions.width);
				case "touch":
					return (i >= m && i <= n || j >= m && j <= n || i < m && j > n) && (g >= k && g <= l || h >= k && h <= l || g < k && h > l);
				default:
					return !1
			}
		}, a.ui.ddmanager = {
			current: null,
			droppables: {
				default: []
			},
			prepareOffsets: function(b, c) {
				var d, e, f = a.ui.ddmanager.droppables[b.options.scope] || [],
					g = c ? c.type : null,
					h = (b.currentItem || b.element).find(":data(ui-droppable)").addBack();
				a: for (d = 0; d < f.length; d++)
					if (!(f[d].options.disabled || b && !f[d].accept.call(f[d].element[0], b.currentItem || b.element))) {
						for (e = 0; e < h.length; e++)
							if (h[e] === f[d].element[0]) {
								f[d].proportions.height = 0;
								continue a
							}
						f[d].visible = "none" !== f[d].element.css("display"), f[d].visible && ("mousedown" === g && f[d]._activate.call(f[d], c), f[d].offset = f[d].element.offset(), f[d].proportions = {
							width: f[d].element[0].offsetWidth,
							height: f[d].element[0].offsetHeight
						})
					}
			},
			drop: function(b, c) {
				var d = !1;
				return a.each((a.ui.ddmanager.droppables[b.options.scope] || []).slice(), function() {
					this.options && (!this.options.disabled && this.visible && a.ui.intersect(b, this, this.options.tolerance) && (d = this._drop.call(this, c) || d), !this.options.disabled && this.visible && this.accept.call(this.element[0], b.currentItem || b.element) && (this.isout = !0, this.isover = !1, this._deactivate.call(this, c)))
				}), d
			},
			dragStart: function(b, c) {
				b.element.parentsUntil("body").bind("scroll.droppable", function() {
					b.options.refreshPositions || a.ui.ddmanager.prepareOffsets(b, c)
				})
			},
			drag: function(b, c) {
				b.options.refreshPositions && a.ui.ddmanager.prepareOffsets(b, c), a.each(a.ui.ddmanager.droppables[b.options.scope] || [], function() {
					if (!this.options.disabled && !this.greedyChild && this.visible) {
						var d, e, f, g = a.ui.intersect(b, this, this.options.tolerance),
							h = !g && this.isover ? "isout" : g && !this.isover ? "isover" : null;
						h && (this.options.greedy && (e = this.options.scope, f = this.element.parents(":data(ui-droppable)").filter(function() {
							return a.data(this, "ui-droppable").options.scope === e
						}), f.length && (d = a.data(f[0], "ui-droppable"), d.greedyChild = "isover" === h)), d && "isover" === h && (d.isover = !1, d.isout = !0, d._out.call(d, c)), this[h] = !0, this["isout" === h ? "isover" : "isout"] = !1, this["isover" === h ? "_over" : "_out"].call(this, c), d && "isout" === h && (d.isout = !1, d.isover = !0, d._over.call(d, c)))
					}
				})
			},
			dragStop: function(b, c) {
				b.element.parentsUntil("body").unbind("scroll.droppable"), b.options.refreshPositions || a.ui.ddmanager.prepareOffsets(b, c)
			}
		}
	}(jQuery),
	function(a, b) {
		function c(a) {
			return parseInt(a, 10) || 0
		}

		function d(a) {
			return !isNaN(parseInt(a, 10))
		}
		a.widget("ui.resizable", a.ui.mouse, {
			version: "1.10.3",
			widgetEventPrefix: "resize",
			options: {
				alsoResize: !1,
				animate: !1,
				animateDuration: "slow",
				animateEasing: "swing",
				aspectRatio: !1,
				autoHide: !1,
				containment: !1,
				ghost: !1,
				grid: !1,
				handles: "e,s,se",
				helper: !1,
				maxHeight: null,
				maxWidth: null,
				minHeight: 10,
				minWidth: 10,
				zIndex: 90,
				resize: null,
				start: null,
				stop: null
			},
			_create: function() {
				var b, c, d, e, f, g = this,
					h = this.options;
				if (this.element.addClass("ui-resizable"), a.extend(this, {
					_aspectRatio: !!h.aspectRatio,
					aspectRatio: h.aspectRatio,
					originalElement: this.element,
					_proportionallyResizeElements: [],
					_helper: h.helper || h.ghost || h.animate ? h.helper || "ui-resizable-helper" : null
				}), this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i) && (this.element.wrap(a("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({
					position: this.element.css("position"),
					width: this.element.outerWidth(),
					height: this.element.outerHeight(),
					top: this.element.css("top"),
					left: this.element.css("left")
				})), this.element = this.element.parent().data("ui-resizable", this.element.data("ui-resizable")), this.elementIsWrapper = !0, this.element.css({
					marginLeft: this.originalElement.css("marginLeft"),
					marginTop: this.originalElement.css("marginTop"),
					marginRight: this.originalElement.css("marginRight"),
					marginBottom: this.originalElement.css("marginBottom")
				}), this.originalElement.css({
					marginLeft: 0,
					marginTop: 0,
					marginRight: 0,
					marginBottom: 0
				}), this.originalResizeStyle = this.originalElement.css("resize"), this.originalElement.css("resize", "none"), this._proportionallyResizeElements.push(this.originalElement.css({
					position: "static",
					zoom: 1,
					display: "block"
				})), this.originalElement.css({
					margin: this.originalElement.css("margin")
				}), this._proportionallyResize()), this.handles = h.handles || (a(".ui-resizable-handle", this.element).length ? {
					n: ".ui-resizable-n",
					e: ".ui-resizable-e",
					s: ".ui-resizable-s",
					w: ".ui-resizable-w",
					se: ".ui-resizable-se",
					sw: ".ui-resizable-sw",
					ne: ".ui-resizable-ne",
					nw: ".ui-resizable-nw"
				} : "e,s,se"), this.handles.constructor === String)
					for ("all" === this.handles && (this.handles = "n,e,s,w,se,sw,ne,nw"), b = this.handles.split(","), this.handles = {}, c = 0; c < b.length; c++) d = a.trim(b[c]), f = "ui-resizable-" + d, e = a("<div class='ui-resizable-handle " + f + "'></div>"), e.css({
						zIndex: h.zIndex
					}), "se" === d && e.addClass("ui-icon ui-icon-gripsmall-diagonal-se"), this.handles[d] = ".ui-resizable-" + d, this.element.append(e);
				this._renderAxis = function(b) {
					var c, d, e, f;
					b = b || this.element;
					for (c in this.handles) this.handles[c].constructor === String && (this.handles[c] = a(this.handles[c], this.element).show()), this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i) && (d = a(this.handles[c], this.element), f = /sw|ne|nw|se|n|s/.test(c) ? d.outerHeight() : d.outerWidth(), e = ["padding", /ne|nw|n/.test(c) ? "Top" : /se|sw|s/.test(c) ? "Bottom" : /^e$/.test(c) ? "Right" : "Left"].join(""), b.css(e, f), this._proportionallyResize()), a(this.handles[c]).length
				}, this._renderAxis(this.element), this._handles = a(".ui-resizable-handle", this.element).disableSelection(), this._handles.mouseover(function() {
					g.resizing || (this.className && (e = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)), g.axis = e && e[1] ? e[1] : "se")
				}), h.autoHide && (this._handles.hide(), a(this.element).addClass("ui-resizable-autohide").mouseenter(function() {
					h.disabled || (a(this).removeClass("ui-resizable-autohide"), g._handles.show())
				}).mouseleave(function() {
						h.disabled || g.resizing || (a(this).addClass("ui-resizable-autohide"), g._handles.hide())
					})), this._mouseInit()
			},
			_destroy: function() {
				this._mouseDestroy();
				var b, c = function(b) {
					a(b).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()
				};
				return this.elementIsWrapper && (c(this.element), b = this.element, this.originalElement.css({
					position: b.css("position"),
					width: b.outerWidth(),
					height: b.outerHeight(),
					top: b.css("top"),
					left: b.css("left")
				}).insertAfter(b), b.remove()), this.originalElement.css("resize", this.originalResizeStyle), c(this.originalElement), this
			},
			_mouseCapture: function(b) {
				var c, d, e = !1;
				for (c in this.handles) d = a(this.handles[c])[0], (d === b.target || a.contains(d, b.target)) && (e = !0);
				return !this.options.disabled && e
			},
			_mouseStart: function(b) {
				var d, e, f, g = this.options,
					h = this.element.position(),
					i = this.element;
				return this.resizing = !0, /absolute/.test(i.css("position")) ? i.css({
					position: "absolute",
					top: i.css("top"),
					left: i.css("left")
				}) : i.is(".ui-draggable") && i.css({
					position: "absolute",
					top: h.top,
					left: h.left
				}), this._renderProxy(), d = c(this.helper.css("left")), e = c(this.helper.css("top")), g.containment && (d += a(g.containment).scrollLeft() || 0, e += a(g.containment).scrollTop() || 0), this.offset = this.helper.offset(), this.position = {
					left: d,
					top: e
				}, this.size = this._helper ? {
					width: i.outerWidth(),
					height: i.outerHeight()
				} : {
					width: i.width(),
					height: i.height()
				}, this.originalSize = this._helper ? {
					width: i.outerWidth(),
					height: i.outerHeight()
				} : {
					width: i.width(),
					height: i.height()
				}, this.originalPosition = {
					left: d,
					top: e
				}, this.sizeDiff = {
					width: i.outerWidth() - i.width(),
					height: i.outerHeight() - i.height()
				}, this.originalMousePosition = {
					left: b.pageX,
					top: b.pageY
				}, this.aspectRatio = "number" == typeof g.aspectRatio ? g.aspectRatio : this.originalSize.width / this.originalSize.height || 1, f = a(".ui-resizable-" + this.axis).css("cursor"), a("body").css("cursor", "auto" === f ? this.axis + "-resize" : f), i.addClass("ui-resizable-resizing"), this._propagate("start", b), !0
			},
			_mouseDrag: function(b) {
				var c, d = this.helper,
					e = {},
					f = this.originalMousePosition,
					g = this.axis,
					h = this.position.top,
					i = this.position.left,
					j = this.size.width,
					k = this.size.height,
					l = b.pageX - f.left || 0,
					m = b.pageY - f.top || 0,
					n = this._change[g];
				return !!n && (c = n.apply(this, [b, l, m]), this._updateVirtualBoundaries(b.shiftKey), (this._aspectRatio || b.shiftKey) && (c = this._updateRatio(c, b)), c = this._respectSize(c, b), this._updateCache(c), this._propagate("resize", b), this.position.top !== h && (e.top = this.position.top + "px"), this.position.left !== i && (e.left = this.position.left + "px"), this.size.width !== j && (e.width = this.size.width + "px"), this.size.height !== k && (e.height = this.size.height + "px"), d.css(e), !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(), a.isEmptyObject(e) || this._trigger("resize", b, this.ui()), !1)
			},
			_mouseStop: function(b) {
				this.resizing = !1;
				var c, d, e, f, g, h, i, j = this.options,
					k = this;
				return this._helper && (c = this._proportionallyResizeElements, d = c.length && /textarea/i.test(c[0].nodeName), e = d && a.ui.hasScroll(c[0], "left") ? 0 : k.sizeDiff.height, f = d ? 0 : k.sizeDiff.width, g = {
					width: k.helper.width() - f,
					height: k.helper.height() - e
				}, h = parseInt(k.element.css("left"), 10) + (k.position.left - k.originalPosition.left) || null, i = parseInt(k.element.css("top"), 10) + (k.position.top - k.originalPosition.top) || null, j.animate || this.element.css(a.extend(g, {
					top: i,
					left: h
				})), k.helper.height(k.size.height), k.helper.width(k.size.width), this._helper && !j.animate && this._proportionallyResize()), a("body").css("cursor", "auto"), this.element.removeClass("ui-resizable-resizing"), this._propagate("stop", b), this._helper && this.helper.remove(), !1
			},
			_updateVirtualBoundaries: function(a) {
				var b, c, e, f, g, h = this.options;
				g = {
					minWidth: d(h.minWidth) ? h.minWidth : 0,
					maxWidth: d(h.maxWidth) ? h.maxWidth : 1 / 0,
					minHeight: d(h.minHeight) ? h.minHeight : 0,
					maxHeight: d(h.maxHeight) ? h.maxHeight : 1 / 0
				}, (this._aspectRatio || a) && (b = g.minHeight * this.aspectRatio, e = g.minWidth / this.aspectRatio, c = g.maxHeight * this.aspectRatio, f = g.maxWidth / this.aspectRatio, b > g.minWidth && (g.minWidth = b), e > g.minHeight && (g.minHeight = e), c < g.maxWidth && (g.maxWidth = c), f < g.maxHeight && (g.maxHeight = f)), this._vBoundaries = g
			},
			_updateCache: function(a) {
				this.offset = this.helper.offset(), d(a.left) && (this.position.left = a.left), d(a.top) && (this.position.top = a.top), d(a.height) && (this.size.height = a.height), d(a.width) && (this.size.width = a.width)
			},
			_updateRatio: function(a) {
				var b = this.position,
					c = this.size,
					e = this.axis;
				return d(a.height) ? a.width = a.height * this.aspectRatio : d(a.width) && (a.height = a.width / this.aspectRatio), "sw" === e && (a.left = b.left + (c.width - a.width), a.top = null), "nw" === e && (a.top = b.top + (c.height - a.height), a.left = b.left + (c.width - a.width)), a
			},
			_respectSize: function(a) {
				var b = this._vBoundaries,
					c = this.axis,
					e = d(a.width) && b.maxWidth && b.maxWidth < a.width,
					f = d(a.height) && b.maxHeight && b.maxHeight < a.height,
					g = d(a.width) && b.minWidth && b.minWidth > a.width,
					h = d(a.height) && b.minHeight && b.minHeight > a.height,
					i = this.originalPosition.left + this.originalSize.width,
					j = this.position.top + this.size.height,
					k = /sw|nw|w/.test(c),
					l = /nw|ne|n/.test(c);
				return g && (a.width = b.minWidth), h && (a.height = b.minHeight), e && (a.width = b.maxWidth), f && (a.height = b.maxHeight), g && k && (a.left = i - b.minWidth), e && k && (a.left = i - b.maxWidth), h && l && (a.top = j - b.minHeight), f && l && (a.top = j - b.maxHeight), a.width || a.height || a.left || !a.top ? a.width || a.height || a.top || !a.left || (a.left = null) : a.top = null, a
			},
			_proportionallyResize: function() {
				if (this._proportionallyResizeElements.length) {
					var a, b, c, d, e, f = this.helper || this.element;
					for (a = 0; a < this._proportionallyResizeElements.length; a++) {
						if (e = this._proportionallyResizeElements[a], !this.borderDif)
							for (this.borderDif = [], c = [e.css("borderTopWidth"), e.css("borderRightWidth"), e.css("borderBottomWidth"), e.css("borderLeftWidth")], d = [e.css("paddingTop"), e.css("paddingRight"), e.css("paddingBottom"), e.css("paddingLeft")], b = 0; b < c.length; b++) this.borderDif[b] = (parseInt(c[b], 10) || 0) + (parseInt(d[b], 10) || 0);
						e.css({
							height: f.height() - this.borderDif[0] - this.borderDif[2] || 0,
							width: f.width() - this.borderDif[1] - this.borderDif[3] || 0
						})
					}
				}
			},
			_renderProxy: function() {
				var b = this.element,
					c = this.options;
				this.elementOffset = b.offset(), this._helper ? (this.helper = this.helper || a("<div style='overflow:hidden;'></div>"), this.helper.addClass(this._helper).css({
					width: this.element.outerWidth() - 1,
					height: this.element.outerHeight() - 1,
					position: "absolute",
					left: this.elementOffset.left + "px",
					top: this.elementOffset.top + "px",
					zIndex: ++c.zIndex
				}), this.helper.appendTo("body").disableSelection()) : this.helper = this.element
			},
			_change: {
				e: function(a, b) {
					return {
						width: this.originalSize.width + b
					}
				},
				w: function(a, b) {
					var c = this.originalSize,
						d = this.originalPosition;
					return {
						left: d.left + b,
						width: c.width - b
					}
				},
				n: function(a, b, c) {
					var d = this.originalSize,
						e = this.originalPosition;
					return {
						top: e.top + c,
						height: d.height - c
					}
				},
				s: function(a, b, c) {
					return {
						height: this.originalSize.height + c
					}
				},
				se: function(b, c, d) {
					return a.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [b, c, d]))
				},
				sw: function(b, c, d) {
					return a.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [b, c, d]))
				},
				ne: function(b, c, d) {
					return a.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [b, c, d]))
				},
				nw: function(b, c, d) {
					return a.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [b, c, d]))
				}
			},
			_propagate: function(b, c) {
				a.ui.plugin.call(this, b, [c, this.ui()]), "resize" !== b && this._trigger(b, c, this.ui())
			},
			plugins: {},
			ui: function() {
				return {
					originalElement: this.originalElement,
					element: this.element,
					helper: this.helper,
					position: this.position,
					size: this.size,
					originalSize: this.originalSize,
					originalPosition: this.originalPosition
				}
			}
		}), a.ui.plugin.add("resizable", "animate", {
			stop: function(b) {
				var c = a(this).data("ui-resizable"),
					d = c.options,
					e = c._proportionallyResizeElements,
					f = e.length && /textarea/i.test(e[0].nodeName),
					g = f && a.ui.hasScroll(e[0], "left") ? 0 : c.sizeDiff.height,
					h = f ? 0 : c.sizeDiff.width,
					i = {
						width: c.size.width - h,
						height: c.size.height - g
					},
					j = parseInt(c.element.css("left"), 10) + (c.position.left - c.originalPosition.left) || null,
					k = parseInt(c.element.css("top"), 10) + (c.position.top - c.originalPosition.top) || null;
				c.element.animate(a.extend(i, k && j ? {
					top: k,
					left: j
				} : {}), {
					duration: d.animateDuration,
					easing: d.animateEasing,
					step: function() {
						var d = {
							width: parseInt(c.element.css("width"), 10),
							height: parseInt(c.element.css("height"), 10),
							top: parseInt(c.element.css("top"), 10),
							left: parseInt(c.element.css("left"), 10)
						};
						e && e.length && a(e[0]).css({
							width: d.width,
							height: d.height
						}), c._updateCache(d), c._propagate("resize", b)
					}
				})
			}
		}), a.ui.plugin.add("resizable", "containment", {
			start: function() {
				var b, d, e, f, g, h, i, j = a(this).data("ui-resizable"),
					k = j.options,
					l = j.element,
					m = k.containment,
					n = m instanceof a ? m.get(0) : /parent/.test(m) ? l.parent().get(0) : m;
				n && (j.containerElement = a(n), /document/.test(m) || m === document ? (j.containerOffset = {
					left: 0,
					top: 0
				}, j.containerPosition = {
					left: 0,
					top: 0
				}, j.parentData = {
					element: a(document),
					left: 0,
					top: 0,
					width: a(document).width(),
					height: a(document).height() || document.body.parentNode.scrollHeight
				}) : (b = a(n), d = [], a(["Top", "Right", "Left", "Bottom"]).each(function(a, e) {
					d[a] = c(b.css("padding" + e))
				}), j.containerOffset = b.offset(), j.containerPosition = b.position(), j.containerSize = {
					height: b.innerHeight() - d[3],
					width: b.innerWidth() - d[1]
				}, e = j.containerOffset, f = j.containerSize.height, g = j.containerSize.width, h = a.ui.hasScroll(n, "left") ? n.scrollWidth : g, i = a.ui.hasScroll(n) ? n.scrollHeight : f, j.parentData = {
					element: n,
					left: e.left,
					top: e.top,
					width: h,
					height: i
				}))
			},
			resize: function(b) {
				var c, d, e, f, g = a(this).data("ui-resizable"),
					h = g.options,
					i = g.containerOffset,
					j = g.position,
					k = g._aspectRatio || b.shiftKey,
					l = {
						top: 0,
						left: 0
					},
					m = g.containerElement;
				m[0] !== document && /static/.test(m.css("position")) && (l = i), j.left < (g._helper ? i.left : 0) && (g.size.width = g.size.width + (g._helper ? g.position.left - i.left : g.position.left - l.left), k && (g.size.height = g.size.width / g.aspectRatio), g.position.left = h.helper ? i.left : 0), j.top < (g._helper ? i.top : 0) && (g.size.height = g.size.height + (g._helper ? g.position.top - i.top : g.position.top), k && (g.size.width = g.size.height * g.aspectRatio), g.position.top = g._helper ? i.top : 0), g.offset.left = g.parentData.left + g.position.left, g.offset.top = g.parentData.top + g.position.top, c = Math.abs((g._helper ? g.offset.left - l.left : g.offset.left - l.left) + g.sizeDiff.width), d = Math.abs((g._helper ? g.offset.top - l.top : g.offset.top - i.top) + g.sizeDiff.height), e = g.containerElement.get(0) === g.element.parent().get(0), f = /relative|absolute/.test(g.containerElement.css("position")), e && f && (c -= g.parentData.left), c + g.size.width >= g.parentData.width && (g.size.width = g.parentData.width - c, k && (g.size.height = g.size.width / g.aspectRatio)), d + g.size.height >= g.parentData.height && (g.size.height = g.parentData.height - d, k && (g.size.width = g.size.height * g.aspectRatio))
			},
			stop: function() {
				var b = a(this).data("ui-resizable"),
					c = b.options,
					d = b.containerOffset,
					e = b.containerPosition,
					f = b.containerElement,
					g = a(b.helper),
					h = g.offset(),
					i = g.outerWidth() - b.sizeDiff.width,
					j = g.outerHeight() - b.sizeDiff.height;
				b._helper && !c.animate && /relative/.test(f.css("position")) && a(this).css({
					left: h.left - e.left - d.left,
					width: i,
					height: j
				}), b._helper && !c.animate && /static/.test(f.css("position")) && a(this).css({
					left: h.left - e.left - d.left,
					width: i,
					height: j
				})
			}
		}), a.ui.plugin.add("resizable", "alsoResize", {
			start: function() {
				var b = a(this).data("ui-resizable"),
					c = b.options,
					d = function(b) {
						a(b).each(function() {
							var b = a(this);
							b.data("ui-resizable-alsoresize", {
								width: parseInt(b.width(), 10),
								height: parseInt(b.height(), 10),
								left: parseInt(b.css("left"), 10),
								top: parseInt(b.css("top"), 10)
							})
						})
					};
				"object" != typeof c.alsoResize || c.alsoResize.parentNode ? d(c.alsoResize) : c.alsoResize.length ? (c.alsoResize = c.alsoResize[0], d(c.alsoResize)) : a.each(c.alsoResize, function(a) {
					d(a)
				})
			},
			resize: function(b, c) {
				var d = a(this).data("ui-resizable"),
					e = d.options,
					f = d.originalSize,
					g = d.originalPosition,
					h = {
						height: d.size.height - f.height || 0,
						width: d.size.width - f.width || 0,
						top: d.position.top - g.top || 0,
						left: d.position.left - g.left || 0
					},
					i = function(b, d) {
						a(b).each(function() {
							var b = a(this),
								e = a(this).data("ui-resizable-alsoresize"),
								f = {},
								g = d && d.length ? d : b.parents(c.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
							a.each(g, function(a, b) {
								var c = (e[b] || 0) + (h[b] || 0);
								c && c >= 0 && (f[b] = c || null)
							}), b.css(f)
						})
					};
				"object" != typeof e.alsoResize || e.alsoResize.nodeType ? i(e.alsoResize) : a.each(e.alsoResize, function(a, b) {
					i(a, b)
				})
			},
			stop: function() {
				a(this).removeData("resizable-alsoresize")
			}
		}), a.ui.plugin.add("resizable", "ghost", {
			start: function() {
				var b = a(this).data("ui-resizable"),
					c = b.options,
					d = b.size;
				b.ghost = b.originalElement.clone(), b.ghost.css({
					opacity: .25,
					display: "block",
					position: "relative",
					height: d.height,
					width: d.width,
					margin: 0,
					left: 0,
					top: 0
				}).addClass("ui-resizable-ghost").addClass("string" == typeof c.ghost ? c.ghost : ""), b.ghost.appendTo(b.helper)
			},
			resize: function() {
				var b = a(this).data("ui-resizable");
				b.ghost && b.ghost.css({
					position: "relative",
					height: b.size.height,
					width: b.size.width
				})
			},
			stop: function() {
				var b = a(this).data("ui-resizable");
				b.ghost && b.helper && b.helper.get(0).removeChild(b.ghost.get(0))
			}
		}), a.ui.plugin.add("resizable", "grid", {
			resize: function() {
				var b = a(this).data("ui-resizable"),
					c = b.options,
					d = b.size,
					e = b.originalSize,
					f = b.originalPosition,
					g = b.axis,
					h = "number" == typeof c.grid ? [c.grid, c.grid] : c.grid,
					i = h[0] || 1,
					j = h[1] || 1,
					k = Math.round((d.width - e.width) / i) * i,
					l = Math.round((d.height - e.height) / j) * j,
					m = e.width + k,
					n = e.height + l,
					o = c.maxWidth && c.maxWidth < m,
					p = c.maxHeight && c.maxHeight < n,
					q = c.minWidth && c.minWidth > m,
					r = c.minHeight && c.minHeight > n;
				c.grid = h, q && (m += i), r && (n += j), o && (m -= i), p && (n -= j), /^(se|s|e)$/.test(g) ? (b.size.width = m, b.size.height = n) : /^(ne)$/.test(g) ? (b.size.width = m, b.size.height = n, b.position.top = f.top - l) : /^(sw)$/.test(g) ? (b.size.width = m, b.size.height = n, b.position.left = f.left - k) : (b.size.width = m, b.size.height = n, b.position.top = f.top - l, b.position.left = f.left - k)
			}
		})
	}(jQuery),
	function(a, b) {
		a.widget("ui.selectable", a.ui.mouse, {
			version: "1.10.3",
			options: {
				appendTo: "body",
				autoRefresh: !0,
				distance: 0,
				filter: "*",
				tolerance: "touch",
				selected: null,
				selecting: null,
				start: null,
				stop: null,
				unselected: null,
				unselecting: null
			},
			_create: function() {
				var b, c = this;
				this.element.addClass("ui-selectable"), this.dragged = !1, this.refresh = function() {
					b = a(c.options.filter, c.element[0]), b.addClass("ui-selectee"), b.each(function() {
						var b = a(this),
							c = b.offset();
						a.data(this, "selectable-item", {
							element: this,
							$element: b,
							left: c.left,
							top: c.top,
							right: c.left + b.outerWidth(),
							bottom: c.top + b.outerHeight(),
							startselected: !1,
							selected: b.hasClass("ui-selected"),
							selecting: b.hasClass("ui-selecting"),
							unselecting: b.hasClass("ui-unselecting")
						})
					})
				}, this.refresh(), this.selectees = b.addClass("ui-selectee"), this._mouseInit(), this.helper = a("<div class='ui-selectable-helper'></div>")
			},
			_destroy: function() {
				this.selectees.removeClass("ui-selectee").removeData("selectable-item"), this.element.removeClass("ui-selectable ui-selectable-disabled"), this._mouseDestroy()
			},
			_mouseStart: function(b) {
				var c = this,
					d = this.options;
				this.opos = [b.pageX, b.pageY], this.options.disabled || (this.selectees = a(d.filter, this.element[0]), this._trigger("start", b), a(d.appendTo).append(this.helper), this.helper.css({
					left: b.pageX,
					top: b.pageY,
					width: 0,
					height: 0
				}), d.autoRefresh && this.refresh(), this.selectees.filter(".ui-selected").each(function() {
					var d = a.data(this, "selectable-item");
					d.startselected = !0, b.metaKey || b.ctrlKey || (d.$element.removeClass("ui-selected"), d.selected = !1, d.$element.addClass("ui-unselecting"), d.unselecting = !0, c._trigger("unselecting", b, {
						unselecting: d.element
					}))
				}), a(b.target).parents().addBack().each(function() {
					var d, e = a.data(this, "selectable-item");
					if (e) return d = !b.metaKey && !b.ctrlKey || !e.$element.hasClass("ui-selected"), e.$element.removeClass(d ? "ui-unselecting" : "ui-selected").addClass(d ? "ui-selecting" : "ui-unselecting"), e.unselecting = !d, e.selecting = d, e.selected = d, d ? c._trigger("selecting", b, {
						selecting: e.element
					}) : c._trigger("unselecting", b, {
						unselecting: e.element
					}), !1
				}))
			},
			_mouseDrag: function(b) {
				if (this.dragged = !0, !this.options.disabled) {
					var c, d = this,
						e = this.options,
						f = this.opos[0],
						g = this.opos[1],
						h = b.pageX,
						i = b.pageY;
					return f > h && (c = h, h = f, f = c), g > i && (c = i, i = g, g = c), this.helper.css({
						left: f,
						top: g,
						width: h - f,
						height: i - g
					}), this.selectees.each(function() {
						var c = a.data(this, "selectable-item"),
							j = !1;
						c && c.element !== d.element[0] && ("touch" === e.tolerance ? j = !(c.left > h || c.right < f || c.top > i || c.bottom < g) : "fit" === e.tolerance && (j = c.left > f && c.right < h && c.top > g && c.bottom < i), j ? (c.selected && (c.$element.removeClass("ui-selected"), c.selected = !1), c.unselecting && (c.$element.removeClass("ui-unselecting"), c.unselecting = !1), c.selecting || (c.$element.addClass("ui-selecting"), c.selecting = !0, d._trigger("selecting", b, {
							selecting: c.element
						}))) : (c.selecting && ((b.metaKey || b.ctrlKey) && c.startselected ? (c.$element.removeClass("ui-selecting"), c.selecting = !1, c.$element.addClass("ui-selected"), c.selected = !0) : (c.$element.removeClass("ui-selecting"), c.selecting = !1, c.startselected && (c.$element.addClass("ui-unselecting"), c.unselecting = !0), d._trigger("unselecting", b, {
							unselecting: c.element
						}))), c.selected && (b.metaKey || b.ctrlKey || c.startselected || (c.$element.removeClass("ui-selected"), c.selected = !1, c.$element.addClass("ui-unselecting"), c.unselecting = !0, d._trigger("unselecting", b, {
							unselecting: c.element
						})))))
					}), !1
				}
			},
			_mouseStop: function(b) {
				var c = this;
				return this.dragged = !1, a(".ui-unselecting", this.element[0]).each(function() {
					var d = a.data(this, "selectable-item");
					d.$element.removeClass("ui-unselecting"), d.unselecting = !1, d.startselected = !1, c._trigger("unselected", b, {
						unselected: d.element
					})
				}), a(".ui-selecting", this.element[0]).each(function() {
					var d = a.data(this, "selectable-item");
					d.$element.removeClass("ui-selecting").addClass("ui-selected"), d.selecting = !1, d.selected = !0, d.startselected = !0, c._trigger("selected", b, {
						selected: d.element
					})
				}), this._trigger("stop", b), this.helper.remove(), !1
			}
		})
	}(jQuery),
	function(a, b) {
		function c(a, b, c) {
			return a > b && a < b + c
		}

		function d(a) {
			return /left|right/.test(a.css("float")) || /inline|table-cell/.test(a.css("display"))
		}
		a.widget("ui.sortable", a.ui.mouse, {
			version: "1.10.3",
			widgetEventPrefix: "sort",
			ready: !1,
			options: {
				appendTo: "parent",
				axis: !1,
				connectWith: !1,
				containment: !1,
				cursor: "auto",
				cursorAt: !1,
				dropOnEmpty: !0,
				forcePlaceholderSize: !1,
				forceHelperSize: !1,
				grid: !1,
				handle: !1,
				helper: "original",
				items: "> *",
				opacity: !1,
				placeholder: !1,
				revert: !1,
				scroll: !0,
				scrollSensitivity: 20,
				scrollSpeed: 20,
				scope: "default",
				tolerance: "intersect",
				zIndex: 1e3,
				activate: null,
				beforeStop: null,
				change: null,
				deactivate: null,
				out: null,
				over: null,
				receive: null,
				remove: null,
				sort: null,
				start: null,
				stop: null,
				update: null
			},
			_create: function() {
				var a = this.options;
				this.containerCache = {}, this.element.addClass("ui-sortable"), this.refresh(), this.floating = !!this.items.length && ("x" === a.axis || d(this.items[0].item)), this.offset = this.element.offset(), this._mouseInit(), this.ready = !0
			},
			_destroy: function() {
				this.element.removeClass("ui-sortable ui-sortable-disabled"), this._mouseDestroy();
				for (var a = this.items.length - 1; a >= 0; a--) this.items[a].item.removeData(this.widgetName + "-item");
				return this
			},
			_setOption: function(b, c) {
				"disabled" === b ? (this.options[b] = c, this.widget().toggleClass("ui-sortable-disabled", !!c)) : a.Widget.prototype._setOption.apply(this, arguments)
			},
			_mouseCapture: function(b, c) {
				var d = null,
					e = !1,
					f = this;
				return !this.reverting && (!this.options.disabled && "static" !== this.options.type && (this._refreshItems(b), a(b.target).parents().each(function() {
					if (a.data(this, f.widgetName + "-item") === f) return d = a(this), !1
				}), a.data(b.target, f.widgetName + "-item") === f && (d = a(b.target)), !!d && (!(this.options.handle && !c && (a(this.options.handle, d).find("*").addBack().each(function() {
					this === b.target && (e = !0)
				}), !e)) && (this.currentItem = d, this._removeCurrentsFromItems(), !0))))
			},
			_mouseStart: function(b, c, d) {
				var e, f, g = this.options;
				if (this.currentContainer = this, this.refreshPositions(), this.helper = this._createHelper(b), this._cacheHelperProportions(), this._cacheMargins(), this.scrollParent = this.helper.scrollParent(), this.offset = this.currentItem.offset(), this.offset = {
					top: this.offset.top - this.margins.top,
					left: this.offset.left - this.margins.left
				}, a.extend(this.offset, {
					click: {
						left: b.pageX - this.offset.left,
						top: b.pageY - this.offset.top
					},
					parent: this._getParentOffset(),
					relative: this._getRelativeOffset()
				}), this.helper.css("position", "absolute"), this.cssPosition = this.helper.css("position"), this.originalPosition = this._generatePosition(b), this.originalPageX = b.pageX, this.originalPageY = b.pageY, g.cursorAt && this._adjustOffsetFromHelper(g.cursorAt), this.domPosition = {
					prev: this.currentItem.prev()[0],
					parent: this.currentItem.parent()[0]
				}, this.helper[0] !== this.currentItem[0] && this.currentItem.hide(), this._createPlaceholder(), g.containment && this._setContainment(), g.cursor && "auto" !== g.cursor && (f = this.document.find("body"), this.storedCursor = f.css("cursor"), f.css("cursor", g.cursor), this.storedStylesheet = a("<style>*{ cursor: " + g.cursor + " !important; }</style>").appendTo(f)), g.opacity && (this.helper.css("opacity") && (this._storedOpacity = this.helper.css("opacity")), this.helper.css("opacity", g.opacity)), g.zIndex && (this.helper.css("zIndex") && (this._storedZIndex = this.helper.css("zIndex")), this.helper.css("zIndex", g.zIndex)), this.scrollParent[0] !== document && "HTML" !== this.scrollParent[0].tagName && (this.overflowOffset = this.scrollParent.offset()), this._trigger("start", b, this._uiHash()), this._preserveHelperProportions || this._cacheHelperProportions(), !d)
					for (e = this.containers.length - 1; e >= 0; e--) this.containers[e]._trigger("activate", b, this._uiHash(this));
				return a.ui.ddmanager && (a.ui.ddmanager.current = this), a.ui.ddmanager && !g.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, b), this.dragging = !0, this.helper.addClass("ui-sortable-helper"), this._mouseDrag(b), !0
			},
			_mouseDrag: function(b) {
				var c, d, e, f, g = this.options,
					h = !1;
				for (this.position = this._generatePosition(b), this.positionAbs = this._convertPositionTo("absolute"), this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs), this.options.scroll && (this.scrollParent[0] !== document && "HTML" !== this.scrollParent[0].tagName ? (this.overflowOffset.top + this.scrollParent[0].offsetHeight - b.pageY < g.scrollSensitivity ? this.scrollParent[0].scrollTop = h = this.scrollParent[0].scrollTop + g.scrollSpeed : b.pageY - this.overflowOffset.top < g.scrollSensitivity && (this.scrollParent[0].scrollTop = h = this.scrollParent[0].scrollTop - g.scrollSpeed), this.overflowOffset.left + this.scrollParent[0].offsetWidth - b.pageX < g.scrollSensitivity ? this.scrollParent[0].scrollLeft = h = this.scrollParent[0].scrollLeft + g.scrollSpeed : b.pageX - this.overflowOffset.left < g.scrollSensitivity && (this.scrollParent[0].scrollLeft = h = this.scrollParent[0].scrollLeft - g.scrollSpeed)) : (b.pageY - a(document).scrollTop() < g.scrollSensitivity ? h = a(document).scrollTop(a(document).scrollTop() - g.scrollSpeed) : a(window).height() - (b.pageY - a(document).scrollTop()) < g.scrollSensitivity && (h = a(document).scrollTop(a(document).scrollTop() + g.scrollSpeed)), b.pageX - a(document).scrollLeft() < g.scrollSensitivity ? h = a(document).scrollLeft(a(document).scrollLeft() - g.scrollSpeed) : a(window).width() - (b.pageX - a(document).scrollLeft()) < g.scrollSensitivity && (h = a(document).scrollLeft(a(document).scrollLeft() + g.scrollSpeed))), h !== !1 && a.ui.ddmanager && !g.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, b)), this.positionAbs = this._convertPositionTo("absolute"), this.options.axis && "y" === this.options.axis || (this.helper[0].style.left = this.position.left + "px"), this.options.axis && "x" === this.options.axis || (this.helper[0].style.top = this.position.top + "px"), c = this.items.length - 1; c >= 0; c--)
					if (d = this.items[c], e = d.item[0], f = this._intersectsWithPointer(d), f && d.instance === this.currentContainer && !(e === this.currentItem[0] || this.placeholder[1 === f ? "next" : "prev"]()[0] === e || a.contains(this.placeholder[0], e) || "semi-dynamic" === this.options.type && a.contains(this.element[0], e))) {
						if (this.direction = 1 === f ? "down" : "up", "pointer" !== this.options.tolerance && !this._intersectsWithSides(d)) break;
						this._rearrange(b, d), this._trigger("change", b, this._uiHash());
						break
					}
				return this._contactContainers(b), a.ui.ddmanager && a.ui.ddmanager.drag(this, b), this._trigger("sort", b, this._uiHash()), this.lastPositionAbs = this.positionAbs, !1
			},
			_mouseStop: function(b, c) {
				if (b) {
					if (a.ui.ddmanager && !this.options.dropBehaviour && a.ui.ddmanager.drop(this, b), this.options.revert) {
						var d = this,
							e = this.placeholder.offset(),
							f = this.options.axis,
							g = {};
						f && "x" !== f || (g.left = e.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === document.body ? 0 : this.offsetParent[0].scrollLeft)), f && "y" !== f || (g.top = e.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === document.body ? 0 : this.offsetParent[0].scrollTop)), this.reverting = !0, a(this.helper).animate(g, parseInt(this.options.revert, 10) || 500, function() {
							d._clear(b)
						})
					} else this._clear(b, c);
					return !1
				}
			},
			cancel: function() {
				if (this.dragging) {
					this._mouseUp({
						target: null
					}), "original" === this.options.helper ? this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") : this.currentItem.show();
					for (var b = this.containers.length - 1; b >= 0; b--) this.containers[b]._trigger("deactivate", null, this._uiHash(this)), this.containers[b].containerCache.over && (this.containers[b]._trigger("out", null, this._uiHash(this)), this.containers[b].containerCache.over = 0)
				}
				return this.placeholder && (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]), "original" !== this.options.helper && this.helper && this.helper[0].parentNode && this.helper.remove(), a.extend(this, {
					helper: null,
					dragging: !1,
					reverting: !1,
					_noFinalSort: null
				}), this.domPosition.prev ? a(this.domPosition.prev).after(this.currentItem) : a(this.domPosition.parent).prepend(this.currentItem)), this
			},
			serialize: function(b) {
				var c = this._getItemsAsjQuery(b && b.connected),
					d = [];
				return b = b || {}, a(c).each(function() {
					var c = (a(b.item || this).attr(b.attribute || "id") || "").match(b.expression || /(.+)[\-=_](.+)/);
					c && d.push((b.key || c[1] + "[]") + "=" + (b.key && b.expression ? c[1] : c[2]))
				}), !d.length && b.key && d.push(b.key + "="), d.join("&")
			},
			toArray: function(b) {
				var c = this._getItemsAsjQuery(b && b.connected),
					d = [];
				return b = b || {}, c.each(function() {
					d.push(a(b.item || this).attr(b.attribute || "id") || "")
				}), d
			},
			_intersectsWith: function(a) {
				var b = this.positionAbs.left,
					c = b + this.helperProportions.width,
					d = this.positionAbs.top,
					e = d + this.helperProportions.height,
					f = a.left,
					g = f + a.width,
					h = a.top,
					i = h + a.height,
					j = this.offset.click.top,
					k = this.offset.click.left,
					l = "x" === this.options.axis || d + j > h && d + j < i,
					m = "y" === this.options.axis || b + k > f && b + k < g,
					n = l && m;
				return "pointer" === this.options.tolerance || this.options.forcePointerForContainers || "pointer" !== this.options.tolerance && this.helperProportions[this.floating ? "width" : "height"] > a[this.floating ? "width" : "height"] ? n : f < b + this.helperProportions.width / 2 && c - this.helperProportions.width / 2 < g && h < d + this.helperProportions.height / 2 && e - this.helperProportions.height / 2 < i
			},
			_intersectsWithPointer: function(a) {
				var b = "x" === this.options.axis || c(this.positionAbs.top + this.offset.click.top, a.top, a.height),
					d = "y" === this.options.axis || c(this.positionAbs.left + this.offset.click.left, a.left, a.width),
					e = b && d,
					f = this._getDragVerticalDirection(),
					g = this._getDragHorizontalDirection();
				return !!e && (this.floating ? g && "right" === g || "down" === f ? 2 : 1 : f && ("down" === f ? 2 : 1))
			},
			_intersectsWithSides: function(a) {
				var b = c(this.positionAbs.top + this.offset.click.top, a.top + a.height / 2, a.height),
					d = c(this.positionAbs.left + this.offset.click.left, a.left + a.width / 2, a.width),
					e = this._getDragVerticalDirection(),
					f = this._getDragHorizontalDirection();
				return this.floating && f ? "right" === f && d || "left" === f && !d : e && ("down" === e && b || "up" === e && !b)
			},
			_getDragVerticalDirection: function() {
				var a = this.positionAbs.top - this.lastPositionAbs.top;
				return 0 !== a && (a > 0 ? "down" : "up")
			},
			_getDragHorizontalDirection: function() {
				var a = this.positionAbs.left - this.lastPositionAbs.left;
				return 0 !== a && (a > 0 ? "right" : "left")
			},
			refresh: function(a) {
				return this._refreshItems(a), this.refreshPositions(), this
			},
			_connectWith: function() {
				var a = this.options;
				return a.connectWith.constructor === String ? [a.connectWith] : a.connectWith
			},
			_getItemsAsjQuery: function(b) {
				var c, d, e, f, g = [],
					h = [],
					i = this._connectWith();
				if (i && b)
					for (c = i.length - 1; c >= 0; c--)
						for (e = a(i[c]), d = e.length - 1; d >= 0; d--) f = a.data(e[d], this.widgetFullName), f && f !== this && !f.options.disabled && h.push([a.isFunction(f.options.items) ? f.options.items.call(f.element) : a(f.options.items, f.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), f]);
				for (h.push([a.isFunction(this.options.items) ? this.options.items.call(this.element, null, {
					options: this.options,
					item: this.currentItem
				}) : a(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]), c = h.length - 1; c >= 0; c--) h[c][0].each(function() {
					g.push(this)
				});
				return a(g)
			},
			_removeCurrentsFromItems: function() {
				var b = this.currentItem.find(":data(" + this.widgetName + "-item)");
				this.items = a.grep(this.items, function(a) {
					for (var c = 0; c < b.length; c++)
						if (b[c] === a.item[0]) return !1;
					return !0
				})
			},
			_refreshItems: function(b) {
				this.items = [], this.containers = [this];
				var c, d, e, f, g, h, i, j, k = this.items,
					l = [
						[a.isFunction(this.options.items) ? this.options.items.call(this.element[0], b, {
							item: this.currentItem
						}) : a(this.options.items, this.element), this]
					],
					m = this._connectWith();
				if (m && this.ready)
					for (c = m.length - 1; c >= 0; c--)
						for (e = a(m[c]), d = e.length - 1; d >= 0; d--) f = a.data(e[d], this.widgetFullName), f && f !== this && !f.options.disabled && (l.push([a.isFunction(f.options.items) ? f.options.items.call(f.element[0], b, {
							item: this.currentItem
						}) : a(f.options.items, f.element), f]), this.containers.push(f));
				for (c = l.length - 1; c >= 0; c--)
					for (g = l[c][1], h = l[c][0], d = 0, j = h.length; d < j; d++) i = a(h[d]), i.data(this.widgetName + "-item", g), k.push({
						item: i,
						instance: g,
						width: 0,
						height: 0,
						left: 0,
						top: 0
					})
			},
			refreshPositions: function(b) {
				this.offsetParent && this.helper && (this.offset.parent = this._getParentOffset());
				var c, d, e, f;
				for (c = this.items.length - 1; c >= 0; c--) d = this.items[c], d.instance !== this.currentContainer && this.currentContainer && d.item[0] !== this.currentItem[0] || (e = this.options.toleranceElement ? a(this.options.toleranceElement, d.item) : d.item, b || (d.width = e.outerWidth(), d.height = e.outerHeight()), f = e.offset(), d.left = f.left, d.top = f.top);
				if (this.options.custom && this.options.custom.refreshContainers) this.options.custom.refreshContainers.call(this);
				else
					for (c = this.containers.length - 1; c >= 0; c--) f = this.containers[c].element.offset(), this.containers[c].containerCache.left = f.left, this.containers[c].containerCache.top = f.top, this.containers[c].containerCache.width = this.containers[c].element.outerWidth(), this.containers[c].containerCache.height = this.containers[c].element.outerHeight();
				return this
			},
			_createPlaceholder: function(b) {
				b = b || this;
				var c, d = b.options;
				d.placeholder && d.placeholder.constructor !== String || (c = d.placeholder, d.placeholder = {
					element: function() {
						var d = b.currentItem[0].nodeName.toLowerCase(),
							e = a("<" + d + ">", b.document[0]).addClass(c || b.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper");
						return "tr" === d ? b.currentItem.children().each(function() {
							a("<td>&#160;</td>", b.document[0]).attr("colspan", a(this).attr("colspan") || 1).appendTo(e)
						}) : "img" === d && e.attr("src", b.currentItem.attr("src")), c || e.css("visibility", "hidden"), e
					},
					update: function(a, e) {
						c && !d.forcePlaceholderSize || (e.height() || e.height(b.currentItem.innerHeight() - parseInt(b.currentItem.css("paddingTop") || 0, 10) - parseInt(b.currentItem.css("paddingBottom") || 0, 10)), e.width() || e.width(b.currentItem.innerWidth() - parseInt(b.currentItem.css("paddingLeft") || 0, 10) - parseInt(b.currentItem.css("paddingRight") || 0, 10)))
					}
				}), b.placeholder = a(d.placeholder.element.call(b.element, b.currentItem)), b.currentItem.after(b.placeholder), d.placeholder.update(b, b.placeholder)
			},
			_contactContainers: function(b) {
				var e, f, g, h, i, j, k, l, m, n, o = null,
					p = null;
				for (e = this.containers.length - 1; e >= 0; e--)
					if (!a.contains(this.currentItem[0], this.containers[e].element[0]))
						if (this._intersectsWith(this.containers[e].containerCache)) {
							if (o && a.contains(this.containers[e].element[0], o.element[0])) continue;
							o = this.containers[e], p = e
						} else this.containers[e].containerCache.over && (this.containers[e]._trigger("out", b, this._uiHash(this)), this.containers[e].containerCache.over = 0);
				if (o)
					if (1 === this.containers.length) this.containers[p].containerCache.over || (this.containers[p]._trigger("over", b, this._uiHash(this)), this.containers[p].containerCache.over = 1);
					else {
						for (g = 1e4, h = null, n = o.floating || d(this.currentItem), i = n ? "left" : "top", j = n ? "width" : "height", k = this.positionAbs[i] + this.offset.click[i], f = this.items.length - 1; f >= 0; f--) a.contains(this.containers[p].element[0], this.items[f].item[0]) && this.items[f].item[0] !== this.currentItem[0] && (n && !c(this.positionAbs.top + this.offset.click.top, this.items[f].top, this.items[f].height) || (l = this.items[f].item.offset()[i], m = !1, Math.abs(l - k) > Math.abs(l + this.items[f][j] - k) && (m = !0, l += this.items[f][j]), Math.abs(l - k) < g && (g = Math.abs(l - k), h = this.items[f], this.direction = m ? "up" : "down")));
						if (!h && !this.options.dropOnEmpty) return;
						if (this.currentContainer === this.containers[p]) return;
						h ? this._rearrange(b, h, null, !0) : this._rearrange(b, null, this.containers[p].element, !0), this._trigger("change", b, this._uiHash()), this.containers[p]._trigger("change", b, this._uiHash(this)), this.currentContainer = this.containers[p], this.options.placeholder.update(this.currentContainer, this.placeholder), this.containers[p]._trigger("over", b, this._uiHash(this)), this.containers[p].containerCache.over = 1
					}
			},
			_createHelper: function(b) {
				var c = this.options,
					d = a.isFunction(c.helper) ? a(c.helper.apply(this.element[0], [b, this.currentItem])) : "clone" === c.helper ? this.currentItem.clone() : this.currentItem;
				return d.parents("body").length || a("parent" !== c.appendTo ? c.appendTo : this.currentItem[0].parentNode)[0].appendChild(d[0]), d[0] === this.currentItem[0] && (this._storedCSS = {
					width: this.currentItem[0].style.width,
					height: this.currentItem[0].style.height,
					position: this.currentItem.css("position"),
					top: this.currentItem.css("top"),
					left: this.currentItem.css("left")
				}), d[0].style.width && !c.forceHelperSize || d.width(this.currentItem.width()), d[0].style.height && !c.forceHelperSize || d.height(this.currentItem.height()), d
			},
			_adjustOffsetFromHelper: function(b) {
				"string" == typeof b && (b = b.split(" ")), a.isArray(b) && (b = {
					left: +b[0],
					top: +b[1] || 0
				}), "left" in b && (this.offset.click.left = b.left + this.margins.left), "right" in b && (this.offset.click.left = this.helperProportions.width - b.right + this.margins.left), "top" in b && (this.offset.click.top = b.top + this.margins.top), "bottom" in b && (this.offset.click.top = this.helperProportions.height - b.bottom + this.margins.top)
			},
			_getParentOffset: function() {
				this.offsetParent = this.helper.offsetParent();
				var b = this.offsetParent.offset();
				return "absolute" === this.cssPosition && this.scrollParent[0] !== document && a.contains(this.scrollParent[0], this.offsetParent[0]) && (b.left += this.scrollParent.scrollLeft(), b.top += this.scrollParent.scrollTop()), (this.offsetParent[0] === document.body || this.offsetParent[0].tagName && "html" === this.offsetParent[0].tagName.toLowerCase() && a.ui.ie) && (b = {
					top: 0,
					left: 0
				}), {
					top: b.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
					left: b.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
				}
			},
			_getRelativeOffset: function() {
				if ("relative" === this.cssPosition) {
					var a = this.currentItem.position();
					return {
						top: a.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
						left: a.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
					}
				}
				return {
					top: 0,
					left: 0
				}
			},
			_cacheMargins: function() {
				this.margins = {
					left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
					top: parseInt(this.currentItem.css("marginTop"), 10) || 0
				}
			},
			_cacheHelperProportions: function() {
				this.helperProportions = {
					width: this.helper.outerWidth(),
					height: this.helper.outerHeight()
				}
			},
			_setContainment: function() {
				var b, c, d, e = this.options;
				"parent" === e.containment && (e.containment = this.helper[0].parentNode), "document" !== e.containment && "window" !== e.containment || (this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, a("document" === e.containment ? document : window).width() - this.helperProportions.width - this.margins.left, (a("document" === e.containment ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]), /^(document|window|parent)$/.test(e.containment) || (b = a(e.containment)[0], c = a(e.containment).offset(), d = "hidden" !== a(b).css("overflow"), this.containment = [c.left + (parseInt(a(b).css("borderLeftWidth"), 10) || 0) + (parseInt(a(b).css("paddingLeft"), 10) || 0) - this.margins.left, c.top + (parseInt(a(b).css("borderTopWidth"), 10) || 0) + (parseInt(a(b).css("paddingTop"), 10) || 0) - this.margins.top, c.left + (d ? Math.max(b.scrollWidth, b.offsetWidth) : b.offsetWidth) - (parseInt(a(b).css("borderLeftWidth"), 10) || 0) - (parseInt(a(b).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, c.top + (d ? Math.max(b.scrollHeight, b.offsetHeight) : b.offsetHeight) - (parseInt(a(b).css("borderTopWidth"), 10) || 0) - (parseInt(a(b).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top])
			},
			_convertPositionTo: function(b, c) {
				c || (c = this.position);
				var d = "absolute" === b ? 1 : -1,
					e = "absolute" !== this.cssPosition || this.scrollParent[0] !== document && a.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,
					f = /(html|body)/i.test(e[0].tagName);
				return {
					top: c.top + this.offset.relative.top * d + this.offset.parent.top * d - ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : f ? 0 : e.scrollTop()) * d,
					left: c.left + this.offset.relative.left * d + this.offset.parent.left * d - ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : f ? 0 : e.scrollLeft()) * d
				}
			},
			_generatePosition: function(b) {
				var c, d, e = this.options,
					f = b.pageX,
					g = b.pageY,
					h = "absolute" !== this.cssPosition || this.scrollParent[0] !== document && a.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,
					i = /(html|body)/i.test(h[0].tagName);
				return "relative" !== this.cssPosition || this.scrollParent[0] !== document && this.scrollParent[0] !== this.offsetParent[0] || (this.offset.relative = this._getRelativeOffset()), this.originalPosition && (this.containment && (b.pageX - this.offset.click.left < this.containment[0] && (f = this.containment[0] + this.offset.click.left), b.pageY - this.offset.click.top < this.containment[1] && (g = this.containment[1] + this.offset.click.top), b.pageX - this.offset.click.left > this.containment[2] && (f = this.containment[2] + this.offset.click.left), b.pageY - this.offset.click.top > this.containment[3] && (g = this.containment[3] + this.offset.click.top)), e.grid && (c = this.originalPageY + Math.round((g - this.originalPageY) / e.grid[1]) * e.grid[1], g = this.containment ? c - this.offset.click.top >= this.containment[1] && c - this.offset.click.top <= this.containment[3] ? c : c - this.offset.click.top >= this.containment[1] ? c - e.grid[1] : c + e.grid[1] : c, d = this.originalPageX + Math.round((f - this.originalPageX) / e.grid[0]) * e.grid[0], f = this.containment ? d - this.offset.click.left >= this.containment[0] && d - this.offset.click.left <= this.containment[2] ? d : d - this.offset.click.left >= this.containment[0] ? d - e.grid[0] : d + e.grid[0] : d)), {
					top: g - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : i ? 0 : h.scrollTop()),
					left: f - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : i ? 0 : h.scrollLeft())
				}
			},
			_rearrange: function(a, b, c, d) {
				c ? c[0].appendChild(this.placeholder[0]) : b.item[0].parentNode.insertBefore(this.placeholder[0], "down" === this.direction ? b.item[0] : b.item[0].nextSibling), this.counter = this.counter ? ++this.counter : 1;
				var e = this.counter;
				this._delay(function() {
					e === this.counter && this.refreshPositions(!d)
				})
			},
			_clear: function(a, b) {
				this.reverting = !1;
				var c, d = [];
				if (!this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem), this._noFinalSort = null, this.helper[0] === this.currentItem[0]) {
					for (c in this._storedCSS) "auto" !== this._storedCSS[c] && "static" !== this._storedCSS[c] || (this._storedCSS[c] = "");
					this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")
				} else this.currentItem.show();
				for (this.fromOutside && !b && d.push(function(a) {
					this._trigger("receive", a, this._uiHash(this.fromOutside))
				}), !this.fromOutside && this.domPosition.prev === this.currentItem.prev().not(".ui-sortable-helper")[0] && this.domPosition.parent === this.currentItem.parent()[0] || b || d.push(function(a) {
					this._trigger("update", a, this._uiHash())
				}), this !== this.currentContainer && (b || (d.push(function(a) {
					this._trigger("remove", a, this._uiHash())
				}), d.push(function(a) {
					return function(b) {
						a._trigger("receive", b, this._uiHash(this))
					}
				}.call(this, this.currentContainer)), d.push(function(a) {
					return function(b) {
						a._trigger("update", b, this._uiHash(this))
					}
				}.call(this, this.currentContainer)))), c = this.containers.length - 1; c >= 0; c--) b || d.push(function(a) {
					return function(b) {
						a._trigger("deactivate", b, this._uiHash(this))
					}
				}.call(this, this.containers[c])), this.containers[c].containerCache.over && (d.push(function(a) {
					return function(b) {
						a._trigger("out", b, this._uiHash(this))
					}
				}.call(this, this.containers[c])), this.containers[c].containerCache.over = 0);
				if (this.storedCursor && (this.document.find("body").css("cursor", this.storedCursor), this.storedStylesheet.remove()), this._storedOpacity && this.helper.css("opacity", this._storedOpacity), this._storedZIndex && this.helper.css("zIndex", "auto" === this._storedZIndex ? "" : this._storedZIndex), this.dragging = !1, this.cancelHelperRemoval) {
					if (!b) {
						for (this._trigger("beforeStop", a, this._uiHash()), c = 0; c < d.length; c++) d[c].call(this, a);
						this._trigger("stop", a, this._uiHash())
					}
					return this.fromOutside = !1, !1
				}
				if (b || this._trigger("beforeStop", a, this._uiHash()), this.placeholder[0].parentNode.removeChild(this.placeholder[0]), this.helper[0] !== this.currentItem[0] && this.helper.remove(), this.helper = null, !b) {
					for (c = 0; c < d.length; c++) d[c].call(this, a);
					this._trigger("stop", a, this._uiHash())
				}
				return this.fromOutside = !1, !0
			},
			_trigger: function() {
				a.Widget.prototype._trigger.apply(this, arguments) === !1 && this.cancel()
			},
			_uiHash: function(b) {
				var c = b || this;
				return {
					helper: c.helper,
					placeholder: c.placeholder || a([]),
					position: c.position,
					originalPosition: c.originalPosition,
					offset: c.positionAbs,
					item: c.currentItem,
					sender: b ? b.element : null
				}
			}
		})
	}(jQuery),
	function(a, b) {
		var c = "ui-effects-";
		a.effects = {
			effect: {}
		},
			function(a, b) {
				function m(a, b, c) {
					var d = h[b.type] || {};
					return null == a ? c || !b.def ? null : b.def : (a = d.floor ? ~~a : parseFloat(a), isNaN(a) ? b.def : d.mod ? (a + d.mod) % d.mod : 0 > a ? 0 : d.max < a ? d.max : a)
				}

				function n(b) {
					var c = f(),
						d = c._rgba = [];
					return b = b.toLowerCase(), l(e, function(a, e) {
						var f, h = e.re.exec(b),
							i = h && e.parse(h),
							j = e.space || "rgba";
						if (i) return f = c[j](i), c[g[j].cache] = f[g[j].cache], d = c._rgba = f._rgba, !1
					}), d.length ? ("0,0,0,0" === d.join() && a.extend(d, k.transparent), c) : k[b]
				}

				function o(a, b, c) {
					return c = (c + 1) % 1, 6 * c < 1 ? a + (b - a) * c * 6 : 2 * c < 1 ? b : 3 * c < 2 ? a + (b - a) * (2 / 3 - c) * 6 : a
				}
				var k, c = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",
					d = /^([\-+])=\s*(\d+\.?\d*)/,
					e = [{
						re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
						parse: function(a) {
							return [a[1], a[2], a[3], a[4]]
						}
					}, {
						re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
						parse: function(a) {
							return [2.55 * a[1], 2.55 * a[2], 2.55 * a[3], a[4]]
						}
					}, {
						re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
						parse: function(a) {
							return [parseInt(a[1], 16), parseInt(a[2], 16), parseInt(a[3], 16)]
						}
					}, {
						re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
						parse: function(a) {
							return [parseInt(a[1] + a[1], 16), parseInt(a[2] + a[2], 16), parseInt(a[3] + a[3], 16)]
						}
					}, {
						re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
						space: "hsla",
						parse: function(a) {
							return [a[1], a[2] / 100, a[3] / 100, a[4]]
						}
					}],
					f = a.Color = function(b, c, d, e) {
						return new a.Color.fn.parse(b, c, d, e)
					},
					g = {
						rgba: {
							props: {
								red: {
									idx: 0,
									type: "byte"
								},
								green: {
									idx: 1,
									type: "byte"
								},
								blue: {
									idx: 2,
									type: "byte"
								}
							}
						},
						hsla: {
							props: {
								hue: {
									idx: 0,
									type: "degrees"
								},
								saturation: {
									idx: 1,
									type: "percent"
								},
								lightness: {
									idx: 2,
									type: "percent"
								}
							}
						}
					},
					h = {
						byte: {
							floor: !0,
							max: 255
						},
						percent: {
							max: 1
						},
						degrees: {
							mod: 360,
							floor: !0
						}
					},
					i = f.support = {},
					j = a("<p>")[0],
					l = a.each;
				j.style.cssText = "background-color:rgba(1,1,1,.5)", i.rgba = j.style.backgroundColor.indexOf("rgba") > -1, l(g, function(a, b) {
					b.cache = "_" + a, b.props.alpha = {
						idx: 3,
						type: "percent",
						def: 1
					}
				}), f.fn = a.extend(f.prototype, {
					parse: function(c, d, e, h) {
						if (c === b) return this._rgba = [null, null, null, null], this;
						(c.jquery || c.nodeType) && (c = a(c).css(d), d = b);
						var i = this,
							j = a.type(c),
							o = this._rgba = [];
						return d !== b && (c = [c, d, e, h], j = "array"), "string" === j ? this.parse(n(c) || k._default) : "array" === j ? (l(g.rgba.props, function(a, b) {
							o[b.idx] = m(c[b.idx], b)
						}), this) : "object" === j ? (c instanceof f ? l(g, function(a, b) {
							c[b.cache] && (i[b.cache] = c[b.cache].slice())
						}) : l(g, function(b, d) {
							var e = d.cache;
							l(d.props, function(a, b) {
								if (!i[e] && d.to) {
									if ("alpha" === a || null == c[a]) return;
									i[e] = d.to(i._rgba)
								}
								i[e][b.idx] = m(c[a], b, !0)
							}), i[e] && a.inArray(null, i[e].slice(0, 3)) < 0 && (i[e][3] = 1, d.from && (i._rgba = d.from(i[e])))
						}), this) : void 0
					},
					is: function(a) {
						var b = f(a),
							c = !0,
							d = this;
						return l(g, function(a, e) {
							var f, g = b[e.cache];
							return g && (f = d[e.cache] || e.to && e.to(d._rgba) || [], l(e.props, function(a, b) {
								if (null != g[b.idx]) return c = g[b.idx] === f[b.idx]
							})), c
						}), c
					},
					_space: function() {
						var a = [],
							b = this;
						return l(g, function(c, d) {
							b[d.cache] && a.push(c)
						}), a.pop()
					},
					transition: function(a, b) {
						var c = f(a),
							d = c._space(),
							e = g[d],
							i = 0 === this.alpha() ? f("transparent") : this,
							j = i[e.cache] || e.to(i._rgba),
							k = j.slice();
						return c = c[e.cache], l(e.props, function(a, d) {
							var e = d.idx,
								f = j[e],
								g = c[e],
								i = h[d.type] || {};
							null !== g && (null === f ? k[e] = g : (i.mod && (g - f > i.mod / 2 ? f += i.mod : f - g > i.mod / 2 && (f -= i.mod)), k[e] = m((g - f) * b + f, d)))
						}), this[d](k)
					},
					blend: function(b) {
						if (1 === this._rgba[3]) return this;
						var c = this._rgba.slice(),
							d = c.pop(),
							e = f(b)._rgba;
						return f(a.map(c, function(a, b) {
							return (1 - d) * e[b] + d * a
						}))
					},
					toRgbaString: function() {
						var b = "rgba(",
							c = a.map(this._rgba, function(a, b) {
								return null == a ? b > 2 ? 1 : 0 : a
							});
						return 1 === c[3] && (c.pop(), b = "rgb("), b + c.join() + ")"
					},
					toHslaString: function() {
						var b = "hsla(",
							c = a.map(this.hsla(), function(a, b) {
								return null == a && (a = b > 2 ? 1 : 0), b && b < 3 && (a = Math.round(100 * a) + "%"), a
							});
						return 1 === c[3] && (c.pop(), b = "hsl("), b + c.join() + ")"
					},
					toHexString: function(b) {
						var c = this._rgba.slice(),
							d = c.pop();
						return b && c.push(~~(255 * d)), "#" + a.map(c, function(a) {
							return a = (a || 0).toString(16), 1 === a.length ? "0" + a : a
						}).join("")
					},
					toString: function() {
						return 0 === this._rgba[3] ? "transparent" : this.toRgbaString()
					}
				}), f.fn.parse.prototype = f.fn, g.hsla.to = function(a) {
					if (null == a[0] || null == a[1] || null == a[2]) return [null, null, null, a[3]];
					var k, l, b = a[0] / 255,
						c = a[1] / 255,
						d = a[2] / 255,
						e = a[3],
						f = Math.max(b, c, d),
						g = Math.min(b, c, d),
						h = f - g,
						i = f + g,
						j = .5 * i;
					return k = g === f ? 0 : b === f ? 60 * (c - d) / h + 360 : c === f ? 60 * (d - b) / h + 120 : 60 * (b - c) / h + 240, l = 0 === h ? 0 : j <= .5 ? h / i : h / (2 - i), [Math.round(k) % 360, l, j, null == e ? 1 : e]
				}, g.hsla.from = function(a) {
					if (null == a[0] || null == a[1] || null == a[2]) return [null, null, null, a[3]];
					var b = a[0] / 360,
						c = a[1],
						d = a[2],
						e = a[3],
						f = d <= .5 ? d * (1 + c) : d + c - d * c,
						g = 2 * d - f;
					return [Math.round(255 * o(g, f, b + 1 / 3)), Math.round(255 * o(g, f, b)), Math.round(255 * o(g, f, b - 1 / 3)), e]
				}, l(g, function(c, e) {
					var g = e.props,
						h = e.cache,
						i = e.to,
						j = e.from;
					f.fn[c] = function(c) {
						if (i && !this[h] && (this[h] = i(this._rgba)), c === b) return this[h].slice();
						var d, e = a.type(c),
							k = "array" === e || "object" === e ? c : arguments,
							n = this[h].slice();
						return l(g, function(a, b) {
							var c = k["object" === e ? a : b.idx];
							null == c && (c = n[b.idx]), n[b.idx] = m(c, b)
						}), j ? (d = f(j(n)), d[h] = n, d) : f(n)
					}, l(g, function(b, e) {
						f.fn[b] || (f.fn[b] = function(f) {
							var k, g = a.type(f),
								h = "alpha" === b ? this._hsla ? "hsla" : "rgba" : c,
								i = this[h](),
								j = i[e.idx];
							return "undefined" === g ? j : ("function" === g && (f = f.call(this, j), g = a.type(f)), null == f && e.empty ? this : ("string" === g && (k = d.exec(f), k && (f = j + parseFloat(k[2]) * ("+" === k[1] ? 1 : -1))), i[e.idx] = f, this[h](i)))
						})
					})
				}), f.hook = function(b) {
					var c = b.split(" ");
					l(c, function(b, c) {
						a.cssHooks[c] = {
							set: function(b, d) {
								var e, g, h = "";
								if ("transparent" !== d && ("string" !== a.type(d) || (e = n(d)))) {
									if (d = f(e || d), !i.rgba && 1 !== d._rgba[3]) {
										for (g = "backgroundColor" === c ? b.parentNode : b;
											 ("" === h || "transparent" === h) && g && g.style;) try {
											h = a.css(g, "backgroundColor"), g = g.parentNode
										} catch (a) {}
										d = d.blend(h && "transparent" !== h ? h : "_default")
									}
									d = d.toRgbaString()
								}
								try {
									b.style[c] = d
								} catch (a) {}
							}
						}, a.fx.step[c] = function(b) {
							b.colorInit || (b.start = f(b.elem, c), b.end = f(b.end), b.colorInit = !0), a.cssHooks[c].set(b.elem, b.start.transition(b.end, b.pos))
						}
					})
				}, f.hook(c), a.cssHooks.borderColor = {
					expand: function(a) {
						var b = {};
						return l(["Top", "Right", "Bottom", "Left"], function(c, d) {
							b["border" + d + "Color"] = a
						}), b
					}
				}, k = a.Color.names = {
					aqua: "#00ffff",
					black: "#000000",
					blue: "#0000ff",
					fuchsia: "#ff00ff",
					gray: "#808080",
					green: "#008000",
					lime: "#00ff00",
					maroon: "#800000",
					navy: "#000080",
					olive: "#808000",
					purple: "#800080",
					red: "#ff0000",
					silver: "#c0c0c0",
					teal: "#008080",
					white: "#ffffff",
					yellow: "#ffff00",
					transparent: [null, null, null, 0],
					_default: "#ffffff"
				}
			}(jQuery),
			function() {
				function e(b) {
					var c, d, e = b.ownerDocument.defaultView ? b.ownerDocument.defaultView.getComputedStyle(b, null) : b.currentStyle,
						f = {};
					if (e && e.length && e[0] && e[e[0]])
						for (d = e.length; d--;) c = e[d], "string" == typeof e[c] && (f[a.camelCase(c)] = e[c]);
					else
						for (c in e) "string" == typeof e[c] && (f[c] = e[c]);
					return f
				}

				function f(b, c) {
					var f, g, e = {};
					for (f in c) g = c[f], b[f] !== g && (d[f] || !a.fx.step[f] && isNaN(parseFloat(g)) || (e[f] = g));
					return e
				}
				var c = ["add", "remove", "toggle"],
					d = {
						border: 1,
						borderBottom: 1,
						borderColor: 1,
						borderLeft: 1,
						borderRight: 1,
						borderTop: 1,
						borderWidth: 1,
						margin: 1,
						padding: 1
					};
				a.each(["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"], function(b, c) {
					a.fx.step[c] = function(a) {
						("none" !== a.end && !a.setAttr || 1 === a.pos && !a.setAttr) && (jQuery.style(a.elem, c, a.end), a.setAttr = !0)
					}
				}), a.fn.addBack || (a.fn.addBack = function(a) {
					return this.add(null == a ? this.prevObject : this.prevObject.filter(a))
				}), a.effects.animateClass = function(b, d, g, h) {
					var i = a.speed(d, g, h);
					return this.queue(function() {
						var h, d = a(this),
							g = d.attr("class") || "",
							j = i.children ? d.find("*").addBack() : d;
						j = j.map(function() {
							var b = a(this);
							return {
								el: b,
								start: e(this)
							}
						}), h = function() {
							a.each(c, function(a, c) {
								b[c] && d[c + "Class"](b[c])
							})
						}, h(), j = j.map(function() {
							return this.end = e(this.el[0]), this.diff = f(this.start, this.end), this
						}), d.attr("class", g), j = j.map(function() {
							var b = this,
								c = a.Deferred(),
								d = a.extend({}, i, {
									queue: !1,
									complete: function() {
										c.resolve(b)
									}
								});
							return this.el.animate(this.diff, d), c.promise()
						}), a.when.apply(a, j.get()).done(function() {
							h(), a.each(arguments, function() {
								var b = this.el;
								a.each(this.diff, function(a) {
									b.css(a, "")
								})
							}), i.complete.call(d[0])
						})
					})
				}, a.fn.extend({
					addClass: function(b) {
						return function(c, d, e, f) {
							return d ? a.effects.animateClass.call(this, {
								add: c
							}, d, e, f) : b.apply(this, arguments)
						}
					}(a.fn.addClass),
					removeClass: function(b) {
						return function(c, d, e, f) {
							return arguments.length > 1 ? a.effects.animateClass.call(this, {
								remove: c
							}, d, e, f) : b.apply(this, arguments)
						}
					}(a.fn.removeClass),
					toggleClass: function(c) {
						return function(d, e, f, g, h) {
							return "boolean" == typeof e || e === b ? f ? a.effects.animateClass.call(this, e ? {
								add: d
							} : {
								remove: d
							}, f, g, h) : c.apply(this, arguments) : a.effects.animateClass.call(this, {
								toggle: d
							}, e, f, g)
						}
					}(a.fn.toggleClass),
					switchClass: function(b, c, d, e, f) {
						return a.effects.animateClass.call(this, {
							add: c,
							remove: b
						}, d, e, f)
					}
				})
			}(),
			function() {
				function d(b, c, d, e) {
					return a.isPlainObject(b) && (c = b, b = b.effect), b = {
						effect: b
					}, null == c && (c = {}), a.isFunction(c) && (e = c, d = null, c = {}), ("number" == typeof c || a.fx.speeds[c]) && (e = d, d = c, c = {}), a.isFunction(d) && (e = d, d = null), c && a.extend(b, c), d = d || c.duration, b.duration = a.fx.off ? 0 : "number" == typeof d ? d : d in a.fx.speeds ? a.fx.speeds[d] : a.fx.speeds._default, b.complete = e || c.complete, b
				}

				function e(b) {
					return !(b && "number" != typeof b && !a.fx.speeds[b]) || ("string" == typeof b && !a.effects.effect[b] || (!!a.isFunction(b) || "object" == typeof b && !b.effect))
				}
				a.extend(a.effects, {
					version: "1.10.3",
					save: function(a, b) {
						for (var d = 0; d < b.length; d++) null !== b[d] && a.data(c + b[d], a[0].style[b[d]])
					},
					restore: function(a, d) {
						var e, f;
						for (f = 0; f < d.length; f++) null !== d[f] && (e = a.data(c + d[f]), e === b && (e = ""), a.css(d[f], e))
					},
					setMode: function(a, b) {
						return "toggle" === b && (b = a.is(":hidden") ? "show" : "hide"), b
					},
					getBaseline: function(a, b) {
						var c, d;
						switch (a[0]) {
							case "top":
								c = 0;
								break;
							case "middle":
								c = .5;
								break;
							case "bottom":
								c = 1;
								break;
							default:
								c = a[0] / b.height
						}
						switch (a[1]) {
							case "left":
								d = 0;
								break;
							case "center":
								d = .5;
								break;
							case "right":
								d = 1;
								break;
							default:
								d = a[1] / b.width
						}
						return {
							x: d,
							y: c
						}
					},
					createWrapper: function(b) {
						if (b.parent().is(".ui-effects-wrapper")) return b.parent();
						var c = {
								width: b.outerWidth(!0),
								height: b.outerHeight(!0),
								float: b.css("float")
							},
							d = a("<div></div>").addClass("ui-effects-wrapper").css({
								fontSize: "100%",
								background: "transparent",
								border: "none",
								margin: 0,
								padding: 0
							}),
							e = {
								width: b.width(),
								height: b.height()
							},
							f = document.activeElement;
						try {
							f.id
						} catch (a) {
							f = document.body
						}
						return b.wrap(d), (b[0] === f || a.contains(b[0], f)) && a(f).focus(), d = b.parent(), "static" === b.css("position") ? (d.css({
							position: "relative"
						}), b.css({
							position: "relative"
						})) : (a.extend(c, {
							position: b.css("position"),
							zIndex: b.css("z-index")
						}), a.each(["top", "left", "bottom", "right"], function(a, d) {
							c[d] = b.css(d), isNaN(parseInt(c[d], 10)) && (c[d] = "auto")
						}), b.css({
							position: "relative",
							top: 0,
							left: 0,
							right: "auto",
							bottom: "auto"
						})), b.css(e), d.css(c).show()
					},
					removeWrapper: function(b) {
						var c = document.activeElement;
						return b.parent().is(".ui-effects-wrapper") && (b.parent().replaceWith(b), (b[0] === c || a.contains(b[0], c)) && a(c).focus()), b
					},
					setTransition: function(b, c, d, e) {
						return e = e || {}, a.each(c, function(a, c) {
							var f = b.cssUnit(c);
							f[0] > 0 && (e[c] = f[0] * d + f[1])
						}), e
					}
				}), a.fn.extend({
					effect: function() {
						function g(c) {
							function h() {
								a.isFunction(e) && e.call(d[0]), a.isFunction(c) && c()
							}
							var d = a(this),
								e = b.complete,
								g = b.mode;
							(d.is(":hidden") ? "hide" === g : "show" === g) ? (d[g](), h()) : f.call(d[0], b, h)
						}
						var b = d.apply(this, arguments),
							c = b.mode,
							e = b.queue,
							f = a.effects.effect[b.effect];
						return a.fx.off || !f ? c ? this[c](b.duration, b.complete) : this.each(function() {
							b.complete && b.complete.call(this)
						}) : e === !1 ? this.each(g) : this.queue(e || "fx", g)
					},
					show: function(a) {
						return function(b) {
							if (e(b)) return a.apply(this, arguments);
							var c = d.apply(this, arguments);
							return c.mode = "show", this.effect.call(this, c)
						}
					}(a.fn.show),
					hide: function(a) {
						return function(b) {
							if (e(b)) return a.apply(this, arguments);
							var c = d.apply(this, arguments);
							return c.mode = "hide", this.effect.call(this, c)
						}
					}(a.fn.hide),
					toggle: function(a) {
						return function(b) {
							if (e(b) || "boolean" == typeof b) return a.apply(this, arguments);
							var c = d.apply(this, arguments);
							return c.mode = "toggle", this.effect.call(this, c)
						}
					}(a.fn.toggle),
					cssUnit: function(b) {
						var c = this.css(b),
							d = [];
						return a.each(["em", "px", "%", "pt"], function(a, b) {
							c.indexOf(b) > 0 && (d = [parseFloat(c), b])
						}), d
					}
				})
			}(),
			function() {
				var b = {};
				a.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function(a, c) {
					b[c] = function(b) {
						return Math.pow(b, a + 2)
					}
				}), a.extend(b, {
					Sine: function(a) {
						return 1 - Math.cos(a * Math.PI / 2)
					},
					Circ: function(a) {
						return 1 - Math.sqrt(1 - a * a)
					},
					Elastic: function(a) {
						return 0 === a || 1 === a ? a : -Math.pow(2, 8 * (a - 1)) * Math.sin((80 * (a - 1) - 7.5) * Math.PI / 15)
					},
					Back: function(a) {
						return a * a * (3 * a - 2)
					},
					Bounce: function(a) {
						for (var b, c = 4; a < ((b = Math.pow(2, --c)) - 1) / 11;);
						return 1 / Math.pow(4, 3 - c) - 7.5625 * Math.pow((3 * b - 2) / 22 - a, 2)
					}
				}), a.each(b, function(b, c) {
					a.easing["easeIn" + b] = c, a.easing["easeOut" + b] = function(a) {
						return 1 - c(1 - a)
					}, a.easing["easeInOut" + b] = function(a) {
						return a < .5 ? c(2 * a) / 2 : 1 - c(a * -2 + 2) / 2
					}
				})
			}()
	}(jQuery),
	function(a, b) {
		var c = 0,
			d = {},
			e = {};
		d.height = d.paddingTop = d.paddingBottom = d.borderTopWidth = d.borderBottomWidth = "hide", e.height = e.paddingTop = e.paddingBottom = e.borderTopWidth = e.borderBottomWidth = "show", a.widget("ui.accordion", {
			version: "1.10.3",
			options: {
				active: 0,
				animate: {},
				collapsible: !1,
				event: "click",
				header: "> li > :first-child,> :not(li):even",
				heightStyle: "auto",
				icons: {
					activeHeader: "ui-icon-triangle-1-s",
					header: "ui-icon-triangle-1-e"
				},
				activate: null,
				beforeActivate: null
			},
			_create: function() {
				var b = this.options;
				this.prevShow = this.prevHide = a(), this.element.addClass("ui-accordion ui-widget ui-helper-reset").attr("role", "tablist"), b.collapsible || b.active !== !1 && null != b.active || (b.active = 0), this._processPanels(), b.active < 0 && (b.active += this.headers.length), this._refresh()
			},
			_getCreateEventData: function() {
				return {
					header: this.active,
					panel: this.active.length ? this.active.next() : a(),
					content: this.active.length ? this.active.next() : a()
				}
			},
			_createIcons: function() {
				var b = this.options.icons;
				b && (a("<span>").addClass("ui-accordion-header-icon ui-icon " + b.header).prependTo(this.headers), this.active.children(".ui-accordion-header-icon").removeClass(b.header).addClass(b.activeHeader), this.headers.addClass("ui-accordion-icons"))
			},
			_destroyIcons: function() {
				this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()
			},
			_destroy: function() {
				var a;
				this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"), this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").each(function() {
					/^ui-accordion/.test(this.id) && this.removeAttribute("id")
				}), this._destroyIcons(), a = this.headers.next().css("display", "").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").each(function() {
					/^ui-accordion/.test(this.id) && this.removeAttribute("id")
				}), "content" !== this.options.heightStyle && a.css("height", "")
			},
			_setOption: function(a, b) {
				return "active" === a ? void this._activate(b) : ("event" === a && (this.options.event && this._off(this.headers, this.options.event), this._setupEvents(b)), this._super(a, b), "collapsible" !== a || b || this.options.active !== !1 || this._activate(0), "icons" === a && (this._destroyIcons(), b && this._createIcons()), void("disabled" === a && this.headers.add(this.headers.next()).toggleClass("ui-state-disabled", !!b)))
			},
			_keydown: function(b) {
				if (!b.altKey && !b.ctrlKey) {
					var c = a.ui.keyCode,
						d = this.headers.length,
						e = this.headers.index(b.target),
						f = !1;
					switch (b.keyCode) {
						case c.RIGHT:
						case c.DOWN:
							f = this.headers[(e + 1) % d];
							break;
						case c.LEFT:
						case c.UP:
							f = this.headers[(e - 1 + d) % d];
							break;
						case c.SPACE:
						case c.ENTER:
							this._eventHandler(b);
							break;
						case c.HOME:
							f = this.headers[0];
							break;
						case c.END:
							f = this.headers[d - 1]
					}
					f && (a(b.target).attr("tabIndex", -1), a(f).attr("tabIndex", 0), f.focus(), b.preventDefault())
				}
			},
			_panelKeyDown: function(b) {
				b.keyCode === a.ui.keyCode.UP && b.ctrlKey && a(b.currentTarget).prev().focus()
			},
			refresh: function() {
				var b = this.options;
				this._processPanels(), b.active === !1 && b.collapsible === !0 || !this.headers.length ? (b.active = !1, this.active = a()) : b.active === !1 ? this._activate(0) : this.active.length && !a.contains(this.element[0], this.active[0]) ? this.headers.length === this.headers.find(".ui-state-disabled").length ? (b.active = !1, this.active = a()) : this._activate(Math.max(0, b.active - 1)) : b.active = this.headers.index(this.active), this._destroyIcons(), this._refresh()
			},
			_processPanels: function() {
				this.headers = this.element.find(this.options.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all"), this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").filter(":not(.ui-accordion-content-active)").hide()
			},
			_refresh: function() {
				var b, d = this.options,
					e = d.heightStyle,
					f = this.element.parent(),
					g = this.accordionId = "ui-accordion-" + (this.element.attr("id") || ++c);
				this.active = this._findActive(d.active).addClass("ui-accordion-header-active ui-state-active ui-corner-top").removeClass("ui-corner-all"), this.active.next().addClass("ui-accordion-content-active").show(), this.headers.attr("role", "tab").each(function(b) {
					var c = a(this),
						d = c.attr("id"),
						e = c.next(),
						f = e.attr("id");
					d || (d = g + "-header-" + b, c.attr("id", d)), f || (f = g + "-panel-" + b, e.attr("id", f)), c.attr("aria-controls", f), e.attr("aria-labelledby", d)
				}).next().attr("role", "tabpanel"), this.headers.not(this.active).attr({
					"aria-selected": "false",
					tabIndex: -1
				}).next().attr({
						"aria-expanded": "false",
						"aria-hidden": "true"
					}).hide(), this.active.length ? this.active.attr({
					"aria-selected": "true",
					tabIndex: 0
				}).next().attr({
						"aria-expanded": "true",
						"aria-hidden": "false"
					}) : this.headers.eq(0).attr("tabIndex", 0), this._createIcons(), this._setupEvents(d.event), "fill" === e ? (b = f.height(), this.element.siblings(":visible").each(function() {
					var c = a(this),
						d = c.css("position");
					"absolute" !== d && "fixed" !== d && (b -= c.outerHeight(!0))
				}), this.headers.each(function() {
					b -= a(this).outerHeight(!0)
				}), this.headers.next().each(function() {
					a(this).height(Math.max(0, b - a(this).innerHeight() + a(this).height()))
				}).css("overflow", "auto")) : "auto" === e && (b = 0, this.headers.next().each(function() {
					b = Math.max(b, a(this).css("height", "").height())
				}).height(b))
			},
			_activate: function(b) {
				var c = this._findActive(b)[0];
				c !== this.active[0] && (c = c || this.active[0], this._eventHandler({
					target: c,
					currentTarget: c,
					preventDefault: a.noop
				}))
			},
			_findActive: function(b) {
				return "number" == typeof b ? this.headers.eq(b) : a()
			},
			_setupEvents: function(b) {
				var c = {
					keydown: "_keydown"
				};
				b && a.each(b.split(" "), function(a, b) {
					c[b] = "_eventHandler"
				}), this._off(this.headers.add(this.headers.next())), this._on(this.headers, c), this._on(this.headers.next(), {
					keydown: "_panelKeyDown"
				}), this._hoverable(this.headers), this._focusable(this.headers)
			},
			_eventHandler: function(b) {
				var c = this.options,
					d = this.active,
					e = a(b.currentTarget),
					f = e[0] === d[0],
					g = f && c.collapsible,
					h = g ? a() : e.next(),
					i = d.next(),
					j = {
						oldHeader: d,
						oldPanel: i,
						newHeader: g ? a() : e,
						newPanel: h
					};
				b.preventDefault(), f && !c.collapsible || this._trigger("beforeActivate", b, j) === !1 || (c.active = !g && this.headers.index(e), this.active = f ? a() : e, this._toggle(j), d.removeClass("ui-accordion-header-active ui-state-active"), c.icons && d.children(".ui-accordion-header-icon").removeClass(c.icons.activeHeader).addClass(c.icons.header), f || (e.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top"), c.icons && e.children(".ui-accordion-header-icon").removeClass(c.icons.header).addClass(c.icons.activeHeader), e.next().addClass("ui-accordion-content-active")))
			},
			_toggle: function(b) {
				var c = b.newPanel,
					d = this.prevShow.length ? this.prevShow : b.oldPanel;
				this.prevShow.add(this.prevHide).stop(!0, !0), this.prevShow = c, this.prevHide = d, this.options.animate ? this._animate(c, d, b) : (d.hide(), c.show(), this._toggleComplete(b)), d.attr({
					"aria-expanded": "false",
					"aria-hidden": "true"
				}), d.prev().attr("aria-selected", "false"), c.length && d.length ? d.prev().attr("tabIndex", -1) : c.length && this.headers.filter(function() {
					return 0 === a(this).attr("tabIndex")
				}).attr("tabIndex", -1), c.attr({
					"aria-expanded": "true",
					"aria-hidden": "false"
				}).prev().attr({
						"aria-selected": "true",
						tabIndex: 0
					})
			},
			_animate: function(a, b, c) {
				var f, g, h, i = this,
					j = 0,
					k = a.length && (!b.length || a.index() < b.index()),
					l = this.options.animate || {},
					m = k && l.down || l,
					n = function() {
						i._toggleComplete(c)
					};
				return "number" == typeof m && (h = m), "string" == typeof m && (g = m), g = g || m.easing || l.easing, h = h || m.duration || l.duration, b.length ? a.length ? (f = a.show().outerHeight(), b.animate(d, {
					duration: h,
					easing: g,
					step: function(a, b) {
						b.now = Math.round(a)
					}
				}), void a.hide().animate(e, {
					duration: h,
					easing: g,
					complete: n,
					step: function(a, c) {
						c.now = Math.round(a), "height" !== c.prop ? j += c.now : "content" !== i.options.heightStyle && (c.now = Math.round(f - b.outerHeight() - j), j = 0)
					}
				})) : b.animate(d, h, g, n) : a.animate(e, h, g, n)
			},
			_toggleComplete: function(a) {
				var b = a.oldPanel;
				b.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all"), b.length && (b.parent()[0].className = b.parent()[0].className), this._trigger("activate", null, a)
			}
		})
	}(jQuery),
	function(a, b) {
		var c = 0;
		a.widget("ui.autocomplete", {
			version: "1.10.3",
			defaultElement: "<input>",
			options: {
				appendTo: null,
				autoFocus: !1,
				delay: 300,
				minLength: 1,
				position: {
					my: "left top",
					at: "left bottom",
					collision: "none"
				},
				source: null,
				change: null,
				close: null,
				focus: null,
				open: null,
				response: null,
				search: null,
				select: null
			},
			pending: 0,
			_create: function() {
				var b, c, d, e = this.element[0].nodeName.toLowerCase(),
					f = "textarea" === e,
					g = "input" === e;
				this.isMultiLine = !!f || !g && this.element.prop("isContentEditable"), this.valueMethod = this.element[f || g ? "val" : "text"], this.isNewMenu = !0, this.element.addClass("ui-autocomplete-input").attr("autocomplete", "off"), this._on(this.element, {
					keydown: function(e) {
						if (this.element.prop("readOnly")) return b = !0, d = !0, void(c = !0);
						b = !1, d = !1, c = !1;
						var f = a.ui.keyCode;
						switch (e.keyCode) {
							case f.PAGE_UP:
								b = !0, this._move("previousPage", e);
								break;
							case f.PAGE_DOWN:
								b = !0, this._move("nextPage", e);
								break;
							case f.UP:
								b = !0, this._keyEvent("previous", e);
								break;
							case f.DOWN:
								b = !0, this._keyEvent("next", e);
								break;
							case f.ENTER:
							case f.NUMPAD_ENTER:
								this.menu.active && (b = !0, e.preventDefault(), this.menu.select(e));
								break;
							case f.TAB:
								this.menu.active && this.menu.select(e);
								break;
							case f.ESCAPE:
								this.menu.element.is(":visible") && (this._value(this.term), this.close(e), e.preventDefault());
								break;
							default:
								c = !0, this._searchTimeout(e)
						}
					},
					keypress: function(d) {
						if (b) return b = !1, void(this.isMultiLine && !this.menu.element.is(":visible") || d.preventDefault());
						if (!c) {
							var e = a.ui.keyCode;
							switch (d.keyCode) {
								case e.PAGE_UP:
									this._move("previousPage", d);
									break;
								case e.PAGE_DOWN:
									this._move("nextPage", d);
									break;
								case e.UP:
									this._keyEvent("previous", d);
									break;
								case e.DOWN:
									this._keyEvent("next", d)
							}
						}
					},
					input: function(a) {
						return d ? (d = !1, void a.preventDefault()) : void this._searchTimeout(a)
					},
					focus: function() {
						this.selectedItem = null, this.previous = this._value()
					},
					blur: function(a) {
						return this.cancelBlur ? void delete this.cancelBlur : (clearTimeout(this.searching), this.close(a), void this._change(a))
					}
				}), this._initSource(), this.menu = a("<ul>").addClass("ui-autocomplete ui-front").appendTo(this._appendTo()).menu({
					role: null
				}).hide().data("ui-menu"), this._on(this.menu.element, {
					mousedown: function(b) {
						b.preventDefault(), this.cancelBlur = !0, this._delay(function() {
							delete this.cancelBlur
						});
						var c = this.menu.element[0];
						a(b.target).closest(".ui-menu-item").length || this._delay(function() {
							var b = this;
							this.document.one("mousedown", function(d) {
								d.target === b.element[0] || d.target === c || a.contains(c, d.target) || b.close()
							})
						})
					},
					menufocus: function(b, c) {
						if (this.isNewMenu && (this.isNewMenu = !1, b.originalEvent && /^mouse/.test(b.originalEvent.type))) return this.menu.blur(), void this.document.one("mousemove", function() {
							a(b.target).trigger(b.originalEvent)
						});
						var d = c.item.data("ui-autocomplete-item");
						!1 !== this._trigger("focus", b, {
							item: d
						}) ? b.originalEvent && /^key/.test(b.originalEvent.type) && this._value(d.value) : this.liveRegion.text(d.value)
					},
					menuselect: function(a, b) {
						var c = b.item.data("ui-autocomplete-item"),
							d = this.previous;
						this.element[0] !== this.document[0].activeElement && (this.element.focus(), this.previous = d, this._delay(function() {
							this.previous = d, this.selectedItem = c
						})), !1 !== this._trigger("select", a, {
							item: c
						}) && this._value(c.value), this.term = this._value(), this.close(a), this.selectedItem = c
					}
				}), this.liveRegion = a("<span>", {
					role: "status",
					"aria-live": "polite"
				}).addClass("ui-helper-hidden-accessible").insertBefore(this.element), this._on(this.window, {
					beforeunload: function() {
						this.element.removeAttr("autocomplete")
					}
				})
			},
			_destroy: function() {
				clearTimeout(this.searching), this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete"), this.menu.element.remove(), this.liveRegion.remove()
			},
			_setOption: function(a, b) {
				this._super(a, b), "source" === a && this._initSource(), "appendTo" === a && this.menu.element.appendTo(this._appendTo()), "disabled" === a && b && this.xhr && this.xhr.abort()
			},
			_appendTo: function() {
				var b = this.options.appendTo;
				return b && (b = b.jquery || b.nodeType ? a(b) : this.document.find(b).eq(0)), b || (b = this.element.closest(".ui-front")), b.length || (b = this.document[0].body), b
			},
			_initSource: function() {
				var b, c, d = this;
				a.isArray(this.options.source) ? (b = this.options.source, this.source = function(c, d) {
					d(a.ui.autocomplete.filter(b, c.term))
				}) : "string" == typeof this.options.source ? (c = this.options.source, this.source = function(b, e) {
					d.xhr && d.xhr.abort(), d.xhr = a.ajax({
						url: c,
						data: b,
						dataType: "json",
						success: function(a) {
							e(a)
						},
						error: function() {
							e([])
						}
					})
				}) : this.source = this.options.source
			},
			_searchTimeout: function(a) {
				clearTimeout(this.searching), this.searching = this._delay(function() {
					this.term !== this._value() && (this.selectedItem = null, this.search(null, a))
				}, this.options.delay)
			},
			search: function(a, b) {
				return a = null != a ? a : this._value(), this.term = this._value(), a.length < this.options.minLength ? this.close(b) : this._trigger("search", b) !== !1 ? this._search(a) : void 0
			},
			_search: function(a) {
				this.pending++, this.element.addClass("ui-autocomplete-loading"), this.cancelSearch = !1, this.source({
					term: a
				}, this._response())
			},
			_response: function() {
				var a = this,
					b = ++c;
				return function(d) {
					b === c && a.__response(d), a.pending--, a.pending || a.element.removeClass("ui-autocomplete-loading")
				}
			},
			__response: function(a) {
				a && (a = this._normalize(a)), this._trigger("response", null, {
					content: a
				}), !this.options.disabled && a && a.length && !this.cancelSearch ? (this._suggest(a), this._trigger("open")) : this._close()
			},
			close: function(a) {
				this.cancelSearch = !0, this._close(a)
			},
			_close: function(a) {
				this.menu.element.is(":visible") && (this.menu.element.hide(), this.menu.blur(), this.isNewMenu = !0, this._trigger("close", a))
			},
			_change: function(a) {
				this.previous !== this._value() && this._trigger("change", a, {
					item: this.selectedItem
				})
			},
			_normalize: function(b) {
				return b.length && b[0].label && b[0].value ? b : a.map(b, function(b) {
					return "string" == typeof b ? {
						label: b,
						value: b
					} : a.extend({
						label: b.label || b.value,
						value: b.value || b.label
					}, b)
				})
			},
			_suggest: function(b) {
				var c = this.menu.element.empty();
				this._renderMenu(c, b), this.isNewMenu = !0, this.menu.refresh(), c.show(), this._resizeMenu(), c.position(a.extend({ of: this.element
				}, this.options.position)), this.options.autoFocus && this.menu.next()
			},
			_resizeMenu: function() {
				var a = this.menu.element;
				a.outerWidth(Math.max(a.width("").outerWidth() + 1, this.element.outerWidth()))
			},
			_renderMenu: function(b, c) {
				var d = this;
				a.each(c, function(a, c) {
					d._renderItemData(b, c)
				})
			},
			_renderItemData: function(a, b) {
				return this._renderItem(a, b).data("ui-autocomplete-item", b)
			},
			_renderItem: function(b, c) {
				return a("<li>").append(a("<a>").text(c.label)).appendTo(b)
			},
			_move: function(a, b) {
				return this.menu.element.is(":visible") ? this.menu.isFirstItem() && /^previous/.test(a) || this.menu.isLastItem() && /^next/.test(a) ? (this._value(this.term), void this.menu.blur()) : void this.menu[a](b) : void this.search(null, b)
			},
			widget: function() {
				return this.menu.element
			},
			_value: function() {
				return this.valueMethod.apply(this.element, arguments)
			},
			_keyEvent: function(a, b) {
				this.isMultiLine && !this.menu.element.is(":visible") || (this._move(a, b), b.preventDefault())
			}
		}), a.extend(a.ui.autocomplete, {
			escapeRegex: function(a) {
				return a.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
			},
			filter: function(b, c) {
				var d = new RegExp(a.ui.autocomplete.escapeRegex(c), "i");
				return a.grep(b, function(a) {
					return d.test(a.label || a.value || a)
				})
			}
		}), a.widget("ui.autocomplete", a.ui.autocomplete, {
			options: {
				messages: {
					noResults: "No search results.",
					results: function(a) {
						return a + (a > 1 ? " results are" : " result is") + " available, use up and down arrow keys to navigate."
					}
				}
			},
			__response: function(a) {
				var b;
				this._superApply(arguments), this.options.disabled || this.cancelSearch || (b = a && a.length ? this.options.messages.results(a.length) : this.options.messages.noResults, this.liveRegion.text(b))
			}
		})
	}(jQuery),
	function(a, b) {
		var c, d, e, f, g = "ui-button ui-widget ui-state-default ui-corner-all",
			h = "ui-state-hover ui-state-active ",
			i = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",
			j = function() {
				var b = a(this);
				setTimeout(function() {
					b.find(":ui-button").button("refresh")
				}, 1)
			},
			k = function(b) {
				var c = b.name,
					d = b.form,
					e = a([]);
				return c && (c = c.replace(/'/g, "\\'"), e = d ? a(d).find("[name='" + c + "']") : a("[name='" + c + "']", b.ownerDocument).filter(function() {
					return !this.form
				})), e
			};
		a.widget("ui.button", {
			version: "1.10.3",
			defaultElement: "<button>",
			options: {
				disabled: null,
				text: !0,
				label: null,
				icons: {
					primary: null,
					secondary: null
				}
			},
			_create: function() {
				this.element.closest("form").unbind("reset" + this.eventNamespace).bind("reset" + this.eventNamespace, j), "boolean" != typeof this.options.disabled ? this.options.disabled = !!this.element.prop("disabled") : this.element.prop("disabled", this.options.disabled), this._determineButtonType(), this.hasTitle = !!this.buttonElement.attr("title");
				var b = this,
					h = this.options,
					i = "checkbox" === this.type || "radio" === this.type,
					l = i ? "" : "ui-state-active",
					m = "ui-state-focus";
				null === h.label && (h.label = "input" === this.type ? this.buttonElement.val() : this.buttonElement.html()), this._hoverable(this.buttonElement), this.buttonElement.addClass(g).attr("role", "button").bind("mouseenter" + this.eventNamespace, function() {
					h.disabled || this === c && a(this).addClass("ui-state-active")
				}).bind("mouseleave" + this.eventNamespace, function() {
						h.disabled || a(this).removeClass(l)
					}).bind("click" + this.eventNamespace, function(a) {
						h.disabled && (a.preventDefault(), a.stopImmediatePropagation())
					}), this.element.bind("focus" + this.eventNamespace, function() {
					b.buttonElement.addClass(m)
				}).bind("blur" + this.eventNamespace, function() {
						b.buttonElement.removeClass(m)
					}), i && (this.element.bind("change" + this.eventNamespace, function() {
					f || b.refresh()
				}), this.buttonElement.bind("mousedown" + this.eventNamespace, function(a) {
					h.disabled || (f = !1, d = a.pageX, e = a.pageY)
				}).bind("mouseup" + this.eventNamespace, function(a) {
						h.disabled || d === a.pageX && e === a.pageY || (f = !0)
					})), "checkbox" === this.type ? this.buttonElement.bind("click" + this.eventNamespace, function() {
					if (h.disabled || f) return !1
				}) : "radio" === this.type ? this.buttonElement.bind("click" + this.eventNamespace, function() {
					if (h.disabled || f) return !1;
					a(this).addClass("ui-state-active"), b.buttonElement.attr("aria-pressed", "true");
					var c = b.element[0];
					k(c).not(c).map(function() {
						return a(this).button("widget")[0]
					}).removeClass("ui-state-active").attr("aria-pressed", "false")
				}) : (this.buttonElement.bind("mousedown" + this.eventNamespace, function() {
					return !h.disabled && (a(this).addClass("ui-state-active"), c = this, void b.document.one("mouseup", function() {
						c = null
					}))
				}).bind("mouseup" + this.eventNamespace, function() {
						return !h.disabled && void a(this).removeClass("ui-state-active")
					}).bind("keydown" + this.eventNamespace, function(b) {
						return !h.disabled && void(b.keyCode !== a.ui.keyCode.SPACE && b.keyCode !== a.ui.keyCode.ENTER || a(this).addClass("ui-state-active"))
					}).bind("keyup" + this.eventNamespace + " blur" + this.eventNamespace, function() {
						a(this).removeClass("ui-state-active")
					}), this.buttonElement.is("a") && this.buttonElement.keyup(function(b) {
					b.keyCode === a.ui.keyCode.SPACE && a(this).click()
				})), this._setOption("disabled", h.disabled), this._resetButton()
			},
			_determineButtonType: function() {
				var a, b, c;
				this.element.is("[type=checkbox]") ? this.type = "checkbox" : this.element.is("[type=radio]") ? this.type = "radio" : this.element.is("input") ? this.type = "input" : this.type = "button", "checkbox" === this.type || "radio" === this.type ? (a = this.element.parents().last(), b = "label[for='" + this.element.attr("id") + "']", this.buttonElement = a.find(b), this.buttonElement.length || (a = a.length ? a.siblings() : this.element.siblings(), this.buttonElement = a.filter(b), this.buttonElement.length || (this.buttonElement = a.find(b))), this.element.addClass("ui-helper-hidden-accessible"), c = this.element.is(":checked"), c && this.buttonElement.addClass("ui-state-active"), this.buttonElement.prop("aria-pressed", c)) : this.buttonElement = this.element
			},
			widget: function() {
				return this.buttonElement
			},
			_destroy: function() {
				this.element.removeClass("ui-helper-hidden-accessible"), this.buttonElement.removeClass(g + " " + h + " " + i).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()), this.hasTitle || this.buttonElement.removeAttr("title")
			},
			_setOption: function(a, b) {
				return this._super(a, b), "disabled" === a ? void(b ? this.element.prop("disabled", !0) : this.element.prop("disabled", !1)) : void this._resetButton()
			},
			refresh: function() {
				var b = this.element.is("input, button") ? this.element.is(":disabled") : this.element.hasClass("ui-button-disabled");
				b !== this.options.disabled && this._setOption("disabled", b), "radio" === this.type ? k(this.element[0]).each(function() {
					a(this).is(":checked") ? a(this).button("widget").addClass("ui-state-active").attr("aria-pressed", "true") : a(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", "false")
				}) : "checkbox" === this.type && (this.element.is(":checked") ? this.buttonElement.addClass("ui-state-active").attr("aria-pressed", "true") : this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", "false"))
			},
			_resetButton: function() {
				if ("input" === this.type) return void(this.options.label && this.element.val(this.options.label));
				var b = this.buttonElement.removeClass(i),
					c = a("<span></span>", this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(b.empty()).text(),
					d = this.options.icons,
					e = d.primary && d.secondary,
					f = [];
				d.primary || d.secondary ? (this.options.text && f.push("ui-button-text-icon" + (e ? "s" : d.primary ? "-primary" : "-secondary")), d.primary && b.prepend("<span class='ui-button-icon-primary ui-icon " + d.primary + "'></span>"), d.secondary && b.append("<span class='ui-button-icon-secondary ui-icon " + d.secondary + "'></span>"), this.options.text || (f.push(e ? "ui-button-icons-only" : "ui-button-icon-only"), this.hasTitle || b.attr("title", a.trim(c)))) : f.push("ui-button-text-only"), b.addClass(f.join(" "))
			}
		}), a.widget("ui.buttonset", {
			version: "1.10.3",
			options: {
				items: "button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)"
			},
			_create: function() {
				this.element.addClass("ui-buttonset")
			},
			_init: function() {
				this.refresh()
			},
			_setOption: function(a, b) {
				"disabled" === a && this.buttons.button("option", a, b), this._super(a, b)
			},
			refresh: function() {
				var b = "rtl" === this.element.css("direction");
				this.buttons = this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function() {
					return a(this).button("widget")[0]
				}).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(b ? "ui-corner-right" : "ui-corner-left").end().filter(":last").addClass(b ? "ui-corner-left" : "ui-corner-right").end().end()
			},
			_destroy: function() {
				this.element.removeClass("ui-buttonset"), this.buttons.map(function() {
					return a(this).button("widget")[0]
				}).removeClass("ui-corner-left ui-corner-right").end().button("destroy")
			}
		})
	}(jQuery),
	function(a, b) {
		function e() {
			this._curInst = null, this._keyEvent = !1, this._disabledInputs = [], this._datepickerShowing = !1, this._inDialog = !1, this._mainDivId = "ui-datepicker-div", this._inlineClass = "ui-datepicker-inline", this._appendClass = "ui-datepicker-append", this._triggerClass = "ui-datepicker-trigger", this._dialogClass = "ui-datepicker-dialog", this._disableClass = "ui-datepicker-disabled", this._unselectableClass = "ui-datepicker-unselectable", this._currentClass = "ui-datepicker-current-day", this._dayOverClass = "ui-datepicker-days-cell-over", this.regional = [], this.regional[""] = {
				closeText: "Done",
				prevText: "Prev",
				nextText: "Next",
				currentText: "Today",
				monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
				monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
				dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
				dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
				dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
				weekHeader: "Wk",
				dateFormat: "mm/dd/yy",
				firstDay: 0,
				isRTL: !1,
				showMonthAfterYear: !1,
				yearSuffix: ""
			}, this._defaults = {
				showOn: "focus",
				showAnim: "fadeIn",
				showOptions: {},
				defaultDate: null,
				appendText: "",
				buttonText: "...",
				buttonImage: "",
				buttonImageOnly: !1,
				hideIfNoPrevNext: !1,
				navigationAsDateFormat: !1,
				gotoCurrent: !1,
				changeMonth: !1,
				changeYear: !1,
				yearRange: "c-10:c+10",
				showOtherMonths: !1,
				selectOtherMonths: !1,
				showWeek: !1,
				calculateWeek: this.iso8601Week,
				shortYearCutoff: "+10",
				minDate: null,
				maxDate: null,
				duration: "fast",
				beforeShowDay: null,
				beforeShow: null,
				onSelect: null,
				onChangeMonthYear: null,
				onClose: null,
				numberOfMonths: 1,
				showCurrentAtPos: 0,
				stepMonths: 1,
				stepBigMonths: 12,
				altField: "",
				altFormat: "",
				constrainInput: !0,
				showButtonPanel: !1,
				autoSize: !1,
				disabled: !1
			}, a.extend(this._defaults, this.regional[""]), this.dpDiv = f(a("<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))
		}

		function f(b) {
			var c = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
			return b.delegate(c, "mouseout", function() {
				a(this).removeClass("ui-state-hover"), this.className.indexOf("ui-datepicker-prev") !== -1 && a(this).removeClass("ui-datepicker-prev-hover"), this.className.indexOf("ui-datepicker-next") !== -1 && a(this).removeClass("ui-datepicker-next-hover")
			}).delegate(c, "mouseover", function() {
					a.datepicker._isDisabledDatepicker(d.inline ? b.parent()[0] : d.input[0]) || (a(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"), a(this).addClass("ui-state-hover"), this.className.indexOf("ui-datepicker-prev") !== -1 && a(this).addClass("ui-datepicker-prev-hover"), this.className.indexOf("ui-datepicker-next") !== -1 && a(this).addClass("ui-datepicker-next-hover"))
				})
		}

		function g(b, c) {
			a.extend(b, c);
			for (var d in c) null == c[d] && (b[d] = c[d]);
			return b
		}
		a.extend(a.ui, {
			datepicker: {
				version: "1.10.3"
			}
		});
		var d, c = "datepicker";
		a.extend(e.prototype, {
			markerClassName: "hasDatepicker",
			maxRows: 4,
			_widgetDatepicker: function() {
				return this.dpDiv
			},
			setDefaults: function(a) {
				return g(this._defaults, a || {}), this
			},
			_attachDatepicker: function(b, c) {
				var d, e, f;
				d = b.nodeName.toLowerCase(), e = "div" === d || "span" === d, b.id || (this.uuid += 1, b.id = "dp" + this.uuid), f = this._newInst(a(b), e), f.settings = a.extend({}, c || {}), "input" === d ? this._connectDatepicker(b, f) : e && this._inlineDatepicker(b, f)
			},
			_newInst: function(b, c) {
				var d = b[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1");
				return {
					id: d,
					input: b,
					selectedDay: 0,
					selectedMonth: 0,
					selectedYear: 0,
					drawMonth: 0,
					drawYear: 0,
					inline: c,
					dpDiv: c ? f(a("<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")) : this.dpDiv
				}
			},
			_connectDatepicker: function(b, d) {
				var e = a(b);
				d.append = a([]), d.trigger = a([]), e.hasClass(this.markerClassName) || (this._attachments(e, d), e.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp), this._autoSize(d), a.data(b, c, d), d.settings.disabled && this._disableDatepicker(b))
			},
			_attachments: function(b, c) {
				var d, e, f, g = this._get(c, "appendText"),
					h = this._get(c, "isRTL");
				c.append && c.append.remove(), g && (c.append = a("<span class='" + this._appendClass + "'>" + g + "</span>"), b[h ? "before" : "after"](c.append)), b.unbind("focus", this._showDatepicker), c.trigger && c.trigger.remove(), d = this._get(c, "showOn"), "focus" !== d && "both" !== d || b.focus(this._showDatepicker), "button" !== d && "both" !== d || (e = this._get(c, "buttonText"), f = this._get(c, "buttonImage"), c.trigger = a(this._get(c, "buttonImageOnly") ? a("<img/>").addClass(this._triggerClass).attr({
					src: f,
					alt: e,
					title: e
				}) : a("<button type='button'></button>").addClass(this._triggerClass).html(f ? a("<img/>").attr({
					src: f,
					alt: e,
					title: e
				}) : e)), b[h ? "before" : "after"](c.trigger), c.trigger.click(function() {
					return a.datepicker._datepickerShowing && a.datepicker._lastInput === b[0] ? a.datepicker._hideDatepicker() : a.datepicker._datepickerShowing && a.datepicker._lastInput !== b[0] ? (a.datepicker._hideDatepicker(), a.datepicker._showDatepicker(b[0])) : a.datepicker._showDatepicker(b[0]), !1
				}))
			},
			_autoSize: function(a) {
				if (this._get(a, "autoSize") && !a.inline) {
					var b, c, d, e, f = new Date(2009, 11, 20),
						g = this._get(a, "dateFormat");
					g.match(/[DM]/) && (b = function(a) {
						for (c = 0, d = 0, e = 0; e < a.length; e++) a[e].length > c && (c = a[e].length, d = e);
						return d
					}, f.setMonth(b(this._get(a, g.match(/MM/) ? "monthNames" : "monthNamesShort"))), f.setDate(b(this._get(a, g.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - f.getDay())), a.input.attr("size", this._formatDate(a, f).length)
				}
			},
			_inlineDatepicker: function(b, d) {
				var e = a(b);
				e.hasClass(this.markerClassName) || (e.addClass(this.markerClassName).append(d.dpDiv), a.data(b, c, d), this._setDate(d, this._getDefaultDate(d), !0), this._updateDatepicker(d), this._updateAlternate(d), d.settings.disabled && this._disableDatepicker(b), d.dpDiv.css("display", "block"))
			},
			_dialogDatepicker: function(b, d, e, f, h) {
				var i, j, k, l, m, n = this._dialogInst;
				return n || (this.uuid += 1, i = "dp" + this.uuid, this._dialogInput = a("<input type='text' id='" + i + "' style='position: absolute; top: -100px; width: 0px;'/>"), this._dialogInput.keydown(this._doKeyDown), a("body").append(this._dialogInput), n = this._dialogInst = this._newInst(this._dialogInput, !1), n.settings = {}, a.data(this._dialogInput[0], c, n)), g(n.settings, f || {}), d = d && d.constructor === Date ? this._formatDate(n, d) : d, this._dialogInput.val(d), this._pos = h ? h.length ? h : [h.pageX, h.pageY] : null, this._pos || (j = document.documentElement.clientWidth, k = document.documentElement.clientHeight, l = document.documentElement.scrollLeft || document.body.scrollLeft, m = document.documentElement.scrollTop || document.body.scrollTop, this._pos = [j / 2 - 100 + l, k / 2 - 150 + m]), this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px"), n.settings.onSelect = e, this._inDialog = !0, this.dpDiv.addClass(this._dialogClass), this._showDatepicker(this._dialogInput[0]), a.blockUI && a.blockUI(this.dpDiv), a.data(this._dialogInput[0], c, n), this
			},
			_destroyDatepicker: function(b) {
				var d, e = a(b),
					f = a.data(b, c);
				e.hasClass(this.markerClassName) && (d = b.nodeName.toLowerCase(), a.removeData(b, c), "input" === d ? (f.append.remove(), f.trigger.remove(), e.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup", this._doKeyUp)) : "div" !== d && "span" !== d || e.removeClass(this.markerClassName).empty())
			},
			_enableDatepicker: function(b) {
				var d, e, f = a(b),
					g = a.data(b, c);
				f.hasClass(this.markerClassName) && (d = b.nodeName.toLowerCase(), "input" === d ? (b.disabled = !1, g.trigger.filter("button").each(function() {
					this.disabled = !1
				}).end().filter("img").css({
						opacity: "1.0",
						cursor: ""
					})) : "div" !== d && "span" !== d || (e = f.children("." + this._inlineClass), e.children().removeClass("ui-state-disabled"), e.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !1)), this._disabledInputs = a.map(this._disabledInputs, function(a) {
					return a === b ? null : a
				}))
			},
			_disableDatepicker: function(b) {
				var d, e, f = a(b),
					g = a.data(b, c);
				f.hasClass(this.markerClassName) && (d = b.nodeName.toLowerCase(), "input" === d ? (b.disabled = !0, g.trigger.filter("button").each(function() {
					this.disabled = !0
				}).end().filter("img").css({
						opacity: "0.5",
						cursor: "default"
					})) : "div" !== d && "span" !== d || (e = f.children("." + this._inlineClass), e.children().addClass("ui-state-disabled"), e.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !0)), this._disabledInputs = a.map(this._disabledInputs, function(a) {
					return a === b ? null : a
				}), this._disabledInputs[this._disabledInputs.length] = b)
			},
			_isDisabledDatepicker: function(a) {
				if (!a) return !1;
				for (var b = 0; b < this._disabledInputs.length; b++)
					if (this._disabledInputs[b] === a) return !0;
				return !1
			},
			_getInst: function(b) {
				try {
					return a.data(b, c)
				} catch (a) {
					throw "Missing instance data for this datepicker"
				}
			},
			_optionDatepicker: function(c, d, e) {
				var f, h, i, j, k = this._getInst(c);
				return 2 === arguments.length && "string" == typeof d ? "defaults" === d ? a.extend({}, a.datepicker._defaults) : k ? "all" === d ? a.extend({}, k.settings) : this._get(k, d) : null : (f = d || {}, "string" == typeof d && (f = {}, f[d] = e), void(k && (this._curInst === k && this._hideDatepicker(), h = this._getDateDatepicker(c, !0), i = this._getMinMaxDate(k, "min"), j = this._getMinMaxDate(k, "max"), g(k.settings, f), null !== i && f.dateFormat !== b && f.minDate === b && (k.settings.minDate = this._formatDate(k, i)), null !== j && f.dateFormat !== b && f.maxDate === b && (k.settings.maxDate = this._formatDate(k, j)), "disabled" in f && (f.disabled ? this._disableDatepicker(c) : this._enableDatepicker(c)), this._attachments(a(c), k), this._autoSize(k), this._setDate(k, h), this._updateAlternate(k), this._updateDatepicker(k))))
			},
			_changeDatepicker: function(a, b, c) {
				this._optionDatepicker(a, b, c)
			},
			_refreshDatepicker: function(a) {
				var b = this._getInst(a);
				b && this._updateDatepicker(b)
			},
			_setDateDatepicker: function(a, b) {
				var c = this._getInst(a);
				c && (this._setDate(c, b), this._updateDatepicker(c), this._updateAlternate(c))
			},
			_getDateDatepicker: function(a, b) {
				var c = this._getInst(a);
				return c && !c.inline && this._setDateFromField(c, b), c ? this._getDate(c) : null
			},
			_doKeyDown: function(b) {
				var c, d, e, f = a.datepicker._getInst(b.target),
					g = !0,
					h = f.dpDiv.is(".ui-datepicker-rtl");
				if (f._keyEvent = !0, a.datepicker._datepickerShowing) switch (b.keyCode) {
					case 9:
						a.datepicker._hideDatepicker(), g = !1;
						break;
					case 13:
						return e = a("td." + a.datepicker._dayOverClass + ":not(." + a.datepicker._currentClass + ")", f.dpDiv), e[0] && a.datepicker._selectDay(b.target, f.selectedMonth, f.selectedYear, e[0]), c = a.datepicker._get(f, "onSelect"), c ? (d = a.datepicker._formatDate(f), c.apply(f.input ? f.input[0] : null, [d, f])) : a.datepicker._hideDatepicker(), !1;
					case 27:
						a.datepicker._hideDatepicker();
						break;
					case 33:
						a.datepicker._adjustDate(b.target, b.ctrlKey ? -a.datepicker._get(f, "stepBigMonths") : -a.datepicker._get(f, "stepMonths"), "M");
						break;
					case 34:
						a.datepicker._adjustDate(b.target, b.ctrlKey ? +a.datepicker._get(f, "stepBigMonths") : +a.datepicker._get(f, "stepMonths"), "M");
						break;
					case 35:
						(b.ctrlKey || b.metaKey) && a.datepicker._clearDate(b.target), g = b.ctrlKey || b.metaKey;
						break;
					case 36:
						(b.ctrlKey || b.metaKey) && a.datepicker._gotoToday(b.target), g = b.ctrlKey || b.metaKey;
						break;
					case 37:
						(b.ctrlKey || b.metaKey) && a.datepicker._adjustDate(b.target, h ? 1 : -1, "D"), g = b.ctrlKey || b.metaKey, b.originalEvent.altKey && a.datepicker._adjustDate(b.target, b.ctrlKey ? -a.datepicker._get(f, "stepBigMonths") : -a.datepicker._get(f, "stepMonths"), "M");
						break;
					case 38:
						(b.ctrlKey || b.metaKey) && a.datepicker._adjustDate(b.target, -7, "D"), g = b.ctrlKey || b.metaKey;
						break;
					case 39:
						(b.ctrlKey || b.metaKey) && a.datepicker._adjustDate(b.target, h ? -1 : 1, "D"), g = b.ctrlKey || b.metaKey, b.originalEvent.altKey && a.datepicker._adjustDate(b.target, b.ctrlKey ? +a.datepicker._get(f, "stepBigMonths") : +a.datepicker._get(f, "stepMonths"), "M");
						break;
					case 40:
						(b.ctrlKey || b.metaKey) && a.datepicker._adjustDate(b.target, 7, "D"), g = b.ctrlKey || b.metaKey;
						break;
					default:
						g = !1
				} else 36 === b.keyCode && b.ctrlKey ? a.datepicker._showDatepicker(this) : g = !1;
				g && (b.preventDefault(), b.stopPropagation())
			},
			_doKeyPress: function(b) {
				var c, d, e = a.datepicker._getInst(b.target);
				if (a.datepicker._get(e, "constrainInput")) return c = a.datepicker._possibleChars(a.datepicker._get(e, "dateFormat")), d = String.fromCharCode(null == b.charCode ? b.keyCode : b.charCode), b.ctrlKey || b.metaKey || d < " " || !c || c.indexOf(d) > -1
			},
			_doKeyUp: function(b) {
				var c, d = a.datepicker._getInst(b.target);
				if (d.input.val() !== d.lastVal) try {
					c = a.datepicker.parseDate(a.datepicker._get(d, "dateFormat"), d.input ? d.input.val() : null, a.datepicker._getFormatConfig(d)), c && (a.datepicker._setDateFromField(d), a.datepicker._updateAlternate(d), a.datepicker._updateDatepicker(d))
				} catch (a) {}
				return !0
			},
			_showDatepicker: function(b) {
				if (b = b.target || b, "input" !== b.nodeName.toLowerCase() && (b = a("input", b.parentNode)[0]), !a.datepicker._isDisabledDatepicker(b) && a.datepicker._lastInput !== b) {
					var c, d, e, f, h, i, j;
					c = a.datepicker._getInst(b), a.datepicker._curInst && a.datepicker._curInst !== c && (a.datepicker._curInst.dpDiv.stop(!0, !0), c && a.datepicker._datepickerShowing && a.datepicker._hideDatepicker(a.datepicker._curInst.input[0])), d = a.datepicker._get(c, "beforeShow"), e = d ? d.apply(b, [b, c]) : {}, e !== !1 && (g(c.settings, e), c.lastVal = null, a.datepicker._lastInput = b, a.datepicker._setDateFromField(c), a.datepicker._inDialog && (b.value = ""), a.datepicker._pos || (a.datepicker._pos = a.datepicker._findPos(b), a.datepicker._pos[1] += b.offsetHeight), f = !1, a(b).parents().each(function() {
						return f |= "fixed" === a(this).css("position"), !f
					}), h = {
						left: a.datepicker._pos[0],
						top: a.datepicker._pos[1]
					}, a.datepicker._pos = null, c.dpDiv.empty(), c.dpDiv.css({
						position: "absolute",
						display: "block",
						top: "-1000px"
					}), a.datepicker._updateDatepicker(c), h = a.datepicker._checkOffset(c, h, f), c.dpDiv.css({
						position: a.datepicker._inDialog && a.blockUI ? "static" : f ? "fixed" : "absolute",
						display: "none",
						left: h.left + "px",
						top: h.top + "px"
					}), c.inline || (i = a.datepicker._get(c, "showAnim"), j = a.datepicker._get(c, "duration"), c.dpDiv.zIndex(a(b).zIndex() + 1), a.datepicker._datepickerShowing = !0, a.effects && a.effects.effect[i] ? c.dpDiv.show(i, a.datepicker._get(c, "showOptions"), j) : c.dpDiv[i || "show"](i ? j : null), a.datepicker._shouldFocusInput(c) && c.input.focus(), a.datepicker._curInst = c))
				}
			},
			_updateDatepicker: function(b) {
				this.maxRows = 4, d = b, b.dpDiv.empty().append(this._generateHTML(b)), this._attachHandlers(b), b.dpDiv.find("." + this._dayOverClass + " a").mouseover();
				var c, e = this._getNumberOfMonths(b),
					f = e[1],
					g = 17;
				b.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""), f > 1 && b.dpDiv.addClass("ui-datepicker-multi-" + f).css("width", g * f + "em"), b.dpDiv[(1 !== e[0] || 1 !== e[1] ? "add" : "remove") + "Class"]("ui-datepicker-multi"), b.dpDiv[(this._get(b, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl"), b === a.datepicker._curInst && a.datepicker._datepickerShowing && a.datepicker._shouldFocusInput(b) && b.input.focus(), b.yearshtml && (c = b.yearshtml, setTimeout(function() {
					c === b.yearshtml && b.yearshtml && b.dpDiv.find("select.ui-datepicker-year:first").replaceWith(b.yearshtml), c = b.yearshtml = null
				}, 0))
			},
			_shouldFocusInput: function(a) {
				return a.input && a.input.is(":visible") && !a.input.is(":disabled") && !a.input.is(":focus")
			},
			_checkOffset: function(b, c, d) {
				var e = b.dpDiv.outerWidth(),
					f = b.dpDiv.outerHeight(),
					g = b.input ? b.input.outerWidth() : 0,
					h = b.input ? b.input.outerHeight() : 0,
					i = document.documentElement.clientWidth + (d ? 0 : a(document).scrollLeft()),
					j = document.documentElement.clientHeight + (d ? 0 : a(document).scrollTop());
				return c.left -= this._get(b, "isRTL") ? e - g : 0, c.left -= d && c.left === b.input.offset().left ? a(document).scrollLeft() : 0, c.top -= d && c.top === b.input.offset().top + h ? a(document).scrollTop() : 0, c.left -= Math.min(c.left, c.left + e > i && i > e ? Math.abs(c.left + e - i) : 0), c.top -= Math.min(c.top, c.top + f > j && j > f ? Math.abs(f + h) : 0), c
			},
			_findPos: function(b) {
				for (var c, d = this._getInst(b), e = this._get(d, "isRTL"); b && ("hidden" === b.type || 1 !== b.nodeType || a.expr.filters.hidden(b));) b = b[e ? "previousSibling" : "nextSibling"];
				return c = a(b).offset(), [c.left, c.top]
			},
			_hideDatepicker: function(b) {
				var d, e, f, g, h = this._curInst;
				!h || b && h !== a.data(b, c) || this._datepickerShowing && (d = this._get(h, "showAnim"), e = this._get(h, "duration"), f = function() {
					a.datepicker._tidyDialog(h)
				}, a.effects && (a.effects.effect[d] || a.effects[d]) ? h.dpDiv.hide(d, a.datepicker._get(h, "showOptions"), e, f) : h.dpDiv["slideDown" === d ? "slideUp" : "fadeIn" === d ? "fadeOut" : "hide"](d ? e : null, f), d || f(), this._datepickerShowing = !1, g = this._get(h, "onClose"), g && g.apply(h.input ? h.input[0] : null, [h.input ? h.input.val() : "", h]), this._lastInput = null, this._inDialog && (this._dialogInput.css({
					position: "absolute",
					left: "0",
					top: "-100px"
				}), a.blockUI && (a.unblockUI(), a("body").append(this.dpDiv))), this._inDialog = !1)
			},
			_tidyDialog: function(a) {
				a.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")
			},
			_checkExternalClick: function(b) {
				if (a.datepicker._curInst) {
					var c = a(b.target),
						d = a.datepicker._getInst(c[0]);
					(c[0].id === a.datepicker._mainDivId || 0 !== c.parents("#" + a.datepicker._mainDivId).length || c.hasClass(a.datepicker.markerClassName) || c.closest("." + a.datepicker._triggerClass).length || !a.datepicker._datepickerShowing || a.datepicker._inDialog && a.blockUI) && (!c.hasClass(a.datepicker.markerClassName) || a.datepicker._curInst === d) || a.datepicker._hideDatepicker()
				}
			},
			_adjustDate: function(b, c, d) {
				var e = a(b),
					f = this._getInst(e[0]);
				this._isDisabledDatepicker(e[0]) || (this._adjustInstDate(f, c + ("M" === d ? this._get(f, "showCurrentAtPos") : 0), d), this._updateDatepicker(f))
			},
			_gotoToday: function(b) {
				var c, d = a(b),
					e = this._getInst(d[0]);
				this._get(e, "gotoCurrent") && e.currentDay ? (e.selectedDay = e.currentDay, e.drawMonth = e.selectedMonth = e.currentMonth, e.drawYear = e.selectedYear = e.currentYear) : (c = new Date, e.selectedDay = c.getDate(), e.drawMonth = e.selectedMonth = c.getMonth(), e.drawYear = e.selectedYear = c.getFullYear()), this._notifyChange(e), this._adjustDate(d)
			},
			_selectMonthYear: function(b, c, d) {
				var e = a(b),
					f = this._getInst(e[0]);
				f["selected" + ("M" === d ? "Month" : "Year")] = f["draw" + ("M" === d ? "Month" : "Year")] = parseInt(c.options[c.selectedIndex].value, 10), this._notifyChange(f), this._adjustDate(e)
			},
			_selectDay: function(b, c, d, e) {
				var f, g = a(b);
				a(e).hasClass(this._unselectableClass) || this._isDisabledDatepicker(g[0]) || (f = this._getInst(g[0]), f.selectedDay = f.currentDay = a("a", e).html(), f.selectedMonth = f.currentMonth = c, f.selectedYear = f.currentYear = d, this._selectDate(b, this._formatDate(f, f.currentDay, f.currentMonth, f.currentYear)))
			},
			_clearDate: function(b) {
				var c = a(b);
				this._selectDate(c, "")
			},
			_selectDate: function(b, c) {
				var d, e = a(b),
					f = this._getInst(e[0]);
				c = null != c ? c : this._formatDate(f), f.input && f.input.val(c), this._updateAlternate(f), d = this._get(f, "onSelect"), d ? d.apply(f.input ? f.input[0] : null, [c, f]) : f.input && f.input.trigger("change"), f.inline ? this._updateDatepicker(f) : (this._hideDatepicker(), this._lastInput = f.input[0], "object" != typeof f.input[0] && f.input.focus(), this._lastInput = null)
			},
			_updateAlternate: function(b) {
				var c, d, e, f = this._get(b, "altField");
				f && (c = this._get(b, "altFormat") || this._get(b, "dateFormat"), d = this._getDate(b), e = this.formatDate(c, d, this._getFormatConfig(b)), a(f).each(function() {
					a(this).val(e)
				}))
			},
			noWeekends: function(a) {
				var b = a.getDay();
				return [b > 0 && b < 6, ""]
			},
			iso8601Week: function(a) {
				var b, c = new Date(a.getTime());
				return c.setDate(c.getDate() + 4 - (c.getDay() || 7)), b = c.getTime(), c.setMonth(0), c.setDate(1), Math.floor(Math.round((b - c) / 864e5) / 7) + 1
			},
			parseDate: function(b, c, d) {
				if (null == b || null == c) throw "Invalid arguments";
				if (c = "object" == typeof c ? c.toString() : c + "", "" === c) return null;
				var e, f, g, t, h = 0,
					i = (d ? d.shortYearCutoff : null) || this._defaults.shortYearCutoff,
					j = "string" != typeof i ? i : (new Date).getFullYear() % 100 + parseInt(i, 10),
					k = (d ? d.dayNamesShort : null) || this._defaults.dayNamesShort,
					l = (d ? d.dayNames : null) || this._defaults.dayNames,
					m = (d ? d.monthNamesShort : null) || this._defaults.monthNamesShort,
					n = (d ? d.monthNames : null) || this._defaults.monthNames,
					o = -1,
					p = -1,
					q = -1,
					r = -1,
					s = !1,
					u = function(a) {
						var c = e + 1 < b.length && b.charAt(e + 1) === a;
						return c && e++, c
					},
					v = function(a) {
						var b = u(a),
							d = "@" === a ? 14 : "!" === a ? 20 : "y" === a && b ? 4 : "o" === a ? 3 : 2,
							e = new RegExp("^\\d{1," + d + "}"),
							f = c.substring(h).match(e);
						if (!f) throw "Missing number at position " + h;
						return h += f[0].length, parseInt(f[0], 10)
					},
					w = function(b, d, e) {
						var f = -1,
							g = a.map(u(b) ? e : d, function(a, b) {
								return [
									[b, a]
								]
							}).sort(function(a, b) {
									return -(a[1].length - b[1].length)
								});
						if (a.each(g, function(a, b) {
							var d = b[1];
							if (c.substr(h, d.length).toLowerCase() === d.toLowerCase()) return f = b[0], h += d.length, !1
						}), f !== -1) return f + 1;
						throw "Unknown name at position " + h
					},
					x = function() {
						if (c.charAt(h) !== b.charAt(e)) throw "Unexpected literal at position " + h;
						h++
					};
				for (e = 0; e < b.length; e++)
					if (s) "'" !== b.charAt(e) || u("'") ? x() : s = !1;
					else switch (b.charAt(e)) {
						case "d":
							q = v("d");
							break;
						case "D":
							w("D", k, l);
							break;
						case "o":
							r = v("o");
							break;
						case "m":
							p = v("m");
							break;
						case "M":
							p = w("M", m, n);
							break;
						case "y":
							o = v("y");
							break;
						case "@":
							t = new Date(v("@")), o = t.getFullYear(), p = t.getMonth() + 1, q = t.getDate();
							break;
						case "!":
							t = new Date((v("!") - this._ticksTo1970) / 1e4), o = t.getFullYear(), p = t.getMonth() + 1, q = t.getDate();
							break;
						case "'":
							u("'") ? x() : s = !0;
							break;
						default:
							x()
					}
				if (h < c.length && (g = c.substr(h), !/^\s+/.test(g))) throw "Extra/unparsed characters found in date: " + g;
				if (o === -1 ? o = (new Date).getFullYear() : o < 100 && (o += (new Date).getFullYear() - (new Date).getFullYear() % 100 + (o <= j ? 0 : -100)), r > -1)
					for (p = 1, q = r;;) {
						if (f = this._getDaysInMonth(o, p - 1), q <= f) break;
						p++, q -= f
					}
				if (t = this._daylightSavingAdjust(new Date(o, p - 1, q)), t.getFullYear() !== o || t.getMonth() + 1 !== p || t.getDate() !== q) throw "Invalid date";
				return t
			},
			ATOM: "yy-mm-dd",
			COOKIE: "D, dd M yy",
			ISO_8601: "yy-mm-dd",
			RFC_822: "D, d M y",
			RFC_850: "DD, dd-M-y",
			RFC_1036: "D, d M y",
			RFC_1123: "D, d M yy",
			RFC_2822: "D, d M yy",
			RSS: "D, d M y",
			TICKS: "!",
			TIMESTAMP: "@",
			W3C: "yy-mm-dd",
			_ticksTo1970: 24 * (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)) * 60 * 60 * 1e7,
			formatDate: function(a, b, c) {
				if (!b) return "";
				var d, e = (c ? c.dayNamesShort : null) || this._defaults.dayNamesShort,
					f = (c ? c.dayNames : null) || this._defaults.dayNames,
					g = (c ? c.monthNamesShort : null) || this._defaults.monthNamesShort,
					h = (c ? c.monthNames : null) || this._defaults.monthNames,
					i = function(b) {
						var c = d + 1 < a.length && a.charAt(d + 1) === b;
						return c && d++, c
					},
					j = function(a, b, c) {
						var d = "" + b;
						if (i(a))
							for (; d.length < c;) d = "0" + d;
						return d
					},
					k = function(a, b, c, d) {
						return i(a) ? d[b] : c[b]
					},
					l = "",
					m = !1;
				if (b)
					for (d = 0; d < a.length; d++)
						if (m) "'" !== a.charAt(d) || i("'") ? l += a.charAt(d) : m = !1;
						else switch (a.charAt(d)) {
							case "d":
								l += j("d", b.getDate(), 2);
								break;
							case "D":
								l += k("D", b.getDay(), e, f);
								break;
							case "o":
								l += j("o", Math.round((new Date(b.getFullYear(), b.getMonth(), b.getDate()).getTime() - new Date(b.getFullYear(), 0, 0).getTime()) / 864e5), 3);
								break;
							case "m":
								l += j("m", b.getMonth() + 1, 2);
								break;
							case "M":
								l += k("M", b.getMonth(), g, h);
								break;
							case "y":
								l += i("y") ? b.getFullYear() : (b.getYear() % 100 < 10 ? "0" : "") + b.getYear() % 100;
								break;
							case "@":
								l += b.getTime();
								break;
							case "!":
								l += 1e4 * b.getTime() + this._ticksTo1970;
								break;
							case "'":
								i("'") ? l += "'" : m = !0;
								break;
							default:
								l += a.charAt(d)
						}
				return l
			},
			_possibleChars: function(a) {
				var b, c = "",
					d = !1,
					e = function(c) {
						var d = b + 1 < a.length && a.charAt(b + 1) === c;
						return d && b++, d
					};
				for (b = 0; b < a.length; b++)
					if (d) "'" !== a.charAt(b) || e("'") ? c += a.charAt(b) : d = !1;
					else switch (a.charAt(b)) {
						case "d":
						case "m":
						case "y":
						case "@":
							c += "0123456789";
							break;
						case "D":
						case "M":
							return null;
						case "'":
							e("'") ? c += "'" : d = !0;
							break;
						default:
							c += a.charAt(b)
					}
				return c
			},
			_get: function(a, c) {
				return a.settings[c] !== b ? a.settings[c] : this._defaults[c]
			},
			_setDateFromField: function(a, b) {
				if (a.input.val() !== a.lastVal) {
					var c = this._get(a, "dateFormat"),
						d = a.lastVal = a.input ? a.input.val() : null,
						e = this._getDefaultDate(a),
						f = e,
						g = this._getFormatConfig(a);
					try {
						f = this.parseDate(c, d, g) || e
					} catch (a) {
						d = b ? "" : d
					}
					a.selectedDay = f.getDate(), a.drawMonth = a.selectedMonth = f.getMonth(), a.drawYear = a.selectedYear = f.getFullYear(), a.currentDay = d ? f.getDate() : 0, a.currentMonth = d ? f.getMonth() : 0, a.currentYear = d ? f.getFullYear() : 0, this._adjustInstDate(a)
				}
			},
			_getDefaultDate: function(a) {
				return this._restrictMinMax(a, this._determineDate(a, this._get(a, "defaultDate"), new Date))
			},
			_determineDate: function(b, c, d) {
				var e = function(a) {
						var b = new Date;
						return b.setDate(b.getDate() + a), b
					},
					f = function(c) {
						try {
							return a.datepicker.parseDate(a.datepicker._get(b, "dateFormat"), c, a.datepicker._getFormatConfig(b))
						} catch (a) {}
						for (var d = (c.toLowerCase().match(/^c/) ? a.datepicker._getDate(b) : null) || new Date, e = d.getFullYear(), f = d.getMonth(), g = d.getDate(), h = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g, i = h.exec(c); i;) {
							switch (i[2] || "d") {
								case "d":
								case "D":
									g += parseInt(i[1], 10);
									break;
								case "w":
								case "W":
									g += 7 * parseInt(i[1], 10);
									break;
								case "m":
								case "M":
									f += parseInt(i[1], 10), g = Math.min(g, a.datepicker._getDaysInMonth(e, f));
									break;
								case "y":
								case "Y":
									e += parseInt(i[1], 10), g = Math.min(g, a.datepicker._getDaysInMonth(e, f))
							}
							i = h.exec(c)
						}
						return new Date(e, f, g)
					},
					g = null == c || "" === c ? d : "string" == typeof c ? f(c) : "number" == typeof c ? isNaN(c) ? d : e(c) : new Date(c.getTime());
				return g = g && "Invalid Date" === g.toString() ? d : g, g && (g.setHours(0), g.setMinutes(0), g.setSeconds(0), g.setMilliseconds(0)), this._daylightSavingAdjust(g)
			},
			_daylightSavingAdjust: function(a) {
				return a ? (a.setHours(a.getHours() > 12 ? a.getHours() + 2 : 0), a) : null
			},
			_setDate: function(a, b, c) {
				var d = !b,
					e = a.selectedMonth,
					f = a.selectedYear,
					g = this._restrictMinMax(a, this._determineDate(a, b, new Date));
				a.selectedDay = a.currentDay = g.getDate(), a.drawMonth = a.selectedMonth = a.currentMonth = g.getMonth(), a.drawYear = a.selectedYear = a.currentYear = g.getFullYear(), e === a.selectedMonth && f === a.selectedYear || c || this._notifyChange(a), this._adjustInstDate(a), a.input && a.input.val(d ? "" : this._formatDate(a))
			},
			_getDate: function(a) {
				var b = !a.currentYear || a.input && "" === a.input.val() ? null : this._daylightSavingAdjust(new Date(a.currentYear, a.currentMonth, a.currentDay));
				return b
			},
			_attachHandlers: function(b) {
				var c = this._get(b, "stepMonths"),
					d = "#" + b.id.replace(/\\\\/g, "\\");
				b.dpDiv.find("[data-handler]").map(function() {
					var b = {
						prev: function() {
							a.datepicker._adjustDate(d, -c, "M")
						},
						next: function() {
							a.datepicker._adjustDate(d, +c, "M")
						},
						hide: function() {
							a.datepicker._hideDatepicker()
						},
						today: function() {
							a.datepicker._gotoToday(d)
						},
						selectDay: function() {
							return a.datepicker._selectDay(d, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this), !1
						},
						selectMonth: function() {
							return a.datepicker._selectMonthYear(d, this, "M"), !1
						},
						selectYear: function() {
							return a.datepicker._selectMonthYear(d, this, "Y"), !1
						}
					};
					a(this).bind(this.getAttribute("data-event"), b[this.getAttribute("data-handler")])
				})
			},
			_generateHTML: function(a) {
				var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O = new Date,
					P = this._daylightSavingAdjust(new Date(O.getFullYear(), O.getMonth(), O.getDate())),
					Q = this._get(a, "isRTL"),
					R = this._get(a, "showButtonPanel"),
					S = this._get(a, "hideIfNoPrevNext"),
					T = this._get(a, "navigationAsDateFormat"),
					U = this._getNumberOfMonths(a),
					V = this._get(a, "showCurrentAtPos"),
					W = this._get(a, "stepMonths"),
					X = 1 !== U[0] || 1 !== U[1],
					Y = this._daylightSavingAdjust(a.currentDay ? new Date(a.currentYear, a.currentMonth, a.currentDay) : new Date(9999, 9, 9)),
					Z = this._getMinMaxDate(a, "min"),
					$ = this._getMinMaxDate(a, "max"),
					_ = a.drawMonth - V,
					aa = a.drawYear;
				if (_ < 0 && (_ += 12, aa--), $)
					for (b = this._daylightSavingAdjust(new Date($.getFullYear(), $.getMonth() - U[0] * U[1] + 1, $.getDate())), b = Z && b < Z ? Z : b; this._daylightSavingAdjust(new Date(aa, _, 1)) > b;) _--, _ < 0 && (_ = 11, aa--);
				for (a.drawMonth = _, a.drawYear = aa, c = this._get(a, "prevText"), c = T ? this.formatDate(c, this._daylightSavingAdjust(new Date(aa, _ - W, 1)), this._getFormatConfig(a)) : c, d = this._canAdjustMonth(a, -1, aa, _) ? "<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='" + c + "'><span class='ui-icon ui-icon-circle-triangle-" + (Q ? "e" : "w") + "'>" + c + "</span></a>" : S ? "" : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='" + c + "'><span class='ui-icon ui-icon-circle-triangle-" + (Q ? "e" : "w") + "'>" + c + "</span></a>", e = this._get(a, "nextText"), e = T ? this.formatDate(e, this._daylightSavingAdjust(new Date(aa, _ + W, 1)), this._getFormatConfig(a)) : e, f = this._canAdjustMonth(a, 1, aa, _) ? "<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='" + e + "'><span class='ui-icon ui-icon-circle-triangle-" + (Q ? "w" : "e") + "'>" + e + "</span></a>" : S ? "" : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='" + e + "'><span class='ui-icon ui-icon-circle-triangle-" + (Q ? "w" : "e") + "'>" + e + "</span></a>", g = this._get(a, "currentText"), h = this._get(a, "gotoCurrent") && a.currentDay ? Y : P, g = T ? this.formatDate(g, h, this._getFormatConfig(a)) : g, i = a.inline ? "" : "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" + this._get(a, "closeText") + "</button>", j = R ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" + (Q ? i : "") + (this._isInRange(a, h) ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>" + g + "</button>" : "") + (Q ? "" : i) + "</div>" : "", k = parseInt(this._get(a, "firstDay"), 10), k = isNaN(k) ? 0 : k, l = this._get(a, "showWeek"), m = this._get(a, "dayNames"), n = this._get(a, "dayNamesMin"), o = this._get(a, "monthNames"), p = this._get(a, "monthNamesShort"), q = this._get(a, "beforeShowDay"), r = this._get(a, "showOtherMonths"), s = this._get(a, "selectOtherMonths"), t = this._getDefaultDate(a), u = "", w = 0; w < U[0]; w++) {
					for (x = "", this.maxRows = 4, y = 0; y < U[1]; y++) {
						if (z = this._daylightSavingAdjust(new Date(aa, _, a.selectedDay)), A = " ui-corner-all", B = "", X) {
							if (B += "<div class='ui-datepicker-group", U[1] > 1) switch (y) {
								case 0:
									B += " ui-datepicker-group-first", A = " ui-corner-" + (Q ? "right" : "left");
									break;
								case U[1] - 1:
									B += " ui-datepicker-group-last", A = " ui-corner-" + (Q ? "left" : "right");
									break;
								default:
									B += " ui-datepicker-group-middle", A = ""
							}
							B += "'>"
						}
						for (B += "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" + A + "'>" + (/all|left/.test(A) && 0 === w ? Q ? f : d : "") + (/all|right/.test(A) && 0 === w ? Q ? d : f : "") + this._generateMonthYearHeader(a, _, aa, Z, $, w > 0 || y > 0, o, p) + "</div><table class='ui-datepicker-calendar'><thead><tr>", C = l ? "<th class='ui-datepicker-week-col'>" + this._get(a, "weekHeader") + "</th>" : "", v = 0; v < 7; v++) D = (v + k) % 7, C += "<th" + ((v + k + 6) % 7 >= 5 ? " class='ui-datepicker-week-end'" : "") + "><span title='" + m[D] + "'>" + n[D] + "</span></th>";
						for (B += C + "</tr></thead><tbody>", E = this._getDaysInMonth(aa, _), aa === a.selectedYear && _ === a.selectedMonth && (a.selectedDay = Math.min(a.selectedDay, E)), F = (this._getFirstDayOfMonth(aa, _) - k + 7) % 7, G = Math.ceil((F + E) / 7), H = X && this.maxRows > G ? this.maxRows : G, this.maxRows = H, I = this._daylightSavingAdjust(new Date(aa, _, 1 - F)), J = 0; J < H; J++) {
							for (B += "<tr>", K = l ? "<td class='ui-datepicker-week-col'>" + this._get(a, "calculateWeek")(I) + "</td>" : "", v = 0; v < 7; v++) L = q ? q.apply(a.input ? a.input[0] : null, [I]) : [!0, ""], M = I.getMonth() !== _, N = M && !s || !L[0] || Z && I < Z || $ && I > $, K += "<td class='" + ((v + k + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (M ? " ui-datepicker-other-month" : "") + (I.getTime() === z.getTime() && _ === a.selectedMonth && a._keyEvent || t.getTime() === I.getTime() && t.getTime() === z.getTime() ? " " + this._dayOverClass : "") + (N ? " " + this._unselectableClass + " ui-state-disabled" : "") + (M && !r ? "" : " " + L[1] + (I.getTime() === Y.getTime() ? " " + this._currentClass : "") + (I.getTime() === P.getTime() ? " ui-datepicker-today" : "")) + "'" + (M && !r || !L[2] ? "" : " title='" + L[2].replace(/'/g, "&#39;") + "'") + (N ? "" : " data-handler='selectDay' data-event='click' data-month='" + I.getMonth() + "' data-year='" + I.getFullYear() + "'") + ">" + (M && !r ? "&#xa0;" : N ? "<span class='ui-state-default'>" + I.getDate() + "</span>" : "<a class='ui-state-default" + (I.getTime() === P.getTime() ? " ui-state-highlight" : "") + (I.getTime() === Y.getTime() ? " ui-state-active" : "") + (M ? " ui-priority-secondary" : "") + "' href='#'>" + I.getDate() + "</a>") + "</td>", I.setDate(I.getDate() + 1), I = this._daylightSavingAdjust(I);
							B += K + "</tr>"
						}
						_++, _ > 11 && (_ = 0, aa++), B += "</tbody></table>" + (X ? "</div>" + (U[0] > 0 && y === U[1] - 1 ? "<div class='ui-datepicker-row-break'></div>" : "") : ""), x += B
					}
					u += x
				}
				return u += j, a._keyEvent = !1, u
			},
			_generateMonthYearHeader: function(a, b, c, d, e, f, g, h) {
				var i, j, k, l, m, n, o, p, q = this._get(a, "changeMonth"),
					r = this._get(a, "changeYear"),
					s = this._get(a, "showMonthAfterYear"),
					t = "<div class='ui-datepicker-title'>",
					u = "";
				if (f || !q) u += "<span class='ui-datepicker-month'>" + g[b] + "</span>";
				else {
					for (i = d && d.getFullYear() === c, j = e && e.getFullYear() === c, u += "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>", k = 0; k < 12; k++)(!i || k >= d.getMonth()) && (!j || k <= e.getMonth()) && (u += "<option value='" + k + "'" + (k === b ? " selected='selected'" : "") + ">" + h[k] + "</option>");
					u += "</select>"
				}
				if (s || (t += u + (!f && q && r ? "" : "&#xa0;")), !a.yearshtml)
					if (a.yearshtml = "", f || !r) t += "<span class='ui-datepicker-year'>" + c + "</span>";
					else {
						for (l = this._get(a, "yearRange").split(":"), m = (new Date).getFullYear(), n = function(a) {
							var b = a.match(/c[+\-].*/) ? c + parseInt(a.substring(1), 10) : a.match(/[+\-].*/) ? m + parseInt(a, 10) : parseInt(a, 10);
							return isNaN(b) ? m : b
						}, o = n(l[0]), p = Math.max(o, n(l[1] || "")), o = d ? Math.max(o, d.getFullYear()) : o, p = e ? Math.min(p, e.getFullYear()) : p, a.yearshtml += "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>"; o <= p; o++) a.yearshtml += "<option value='" + o + "'" + (o === c ? " selected='selected'" : "") + ">" + o + "</option>";
						a.yearshtml += "</select>", t += a.yearshtml, a.yearshtml = null
					}
				return t += this._get(a, "yearSuffix"), s && (t += (!f && q && r ? "" : "&#xa0;") + u), t += "</div>"
			},
			_adjustInstDate: function(a, b, c) {
				var d = a.drawYear + ("Y" === c ? b : 0),
					e = a.drawMonth + ("M" === c ? b : 0),
					f = Math.min(a.selectedDay, this._getDaysInMonth(d, e)) + ("D" === c ? b : 0),
					g = this._restrictMinMax(a, this._daylightSavingAdjust(new Date(d, e, f)));
				a.selectedDay = g.getDate(), a.drawMonth = a.selectedMonth = g.getMonth(), a.drawYear = a.selectedYear = g.getFullYear(), "M" !== c && "Y" !== c || this._notifyChange(a)
			},
			_restrictMinMax: function(a, b) {
				var c = this._getMinMaxDate(a, "min"),
					d = this._getMinMaxDate(a, "max"),
					e = c && b < c ? c : b;
				return d && e > d ? d : e
			},
			_notifyChange: function(a) {
				var b = this._get(a, "onChangeMonthYear");
				b && b.apply(a.input ? a.input[0] : null, [a.selectedYear, a.selectedMonth + 1, a])
			},
			_getNumberOfMonths: function(a) {
				var b = this._get(a, "numberOfMonths");
				return null == b ? [1, 1] : "number" == typeof b ? [1, b] : b
			},
			_getMinMaxDate: function(a, b) {
				return this._determineDate(a, this._get(a, b + "Date"), null)
			},
			_getDaysInMonth: function(a, b) {
				return 32 - this._daylightSavingAdjust(new Date(a, b, 32)).getDate()
			},
			_getFirstDayOfMonth: function(a, b) {
				return new Date(a, b, 1).getDay()
			},
			_canAdjustMonth: function(a, b, c, d) {
				var e = this._getNumberOfMonths(a),
					f = this._daylightSavingAdjust(new Date(c, d + (b < 0 ? b : e[0] * e[1]), 1));
				return b < 0 && f.setDate(this._getDaysInMonth(f.getFullYear(), f.getMonth())), this._isInRange(a, f)
			},
			_isInRange: function(a, b) {
				var c, d, e = this._getMinMaxDate(a, "min"),
					f = this._getMinMaxDate(a, "max"),
					g = null,
					h = null,
					i = this._get(a, "yearRange");
				return i && (c = i.split(":"), d = (new Date).getFullYear(), g = parseInt(c[0], 10), h = parseInt(c[1], 10), c[0].match(/[+\-].*/) && (g += d), c[1].match(/[+\-].*/) && (h += d)), (!e || b.getTime() >= e.getTime()) && (!f || b.getTime() <= f.getTime()) && (!g || b.getFullYear() >= g) && (!h || b.getFullYear() <= h)
			},
			_getFormatConfig: function(a) {
				var b = this._get(a, "shortYearCutoff");
				return b = "string" != typeof b ? b : (new Date).getFullYear() % 100 + parseInt(b, 10), {
					shortYearCutoff: b,
					dayNamesShort: this._get(a, "dayNamesShort"),
					dayNames: this._get(a, "dayNames"),
					monthNamesShort: this._get(a, "monthNamesShort"),
					monthNames: this._get(a, "monthNames")
				}
			},
			_formatDate: function(a, b, c, d) {
				b || (a.currentDay = a.selectedDay, a.currentMonth = a.selectedMonth, a.currentYear = a.selectedYear);
				var e = b ? "object" == typeof b ? b : this._daylightSavingAdjust(new Date(d, c, b)) : this._daylightSavingAdjust(new Date(a.currentYear, a.currentMonth, a.currentDay));
				return this.formatDate(this._get(a, "dateFormat"), e, this._getFormatConfig(a))
			}
		}), a.fn.datepicker = function(b) {
			if (!this.length) return this;
			a.datepicker.initialized || (a(document).mousedown(a.datepicker._checkExternalClick), a.datepicker.initialized = !0), 0 === a("#" + a.datepicker._mainDivId).length && a("body").append(a.datepicker.dpDiv);
			var c = Array.prototype.slice.call(arguments, 1);
			return "string" != typeof b || "isDisabled" !== b && "getDate" !== b && "widget" !== b ? "option" === b && 2 === arguments.length && "string" == typeof arguments[1] ? a.datepicker["_" + b + "Datepicker"].apply(a.datepicker, [this[0]].concat(c)) : this.each(function() {
				"string" == typeof b ? a.datepicker["_" + b + "Datepicker"].apply(a.datepicker, [this].concat(c)) : a.datepicker._attachDatepicker(this, b)
			}) : a.datepicker["_" + b + "Datepicker"].apply(a.datepicker, [this[0]].concat(c))
		}, a.datepicker = new e, a.datepicker.initialized = !1, a.datepicker.uuid = (new Date).getTime(), a.datepicker.version = "1.10.3"
	}(jQuery),
	function(a, b) {
		var c = {
				buttons: !0,
				height: !0,
				maxHeight: !0,
				maxWidth: !0,
				minHeight: !0,
				minWidth: !0,
				width: !0
			},
			d = {
				maxHeight: !0,
				maxWidth: !0,
				minHeight: !0,
				minWidth: !0
			};
		a.widget("ui.dialog", {
			version: "1.10.3",
			options: {
				appendTo: "body",
				autoOpen: !0,
				buttons: [],
				closeOnEscape: !0,
				closeText: "close",
				dialogClass: "",
				draggable: !0,
				hide: null,
				height: "auto",
				maxHeight: null,
				maxWidth: null,
				minHeight: 150,
				minWidth: 150,
				modal: !1,
				position: {
					my: "center",
					at: "center",
					of: window,
					collision: "fit",
					using: function(b) {
						var c = a(this).css(b).offset().top;
						c < 0 && a(this).css("top", b.top - c)
					}
				},
				resizable: !0,
				show: null,
				title: null,
				width: 300,
				beforeClose: null,
				close: null,
				drag: null,
				dragStart: null,
				dragStop: null,
				focus: null,
				open: null,
				resize: null,
				resizeStart: null,
				resizeStop: null
			},
			_create: function() {
				this.originalCss = {
					display: this.element[0].style.display,
					width: this.element[0].style.width,
					minHeight: this.element[0].style.minHeight,
					maxHeight: this.element[0].style.maxHeight,
					height: this.element[0].style.height
				}, this.originalPosition = {
					parent: this.element.parent(),
					index: this.element.parent().children().index(this.element)
				}, this.originalTitle = this.element.attr("title"), this.options.title = this.options.title || this.originalTitle, this._createWrapper(), this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(this.uiDialog), this._createTitlebar(), this._createButtonPane(), this.options.draggable && a.fn.draggable && this._makeDraggable(), this.options.resizable && a.fn.resizable && this._makeResizable(), this._isOpen = !1
			},
			_init: function() {
				this.options.autoOpen && this.open()
			},
			_appendTo: function() {
				var b = this.options.appendTo;
				return b && (b.jquery || b.nodeType) ? a(b) : this.document.find(b || "body").eq(0)
			},
			_destroy: function() {
				var a, b = this.originalPosition;
				this._destroyOverlay(), this.element.removeUniqueId().removeClass("ui-dialog-content ui-widget-content").css(this.originalCss).detach(), this.uiDialog.stop(!0, !0).remove(), this.originalTitle && this.element.attr("title", this.originalTitle), a = b.parent.children().eq(b.index), a.length && a[0] !== this.element[0] ? a.before(this.element) : b.parent.append(this.element)
			},
			widget: function() {
				return this.uiDialog
			},
			disable: a.noop,
			enable: a.noop,
			close: function(b) {
				var c = this;
				this._isOpen && this._trigger("beforeClose", b) !== !1 && (this._isOpen = !1, this._destroyOverlay(), this.opener.filter(":focusable").focus().length || a(this.document[0].activeElement).blur(), this._hide(this.uiDialog, this.options.hide, function() {
					c._trigger("close", b)
				}))
			},
			isOpen: function() {
				return this._isOpen
			},
			moveToTop: function() {
				this._moveToTop()
			},
			_moveToTop: function(a, b) {
				var c = !!this.uiDialog.nextAll(":visible").insertBefore(this.uiDialog).length;
				return c && !b && this._trigger("focus", a), c
			},
			open: function() {
				var b = this;
				return this._isOpen ? void(this._moveToTop() && this._focusTabbable()) : (this._isOpen = !0, this.opener = a(this.document[0].activeElement), this._size(), this._position(), this._createOverlay(), this._moveToTop(null, !0), this._show(this.uiDialog, this.options.show, function() {
					b._focusTabbable(), b._trigger("focus")
				}), void this._trigger("open"))
			},
			_focusTabbable: function() {
				var a = this.element.find("[autofocus]");
				a.length || (a = this.element.find(":tabbable")), a.length || (a = this.uiDialogButtonPane.find(":tabbable")), a.length || (a = this.uiDialogTitlebarClose.filter(":tabbable")), a.length || (a = this.uiDialog), a.eq(0).focus()
			},
			_keepFocus: function(b) {
				function c() {
					var b = this.document[0].activeElement,
						c = this.uiDialog[0] === b || a.contains(this.uiDialog[0], b);
					c || this._focusTabbable()
				}
				b.preventDefault(), c.call(this), this._delay(c)
			},
			_createWrapper: function() {
				this.uiDialog = a("<div>").addClass("ui-dialog ui-widget ui-widget-content ui-corner-all ui-front " + this.options.dialogClass).hide().attr({
					tabIndex: -1,
					role: "dialog"
				}).appendTo(this._appendTo()), this._on(this.uiDialog, {
					keydown: function(b) {
						if (this.options.closeOnEscape && !b.isDefaultPrevented() && b.keyCode && b.keyCode === a.ui.keyCode.ESCAPE) return b.preventDefault(), void this.close(b);
						if (b.keyCode === a.ui.keyCode.TAB) {
							var c = this.uiDialog.find(":tabbable"),
								d = c.filter(":first"),
								e = c.filter(":last");
							b.target !== e[0] && b.target !== this.uiDialog[0] || b.shiftKey ? b.target !== d[0] && b.target !== this.uiDialog[0] || !b.shiftKey || (e.focus(1), b.preventDefault()) : (d.focus(1), b.preventDefault())
						}
					},
					mousedown: function(a) {
						this._moveToTop(a) && this._focusTabbable()
					}
				}), this.element.find("[aria-describedby]").length || this.uiDialog.attr({
					"aria-describedby": this.element.uniqueId().attr("id")
				})
			},
			_createTitlebar: function() {
				var b;
				this.uiDialogTitlebar = a("<div>").addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(this.uiDialog), this._on(this.uiDialogTitlebar, {
					mousedown: function(b) {
						a(b.target).closest(".ui-dialog-titlebar-close") || this.uiDialog.focus()
					}
				}), this.uiDialogTitlebarClose = a("<button></button>").button({
					label: this.options.closeText,
					icons: {
						primary: "ui-icon-closethick"
					},
					text: !1
				}).addClass("ui-dialog-titlebar-close").appendTo(this.uiDialogTitlebar), this._on(this.uiDialogTitlebarClose, {
					click: function(a) {
						a.preventDefault(), this.close(a)
					}
				}), b = a("<span>").uniqueId().addClass("ui-dialog-title").prependTo(this.uiDialogTitlebar), this._title(b), this.uiDialog.attr({
					"aria-labelledby": b.attr("id")
				})
			},
			_title: function(a) {
				this.options.title || a.html("&#160;"), a.text(this.options.title)
			},
			_createButtonPane: function() {
				this.uiDialogButtonPane = a("<div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"), this.uiButtonSet = a("<div>").addClass("ui-dialog-buttonset").appendTo(this.uiDialogButtonPane), this._createButtons()
			},
			_createButtons: function() {
				var b = this,
					c = this.options.buttons;
				return this.uiDialogButtonPane.remove(), this.uiButtonSet.empty(), a.isEmptyObject(c) || a.isArray(c) && !c.length ? void this.uiDialog.removeClass("ui-dialog-buttons") : (a.each(c, function(c, d) {
					var e, f;
					d = a.isFunction(d) ? {
						click: d,
						text: c
					} : d, d = a.extend({
						type: "button"
					}, d), e = d.click, d.click = function() {
						e.apply(b.element[0], arguments)
					}, f = {
						icons: d.icons,
						text: d.showText
					}, delete d.icons, delete d.showText, a("<button></button>", d).button(f).appendTo(b.uiButtonSet)
				}), this.uiDialog.addClass("ui-dialog-buttons"), void this.uiDialogButtonPane.appendTo(this.uiDialog))
			},
			_makeDraggable: function() {
				function d(a) {
					return {
						position: a.position,
						offset: a.offset
					}
				}
				var b = this,
					c = this.options;
				this.uiDialog.draggable({
					cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
					handle: ".ui-dialog-titlebar",
					containment: "document",
					start: function(c, e) {
						a(this).addClass("ui-dialog-dragging"), b._blockFrames(), b._trigger("dragStart", c, d(e))
					},
					drag: function(a, c) {
						b._trigger("drag", a, d(c))
					},
					stop: function(e, f) {
						c.position = [f.position.left - b.document.scrollLeft(), f.position.top - b.document.scrollTop()], a(this).removeClass("ui-dialog-dragging"), b._unblockFrames(), b._trigger("dragStop", e, d(f))
					}
				})
			},
			_makeResizable: function() {
				function g(a) {
					return {
						originalPosition: a.originalPosition,
						originalSize: a.originalSize,
						position: a.position,
						size: a.size
					}
				}
				var b = this,
					c = this.options,
					d = c.resizable,
					e = this.uiDialog.css("position"),
					f = "string" == typeof d ? d : "n,e,s,w,se,sw,ne,nw";
				this.uiDialog.resizable({
					cancel: ".ui-dialog-content",
					containment: "document",
					alsoResize: this.element,
					maxWidth: c.maxWidth,
					maxHeight: c.maxHeight,
					minWidth: c.minWidth,
					minHeight: this._minHeight(),
					handles: f,
					start: function(c, d) {
						a(this).addClass("ui-dialog-resizing"), b._blockFrames(), b._trigger("resizeStart", c, g(d))
					},
					resize: function(a, c) {
						b._trigger("resize", a, g(c))
					},
					stop: function(d, e) {
						c.height = a(this).height(), c.width = a(this).width(), a(this).removeClass("ui-dialog-resizing"), b._unblockFrames(), b._trigger("resizeStop", d, g(e))
					}
				}).css("position", e)
			},
			_minHeight: function() {
				var a = this.options;
				return "auto" === a.height ? a.minHeight : Math.min(a.minHeight, a.height)
			},
			_position: function() {
				var a = this.uiDialog.is(":visible");
				a || this.uiDialog.show(), this.uiDialog.position(this.options.position), a || this.uiDialog.hide()
			},
			_setOptions: function(b) {
				var e = this,
					f = !1,
					g = {};
				a.each(b, function(a, b) {
					e._setOption(a, b), a in c && (f = !0), a in d && (g[a] = b)
				}), f && (this._size(), this._position()), this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", g)
			},
			_setOption: function(a, b) {
				var c, d, e = this.uiDialog;
				"dialogClass" === a && e.removeClass(this.options.dialogClass).addClass(b), "disabled" !== a && (this._super(a, b), "appendTo" === a && this.uiDialog.appendTo(this._appendTo()), "buttons" === a && this._createButtons(), "closeText" === a && this.uiDialogTitlebarClose.button({
					label: "" + b
				}), "draggable" === a && (c = e.is(":data(ui-draggable)"), c && !b && e.draggable("destroy"), !c && b && this._makeDraggable()), "position" === a && this._position(), "resizable" === a && (d = e.is(":data(ui-resizable)"), d && !b && e.resizable("destroy"), d && "string" == typeof b && e.resizable("option", "handles", b), d || b === !1 || this._makeResizable()), "title" === a && this._title(this.uiDialogTitlebar.find(".ui-dialog-title")))
			},
			_size: function() {
				var a, b, c, d = this.options;
				this.element.show().css({
					width: "auto",
					minHeight: 0,
					maxHeight: "none",
					height: 0
				}), d.minWidth > d.width && (d.width = d.minWidth), a = this.uiDialog.css({
					height: "auto",
					width: d.width
				}).outerHeight(), b = Math.max(0, d.minHeight - a), c = "number" == typeof d.maxHeight ? Math.max(0, d.maxHeight - a) : "none", "auto" === d.height ? this.element.css({
					minHeight: b,
					maxHeight: c,
					height: "auto"
				}) : this.element.height(Math.max(0, d.height - a)), this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight())
			},
			_blockFrames: function() {
				this.iframeBlocks = this.document.find("iframe").map(function() {
					var b = a(this);
					return a("<div>").css({
						position: "absolute",
						width: b.outerWidth(),
						height: b.outerHeight()
					}).appendTo(b.parent()).offset(b.offset())[0]
				})
			},
			_unblockFrames: function() {
				this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks)
			},
			_allowInteraction: function(b) {
				return !!a(b.target).closest(".ui-dialog").length || !!a(b.target).closest(".ui-datepicker").length
			},
			_createOverlay: function() {
				if (this.options.modal) {
					var b = this,
						c = this.widgetFullName;
					a.ui.dialog.overlayInstances || this._delay(function() {
						a.ui.dialog.overlayInstances && this.document.bind("focusin.dialog", function(d) {
							b._allowInteraction(d) || (d.preventDefault(), a(".ui-dialog:visible:last .ui-dialog-content").data(c)._focusTabbable())
						})
					}), this.overlay = a("<div>").addClass("ui-widget-overlay ui-front").appendTo(this._appendTo()), this._on(this.overlay, {
						mousedown: "_keepFocus"
					}), a.ui.dialog.overlayInstances++
				}
			},
			_destroyOverlay: function() {
				this.options.modal && this.overlay && (a.ui.dialog.overlayInstances--, a.ui.dialog.overlayInstances || this.document.unbind("focusin.dialog"), this.overlay.remove(), this.overlay = null)
			}
		}), a.ui.dialog.overlayInstances = 0, a.uiBackCompat !== !1 && a.widget("ui.dialog", a.ui.dialog, {
			_position: function() {
				var e, b = this.options.position,
					c = [],
					d = [0, 0];
				b ? (("string" == typeof b || "object" == typeof b && "0" in b) && (c = b.split ? b.split(" ") : [b[0], b[1]], 1 === c.length && (c[1] = c[0]), a.each(["left", "top"], function(a, b) {
					+c[a] === c[a] && (d[a] = c[a], c[a] = b)
				}), b = {
					my: c[0] + (d[0] < 0 ? d[0] : "+" + d[0]) + " " + c[1] + (d[1] < 0 ? d[1] : "+" + d[1]),
					at: c.join(" ")
				}), b = a.extend({}, a.ui.dialog.prototype.options.position, b)) : b = a.ui.dialog.prototype.options.position, e = this.uiDialog.is(":visible"), e || this.uiDialog.show(), this.uiDialog.position(b), e || this.uiDialog.hide()
			}
		})
	}(jQuery),
	function(a, b) {
		var c = /up|down|vertical/,
			d = /up|left|vertical|horizontal/;
		a.effects.effect.blind = function(b, e) {
			var p, q, r, f = a(this),
				g = ["position", "top", "bottom", "left", "right", "height", "width"],
				h = a.effects.setMode(f, b.mode || "hide"),
				i = b.direction || "up",
				j = c.test(i),
				k = j ? "height" : "width",
				l = j ? "top" : "left",
				m = d.test(i),
				n = {},
				o = "show" === h;
			f.parent().is(".ui-effects-wrapper") ? a.effects.save(f.parent(), g) : a.effects.save(f, g), f.show(), p = a.effects.createWrapper(f).css({
				overflow: "hidden"
			}), q = p[k](), r = parseFloat(p.css(l)) || 0, n[k] = o ? q : 0, m || (f.css(j ? "bottom" : "right", 0).css(j ? "top" : "left", "auto").css({
				position: "absolute"
			}), n[l] = o ? r : q + r), o && (p.css(k, 0), m || p.css(l, r + q)), p.animate(n, {
				duration: b.duration,
				easing: b.easing,
				queue: !1,
				complete: function() {
					"hide" === h && f.hide(), a.effects.restore(f, g), a.effects.removeWrapper(f), e()
				}
			})
		}
	}(jQuery),
	function(a, b) {
		a.effects.effect.bounce = function(b, c) {
			var q, r, s, d = a(this),
				e = ["position", "top", "bottom", "left", "right", "height", "width"],
				f = a.effects.setMode(d, b.mode || "effect"),
				g = "hide" === f,
				h = "show" === f,
				i = b.direction || "up",
				j = b.distance,
				k = b.times || 5,
				l = 2 * k + (h || g ? 1 : 0),
				m = b.duration / l,
				n = b.easing,
				o = "up" === i || "down" === i ? "top" : "left",
				p = "up" === i || "left" === i,
				t = d.queue(),
				u = t.length;
			for ((h || g) && e.push("opacity"), a.effects.save(d, e), d.show(), a.effects.createWrapper(d), j || (j = d["top" === o ? "outerHeight" : "outerWidth"]() / 3), h && (s = {
				opacity: 1
			}, s[o] = 0, d.css("opacity", 0).css(o, p ? 2 * -j : 2 * j).animate(s, m, n)), g && (j /= Math.pow(2, k - 1)), s = {}, s[o] = 0, q = 0; q < k; q++) r = {}, r[o] = (p ? "-=" : "+=") + j, d.animate(r, m, n).animate(s, m, n), j = g ? 2 * j : j / 2;
			g && (r = {
				opacity: 0
			}, r[o] = (p ? "-=" : "+=") + j, d.animate(r, m, n)), d.queue(function() {
				g && d.hide(), a.effects.restore(d, e), a.effects.removeWrapper(d), c()
			}), u > 1 && t.splice.apply(t, [1, 0].concat(t.splice(u, l + 1))), d.dequeue()
		}
	}(jQuery),
	function(a, b) {
		a.effects.effect.clip = function(b, c) {
			var m, n, o, d = a(this),
				e = ["position", "top", "bottom", "left", "right", "height", "width"],
				f = a.effects.setMode(d, b.mode || "hide"),
				g = "show" === f,
				h = b.direction || "vertical",
				i = "vertical" === h,
				j = i ? "height" : "width",
				k = i ? "top" : "left",
				l = {};
			a.effects.save(d, e), d.show(), m = a.effects.createWrapper(d).css({
				overflow: "hidden"
			}), n = "IMG" === d[0].tagName ? m : d, o = n[j](), g && (n.css(j, 0), n.css(k, o / 2)), l[j] = g ? o : 0, l[k] = g ? 0 : o / 2, n.animate(l, {
				queue: !1,
				duration: b.duration,
				easing: b.easing,
				complete: function() {
					g || d.hide(), a.effects.restore(d, e), a.effects.removeWrapper(d), c()
				}
			})
		}
	}(jQuery),
	function(a, b) {
		a.effects.effect.drop = function(b, c) {
			var l, d = a(this),
				e = ["position", "top", "bottom", "left", "right", "opacity", "height", "width"],
				f = a.effects.setMode(d, b.mode || "hide"),
				g = "show" === f,
				h = b.direction || "left",
				i = "up" === h || "down" === h ? "top" : "left",
				j = "up" === h || "left" === h ? "pos" : "neg",
				k = {
					opacity: g ? 1 : 0
				};
			a.effects.save(d, e), d.show(), a.effects.createWrapper(d), l = b.distance || d["top" === i ? "outerHeight" : "outerWidth"](!0) / 2, g && d.css("opacity", 0).css(i, "pos" === j ? -l : l), k[i] = (g ? "pos" === j ? "+=" : "-=" : "pos" === j ? "-=" : "+=") + l, d.animate(k, {
				queue: !1,
				duration: b.duration,
				easing: b.easing,
				complete: function() {
					"hide" === f && d.hide(), a.effects.restore(d, e), a.effects.removeWrapper(d), c()
				}
			})
		}
	}(jQuery),
	function(a, b) {
		a.effects.effect.explode = function(b, c) {
			function s() {
				l.push(this), l.length === d * e && t()
			}

			function t() {
				f.css({
					visibility: "visible"
				}), a(l).remove(), h || f.hide(), c()
			}
			var m, n, o, p, q, r, d = b.pieces ? Math.round(Math.sqrt(b.pieces)) : 3,
				e = d,
				f = a(this),
				g = a.effects.setMode(f, b.mode || "hide"),
				h = "show" === g,
				i = f.show().css("visibility", "hidden").offset(),
				j = Math.ceil(f.outerWidth() / e),
				k = Math.ceil(f.outerHeight() / d),
				l = [];
			for (m = 0; m < d; m++)
				for (p = i.top + m * k, r = m - (d - 1) / 2, n = 0; n < e; n++) o = i.left + n * j, q = n - (e - 1) / 2, f.clone().appendTo("body").wrap("<div></div>").css({
					position: "absolute",
					visibility: "visible",
					left: -n * j,
					top: -m * k
				}).parent().addClass("ui-effects-explode").css({
						position: "absolute",
						overflow: "hidden",
						width: j,
						height: k,
						left: o + (h ? q * j : 0),
						top: p + (h ? r * k : 0),
						opacity: h ? 0 : 1
					}).animate({
						left: o + (h ? 0 : q * j),
						top: p + (h ? 0 : r * k),
						opacity: h ? 1 : 0
					}, b.duration || 500, b.easing, s)
		}
	}(jQuery),
	function(a, b) {
		a.effects.effect.fade = function(b, c) {
			var d = a(this),
				e = a.effects.setMode(d, b.mode || "toggle");
			d.animate({
				opacity: e
			}, {
				queue: !1,
				duration: b.duration,
				easing: b.easing,
				complete: c
			})
		}
	}(jQuery),
	function(a, b) {
		a.effects.effect.fold = function(b, c) {
			var o, p, d = a(this),
				e = ["position", "top", "bottom", "left", "right", "height", "width"],
				f = a.effects.setMode(d, b.mode || "hide"),
				g = "show" === f,
				h = "hide" === f,
				i = b.size || 15,
				j = /([0-9]+)%/.exec(i),
				k = !!b.horizFirst,
				l = g !== k,
				m = l ? ["width", "height"] : ["height", "width"],
				n = b.duration / 2,
				q = {},
				r = {};
			a.effects.save(d, e), d.show(), o = a.effects.createWrapper(d).css({
				overflow: "hidden"
			}), p = l ? [o.width(), o.height()] : [o.height(), o.width()], j && (i = parseInt(j[1], 10) / 100 * p[h ? 0 : 1]), g && o.css(k ? {
				height: 0,
				width: i
			} : {
				height: i,
				width: 0
			}), q[m[0]] = g ? p[0] : i, r[m[1]] = g ? p[1] : 0, o.animate(q, n, b.easing).animate(r, n, b.easing, function() {
				h && d.hide(), a.effects.restore(d, e), a.effects.removeWrapper(d), c()
			})
		}
	}(jQuery),
	function(a, b) {
		a.effects.effect.highlight = function(b, c) {
			var d = a(this),
				e = ["backgroundImage", "backgroundColor", "opacity"],
				f = a.effects.setMode(d, b.mode || "show"),
				g = {
					backgroundColor: d.css("backgroundColor")
				};
			"hide" === f && (g.opacity = 0), a.effects.save(d, e), d.show().css({
				backgroundImage: "none",
				backgroundColor: b.color || "#ffff99"
			}).animate(g, {
					queue: !1,
					duration: b.duration,
					easing: b.easing,
					complete: function() {
						"hide" === f && d.hide(), a.effects.restore(d, e), c()
					}
				})
		}
	}(jQuery),
	function(a, b) {
		a.effects.effect.pulsate = function(b, c) {
			var n, d = a(this),
				e = a.effects.setMode(d, b.mode || "show"),
				f = "show" === e,
				g = "hide" === e,
				h = f || "hide" === e,
				i = 2 * (b.times || 5) + (h ? 1 : 0),
				j = b.duration / i,
				k = 0,
				l = d.queue(),
				m = l.length;
			for (!f && d.is(":visible") || (d.css("opacity", 0).show(), k = 1), n = 1; n < i; n++) d.animate({
				opacity: k
			}, j, b.easing), k = 1 - k;
			d.animate({
				opacity: k
			}, j, b.easing), d.queue(function() {
				g && d.hide(), c()
			}), m > 1 && l.splice.apply(l, [1, 0].concat(l.splice(m, i + 1))), d.dequeue()
		}
	}(jQuery),
	function(a, b) {
		a.effects.effect.puff = function(b, c) {
			var d = a(this),
				e = a.effects.setMode(d, b.mode || "hide"),
				f = "hide" === e,
				g = parseInt(b.percent, 10) || 150,
				h = g / 100,
				i = {
					height: d.height(),
					width: d.width(),
					outerHeight: d.outerHeight(),
					outerWidth: d.outerWidth()
				};
			a.extend(b, {
				effect: "scale",
				queue: !1,
				fade: !0,
				mode: e,
				complete: c,
				percent: f ? g : 100,
				from: f ? i : {
					height: i.height * h,
					width: i.width * h,
					outerHeight: i.outerHeight * h,
					outerWidth: i.outerWidth * h
				}
			}), d.effect(b)
		}, a.effects.effect.scale = function(b, c) {
			var d = a(this),
				e = a.extend(!0, {}, b),
				f = a.effects.setMode(d, b.mode || "effect"),
				g = parseInt(b.percent, 10) || (0 === parseInt(b.percent, 10) ? 0 : "hide" === f ? 0 : 100),
				h = b.direction || "both",
				i = b.origin,
				j = {
					height: d.height(),
					width: d.width(),
					outerHeight: d.outerHeight(),
					outerWidth: d.outerWidth()
				},
				k = {
					y: "horizontal" !== h ? g / 100 : 1,
					x: "vertical" !== h ? g / 100 : 1
				};
			e.effect = "size", e.queue = !1, e.complete = c, "effect" !== f && (e.origin = i || ["middle", "center"], e.restore = !0), e.from = b.from || ("show" === f ? {
				height: 0,
				width: 0,
				outerHeight: 0,
				outerWidth: 0
			} : j), e.to = {
				height: j.height * k.y,
				width: j.width * k.x,
				outerHeight: j.outerHeight * k.y,
				outerWidth: j.outerWidth * k.x
			}, e.fade && ("show" === f && (e.from.opacity = 0, e.to.opacity = 1), "hide" === f && (e.from.opacity = 1, e.to.opacity = 0)), d.effect(e)
		}, a.effects.effect.size = function(b, c) {
			var d, e, f, g = a(this),
				h = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"],
				i = ["position", "top", "bottom", "left", "right", "overflow", "opacity"],
				j = ["width", "height", "overflow"],
				k = ["fontSize"],
				l = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"],
				m = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"],
				n = a.effects.setMode(g, b.mode || "effect"),
				o = b.restore || "effect" !== n,
				p = b.scale || "both",
				q = b.origin || ["middle", "center"],
				r = g.css("position"),
				s = o ? h : i,
				t = {
					height: 0,
					width: 0,
					outerHeight: 0,
					outerWidth: 0
				};
			"show" === n && g.show(), d = {
				height: g.height(),
				width: g.width(),
				outerHeight: g.outerHeight(),
				outerWidth: g.outerWidth()
			}, "toggle" === b.mode && "show" === n ? (g.from = b.to || t, g.to = b.from || d) : (g.from = b.from || ("show" === n ? t : d), g.to = b.to || ("hide" === n ? t : d)), f = {
				from: {
					y: g.from.height / d.height,
					x: g.from.width / d.width
				},
				to: {
					y: g.to.height / d.height,
					x: g.to.width / d.width
				}
			}, "box" !== p && "both" !== p || (f.from.y !== f.to.y && (s = s.concat(l), g.from = a.effects.setTransition(g, l, f.from.y, g.from), g.to = a.effects.setTransition(g, l, f.to.y, g.to)), f.from.x !== f.to.x && (s = s.concat(m), g.from = a.effects.setTransition(g, m, f.from.x, g.from), g.to = a.effects.setTransition(g, m, f.to.x, g.to))), "content" !== p && "both" !== p || f.from.y !== f.to.y && (s = s.concat(k).concat(j), g.from = a.effects.setTransition(g, k, f.from.y, g.from), g.to = a.effects.setTransition(g, k, f.to.y, g.to)), a.effects.save(g, s), g.show(), a.effects.createWrapper(g), g.css("overflow", "hidden").css(g.from), q && (e = a.effects.getBaseline(q, d), g.from.top = (d.outerHeight - g.outerHeight()) * e.y, g.from.left = (d.outerWidth - g.outerWidth()) * e.x, g.to.top = (d.outerHeight - g.to.outerHeight) * e.y, g.to.left = (d.outerWidth - g.to.outerWidth) * e.x), g.css(g.from), "content" !== p && "both" !== p || (l = l.concat(["marginTop", "marginBottom"]).concat(k), m = m.concat(["marginLeft", "marginRight"]), j = h.concat(l).concat(m), g.find("*[width]").each(function() {
				var c = a(this),
					d = {
						height: c.height(),
						width: c.width(),
						outerHeight: c.outerHeight(),
						outerWidth: c.outerWidth()
					};
				o && a.effects.save(c, j), c.from = {
					height: d.height * f.from.y,
					width: d.width * f.from.x,
					outerHeight: d.outerHeight * f.from.y,
					outerWidth: d.outerWidth * f.from.x
				}, c.to = {
					height: d.height * f.to.y,
					width: d.width * f.to.x,
					outerHeight: d.height * f.to.y,
					outerWidth: d.width * f.to.x
				}, f.from.y !== f.to.y && (c.from = a.effects.setTransition(c, l, f.from.y, c.from), c.to = a.effects.setTransition(c, l, f.to.y, c.to)), f.from.x !== f.to.x && (c.from = a.effects.setTransition(c, m, f.from.x, c.from), c.to = a.effects.setTransition(c, m, f.to.x, c.to)), c.css(c.from), c.animate(c.to, b.duration, b.easing, function() {
					o && a.effects.restore(c, j)
				})
			})), g.animate(g.to, {
				queue: !1,
				duration: b.duration,
				easing: b.easing,
				complete: function() {
					0 === g.to.opacity && g.css("opacity", g.from.opacity), "hide" === n && g.hide(), a.effects.restore(g, s), o || ("static" === r ? g.css({
						position: "relative",
						top: g.to.top,
						left: g.to.left
					}) : a.each(["top", "left"], function(a, b) {
						g.css(b, function(b, c) {
							var d = parseInt(c, 10),
								e = a ? g.to.left : g.to.top;
							return "auto" === c ? e + "px" : d + e + "px"
						})
					})), a.effects.removeWrapper(g), c()
				}
			})
		}
	}(jQuery),
	function(a, b) {
		a.effects.effect.shake = function(b, c) {
			var q, d = a(this),
				e = ["position", "top", "bottom", "left", "right", "height", "width"],
				f = a.effects.setMode(d, b.mode || "effect"),
				g = b.direction || "left",
				h = b.distance || 20,
				i = b.times || 3,
				j = 2 * i + 1,
				k = Math.round(b.duration / j),
				l = "up" === g || "down" === g ? "top" : "left",
				m = "up" === g || "left" === g,
				n = {},
				o = {},
				p = {},
				r = d.queue(),
				s = r.length;
			for (a.effects.save(d, e), d.show(), a.effects.createWrapper(d), n[l] = (m ? "-=" : "+=") + h, o[l] = (m ? "+=" : "-=") + 2 * h, p[l] = (m ? "-=" : "+=") + 2 * h, d.animate(n, k, b.easing), q = 1; q < i; q++) d.animate(o, k, b.easing).animate(p, k, b.easing);
			d.animate(o, k, b.easing).animate(n, k / 2, b.easing).queue(function() {
				"hide" === f && d.hide(), a.effects.restore(d, e), a.effects.removeWrapper(d), c()
			}), s > 1 && r.splice.apply(r, [1, 0].concat(r.splice(s, j + 1))), d.dequeue()
		}
	}(jQuery),
	function(a, b) {
		a.effects.effect.slide = function(b, c) {
			var k, d = a(this),
				e = ["position", "top", "bottom", "left", "right", "width", "height"],
				f = a.effects.setMode(d, b.mode || "show"),
				g = "show" === f,
				h = b.direction || "left",
				i = "up" === h || "down" === h ? "top" : "left",
				j = "up" === h || "left" === h,
				l = {};
			a.effects.save(d, e), d.show(), k = b.distance || d["top" === i ? "outerHeight" : "outerWidth"](!0), a.effects.createWrapper(d).css({
				overflow: "hidden"
			}), g && d.css(i, j ? isNaN(k) ? "-" + k : -k : k), l[i] = (g ? j ? "+=" : "-=" : j ? "-=" : "+=") + k, d.animate(l, {
				queue: !1,
				duration: b.duration,
				easing: b.easing,
				complete: function() {
					"hide" === f && d.hide(), a.effects.restore(d, e), a.effects.removeWrapper(d), c()
				}
			})
		}
	}(jQuery),
	function(a, b) {
		a.effects.effect.transfer = function(b, c) {
			var d = a(this),
				e = a(b.to),
				f = "fixed" === e.css("position"),
				g = a("body"),
				h = f ? g.scrollTop() : 0,
				i = f ? g.scrollLeft() : 0,
				j = e.offset(),
				k = {
					top: j.top - h,
					left: j.left - i,
					height: e.innerHeight(),
					width: e.innerWidth()
				},
				l = d.offset(),
				m = a("<div class='ui-effects-transfer'></div>").appendTo(document.body).addClass(b.className).css({
					top: l.top - h,
					left: l.left - i,
					height: d.innerHeight(),
					width: d.innerWidth(),
					position: f ? "fixed" : "absolute"
				}).animate(k, b.duration, b.easing, function() {
						m.remove(), c()
					})
		}
	}(jQuery),
	function(a, b) {
		a.widget("ui.menu", {
			version: "1.10.3",
			defaultElement: "<ul>",
			delay: 300,
			options: {
				icons: {
					submenu: "ui-icon-carat-1-e"
				},
				menus: "ul",
				position: {
					my: "left top",
					at: "right top"
				},
				role: "menu",
				blur: null,
				focus: null,
				select: null
			},
			_create: function() {
				this.activeMenu = this.element, this.mouseHandled = !1, this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons", !!this.element.find(".ui-icon").length).attr({
					role: this.options.role,
					tabIndex: 0
				}).bind("click" + this.eventNamespace, a.proxy(function(a) {
						this.options.disabled && a.preventDefault()
					}, this)), this.options.disabled && this.element.addClass("ui-state-disabled").attr("aria-disabled", "true"), this._on({
					"mousedown .ui-menu-item > a": function(a) {
						a.preventDefault()
					},
					"click .ui-state-disabled > a": function(a) {
						a.preventDefault()
					},
					"click .ui-menu-item:has(a)": function(b) {
						var c = a(b.target).closest(".ui-menu-item");
						!this.mouseHandled && c.not(".ui-state-disabled").length && (this.mouseHandled = !0, this.select(b), c.has(".ui-menu").length ? this.expand(b) : this.element.is(":focus") || (this.element.trigger("focus", [!0]), this.active && 1 === this.active.parents(".ui-menu").length && clearTimeout(this.timer)))
					},
					"mouseenter .ui-menu-item": function(b) {
						var c = a(b.currentTarget);
						c.siblings().children(".ui-state-active").removeClass("ui-state-active"), this.focus(b, c)
					},
					mouseleave: "collapseAll",
					"mouseleave .ui-menu": "collapseAll",
					focus: function(a, b) {
						var c = this.active || this.element.children(".ui-menu-item").eq(0);
						b || this.focus(a, c)
					},
					blur: function(b) {
						this._delay(function() {
							a.contains(this.element[0], this.document[0].activeElement) || this.collapseAll(b)
						})
					},
					keydown: "_keydown"
				}), this.refresh(), this._on(this.document, {
					click: function(b) {
						a(b.target).closest(".ui-menu").length || this.collapseAll(b), this.mouseHandled = !1
					}
				})
			},
			_destroy: function() {
				this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show(), this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function() {
					var b = a(this);
					b.data("ui-menu-submenu-carat") && b.remove()
				}), this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")
			},
			_keydown: function(b) {
				function i(a) {
					return a.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
				}
				var c, d, e, f, g, h = !0;
				switch (b.keyCode) {
					case a.ui.keyCode.PAGE_UP:
						this.previousPage(b);
						break;
					case a.ui.keyCode.PAGE_DOWN:
						this.nextPage(b);
						break;
					case a.ui.keyCode.HOME:
						this._move("first", "first", b);
						break;
					case a.ui.keyCode.END:
						this._move("last", "last", b);
						break;
					case a.ui.keyCode.UP:
						this.previous(b);
						break;
					case a.ui.keyCode.DOWN:
						this.next(b);
						break;
					case a.ui.keyCode.LEFT:
						this.collapse(b);
						break;
					case a.ui.keyCode.RIGHT:
						this.active && !this.active.is(".ui-state-disabled") && this.expand(b);
						break;
					case a.ui.keyCode.ENTER:
					case a.ui.keyCode.SPACE:
						this._activate(b);
						break;
					case a.ui.keyCode.ESCAPE:
						this.collapse(b);
						break;
					default:
						h = !1, d = this.previousFilter || "", e = String.fromCharCode(b.keyCode), f = !1, clearTimeout(this.filterTimer), e === d ? f = !0 : e = d + e, g = new RegExp("^" + i(e), "i"), c = this.activeMenu.children(".ui-menu-item").filter(function() {
							return g.test(a(this).children("a").text())
						}), c = f && c.index(this.active.next()) !== -1 ? this.active.nextAll(".ui-menu-item") : c, c.length || (e = String.fromCharCode(b.keyCode), g = new RegExp("^" + i(e), "i"), c = this.activeMenu.children(".ui-menu-item").filter(function() {
							return g.test(a(this).children("a").text())
						})), c.length ? (this.focus(b, c), c.length > 1 ? (this.previousFilter = e, this.filterTimer = this._delay(function() {
							delete this.previousFilter
						}, 1e3)) : delete this.previousFilter) : delete this.previousFilter
				}
				h && b.preventDefault()
			},
			_activate: function(a) {
				this.active.is(".ui-state-disabled") || (this.active.children("a[aria-haspopup='true']").length ? this.expand(a) : this.select(a))
			},
			refresh: function() {
				var b, c = this.options.icons.submenu,
					d = this.element.find(this.options.menus);
				d.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({
					role: this.options.role,
					"aria-hidden": "true",
					"aria-expanded": "false"
				}).each(function() {
						var b = a(this),
							d = b.prev("a"),
							e = a("<span>").addClass("ui-menu-icon ui-icon " + c).data("ui-menu-submenu-carat", !0);
						d.attr("aria-haspopup", "true").prepend(e), b.attr("aria-labelledby", d.attr("id"))
					}), b = d.add(this.element), b.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role", "presentation").children("a").uniqueId().addClass("ui-corner-all").attr({
					tabIndex: -1,
					role: this._itemRole()
				}), b.children(":not(.ui-menu-item)").each(function() {
					var b = a(this);
					/[^\-\u2014\u2013\s]/.test(b.text()) || b.addClass("ui-widget-content ui-menu-divider")
				}), b.children(".ui-state-disabled").attr("aria-disabled", "true"), this.active && !a.contains(this.element[0], this.active[0]) && this.blur()
			},
			_itemRole: function() {
				return {
					menu: "menuitem",
					listbox: "option"
				}[this.options.role]
			},
			_setOption: function(a, b) {
				"icons" === a && this.element.find(".ui-menu-icon").removeClass(this.options.icons.submenu).addClass(b.submenu), this._super(a, b)
			},
			focus: function(a, b) {
				var c, d;
				this.blur(a, a && "focus" === a.type), this._scrollIntoView(b), this.active = b.first(), d = this.active.children("a").addClass("ui-state-focus"), this.options.role && this.element.attr("aria-activedescendant", d.attr("id")), this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active"), a && "keydown" === a.type ? this._close() : this.timer = this._delay(function() {
					this._close()
				}, this.delay), c = b.children(".ui-menu"), c.length && /^mouse/.test(a.type) && this._startOpening(c), this.activeMenu = b.parent(), this._trigger("focus", a, {
					item: b
				})
			},
			_scrollIntoView: function(b) {
				var c, d, e, f, g, h;
				this._hasScroll() && (c = parseFloat(a.css(this.activeMenu[0], "borderTopWidth")) || 0, d = parseFloat(a.css(this.activeMenu[0], "paddingTop")) || 0, e = b.offset().top - this.activeMenu.offset().top - c - d, f = this.activeMenu.scrollTop(), g = this.activeMenu.height(), h = b.height(), e < 0 ? this.activeMenu.scrollTop(f + e) : e + h > g && this.activeMenu.scrollTop(f + e - g + h))
			},
			blur: function(a, b) {
				b || clearTimeout(this.timer), this.active && (this.active.children("a").removeClass("ui-state-focus"), this.active = null, this._trigger("blur", a, {
					item: this.active
				}))
			},
			_startOpening: function(a) {
				clearTimeout(this.timer), "true" === a.attr("aria-hidden") && (this.timer = this._delay(function() {
					this._close(), this._open(a)
				}, this.delay))
			},
			_open: function(b) {
				var c = a.extend({ of: this.active
				}, this.options.position);
				clearTimeout(this.timer), this.element.find(".ui-menu").not(b.parents(".ui-menu")).hide().attr("aria-hidden", "true"), b.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(c)
			},
			collapseAll: function(b, c) {
				clearTimeout(this.timer), this.timer = this._delay(function() {
					var d = c ? this.element : a(b && b.target).closest(this.element.find(".ui-menu"));
					d.length || (d = this.element), this._close(d), this.blur(b), this.activeMenu = d
				}, this.delay)
			},
			_close: function(a) {
				a || (a = this.active ? this.active.parent() : this.element), a.find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false").end().find("a.ui-state-active").removeClass("ui-state-active")
			},
			collapse: function(a) {
				var b = this.active && this.active.parent().closest(".ui-menu-item", this.element);
				b && b.length && (this._close(), this.focus(a, b))
			},
			expand: function(a) {
				var b = this.active && this.active.children(".ui-menu ").children(".ui-menu-item").first();
				b && b.length && (this._open(b.parent()), this._delay(function() {
					this.focus(a, b)
				}))
			},
			next: function(a) {
				this._move("next", "first", a)
			},
			previous: function(a) {
				this._move("prev", "last", a)
			},
			isFirstItem: function() {
				return this.active && !this.active.prevAll(".ui-menu-item").length
			},
			isLastItem: function() {
				return this.active && !this.active.nextAll(".ui-menu-item").length
			},
			_move: function(a, b, c) {
				var d;
				this.active && (d = "first" === a || "last" === a ? this.active["first" === a ? "prevAll" : "nextAll"](".ui-menu-item").eq(-1) : this.active[a + "All"](".ui-menu-item").eq(0)), d && d.length && this.active || (d = this.activeMenu.children(".ui-menu-item")[b]()), this.focus(c, d)
			},
			nextPage: function(b) {
				var c, d, e;
				return this.active ? void(this.isLastItem() || (this._hasScroll() ? (d = this.active.offset().top, e = this.element.height(), this.active.nextAll(".ui-menu-item").each(function() {
					return c = a(this), c.offset().top - d - e < 0
				}), this.focus(b, c)) : this.focus(b, this.activeMenu.children(".ui-menu-item")[this.active ? "last" : "first"]()))) : void this.next(b)
			},
			previousPage: function(b) {
				var c, d, e;
				return this.active ? void(this.isFirstItem() || (this._hasScroll() ? (d = this.active.offset().top, e = this.element.height(), this.active.prevAll(".ui-menu-item").each(function() {
					return c = a(this), c.offset().top - d + e > 0
				}), this.focus(b, c)) : this.focus(b, this.activeMenu.children(".ui-menu-item").first()))) : void this.next(b)
			},
			_hasScroll: function() {
				return this.element.outerHeight() < this.element.prop("scrollHeight")
			},
			select: function(b) {
				this.active = this.active || a(b.target).closest(".ui-menu-item");
				var c = {
					item: this.active
				};
				this.active.has(".ui-menu").length || this.collapseAll(b, !0), this._trigger("select", b, c)
			}
		})
	}(jQuery),
	function(a, b) {
		function m(a, b, c) {
			return [parseFloat(a[0]) * (k.test(a[0]) ? b / 100 : 1), parseFloat(a[1]) * (k.test(a[1]) ? c / 100 : 1)]
		}

		function n(b, c) {
			return parseInt(a.css(b, c), 10) || 0
		}

		function o(b) {
			var c = b[0];
			return 9 === c.nodeType ? {
				width: b.width(),
				height: b.height(),
				offset: {
					top: 0,
					left: 0
				}
			} : a.isWindow(c) ? {
				width: b.width(),
				height: b.height(),
				offset: {
					top: b.scrollTop(),
					left: b.scrollLeft()
				}
			} : c.preventDefault ? {
				width: 0,
				height: 0,
				offset: {
					top: c.pageY,
					left: c.pageX
				}
			} : {
				width: b.outerWidth(),
				height: b.outerHeight(),
				offset: b.offset()
			}
		}
		a.ui = a.ui || {};
		var c, d = Math.max,
			e = Math.abs,
			f = Math.round,
			g = /left|center|right/,
			h = /top|center|bottom/,
			i = /[\+\-]\d+(\.[\d]+)?%?/,
			j = /^\w+/,
			k = /%$/,
			l = a.fn.position;
		a.position = {
			scrollbarWidth: function() {
				if (c !== b) return c;
				var d, e, f = a("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),
					g = f.children()[0];
				return a("body").append(f), d = g.offsetWidth, f.css("overflow", "scroll"), e = g.offsetWidth, d === e && (e = f[0].clientWidth), f.remove(), c = d - e
			},
			getScrollInfo: function(b) {
				var c = b.isWindow ? "" : b.element.css("overflow-x"),
					d = b.isWindow ? "" : b.element.css("overflow-y"),
					e = "scroll" === c || "auto" === c && b.width < b.element[0].scrollWidth,
					f = "scroll" === d || "auto" === d && b.height < b.element[0].scrollHeight;
				return {
					width: f ? a.position.scrollbarWidth() : 0,
					height: e ? a.position.scrollbarWidth() : 0
				}
			},
			getWithinInfo: function(b) {
				var c = a(b || window),
					d = a.isWindow(c[0]);
				return {
					element: c,
					isWindow: d,
					offset: c.offset() || {
						left: 0,
						top: 0
					},
					scrollLeft: c.scrollLeft(),
					scrollTop: c.scrollTop(),
					width: d ? c.width() : c.outerWidth(),
					height: d ? c.height() : c.outerHeight()
				}
			}
		}, a.fn.position = function(b) {
			if (!b || !b.of) return l.apply(this, arguments);
			b = a.extend({}, b);
			var c, k, p, q, r, s, t = a(b.of),
				u = a.position.getWithinInfo(b.within),
				v = a.position.getScrollInfo(u),
				w = (b.collision || "flip").split(" "),
				x = {};
			return s = o(t), t[0].preventDefault && (b.at = "left top"), k = s.width, p = s.height, q = s.offset, r = a.extend({}, q), a.each(["my", "at"], function() {
				var c, d, a = (b[this] || "").split(" ");
				1 === a.length && (a = g.test(a[0]) ? a.concat(["center"]) : h.test(a[0]) ? ["center"].concat(a) : ["center", "center"]), a[0] = g.test(a[0]) ? a[0] : "center", a[1] = h.test(a[1]) ? a[1] : "center", c = i.exec(a[0]), d = i.exec(a[1]), x[this] = [c ? c[0] : 0, d ? d[0] : 0], b[this] = [j.exec(a[0])[0], j.exec(a[1])[0]]
			}), 1 === w.length && (w[1] = w[0]), "right" === b.at[0] ? r.left += k : "center" === b.at[0] && (r.left += k / 2), "bottom" === b.at[1] ? r.top += p : "center" === b.at[1] && (r.top += p / 2), c = m(x.at, k, p), r.left += c[0], r.top += c[1], this.each(function() {
				var g, h, i = a(this),
					j = i.outerWidth(),
					l = i.outerHeight(),
					o = n(this, "marginLeft"),
					s = n(this, "marginTop"),
					y = j + o + n(this, "marginRight") + v.width,
					z = l + s + n(this, "marginBottom") + v.height,
					A = a.extend({}, r),
					B = m(x.my, i.outerWidth(), i.outerHeight());
				"right" === b.my[0] ? A.left -= j : "center" === b.my[0] && (A.left -= j / 2), "bottom" === b.my[1] ? A.top -= l : "center" === b.my[1] && (A.top -= l / 2), A.left += B[0], A.top += B[1], a.support.offsetFractions || (A.left = f(A.left), A.top = f(A.top)), g = {
					marginLeft: o,
					marginTop: s
				}, a.each(["left", "top"], function(d, e) {
					a.ui.position[w[d]] && a.ui.position[w[d]][e](A, {
						targetWidth: k,
						targetHeight: p,
						elemWidth: j,
						elemHeight: l,
						collisionPosition: g,
						collisionWidth: y,
						collisionHeight: z,
						offset: [c[0] + B[0], c[1] + B[1]],
						my: b.my,
						at: b.at,
						within: u,
						elem: i
					})
				}), b.using && (h = function(a) {
					var c = q.left - A.left,
						f = c + k - j,
						g = q.top - A.top,
						h = g + p - l,
						m = {
							target: {
								element: t,
								left: q.left,
								top: q.top,
								width: k,
								height: p
							},
							element: {
								element: i,
								left: A.left,
								top: A.top,
								width: j,
								height: l
							},
							horizontal: f < 0 ? "left" : c > 0 ? "right" : "center",
							vertical: h < 0 ? "top" : g > 0 ? "bottom" : "middle"
						};
					k < j && e(c + f) < k && (m.horizontal = "center"), p < l && e(g + h) < p && (m.vertical = "middle"), d(e(c), e(f)) > d(e(g), e(h)) ? m.important = "horizontal" : m.important = "vertical", b.using.call(this, a, m)
				}), i.offset(a.extend(A, {
					using: h
				}))
			})
		}, a.ui.position = {
			fit: {
				left: function(a, b) {
					var j, c = b.within,
						e = c.isWindow ? c.scrollLeft : c.offset.left,
						f = c.width,
						g = a.left - b.collisionPosition.marginLeft,
						h = e - g,
						i = g + b.collisionWidth - f - e;
					b.collisionWidth > f ? h > 0 && i <= 0 ? (j = a.left + h + b.collisionWidth - f - e, a.left += h - j) : i > 0 && h <= 0 ? a.left = e : h > i ? a.left = e + f - b.collisionWidth : a.left = e : h > 0 ? a.left += h : i > 0 ? a.left -= i : a.left = d(a.left - g, a.left)
				},
				top: function(a, b) {
					var j, c = b.within,
						e = c.isWindow ? c.scrollTop : c.offset.top,
						f = b.within.height,
						g = a.top - b.collisionPosition.marginTop,
						h = e - g,
						i = g + b.collisionHeight - f - e;
					b.collisionHeight > f ? h > 0 && i <= 0 ? (j = a.top + h + b.collisionHeight - f - e, a.top += h - j) : i > 0 && h <= 0 ? a.top = e : h > i ? a.top = e + f - b.collisionHeight : a.top = e : h > 0 ? a.top += h : i > 0 ? a.top -= i : a.top = d(a.top - g, a.top)
				}
			},
			flip: {
				left: function(a, b) {
					var n, o, c = b.within,
						d = c.offset.left + c.scrollLeft,
						f = c.width,
						g = c.isWindow ? c.scrollLeft : c.offset.left,
						h = a.left - b.collisionPosition.marginLeft,
						i = h - g,
						j = h + b.collisionWidth - f - g,
						k = "left" === b.my[0] ? -b.elemWidth : "right" === b.my[0] ? b.elemWidth : 0,
						l = "left" === b.at[0] ? b.targetWidth : "right" === b.at[0] ? -b.targetWidth : 0,
						m = -2 * b.offset[0];
					i < 0 ? (n = a.left + k + l + m + b.collisionWidth - f - d, (n < 0 || n < e(i)) && (a.left += k + l + m)) : j > 0 && (o = a.left - b.collisionPosition.marginLeft + k + l + m - g, (o > 0 || e(o) < j) && (a.left += k + l + m))
				},
				top: function(a, b) {
					var o, p, c = b.within,
						d = c.offset.top + c.scrollTop,
						f = c.height,
						g = c.isWindow ? c.scrollTop : c.offset.top,
						h = a.top - b.collisionPosition.marginTop,
						i = h - g,
						j = h + b.collisionHeight - f - g,
						k = "top" === b.my[1],
						l = k ? -b.elemHeight : "bottom" === b.my[1] ? b.elemHeight : 0,
						m = "top" === b.at[1] ? b.targetHeight : "bottom" === b.at[1] ? -b.targetHeight : 0,
						n = -2 * b.offset[1];
					i < 0 ? (p = a.top + l + m + n + b.collisionHeight - f - d, a.top + l + m + n > i && (p < 0 || p < e(i)) && (a.top += l + m + n)) : j > 0 && (o = a.top - b.collisionPosition.marginTop + l + m + n - g, a.top + l + m + n > j && (o > 0 || e(o) < j) && (a.top += l + m + n))
				}
			},
			flipfit: {
				left: function() {
					a.ui.position.flip.left.apply(this, arguments), a.ui.position.fit.left.apply(this, arguments)
				},
				top: function() {
					a.ui.position.flip.top.apply(this, arguments), a.ui.position.fit.top.apply(this, arguments)
				}
			}
		},
			function() {
				var b, c, d, e, f, g = document.getElementsByTagName("body")[0],
					h = document.createElement("div");
				b = document.createElement(g ? "div" : "body"), d = {
					visibility: "hidden",
					width: 0,
					height: 0,
					border: 0,
					margin: 0,
					background: "none"
				}, g && a.extend(d, {
					position: "absolute",
					left: "-1000px",
					top: "-1000px"
				});
				for (f in d) b.style[f] = d[f];
				b.appendChild(h), c = g || document.documentElement, c.insertBefore(b, c.firstChild), h.style.cssText = "position: absolute; left: 10.7432222px;", e = a(h).offset().left, a.support.offsetFractions = e > 10 && e < 11, b.innerHTML = "", c.removeChild(b)
			}()
	}(jQuery),
	function(a, b) {
		a.widget("ui.progressbar", {
			version: "1.10.3",
			options: {
				max: 100,
				value: 0,
				change: null,
				complete: null
			},
			min: 0,
			_create: function() {
				this.oldValue = this.options.value = this._constrainedValue(), this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({
					role: "progressbar",
					"aria-valuemin": this.min
				}), this.valueDiv = a("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element), this._refreshValue()
			},
			_destroy: function() {
				this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"), this.valueDiv.remove()
			},
			value: function(a) {
				return a === b ? this.options.value : (this.options.value = this._constrainedValue(a), void this._refreshValue())
			},
			_constrainedValue: function(a) {
				return a === b && (a = this.options.value), this.indeterminate = a === !1, "number" != typeof a && (a = 0), !this.indeterminate && Math.min(this.options.max, Math.max(this.min, a))
			},
			_setOptions: function(a) {
				var b = a.value;
				delete a.value, this._super(a), this.options.value = this._constrainedValue(b), this._refreshValue()
			},
			_setOption: function(a, b) {
				"max" === a && (b = Math.max(this.min, b)), this._super(a, b)
			},
			_percentage: function() {
				return this.indeterminate ? 100 : 100 * (this.options.value - this.min) / (this.options.max - this.min)
			},
			_refreshValue: function() {
				var b = this.options.value,
					c = this._percentage();
				this.valueDiv.toggle(this.indeterminate || b > this.min).toggleClass("ui-corner-right", b === this.options.max).width(c.toFixed(0) + "%"), this.element.toggleClass("ui-progressbar-indeterminate", this.indeterminate), this.indeterminate ? (this.element.removeAttr("aria-valuenow"), this.overlayDiv || (this.overlayDiv = a("<div class='ui-progressbar-overlay'></div>").appendTo(this.valueDiv))) : (this.element.attr({
					"aria-valuemax": this.options.max,
					"aria-valuenow": b
				}), this.overlayDiv && (this.overlayDiv.remove(), this.overlayDiv = null)), this.oldValue !== b && (this.oldValue = b, this._trigger("change")), b === this.options.max && this._trigger("complete")
			}
		})
	}(jQuery),
	function(a, b) {
		var c = 5;
		a.widget("ui.slider", a.ui.mouse, {
			version: "1.10.3",
			widgetEventPrefix: "slide",
			options: {
				animate: !1,
				distance: 0,
				max: 100,
				min: 0,
				orientation: "horizontal",
				range: !1,
				step: 1,
				value: 0,
				values: null,
				change: null,
				slide: null,
				start: null,
				stop: null
			},
			_create: function() {
				this._keySliding = !1, this._mouseSliding = !1, this._animateOff = !0, this._handleIndex = null, this._detectOrientation(), this._mouseInit(), this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget ui-widget-content ui-corner-all"), this._refresh(), this._setOption("disabled", this.options.disabled), this._animateOff = !1
			},
			_refresh: function() {
				this._createRange(), this._createHandles(), this._setupEvents(), this._refreshValue()
			},
			_createHandles: function() {
				var b, c, d = this.options,
					e = this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),
					f = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>",
					g = [];
				for (c = d.values && d.values.length || 1, e.length > c && (e.slice(c).remove(), e = e.slice(0, c)), b = e.length; b < c; b++) g.push(f);
				this.handles = e.add(a(g.join("")).appendTo(this.element)), this.handle = this.handles.eq(0), this.handles.each(function(b) {
					a(this).data("ui-slider-handle-index", b)
				})
			},
			_createRange: function() {
				var b = this.options,
					c = "";
				b.range ? (b.range === !0 && (b.values ? b.values.length && 2 !== b.values.length ? b.values = [b.values[0], b.values[0]] : a.isArray(b.values) && (b.values = b.values.slice(0)) : b.values = [this._valueMin(), this._valueMin()]), this.range && this.range.length ? this.range.removeClass("ui-slider-range-min ui-slider-range-max").css({
					left: "",
					bottom: ""
				}) : (this.range = a("<div></div>").appendTo(this.element), c = "ui-slider-range ui-widget-header ui-corner-all"), this.range.addClass(c + ("min" === b.range || "max" === b.range ? " ui-slider-range-" + b.range : ""))) : this.range = a([])
			},
			_setupEvents: function() {
				var a = this.handles.add(this.range).filter("a");
				this._off(a), this._on(a, this._handleEvents), this._hoverable(a), this._focusable(a)
			},
			_destroy: function() {
				this.handles.remove(), this.range.remove(), this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-widget ui-widget-content ui-corner-all"), this._mouseDestroy()
			},
			_mouseCapture: function(b) {
				var c, d, e, f, g, h, i, j, k = this,
					l = this.options;
				return !l.disabled && (this.elementSize = {
					width: this.element.outerWidth(),
					height: this.element.outerHeight()
				}, this.elementOffset = this.element.offset(), c = {
					x: b.pageX,
					y: b.pageY
				}, d = this._normValueFromMouse(c), e = this._valueMax() - this._valueMin() + 1, this.handles.each(function(b) {
					var c = Math.abs(d - k.values(b));
					(e > c || e === c && (b === k._lastChangedValue || k.values(b) === l.min)) && (e = c, f = a(this), g = b)
				}), h = this._start(b, g), h !== !1 && (this._mouseSliding = !0, this._handleIndex = g, f.addClass("ui-state-active").focus(), i = f.offset(), j = !a(b.target).parents().addBack().is(".ui-slider-handle"), this._clickOffset = j ? {
					left: 0,
					top: 0
				} : {
					left: b.pageX - i.left - f.width() / 2,
					top: b.pageY - i.top - f.height() / 2 - (parseInt(f.css("borderTopWidth"), 10) || 0) - (parseInt(f.css("borderBottomWidth"), 10) || 0) + (parseInt(f.css("marginTop"), 10) || 0)
				}, this.handles.hasClass("ui-state-hover") || this._slide(b, g, d), this._animateOff = !0, !0))
			},
			_mouseStart: function() {
				return !0
			},
			_mouseDrag: function(a) {
				var b = {
						x: a.pageX,
						y: a.pageY
					},
					c = this._normValueFromMouse(b);
				return this._slide(a, this._handleIndex, c), !1
			},
			_mouseStop: function(a) {
				return this.handles.removeClass("ui-state-active"), this._mouseSliding = !1, this._stop(a, this._handleIndex), this._change(a, this._handleIndex), this._handleIndex = null, this._clickOffset = null, this._animateOff = !1, !1
			},
			_detectOrientation: function() {
				this.orientation = "vertical" === this.options.orientation ? "vertical" : "horizontal"
			},
			_normValueFromMouse: function(a) {
				var b, c, d, e, f;
				return "horizontal" === this.orientation ? (b = this.elementSize.width, c = a.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)) : (b = this.elementSize.height, c = a.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)), d = c / b, d > 1 && (d = 1), d < 0 && (d = 0), "vertical" === this.orientation && (d = 1 - d), e = this._valueMax() - this._valueMin(), f = this._valueMin() + d * e, this._trimAlignValue(f)
			},
			_start: function(a, b) {
				var c = {
					handle: this.handles[b],
					value: this.value()
				};
				return this.options.values && this.options.values.length && (c.value = this.values(b), c.values = this.values()), this._trigger("start", a, c)
			},
			_slide: function(a, b, c) {
				var d, e, f;
				this.options.values && this.options.values.length ? (d = this.values(b ? 0 : 1), 2 === this.options.values.length && this.options.range === !0 && (0 === b && c > d || 1 === b && c < d) && (c = d), c !== this.values(b) && (e = this.values(), e[b] = c, f = this._trigger("slide", a, {
					handle: this.handles[b],
					value: c,
					values: e
				}), d = this.values(b ? 0 : 1), f !== !1 && this.values(b, c, !0))) : c !== this.value() && (f = this._trigger("slide", a, {
					handle: this.handles[b],
					value: c
				}), f !== !1 && this.value(c))
			},
			_stop: function(a, b) {
				var c = {
					handle: this.handles[b],
					value: this.value()
				};
				this.options.values && this.options.values.length && (c.value = this.values(b), c.values = this.values()), this._trigger("stop", a, c)
			},
			_change: function(a, b) {
				if (!this._keySliding && !this._mouseSliding) {
					var c = {
						handle: this.handles[b],
						value: this.value()
					};
					this.options.values && this.options.values.length && (c.value = this.values(b), c.values = this.values()), this._lastChangedValue = b, this._trigger("change", a, c)
				}
			},
			value: function(a) {
				return arguments.length ? (this.options.value = this._trimAlignValue(a), this._refreshValue(), void this._change(null, 0)) : this._value()
			},
			values: function(b, c) {
				var d, e, f;
				if (arguments.length > 1) return this.options.values[b] = this._trimAlignValue(c), this._refreshValue(), void this._change(null, b);
				if (!arguments.length) return this._values();
				if (!a.isArray(arguments[0])) return this.options.values && this.options.values.length ? this._values(b) : this.value();
				for (d = this.options.values, e = arguments[0], f = 0; f < d.length; f += 1) d[f] = this._trimAlignValue(e[f]), this._change(null, f);
				this._refreshValue()
			},
			_setOption: function(b, c) {
				var d, e = 0;
				switch ("range" === b && this.options.range === !0 && ("min" === c ? (this.options.value = this._values(0), this.options.values = null) : "max" === c && (this.options.value = this._values(this.options.values.length - 1), this.options.values = null)), a.isArray(this.options.values) && (e = this.options.values.length), a.Widget.prototype._setOption.apply(this, arguments), b) {
					case "orientation":
						this._detectOrientation(), this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation), this._refreshValue();
						break;
					case "value":
						this._animateOff = !0, this._refreshValue(), this._change(null, 0), this._animateOff = !1;
						break;
					case "values":
						for (this._animateOff = !0, this._refreshValue(), d = 0; d < e; d += 1) this._change(null, d);
						this._animateOff = !1;
						break;
					case "min":
					case "max":
						this._animateOff = !0, this._refreshValue(), this._animateOff = !1;
						break;
					case "range":
						this._animateOff = !0, this._refresh(), this._animateOff = !1
				}
			},
			_value: function() {
				var a = this.options.value;
				return a = this._trimAlignValue(a)
			},
			_values: function(a) {
				var b, c, d;
				if (arguments.length) return b = this.options.values[a], b = this._trimAlignValue(b);
				if (this.options.values && this.options.values.length) {
					for (c = this.options.values.slice(), d = 0; d < c.length; d += 1) c[d] = this._trimAlignValue(c[d]);
					return c
				}
				return []
			},
			_trimAlignValue: function(a) {
				if (a <= this._valueMin()) return this._valueMin();
				if (a >= this._valueMax()) return this._valueMax();
				var b = this.options.step > 0 ? this.options.step : 1,
					c = (a - this._valueMin()) % b,
					d = a - c;
				return 2 * Math.abs(c) >= b && (d += c > 0 ? b : -b), parseFloat(d.toFixed(5))
			},
			_valueMin: function() {
				return this.options.min
			},
			_valueMax: function() {
				return this.options.max
			},
			_refreshValue: function() {
				var b, c, d, e, f, g = this.options.range,
					h = this.options,
					i = this,
					j = !this._animateOff && h.animate,
					k = {};
				this.options.values && this.options.values.length ? this.handles.each(function(d) {
					c = (i.values(d) - i._valueMin()) / (i._valueMax() - i._valueMin()) * 100, k["horizontal" === i.orientation ? "left" : "bottom"] = c + "%", a(this).stop(1, 1)[j ? "animate" : "css"](k, h.animate), i.options.range === !0 && ("horizontal" === i.orientation ? (0 === d && i.range.stop(1, 1)[j ? "animate" : "css"]({
						left: c + "%"
					}, h.animate), 1 === d && i.range[j ? "animate" : "css"]({
						width: c - b + "%"
					}, {
						queue: !1,
						duration: h.animate
					})) : (0 === d && i.range.stop(1, 1)[j ? "animate" : "css"]({
						bottom: c + "%"
					}, h.animate), 1 === d && i.range[j ? "animate" : "css"]({
						height: c - b + "%"
					}, {
						queue: !1,
						duration: h.animate
					}))), b = c
				}) : (d = this.value(), e = this._valueMin(), f = this._valueMax(), c = f !== e ? (d - e) / (f - e) * 100 : 0, k["horizontal" === this.orientation ? "left" : "bottom"] = c + "%", this.handle.stop(1, 1)[j ? "animate" : "css"](k, h.animate), "min" === g && "horizontal" === this.orientation && this.range.stop(1, 1)[j ? "animate" : "css"]({
					width: c + "%"
				}, h.animate), "max" === g && "horizontal" === this.orientation && this.range[j ? "animate" : "css"]({
					width: 100 - c + "%"
				}, {
					queue: !1,
					duration: h.animate
				}), "min" === g && "vertical" === this.orientation && this.range.stop(1, 1)[j ? "animate" : "css"]({
					height: c + "%"
				}, h.animate), "max" === g && "vertical" === this.orientation && this.range[j ? "animate" : "css"]({
					height: 100 - c + "%"
				}, {
					queue: !1,
					duration: h.animate
				}))
			},
			_handleEvents: {
				keydown: function(b) {
					var d, e, f, g, h = a(b.target).data("ui-slider-handle-index");
					switch (b.keyCode) {
						case a.ui.keyCode.HOME:
						case a.ui.keyCode.END:
						case a.ui.keyCode.PAGE_UP:
						case a.ui.keyCode.PAGE_DOWN:
						case a.ui.keyCode.UP:
						case a.ui.keyCode.RIGHT:
						case a.ui.keyCode.DOWN:
						case a.ui.keyCode.LEFT:
							if (b.preventDefault(), !this._keySliding && (this._keySliding = !0, a(b.target).addClass("ui-state-active"), d = this._start(b, h), d === !1)) return
					}
					switch (g = this.options.step, e = f = this.options.values && this.options.values.length ? this.values(h) : this.value(), b.keyCode) {
						case a.ui.keyCode.HOME:
							f = this._valueMin();
							break;
						case a.ui.keyCode.END:
							f = this._valueMax();
							break;
						case a.ui.keyCode.PAGE_UP:
							f = this._trimAlignValue(e + (this._valueMax() - this._valueMin()) / c);
							break;
						case a.ui.keyCode.PAGE_DOWN:
							f = this._trimAlignValue(e - (this._valueMax() - this._valueMin()) / c);
							break;
						case a.ui.keyCode.UP:
						case a.ui.keyCode.RIGHT:
							if (e === this._valueMax()) return;
							f = this._trimAlignValue(e + g);
							break;
						case a.ui.keyCode.DOWN:
						case a.ui.keyCode.LEFT:
							if (e === this._valueMin()) return;
							f = this._trimAlignValue(e - g)
					}
					this._slide(b, h, f)
				},
				click: function(a) {
					a.preventDefault()
				},
				keyup: function(b) {
					var c = a(b.target).data("ui-slider-handle-index");
					this._keySliding && (this._keySliding = !1, this._stop(b, c), this._change(b, c), a(b.target).removeClass("ui-state-active"))
				}
			}
		})
	}(jQuery),
	function(a) {
		function b(a) {
			return function() {
				var b = this.element.val();
				a.apply(this, arguments), this._refresh(), b !== this.element.val() && this._trigger("change")
			}
		}
		a.widget("ui.spinner", {
			version: "1.10.3",
			defaultElement: "<input>",
			widgetEventPrefix: "spin",
			options: {
				culture: null,
				icons: {
					down: "ui-icon-triangle-1-s",
					up: "ui-icon-triangle-1-n"
				},
				incremental: !0,
				max: null,
				min: null,
				numberFormat: null,
				page: 10,
				step: 1,
				change: null,
				spin: null,
				start: null,
				stop: null
			},
			_create: function() {
				this._setOption("max", this.options.max), this._setOption("min", this.options.min), this._setOption("step", this.options.step), this._value(this.element.val(), !0), this._draw(), this._on(this._events), this._refresh(), this._on(this.window, {
					beforeunload: function() {
						this.element.removeAttr("autocomplete")
					}
				})
			},
			_getCreateOptions: function() {
				var b = {},
					c = this.element;
				return a.each(["min", "max", "step"], function(a, d) {
					var e = c.attr(d);
					void 0 !== e && e.length && (b[d] = e)
				}), b
			},
			_events: {
				keydown: function(a) {
					this._start(a) && this._keydown(a) && a.preventDefault()
				},
				keyup: "_stop",
				focus: function() {
					this.previous = this.element.val()
				},
				blur: function(a) {
					return this.cancelBlur ? void delete this.cancelBlur : (this._stop(), this._refresh(), void(this.previous !== this.element.val() && this._trigger("change", a)))
				},
				mousewheel: function(a, b) {
					if (b) {
						if (!this.spinning && !this._start(a)) return !1;
						this._spin((b > 0 ? 1 : -1) * this.options.step, a), clearTimeout(this.mousewheelTimer), this.mousewheelTimer = this._delay(function() {
							this.spinning && this._stop(a)
						}, 100), a.preventDefault()
					}
				},
				"mousedown .ui-spinner-button": function(b) {
					function d() {
						var a = this.element[0] === this.document[0].activeElement;
						a || (this.element.focus(), this.previous = c, this._delay(function() {
							this.previous = c
						}))
					}
					var c;
					c = this.element[0] === this.document[0].activeElement ? this.previous : this.element.val(), b.preventDefault(), d.call(this), this.cancelBlur = !0, this._delay(function() {
						delete this.cancelBlur, d.call(this)
					}), this._start(b) !== !1 && this._repeat(null, a(b.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, b)
				},
				"mouseup .ui-spinner-button": "_stop",
				"mouseenter .ui-spinner-button": function(b) {
					if (a(b.currentTarget).hasClass("ui-state-active")) return this._start(b) !== !1 && void this._repeat(null, a(b.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, b)
				},
				"mouseleave .ui-spinner-button": "_stop"
			},
			_draw: function() {
				var a = this.uiSpinner = this.element.addClass("ui-spinner-input").attr("autocomplete", "off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());
				this.element.attr("role", "spinbutton"), this.buttons = a.find(".ui-spinner-button").attr("tabIndex", -1).button().removeClass("ui-corner-all"), this.buttons.height() > Math.ceil(.5 * a.height()) && a.height() > 0 && a.height(a.height()), this.options.disabled && this.disable()
			},
			_keydown: function(b) {
				var c = this.options,
					d = a.ui.keyCode;
				switch (b.keyCode) {
					case d.UP:
						return this._repeat(null, 1, b), !0;
					case d.DOWN:
						return this._repeat(null, -1, b), !0;
					case d.PAGE_UP:
						return this._repeat(null, c.page, b), !0;
					case d.PAGE_DOWN:
						return this._repeat(null, -c.page, b), !0
				}
				return !1
			},
			_uiSpinnerHtml: function() {
				return "<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>"
			},
			_buttonHtml: function() {
				return "<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon " + this.options.icons.up + "'>&#9650;</span></a><a class='ui-spinner-button ui-spinner-down ui-corner-br'><span class='ui-icon " + this.options.icons.down + "'>&#9660;</span></a>"
			},
			_start: function(a) {
				return !(!this.spinning && this._trigger("start", a) === !1) && (this.counter || (this.counter = 1), this.spinning = !0, !0)
			},
			_repeat: function(a, b, c) {
				a = a || 500, clearTimeout(this.timer), this.timer = this._delay(function() {
					this._repeat(40, b, c)
				}, a), this._spin(b * this.options.step, c)
			},
			_spin: function(a, b) {
				var c = this.value() || 0;
				this.counter || (this.counter = 1), c = this._adjustValue(c + a * this._increment(this.counter)), this.spinning && this._trigger("spin", b, {
					value: c
				}) === !1 || (this._value(c), this.counter++)
			},
			_increment: function(b) {
				var c = this.options.incremental;
				return c ? a.isFunction(c) ? c(b) : Math.floor(b * b * b / 5e4 - b * b / 500 + 17 * b / 200 + 1) : 1
			},
			_precision: function() {
				var a = this._precisionOf(this.options.step);
				return null !== this.options.min && (a = Math.max(a, this._precisionOf(this.options.min))), a
			},
			_precisionOf: function(a) {
				var b = a.toString(),
					c = b.indexOf(".");
				return c === -1 ? 0 : b.length - c - 1
			},
			_adjustValue: function(a) {
				var b, c, d = this.options;
				return b = null !== d.min ? d.min : 0, c = a - b, c = Math.round(c / d.step) * d.step, a = b + c, a = parseFloat(a.toFixed(this._precision())), null !== d.max && a > d.max ? d.max : null !== d.min && a < d.min ? d.min : a
			},
			_stop: function(a) {
				this.spinning && (clearTimeout(this.timer), clearTimeout(this.mousewheelTimer), this.counter = 0, this.spinning = !1, this._trigger("stop", a))
			},
			_setOption: function(a, b) {
				if ("culture" === a || "numberFormat" === a) {
					var c = this._parse(this.element.val());
					return this.options[a] = b, void this.element.val(this._format(c))
				}
				"max" !== a && "min" !== a && "step" !== a || "string" == typeof b && (b = this._parse(b)), "icons" === a && (this.buttons.first().find(".ui-icon").removeClass(this.options.icons.up).addClass(b.up), this.buttons.last().find(".ui-icon").removeClass(this.options.icons.down).addClass(b.down)), this._super(a, b), "disabled" === a && (b ? (this.element.prop("disabled", !0), this.buttons.button("disable")) : (this.element.prop("disabled", !1), this.buttons.button("enable")))
			},
			_setOptions: b(function(a) {
				this._super(a), this._value(this.element.val())
			}),
			_parse: function(a) {
				return "string" == typeof a && "" !== a && (a = window.Globalize && this.options.numberFormat ? Globalize.parseFloat(a, 10, this.options.culture) : +a), "" === a || isNaN(a) ? null : a
			},
			_format: function(a) {
				return "" === a ? "" : window.Globalize && this.options.numberFormat ? Globalize.format(a, this.options.numberFormat, this.options.culture) : a
			},
			_refresh: function() {
				this.element.attr({
					"aria-valuemin": this.options.min,
					"aria-valuemax": this.options.max,
					"aria-valuenow": this._parse(this.element.val())
				})
			},
			_value: function(a, b) {
				var c;
				"" !== a && (c = this._parse(a), null !== c && (b || (c = this._adjustValue(c)), a = this._format(c))), this.element.val(a), this._refresh()
			},
			_destroy: function() {
				this.element.removeClass("ui-spinner-input").prop("disabled", !1).removeAttr("autocomplete").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"), this.uiSpinner.replaceWith(this.element)
			},
			stepUp: b(function(a) {
				this._stepUp(a)
			}),
			_stepUp: function(a) {
				this._start() && (this._spin((a || 1) * this.options.step), this._stop())
			},
			stepDown: b(function(a) {
				this._stepDown(a)
			}),
			_stepDown: function(a) {
				this._start() && (this._spin((a || 1) * -this.options.step), this._stop())
			},
			pageUp: b(function(a) {
				this._stepUp((a || 1) * this.options.page)
			}),
			pageDown: b(function(a) {
				this._stepDown((a || 1) * this.options.page)
			}),
			value: function(a) {
				return arguments.length ? void b(this._value).call(this, a) : this._parse(this.element.val())
			},
			widget: function() {
				return this.uiSpinner
			}
		})
	}(jQuery),
	function(a, b) {
		function e() {
			return ++c
		}

		function f(a) {
			return a.hash.length > 1 && decodeURIComponent(a.href.replace(d, "")) === decodeURIComponent(location.href.replace(d, ""))
		}
		var c = 0,
			d = /#.*$/;
		a.widget("ui.tabs", {
			version: "1.10.3",
			delay: 300,
			options: {
				active: null,
				collapsible: !1,
				event: "click",
				heightStyle: "content",
				hide: null,
				show: null,
				activate: null,
				beforeActivate: null,
				beforeLoad: null,
				load: null
			},
			_create: function() {
				var b = this,
					c = this.options;
				this.running = !1, this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible", c.collapsible).delegate(".ui-tabs-nav > li", "mousedown" + this.eventNamespace, function(b) {
					a(this).is(".ui-state-disabled") && b.preventDefault()
				}).delegate(".ui-tabs-anchor", "focus" + this.eventNamespace, function() {
						a(this).closest("li").is(".ui-state-disabled") && this.blur()
					}), this._processTabs(), c.active = this._initialActive(), a.isArray(c.disabled) && (c.disabled = a.unique(c.disabled.concat(a.map(this.tabs.filter(".ui-state-disabled"), function(a) {
					return b.tabs.index(a)
				}))).sort()), this.options.active !== !1 && this.anchors.length ? this.active = this._findActive(c.active) : this.active = a(), this._refresh(), this.active.length && this.load(c.active)
			},
			_initialActive: function() {
				var b = this.options.active,
					c = this.options.collapsible,
					d = location.hash.substring(1);
				return null === b && (d && this.tabs.each(function(c, e) {
					if (a(e).attr("aria-controls") === d) return b = c, !1
				}), null === b && (b = this.tabs.index(this.tabs.filter(".ui-tabs-active"))), null !== b && b !== -1 || (b = !!this.tabs.length && 0)), b !== !1 && (b = this.tabs.index(this.tabs.eq(b)), b === -1 && (b = !c && 0)), !c && b === !1 && this.anchors.length && (b = 0), b
			},
			_getCreateEventData: function() {
				return {
					tab: this.active,
					panel: this.active.length ? this._getPanelForTab(this.active) : a()
				}
			},
			_tabKeydown: function(b) {
				var c = a(this.document[0].activeElement).closest("li"),
					d = this.tabs.index(c),
					e = !0;
				if (!this._handlePageNav(b)) {
					switch (b.keyCode) {
						case a.ui.keyCode.RIGHT:
						case a.ui.keyCode.DOWN:
							d++;
							break;
						case a.ui.keyCode.UP:
						case a.ui.keyCode.LEFT:
							e = !1, d--;
							break;
						case a.ui.keyCode.END:
							d = this.anchors.length - 1;
							break;
						case a.ui.keyCode.HOME:
							d = 0;
							break;
						case a.ui.keyCode.SPACE:
							return b.preventDefault(), clearTimeout(this.activating), void this._activate(d);
						case a.ui.keyCode.ENTER:
							return b.preventDefault(), clearTimeout(this.activating), void this._activate(d !== this.options.active && d);
						default:
							return
					}
					b.preventDefault(), clearTimeout(this.activating), d = this._focusNextTab(d, e), b.ctrlKey || (c.attr("aria-selected", "false"), this.tabs.eq(d).attr("aria-selected", "true"), this.activating = this._delay(function() {
						this.option("active", d)
					}, this.delay))
				}
			},
			_panelKeydown: function(b) {
				this._handlePageNav(b) || b.ctrlKey && b.keyCode === a.ui.keyCode.UP && (b.preventDefault(), this.active.focus())
			},
			_handlePageNav: function(b) {
				return b.altKey && b.keyCode === a.ui.keyCode.PAGE_UP ? (this._activate(this._focusNextTab(this.options.active - 1, !1)), !0) : b.altKey && b.keyCode === a.ui.keyCode.PAGE_DOWN ? (this._activate(this._focusNextTab(this.options.active + 1, !0)), !0) : void 0
			},
			_findNextTab: function(b, c) {
				function e() {
					return b > d && (b = 0), b < 0 && (b = d), b
				}
				for (var d = this.tabs.length - 1; a.inArray(e(), this.options.disabled) !== -1;) b = c ? b + 1 : b - 1;
				return b
			},
			_focusNextTab: function(a, b) {
				return a = this._findNextTab(a, b), this.tabs.eq(a).focus(), a
			},
			_setOption: function(a, b) {
				return "active" === a ? void this._activate(b) : "disabled" === a ? void this._setupDisabled(b) : (this._super(a, b), "collapsible" === a && (this.element.toggleClass("ui-tabs-collapsible", b), b || this.options.active !== !1 || this._activate(0)), "event" === a && this._setupEvents(b), void("heightStyle" === a && this._setupHeightStyle(b)))
			},
			_tabId: function(a) {
				return a.attr("aria-controls") || "ui-tabs-" + e()
			},
			_sanitizeSelector: function(a) {
				return a ? a.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : ""
			},
			refresh: function() {
				var b = this.options,
					c = this.tablist.children(":has(a[href])");
				b.disabled = a.map(c.filter(".ui-state-disabled"), function(a) {
					return c.index(a)
				}), this._processTabs(), b.active !== !1 && this.anchors.length ? this.active.length && !a.contains(this.tablist[0], this.active[0]) ? this.tabs.length === b.disabled.length ? (b.active = !1, this.active = a()) : this._activate(this._findNextTab(Math.max(0, b.active - 1), !1)) : b.active = this.tabs.index(this.active) : (b.active = !1, this.active = a()), this._refresh()
			},
			_refresh: function() {
				this._setupDisabled(this.options.disabled), this._setupEvents(this.options.event), this._setupHeightStyle(this.options.heightStyle), this.tabs.not(this.active).attr({
					"aria-selected": "false",
					tabIndex: -1
				}), this.panels.not(this._getPanelForTab(this.active)).hide().attr({
					"aria-expanded": "false",
					"aria-hidden": "true"
				}), this.active.length ? (this.active.addClass("ui-tabs-active ui-state-active").attr({
					"aria-selected": "true",
					tabIndex: 0
				}), this._getPanelForTab(this.active).show().attr({
					"aria-expanded": "true",
					"aria-hidden": "false"
				})) : this.tabs.eq(0).attr("tabIndex", 0)
			},
			_processTabs: function() {
				var b = this;
				this.tablist = this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role", "tablist"), this.tabs = this.tablist.find("> li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({
					role: "tab",
					tabIndex: -1
				}), this.anchors = this.tabs.map(function() {
					return a("a", this)[0]
				}).addClass("ui-tabs-anchor").attr({
						role: "presentation",
						tabIndex: -1
					}), this.panels = a(), this.anchors.each(function(c, d) {
					var e, g, h, i = a(d).uniqueId().attr("id"),
						j = a(d).closest("li"),
						k = j.attr("aria-controls");
					f(d) ? (e = d.hash, g = b.element.find(b._sanitizeSelector(e))) : (h = b._tabId(j), e = "#" + h, g = b.element.find(e), g.length || (g = b._createPanel(h), g.insertAfter(b.panels[c - 1] || b.tablist)), g.attr("aria-live", "polite")), g.length && (b.panels = b.panels.add(g)), k && j.data("ui-tabs-aria-controls", k), j.attr({
						"aria-controls": e.substring(1),
						"aria-labelledby": i
					}), g.attr("aria-labelledby", i)
				}), this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role", "tabpanel")
			},
			_getList: function() {
				return this.element.find("ol,ul").eq(0)
			},
			_createPanel: function(b) {
				return a("<div>").attr("id", b).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy", !0)
			},
			_setupDisabled: function(b) {
				a.isArray(b) && (b.length ? b.length === this.anchors.length && (b = !0) : b = !1);
				for (var d, c = 0; d = this.tabs[c]; c++) b === !0 || a.inArray(c, b) !== -1 ? a(d).addClass("ui-state-disabled").attr("aria-disabled", "true") : a(d).removeClass("ui-state-disabled").removeAttr("aria-disabled");
				this.options.disabled = b
			},
			_setupEvents: function(b) {
				var c = {
					click: function(a) {
						a.preventDefault()
					}
				};
				b && a.each(b.split(" "), function(a, b) {
					c[b] = "_eventHandler"
				}), this._off(this.anchors.add(this.tabs).add(this.panels)), this._on(this.anchors, c), this._on(this.tabs, {
					keydown: "_tabKeydown"
				}), this._on(this.panels, {
					keydown: "_panelKeydown"
				}), this._focusable(this.tabs), this._hoverable(this.tabs)
			},
			_setupHeightStyle: function(b) {
				var c, d = this.element.parent();
				"fill" === b ? (c = d.height(), c -= this.element.outerHeight() - this.element.height(), this.element.siblings(":visible").each(function() {
					var b = a(this),
						d = b.css("position");
					"absolute" !== d && "fixed" !== d && (c -= b.outerHeight(!0))
				}), this.element.children().not(this.panels).each(function() {
					c -= a(this).outerHeight(!0)
				}), this.panels.each(function() {
					a(this).height(Math.max(0, c - a(this).innerHeight() + a(this).height()))
				}).css("overflow", "auto")) : "auto" === b && (c = 0, this.panels.each(function() {
					c = Math.max(c, a(this).height("").height())
				}).height(c))
			},
			_eventHandler: function(b) {
				var c = this.options,
					d = this.active,
					e = a(b.currentTarget),
					f = e.closest("li"),
					g = f[0] === d[0],
					h = g && c.collapsible,
					i = h ? a() : this._getPanelForTab(f),
					j = d.length ? this._getPanelForTab(d) : a(),
					k = {
						oldTab: d,
						oldPanel: j,
						newTab: h ? a() : f,
						newPanel: i
					};
				b.preventDefault(), f.hasClass("ui-state-disabled") || f.hasClass("ui-tabs-loading") || this.running || g && !c.collapsible || this._trigger("beforeActivate", b, k) === !1 || (c.active = !h && this.tabs.index(f), this.active = g ? a() : f, this.xhr && this.xhr.abort(), j.length || i.length || a.error("jQuery UI Tabs: Mismatching fragment identifier."), i.length && this.load(this.tabs.index(f), b), this._toggle(b, k))
			},
			_toggle: function(b, c) {
				function g() {
					d.running = !1, d._trigger("activate", b, c)
				}

				function h() {
					c.newTab.closest("li").addClass("ui-tabs-active ui-state-active"), e.length && d.options.show ? d._show(e, d.options.show, g) : (e.show(), g())
				}
				var d = this,
					e = c.newPanel,
					f = c.oldPanel;
				this.running = !0, f.length && this.options.hide ? this._hide(f, this.options.hide, function() {
					c.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"), h()
				}) : (c.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"), f.hide(), h()), f.attr({
					"aria-expanded": "false",
					"aria-hidden": "true"
				}), c.oldTab.attr("aria-selected", "false"), e.length && f.length ? c.oldTab.attr("tabIndex", -1) : e.length && this.tabs.filter(function() {
					return 0 === a(this).attr("tabIndex")
				}).attr("tabIndex", -1), e.attr({
					"aria-expanded": "true",
					"aria-hidden": "false"
				}), c.newTab.attr({
					"aria-selected": "true",
					tabIndex: 0
				})
			},
			_activate: function(b) {
				var c, d = this._findActive(b);
				d[0] !== this.active[0] && (d.length || (d = this.active), c = d.find(".ui-tabs-anchor")[0], this._eventHandler({
					target: c,
					currentTarget: c,
					preventDefault: a.noop
				}))
			},
			_findActive: function(b) {
				return b === !1 ? a() : this.tabs.eq(b)
			},
			_getIndex: function(a) {
				return "string" == typeof a && (a = this.anchors.index(this.anchors.filter("[href$='" + a + "']"))), a
			},
			_destroy: function() {
				this.xhr && this.xhr.abort(), this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible"), this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role"), this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeUniqueId(), this.tabs.add(this.panels).each(function() {
					a.data(this, "ui-tabs-destroy") ? a(this).remove() : a(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role")
				}), this.tabs.each(function() {
					var b = a(this),
						c = b.data("ui-tabs-aria-controls");
					c ? b.attr("aria-controls", c).removeData("ui-tabs-aria-controls") : b.removeAttr("aria-controls")
				}), this.panels.show(), "content" !== this.options.heightStyle && this.panels.css("height", "")
			},
			enable: function(c) {
				var d = this.options.disabled;
				d !== !1 && (c === b ? d = !1 : (c = this._getIndex(c), d = a.isArray(d) ? a.map(d, function(a) {
					return a !== c ? a : null
				}) : a.map(this.tabs, function(a, b) {
					return b !== c ? b : null
				})), this._setupDisabled(d))
			},
			disable: function(c) {
				var d = this.options.disabled;
				if (d !== !0) {
					if (c === b) d = !0;
					else {
						if (c = this._getIndex(c), a.inArray(c, d) !== -1) return;
						d = a.isArray(d) ? a.merge([c], d).sort() : [c]
					}
					this._setupDisabled(d)
				}
			},
			load: function(b, c) {
				b = this._getIndex(b);
				var d = this,
					e = this.tabs.eq(b),
					g = e.find(".ui-tabs-anchor"),
					h = this._getPanelForTab(e),
					i = {
						tab: e,
						panel: h
					};
				f(g[0]) || (this.xhr = a.ajax(this._ajaxSettings(g, c, i)), this.xhr && "canceled" !== this.xhr.statusText && (e.addClass("ui-tabs-loading"), h.attr("aria-busy", "true"), this.xhr.success(function(a) {
					setTimeout(function() {
						h.html(a), d._trigger("load", c, i)
					}, 1)
				}).complete(function(a, b) {
						setTimeout(function() {
							"abort" === b && d.panels.stop(!1, !0), e.removeClass("ui-tabs-loading"), h.removeAttr("aria-busy"), a === d.xhr && delete d.xhr
						}, 1)
					})))
			},
			_ajaxSettings: function(b, c, d) {
				var e = this;
				return {
					url: b.attr("href"),
					beforeSend: function(b, f) {
						return e._trigger("beforeLoad", c, a.extend({
							jqXHR: b,
							ajaxSettings: f
						}, d))
					}
				}
			},
			_getPanelForTab: function(b) {
				var c = a(b).attr("aria-controls");
				return this.element.find(this._sanitizeSelector("#" + c))
			}
		})
	}(jQuery),
	function(a) {
		function c(b, c) {
			var d = (b.attr("aria-describedby") || "").split(/\s+/);
			d.push(c), b.data("ui-tooltip-id", c).attr("aria-describedby", a.trim(d.join(" ")))
		}

		function d(b) {
			var c = b.data("ui-tooltip-id"),
				d = (b.attr("aria-describedby") || "").split(/\s+/),
				e = a.inArray(c, d);
			e !== -1 && d.splice(e, 1), b.removeData("ui-tooltip-id"), d = a.trim(d.join(" ")), d ? b.attr("aria-describedby", d) : b.removeAttr("aria-describedby")
		}
		var b = 0;
		a.widget("ui.tooltip", {
			version: "1.10.3",
			options: {
				content: function() {
					var b = a(this).attr("title") || "";
					return a("<a>").text(b).html()
				},
				hide: !0,
				items: "[title]:not([disabled])",
				position: {
					my: "left top+15",
					at: "left bottom",
					collision: "flipfit flip"
				},
				show: !0,
				tooltipClass: null,
				track: !1,
				close: null,
				open: null
			},
			_create: function() {
				this._on({
					mouseover: "open",
					focusin: "open"
				}), this.tooltips = {}, this.parents = {}, this.options.disabled && this._disable()
			},
			_setOption: function(b, c) {
				var d = this;
				return "disabled" === b ? (this[c ? "_disable" : "_enable"](), void(this.options[b] = c)) : (this._super(b, c), void("content" === b && a.each(this.tooltips, function(a, b) {
					d._updateContent(b)
				})))
			},
			_disable: function() {
				var b = this;
				a.each(this.tooltips, function(c, d) {
					var e = a.Event("blur");
					e.target = e.currentTarget = d[0], b.close(e, !0)
				}), this.element.find(this.options.items).addBack().each(function() {
					var b = a(this);
					b.is("[title]") && b.data("ui-tooltip-title", b.attr("title")).attr("title", "")
				})
			},
			_enable: function() {
				this.element.find(this.options.items).addBack().each(function() {
					var b = a(this);
					b.data("ui-tooltip-title") && b.attr("title", b.data("ui-tooltip-title"))
				})
			},
			open: function(b) {
				var c = this,
					d = a(b ? b.target : this.element).closest(this.options.items);
				d.length && !d.data("ui-tooltip-id") && (d.attr("title") && d.data("ui-tooltip-title", d.attr("title")), d.data("ui-tooltip-open", !0), b && "mouseover" === b.type && d.parents().each(function() {
					var d, b = a(this);
					b.data("ui-tooltip-open") && (d = a.Event("blur"), d.target = d.currentTarget = this, c.close(d, !0)), b.attr("title") && (b.uniqueId(), c.parents[this.id] = {
						element: this,
						title: b.attr("title")
					}, b.attr("title", ""))
				}), this._updateContent(d, b))
			},
			_updateContent: function(a, b) {
				var c, d = this.options.content,
					e = this,
					f = b ? b.type : null;
				return "string" == typeof d ? this._open(b, a, d) : (c = d.call(a[0], function(c) {
					a.data("ui-tooltip-open") && e._delay(function() {
						b && (b.type = f), this._open(b, a, c)
					})
				}), void(c && this._open(b, a, c)))
			},
			_open: function(b, d, e) {
				function j(a) {
					i.of = a, f.is(":hidden") || f.position(i)
				}
				var f, g, h, i = a.extend({}, this.options.position);
				if (e) {
					if (f = this._find(d), f.length) return void f.find(".ui-tooltip-content").html(e);
					d.is("[title]") && (b && "mouseover" === b.type ? d.attr("title", "") : d.removeAttr("title")), f = this._tooltip(d), c(d, f.attr("id")), f.find(".ui-tooltip-content").html(e), this.options.track && b && /^mouse/.test(b.type) ? (this._on(this.document, {
						mousemove: j
					}), j(b)) : f.position(a.extend({ of: d
					}, this.options.position)), f.hide(), this._show(f, this.options.show), this.options.show && this.options.show.delay && (h = this.delayedShow = setInterval(function() {
						f.is(":visible") && (j(i.of), clearInterval(h))
					}, a.fx.interval)), this._trigger("open", b, {
						tooltip: f
					}), g = {
						keyup: function(b) {
							if (b.keyCode === a.ui.keyCode.ESCAPE) {
								var c = a.Event(b);
								c.currentTarget = d[0], this.close(c, !0)
							}
						},
						remove: function() {
							this._removeTooltip(f)
						}
					}, b && "mouseover" !== b.type || (g.mouseleave = "close"), b && "focusin" !== b.type || (g.focusout = "close"), this._on(!0, d, g)
				}
			},
			close: function(b) {
				var c = this,
					e = a(b ? b.currentTarget : this.element),
					f = this._find(e);
				this.closing || (clearInterval(this.delayedShow), e.data("ui-tooltip-title") && e.attr("title", e.data("ui-tooltip-title")), d(e), f.stop(!0), this._hide(f, this.options.hide, function() {
					c._removeTooltip(a(this))
				}), e.removeData("ui-tooltip-open"), this._off(e, "mouseleave focusout keyup"), e[0] !== this.element[0] && this._off(e, "remove"), this._off(this.document, "mousemove"), b && "mouseleave" === b.type && a.each(this.parents, function(b, d) {
					a(d.element).attr("title", d.title), delete c.parents[b]
				}), this.closing = !0, this._trigger("close", b, {
					tooltip: f
				}), this.closing = !1)
			},
			_tooltip: function(c) {
				var d = "ui-tooltip-" + b++,
					e = a("<div>").attr({
						id: d,
						role: "tooltip"
					}).addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content " + (this.options.tooltipClass || ""));
				return a("<div>").addClass("ui-tooltip-content").appendTo(e), e.appendTo(this.document[0].body), this.tooltips[d] = c, e
			},
			_find: function(b) {
				var c = b.data("ui-tooltip-id");
				return c ? a("#" + c) : a()
			},
			_removeTooltip: function(a) {
				a.remove(), delete this.tooltips[a.attr("id")]
			},
			_destroy: function() {
				var b = this;
				a.each(this.tooltips, function(c, d) {
					var e = a.Event("blur");
					e.target = e.currentTarget = d[0], b.close(e, !0), a("#" + c).remove(), d.data("ui-tooltip-title") && (d.attr("title", d.data("ui-tooltip-title")), d.removeData("ui-tooltip-title"))
				})
			}
		})
	}(jQuery);
(function(r, G, f, v) {
	var J = f("html"),
		n = f(r),
		p = f(G),
		b = f.fancybox = function() {
			b.open.apply(this, arguments)
		},
		I = navigator.userAgent.match(/msie/i),
		B = null,
		s = G.createTouch !== v,
		t = function(a) {
			return a && a.hasOwnProperty && a instanceof f
		},
		q = function(a) {
			return a && "string" === f.type(a)
		},
		E = function(a) {
			return q(a) && 0 < a.indexOf("%")
		},
		l = function(a, d) {
			var e = parseInt(a, 10) || 0;
			d && E(a) && (e *= b.getViewport()[d] / 100);
			return Math.ceil(e)
		},
		w = function(a, b) {
			return l(a, b) + "px"
		};
	f.extend(b, {
		version: "2.1.5",
		defaults: {
			padding: 15,
			margin: 20,
			width: 800,
			height: 600,
			minWidth: 100,
			minHeight: 100,
			maxWidth: 9999,
			maxHeight: 9999,
			pixelRatio: 1,
			autoSize: !0,
			autoHeight: !1,
			autoWidth: !1,
			autoResize: !0,
			autoCenter: !s,
			fitToView: !0,
			aspectRatio: !1,
			topRatio: 0.5,
			leftRatio: 0.5,
			scrolling: "auto",
			wrapCSS: "",
			arrows: !0,
			closeBtn: !0,
			closeClick: !1,
			nextClick: !1,
			mouseWheel: !0,
			autoPlay: !1,
			playSpeed: 3E3,
			preload: 3,
			modal: !1,
			loop: !0,
			ajax: {
				dataType: "html",
				headers: {
					"X-fancyBox": !0
				}
			},
			iframe: {
				scrolling: "auto",
				preload: !0
			},
			swf: {
				wmode: "transparent",
				allowfullscreen: "true",
				allowscriptaccess: "always"
			},
			keys: {
				next: {
					13: "left",
					34: "up",
					39: "left",
					40: "up"
				},
				prev: {
					8: "right",
					33: "down",
					37: "right",
					38: "down"
				},
				close: [27],
				play: [32],
				toggle: [70]
			},
			direction: {
				next: "left",
				prev: "right"
			},
			scrollOutside: !0,
			index: 0,
			type: null,
			href: null,
			content: null,
			title: null,
			tpl: {
				wrap: '<div class="fancybox-wrap" tabIndex="-1"><div class="fancybox-skin"><div class="fancybox-outer"><div class="fancybox-inner"></div></div></div></div>',
				image: '<img class="fancybox-image" src="{href}" alt="" />',
				iframe: '<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen' + (I ? ' allowtransparency="true"' : "") + "></iframe>",
				error: '<p class="fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>',
				closeBtn: '<a title="Close" class="fancybox-item fancybox-close" href="javascript:;"></a>',
				next: '<a title="Next" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',
				prev: '<a title="Previous" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'
			},
			openEffect: "fade",
			openSpeed: 250,
			openEasing: "swing",
			openOpacity: !0,
			openMethod: "zoomIn",
			closeEffect: "fade",
			closeSpeed: 250,
			closeEasing: "swing",
			closeOpacity: !0,
			closeMethod: "zoomOut",
			nextEffect: "elastic",
			nextSpeed: 250,
			nextEasing: "swing",
			nextMethod: "changeIn",
			prevEffect: "elastic",
			prevSpeed: 250,
			prevEasing: "swing",
			prevMethod: "changeOut",
			helpers: {
				overlay: !0,
				title: !0
			},
			onCancel: f.noop,
			beforeLoad: f.noop,
			afterLoad: f.noop,
			beforeShow: f.noop,
			afterShow: f.noop,
			beforeChange: f.noop,
			beforeClose: f.noop,
			afterClose: f.noop
		},
		group: {},
		opts: {},
		previous: null,
		coming: null,
		current: null,
		isActive: !1,
		isOpen: !1,
		isOpened: !1,
		wrap: null,
		skin: null,
		outer: null,
		inner: null,
		player: {
			timer: null,
			isActive: !1
		},
		ajaxLoad: null,
		imgPreload: null,
		transitions: {},
		helpers: {},
		open: function(a, d) {
			if (a && (f.isPlainObject(d) || (d = {}), !1 !== b.close(!0))) return f.isArray(a) || (a = t(a) ? f(a).get() : [a]), f.each(a, function(e, c) {
				var k = {},
					g, h, j, m, l;
				"object" === f.type(c) && (c.nodeType && (c = f(c)), t(c) ? (k = {
					href: c.data("fancybox-href") || c.attr("href"),
					title: c.data("fancybox-title") || c.attr("title"),
					isDom: !0,
					element: c
				}, f.metadata && f.extend(!0, k, c.metadata())) : k = c);
				g = d.href || k.href || (q(c) ? c : null);
				h = d.title !== v ? d.title : k.title || "";
				m = (j = d.content || k.content) ? "html" : d.type || k.type;
				!m && k.isDom && (m = c.data("fancybox-type"), m || (m = (m = c.prop("class").match(/fancybox\.(\w+)/)) ? m[1] : null));
				q(g) && (m || (b.isImage(g) ? m = "image" : b.isSWF(g) ? m = "swf" : "#" === g.charAt(0) ? m = "inline" : q(c) && (m = "html", j = c)), "ajax" === m && (l = g.split(/\s+/, 2), g = l.shift(), l = l.shift()));
				j || ("inline" === m ? g ? j = f(q(g) ? g.replace(/.*(?=#[^\s]+$)/, "") : g) : k.isDom && (j = c) : "html" === m ? j = g : !m && (!g && k.isDom) && (m = "inline", j = c));
				f.extend(k, {
					href: g,
					type: m,
					content: j,
					title: h,
					selector: l
				});
				a[e] = k
			}), b.opts = f.extend(!0, {}, b.defaults, d), d.keys !== v && (b.opts.keys = d.keys ? f.extend({}, b.defaults.keys, d.keys) : !1), b.group = a, b._start(b.opts.index)
		},
		cancel: function() {
			var a = b.coming;
			a && !1 !== b.trigger("onCancel") && (b.hideLoading(), b.ajaxLoad && b.ajaxLoad.abort(), b.ajaxLoad = null, b.imgPreload && (b.imgPreload.onload = b.imgPreload.onerror = null), a.wrap && a.wrap.stop(!0, !0).trigger("onReset").remove(), b.coming = null, b.current || b._afterZoomOut(a))
		},
		close: function(a) {
			b.cancel();
			!1 !== b.trigger("beforeClose") && (b.unbindEvents(), b.isActive && (!b.isOpen || !0 === a ? (f(".fancybox-wrap").stop(!0).trigger("onReset").remove(), b._afterZoomOut()) : (b.isOpen = b.isOpened = !1, b.isClosing = !0, f(".fancybox-item, .fancybox-nav").remove(), b.wrap.stop(!0, !0).removeClass("fancybox-opened"), b.transitions[b.current.closeMethod]())))
		},
		play: function(a) {
			var d = function() {
					clearTimeout(b.player.timer)
				},
				e = function() {
					d();
					b.current && b.player.isActive && (b.player.timer = setTimeout(b.next, b.current.playSpeed))
				},
				c = function() {
					d();
					p.unbind(".player");
					b.player.isActive = !1;
					b.trigger("onPlayEnd")
				};
			if (!0 === a || !b.player.isActive && !1 !== a) {
				if (b.current && (b.current.loop || b.current.index < b.group.length - 1)) b.player.isActive = !0, p.bind({
					"onCancel.player beforeClose.player": c,
					"onUpdate.player": e,
					"beforeLoad.player": d
				}), e(), b.trigger("onPlayStart")
			} else c()
		},
		next: function(a) {
			var d = b.current;
			d && (q(a) || (a = d.direction.next), b.jumpto(d.index + 1, a, "next"))
		},
		prev: function(a) {
			var d = b.current;
			d && (q(a) || (a = d.direction.prev), b.jumpto(d.index - 1, a, "prev"))
		},
		jumpto: function(a, d, e) {
			var c = b.current;
			c && (a = l(a), b.direction = d || c.direction[a >= c.index ? "next" : "prev"], b.router = e || "jumpto", c.loop && (0 > a && (a = c.group.length + a % c.group.length), a %= c.group.length), c.group[a] !== v && (b.cancel(), b._start(a)))
		},
		reposition: function(a, d) {
			var e = b.current,
				c = e ? e.wrap : null,
				k;
			c && (k = b._getPosition(d), a && "scroll" === a.type ? (delete k.position, c.stop(!0, !0).animate(k, 200)) : (c.css(k), e.pos = f.extend({}, e.dim, k)))
		},
		update: function(a) {
			var d = a && a.type,
				e = !d || "orientationchange" === d;
			e && (clearTimeout(B), B = null);
			b.isOpen && !B && (B = setTimeout(function() {
				var c = b.current;
				c && !b.isClosing && (b.wrap.removeClass("fancybox-tmp"), (e || "load" === d || "resize" === d && c.autoResize) && b._setDimension(), "scroll" === d && c.canShrink || b.reposition(a), b.trigger("onUpdate"), B = null)
			}, e && !s ? 0 : 300))
		},
		toggle: function(a) {
			b.isOpen && (b.current.fitToView = "boolean" === f.type(a) ? a : !b.current.fitToView, s && (b.wrap.removeAttr("style").addClass("fancybox-tmp"), b.trigger("onUpdate")), b.update())
		},
		hideLoading: function() {
			p.unbind(".loading");
			f("#fancybox-loading").remove()
		},
		showLoading: function() {
			var a, d;
			b.hideLoading();
			a = f('<div id="fancybox-loading"><div></div></div>').click(b.cancel).appendTo("body");
			p.bind("keydown.loading", function(a) {
				if (27 === (a.which || a.keyCode)) a.preventDefault(), b.cancel()
			});
			b.defaults.fixed || (d = b.getViewport(), a.css({
				position: "absolute",
				top: 0.5 * d.h + d.y,
				left: 0.5 * d.w + d.x
			}))
		},
		getViewport: function() {
			var a = b.current && b.current.locked || !1,
				d = {
					x: n.scrollLeft(),
					y: n.scrollTop()
				};
			a ? (d.w = a[0].clientWidth, d.h = a[0].clientHeight) : (d.w = s && r.innerWidth ? r.innerWidth : n.width(), d.h = s && r.innerHeight ? r.innerHeight : n.height());
			return d
		},
		unbindEvents: function() {
			b.wrap && t(b.wrap) && b.wrap.unbind(".fb");
			p.unbind(".fb");
			n.unbind(".fb")
		},
		bindEvents: function() {
			var a = b.current,
				d;
			a && (n.bind("orientationchange.fb" + (s ? "" : " resize.fb") + (a.autoCenter && !a.locked ? " scroll.fb" : ""), b.update), (d = a.keys) && p.bind("keydown.fb", function(e) {
				var c = e.which || e.keyCode,
					k = e.target || e.srcElement;
				if (27 === c && b.coming) return !1;
				!e.ctrlKey && (!e.altKey && !e.shiftKey && !e.metaKey && (!k || !k.type && !f(k).is("[contenteditable]"))) && f.each(d, function(d, k) {
					if (1 < a.group.length && k[c] !== v) return b[d](k[c]), e.preventDefault(), !1;
					if (-1 < f.inArray(c, k)) return b[d](), e.preventDefault(), !1
				})
			}), f.fn.mousewheel && a.mouseWheel && b.wrap.bind("mousewheel.fb", function(d, c, k, g) {
				for (var h = f(d.target || null), j = !1; h.length && !j && !h.is(".fancybox-skin") && !h.is(".fancybox-wrap");) j = h[0] && !(h[0].style.overflow && "hidden" === h[0].style.overflow) && (h[0].clientWidth && h[0].scrollWidth > h[0].clientWidth || h[0].clientHeight && h[0].scrollHeight > h[0].clientHeight), h = f(h).parent();
				if (0 !== c && !j && 1 < b.group.length && !a.canShrink) {
					if (0 < g || 0 < k) b.prev(0 < g ? "down" : "left");
					else if (0 > g || 0 > k) b.next(0 > g ? "up" : "right");
					d.preventDefault()
				}
			}))
		},
		trigger: function(a, d) {
			var e, c = d || b.coming || b.current;
			if (c) {
				f.isFunction(c[a]) && (e = c[a].apply(c, Array.prototype.slice.call(arguments, 1)));
				if (!1 === e) return !1;
				c.helpers && f.each(c.helpers, function(d, e) {
					if (e && b.helpers[d] && f.isFunction(b.helpers[d][a])) b.helpers[d][a](f.extend(!0, {}, b.helpers[d].defaults, e), c)
				});
				p.trigger(a)
			}
		},
		isImage: function(a) {
			return q(a) && a.match(/(^data:image\/.*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg)((\?|#).*)?$)/i)
		},
		isSWF: function(a) {
			return q(a) && a.match(/\.(swf)((\?|#).*)?$/i)
		},
		_start: function(a) {
			var d = {},
				e, c;
			a = l(a);
			e = b.group[a] || null;
			if (!e) return !1;
			d = f.extend(!0, {}, b.opts, e);
			e = d.margin;
			c = d.padding;
			"number" === f.type(e) && (d.margin = [e, e, e, e]);
			"number" === f.type(c) && (d.padding = [c, c, c, c]);
			d.modal && f.extend(!0, d, {
				closeBtn: !1,
				closeClick: !1,
				nextClick: !1,
				arrows: !1,
				mouseWheel: !1,
				keys: null,
				helpers: {
					overlay: {
						closeClick: !1
					}
				}
			});
			d.autoSize && (d.autoWidth = d.autoHeight = !0);
			"auto" === d.width && (d.autoWidth = !0);
			"auto" === d.height && (d.autoHeight = !0);
			d.group = b.group;
			d.index = a;
			b.coming = d;
			if (!1 === b.trigger("beforeLoad")) b.coming = null;
			else {
				c = d.type;
				e = d.href;
				if (!c) return b.coming = null, b.current && b.router && "jumpto" !== b.router ? (b.current.index = a, b[b.router](b.direction)) : !1;
				b.isActive = !0;
				if ("image" === c || "swf" === c) d.autoHeight = d.autoWidth = !1, d.scrolling = "visible";
				"image" === c && (d.aspectRatio = !0);
				"iframe" === c && s && (d.scrolling = "scroll");
				d.wrap = f(d.tpl.wrap).addClass("fancybox-" + (s ? "mobile" : "desktop") + " fancybox-type-" + c + " fancybox-tmp " + d.wrapCSS).appendTo(d.parent || "body");
				f.extend(d, {
					skin: f(".fancybox-skin", d.wrap),
					outer: f(".fancybox-outer", d.wrap),
					inner: f(".fancybox-inner", d.wrap)
				});
				f.each(["Top", "Right", "Bottom", "Left"], function(a, b) {
					d.skin.css("padding" + b, w(d.padding[a]))
				});
				b.trigger("onReady");
				if ("inline" === c || "html" === c) {
					if (!d.content || !d.content.length) return b._error("content")
				} else if (!e) return b._error("href");
				"image" === c ? b._loadImage() : "ajax" === c ? b._loadAjax() : "iframe" === c ? b._loadIframe() : b._afterLoad()
			}
		},
		_error: function(a) {
			f.extend(b.coming, {
				type: "html",
				autoWidth: !0,
				autoHeight: !0,
				minWidth: 0,
				minHeight: 0,
				scrolling: "no",
				hasError: a,
				content: b.coming.tpl.error
			});
			b._afterLoad()
		},
		_loadImage: function() {
			var a = b.imgPreload = new Image;
			a.onload = function() {
				this.onload = this.onerror = null;
				b.coming.width = this.width / b.opts.pixelRatio;
				b.coming.height = this.height / b.opts.pixelRatio;
				b._afterLoad()
			};
			a.onerror = function() {
				this.onload = this.onerror = null;
				b._error("image")
			};
			a.src = b.coming.href;
			!0 !== a.complete && b.showLoading()
		},
		_loadAjax: function() {
			var a = b.coming;
			b.showLoading();
			b.ajaxLoad = f.ajax(f.extend({}, a.ajax, {
				url: a.href,
				error: function(a, e) {
					b.coming && "abort" !== e ? b._error("ajax", a) : b.hideLoading()
				},
				success: function(d, e) {
					"success" === e && (a.content = d, b._afterLoad())
				}
			}))
		},
		_loadIframe: function() {
			var a = b.coming,
				d = f(a.tpl.iframe.replace(/\{rnd\}/g, (new Date).getTime())).attr("scrolling", s ? "auto" : a.iframe.scrolling).attr("src", a.href);
			f(a.wrap).bind("onReset", function() {
				try {
					f(this).find("iframe").hide().attr("src", "//about:blank").end().empty()
				} catch (a) {}
			});
			a.iframe.preload && (b.showLoading(), d.one("load", function() {
				f(this).data("ready", 1);
				s || f(this).bind("load.fb", b.update);
				f(this).parents(".fancybox-wrap").width("100%").removeClass("fancybox-tmp").show();
				b._afterLoad()
			}));
			a.content = d.appendTo(a.inner);
			a.iframe.preload || b._afterLoad()
		},
		_preloadImages: function() {
			var a = b.group,
				d = b.current,
				e = a.length,
				c = d.preload ? Math.min(d.preload, e - 1) : 0,
				f, g;
			for (g = 1; g <= c; g += 1) f = a[(d.index + g) % e], "image" === f.type && f.href && ((new Image).src = f.href)
		},
		_afterLoad: function() {
			var a = b.coming,
				d = b.current,
				e, c, k, g, h;
			b.hideLoading();
			if (a && !1 !== b.isActive)
				if (!1 === b.trigger("afterLoad", a, d)) a.wrap.stop(!0).trigger("onReset").remove(), b.coming = null;
				else {
					d && (b.trigger("beforeChange", d), d.wrap.stop(!0).removeClass("fancybox-opened").find(".fancybox-item, .fancybox-nav").remove());
					b.unbindEvents();
					e = a.content;
					c = a.type;
					k = a.scrolling;
					f.extend(b, {
						wrap: a.wrap,
						skin: a.skin,
						outer: a.outer,
						inner: a.inner,
						current: a,
						previous: d
					});
					g = a.href;
					switch (c) {
						case "inline":
						case "ajax":
						case "html":
							a.selector ? e = f("<div>").html(e).find(a.selector) : t(e) && (e.data("fancybox-placeholder") || e.data("fancybox-placeholder", f('<div class="fancybox-placeholder"></div>').insertAfter(e).hide()), e = e.show().detach(), a.wrap.bind("onReset", function() {
								f(this).find(e).length && e.hide().replaceAll(e.data("fancybox-placeholder")).data("fancybox-placeholder", !1)
							}));
							break;
						case "image":
							e = a.tpl.image.replace("{href}", g);
							break;
						case "swf":
							e = '<object id="fancybox-swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="movie" value="' + g + '"></param>', h = "", f.each(a.swf, function(a, b) {
								e += '<param name="' + a + '" value="' + b + '"></param>';
								h += " " + a + '="' + b + '"'
							}), e += '<embed src="' + g + '" type="application/x-shockwave-flash" width="100%" height="100%"' + h + "></embed></object>"
					}(!t(e) || !e.parent().is(a.inner)) && a.inner.append(e);
					b.trigger("beforeShow");
					a.inner.css("overflow", "yes" === k ? "scroll" : "no" === k ? "hidden" : k);
					b._setDimension();
					b.reposition();
					b.isOpen = !1;
					b.coming = null;
					b.bindEvents();
					if (b.isOpened) {
						if (d.prevMethod) b.transitions[d.prevMethod]()
					} else f(".fancybox-wrap").not(a.wrap).stop(!0).trigger("onReset").remove();
					b.transitions[b.isOpened ? a.nextMethod : a.openMethod]();
					b._preloadImages()
				}
		},
		_setDimension: function() {
			var a = b.getViewport(),
				d = 0,
				e = !1,
				c = !1,
				e = b.wrap,
				k = b.skin,
				g = b.inner,
				h = b.current,
				c = h.width,
				j = h.height,
				m = h.minWidth,
				u = h.minHeight,
				n = h.maxWidth,
				p = h.maxHeight,
				s = h.scrolling,
				q = h.scrollOutside ? h.scrollbarWidth : 0,
				x = h.margin,
				y = l(x[1] + x[3]),
				r = l(x[0] + x[2]),
				v, z, t, C, A, F, B, D, H;
			e.add(k).add(g).width("auto").height("auto").removeClass("fancybox-tmp");
			x = l(k.outerWidth(!0) - k.width());
			v = l(k.outerHeight(!0) - k.height());
			z = y + x;
			t = r + v;
			C = E(c) ? (a.w - z) * l(c) / 100 : c;
			A = E(j) ? (a.h - t) * l(j) / 100 : j;
			if ("iframe" === h.type) {
				if (H = h.content, h.autoHeight && 1 === H.data("ready")) try {
					H[0].contentWindow.document.location && (g.width(C).height(9999), F = H.contents().find("body"), q && F.css("overflow-x", "hidden"), A = F.outerHeight(!0))
				} catch (G) {}
			} else if (h.autoWidth || h.autoHeight) g.addClass("fancybox-tmp"), h.autoWidth || g.width(C), h.autoHeight || g.height(A), h.autoWidth && (C = g.width()), h.autoHeight && (A = g.height()), g.removeClass("fancybox-tmp");
			c = l(C);
			j = l(A);
			D = C / A;
			m = l(E(m) ? l(m, "w") - z : m);
			n = l(E(n) ? l(n, "w") - z : n);
			u = l(E(u) ? l(u, "h") - t : u);
			p = l(E(p) ? l(p, "h") - t : p);
			F = n;
			B = p;
			h.fitToView && (n = Math.min(a.w - z, n), p = Math.min(a.h - t, p));
			z = a.w - y;
			r = a.h - r;
			h.aspectRatio ? (c > n && (c = n, j = l(c / D)), j > p && (j = p, c = l(j * D)), c < m && (c = m, j = l(c / D)), j < u && (j = u, c = l(j * D))) : (c = Math.max(m, Math.min(c, n)), h.autoHeight && "iframe" !== h.type && (g.width(c), j = g.height()), j = Math.max(u, Math.min(j, p)));
			if (h.fitToView)
				if (g.width(c).height(j), e.width(c + x), a = e.width(), y = e.height(), h.aspectRatio)
					for (;
						(a > z || y > r) && (c > m && j > u) && !(19 < d++);) j = Math.max(u, Math.min(p, j - 10)), c = l(j * D), c < m && (c = m, j = l(c / D)), c > n && (c = n, j = l(c / D)), g.width(c).height(j), e.width(c + x), a = e.width(), y = e.height();
				else c = Math.max(m, Math.min(c, c - (a - z))), j = Math.max(u, Math.min(j, j - (y - r)));
			q && ("auto" === s && j < A && c + x + q < z) && (c += q);
			g.width(c).height(j);
			e.width(c + x);
			a = e.width();
			y = e.height();
			e = (a > z || y > r) && c > m && j > u;
			c = h.aspectRatio ? c < F && j < B && c < C && j < A : (c < F || j < B) && (c < C || j < A);
			f.extend(h, {
				dim: {
					width: w(a),
					height: w(y)
				},
				origWidth: C,
				origHeight: A,
				canShrink: e,
				canExpand: c,
				wPadding: x,
				hPadding: v,
				wrapSpace: y - k.outerHeight(!0),
				skinSpace: k.height() - j
			});
			!H && (h.autoHeight && j > u && j < p && !c) && g.height("auto")
		},
		_getPosition: function(a) {
			var d = b.current,
				e = b.getViewport(),
				c = d.margin,
				f = b.wrap.width() + c[1] + c[3],
				g = b.wrap.height() + c[0] + c[2],
				c = {
					position: "absolute",
					top: c[0],
					left: c[3]
				};
			d.autoCenter && d.fixed && !a && g <= e.h && f <= e.w ? c.position = "fixed" : d.locked || (c.top += e.y, c.left += e.x);
			c.top = w(Math.max(c.top, c.top + (e.h - g) * d.topRatio));
			c.left = w(Math.max(c.left, c.left + (e.w - f) * d.leftRatio));
			return c
		},
		_afterZoomIn: function() {
			var a = b.current;
			a && (b.isOpen = b.isOpened = !0, b.wrap.css("overflow", "visible").addClass("fancybox-opened"), b.update(), (a.closeClick || a.nextClick && 1 < b.group.length) && b.inner.css("cursor", "pointer").bind("click.fb", function(d) {
				!f(d.target).is("a") && !f(d.target).parent().is("a") && (d.preventDefault(), b[a.closeClick ? "close" : "next"]())
			}), a.closeBtn && f(a.tpl.closeBtn).appendTo(b.skin).bind("click.fb", function(a) {
				a.preventDefault();
				b.close()
			}), a.arrows && 1 < b.group.length && ((a.loop || 0 < a.index) && f(a.tpl.prev).appendTo(b.outer).bind("click.fb", b.prev), (a.loop || a.index < b.group.length - 1) && f(a.tpl.next).appendTo(b.outer).bind("click.fb", b.next)), b.trigger("afterShow"), !a.loop && a.index === a.group.length - 1 ? b.play(!1) : b.opts.autoPlay && !b.player.isActive && (b.opts.autoPlay = !1, b.play()))
		},
		_afterZoomOut: function(a) {
			a = a || b.current;
			f(".fancybox-wrap").trigger("onReset").remove();
			f.extend(b, {
				group: {},
				opts: {},
				router: !1,
				current: null,
				isActive: !1,
				isOpened: !1,
				isOpen: !1,
				isClosing: !1,
				wrap: null,
				skin: null,
				outer: null,
				inner: null
			});
			b.trigger("afterClose", a)
		}
	});
	b.transitions = {
		getOrigPosition: function() {
			var a = b.current,
				d = a.element,
				e = a.orig,
				c = {},
				f = 50,
				g = 50,
				h = a.hPadding,
				j = a.wPadding,
				m = b.getViewport();
			!e && (a.isDom && d.is(":visible")) && (e = d.find("img:first"), e.length || (e = d));
			t(e) ? (c = e.offset(), e.is("img") && (f = e.outerWidth(), g = e.outerHeight())) : (c.top = m.y + (m.h - g) * a.topRatio, c.left = m.x + (m.w - f) * a.leftRatio);
			if ("fixed" === b.wrap.css("position") || a.locked) c.top -= m.y, c.left -= m.x;
			return c = {
				top: w(c.top - h * a.topRatio),
				left: w(c.left - j * a.leftRatio),
				width: w(f + j),
				height: w(g + h)
			}
		},
		step: function(a, d) {
			var e, c, f = d.prop;
			c = b.current;
			var g = c.wrapSpace,
				h = c.skinSpace;
			if ("width" === f || "height" === f) e = d.end === d.start ? 1 : (a - d.start) / (d.end - d.start), b.isClosing && (e = 1 - e), c = "width" === f ? c.wPadding : c.hPadding, c = a - c, b.skin[f](l("width" === f ? c : c - g * e)), b.inner[f](l("width" === f ? c : c - g * e - h * e))
		},
		zoomIn: function() {
			var a = b.current,
				d = a.pos,
				e = a.openEffect,
				c = "elastic" === e,
				k = f.extend({
					opacity: 1
				}, d);
			delete k.position;
			c ? (d = this.getOrigPosition(), a.openOpacity && (d.opacity = 0.1)) : "fade" === e && (d.opacity = 0.1);
			b.wrap.css(d).animate(k, {
				duration: "none" === e ? 0 : a.openSpeed,
				easing: a.openEasing,
				step: c ? this.step : null,
				complete: b._afterZoomIn
			})
		},
		zoomOut: function() {
			var a = b.current,
				d = a.closeEffect,
				e = "elastic" === d,
				c = {
					opacity: 0.1
				};
			e && (c = this.getOrigPosition(), a.closeOpacity && (c.opacity = 0.1));
			b.wrap.animate(c, {
				duration: "none" === d ? 0 : a.closeSpeed,
				easing: a.closeEasing,
				step: e ? this.step : null,
				complete: b._afterZoomOut
			})
		},
		changeIn: function() {
			var a = b.current,
				d = a.nextEffect,
				e = a.pos,
				c = {
					opacity: 1
				},
				f = b.direction,
				g;
			e.opacity = 0.1;
			"elastic" === d && (g = "down" === f || "up" === f ? "top" : "left", "down" === f || "right" === f ? (e[g] = w(l(e[g]) - 200), c[g] = "+=200px") : (e[g] = w(l(e[g]) + 200), c[g] = "-=200px"));
			"none" === d ? b._afterZoomIn() : b.wrap.css(e).animate(c, {
				duration: a.nextSpeed,
				easing: a.nextEasing,
				complete: b._afterZoomIn
			})
		},
		changeOut: function() {
			var a = b.previous,
				d = a.prevEffect,
				e = {
					opacity: 0.1
				},
				c = b.direction;
			"elastic" === d && (e["down" === c || "up" === c ? "top" : "left"] = ("up" === c || "left" === c ? "-" : "+") + "=200px");
			a.wrap.animate(e, {
				duration: "none" === d ? 0 : a.prevSpeed,
				easing: a.prevEasing,
				complete: function() {
					f(this).trigger("onReset").remove()
				}
			})
		}
	};
	b.helpers.overlay = {
		defaults: {
			closeClick: !0,
			speedOut: 200,
			showEarly: !0,
			css: {},
			locked: !s,
			fixed: !0
		},
		overlay: null,
		fixed: !1,
		el: f("html"),
		create: function(a) {
			a = f.extend({}, this.defaults, a);
			this.overlay && this.close();
			this.overlay = f('<div class="fancybox-overlay"></div>').appendTo(b.coming ? b.coming.parent : a.parent);
			this.fixed = !1;
			a.fixed && b.defaults.fixed && (this.overlay.addClass("fancybox-overlay-fixed"), this.fixed = !0)
		},
		open: function(a) {
			var d = this;
			a = f.extend({}, this.defaults, a);
			this.overlay ? this.overlay.unbind(".overlay").width("auto").height("auto") : this.create(a);
			this.fixed || (n.bind("resize.overlay", f.proxy(this.update, this)), this.update());
			a.closeClick && this.overlay.bind("click.overlay", function(a) {
				if (f(a.target).hasClass("fancybox-overlay")) return b.isActive ? b.close() : d.close(), !1
			});
			this.overlay.css(a.css).show()
		},
		close: function() {
			var a, b;
			n.unbind("resize.overlay");
			this.el.hasClass("fancybox-lock") && (f(".fancybox-margin").removeClass("fancybox-margin"), a = n.scrollTop(), b = n.scrollLeft(), this.el.removeClass("fancybox-lock"), n.scrollTop(a).scrollLeft(b));
			f(".fancybox-overlay").remove().hide();
			f.extend(this, {
				overlay: null,
				fixed: !1
			})
		},
		update: function() {
			var a = "100%",
				b;
			this.overlay.width(a).height("100%");
			I ? (b = Math.max(G.documentElement.offsetWidth, G.body.offsetWidth), p.width() > b && (a = p.width())) : p.width() > n.width() && (a = p.width());
			this.overlay.width(a).height(p.height())
		},
		onReady: function(a, b) {
			var e = this.overlay;
			f(".fancybox-overlay").stop(!0, !0);
			e || this.create(a);
			a.locked && (this.fixed && b.fixed) && (e || (this.margin = p.height() > n.height() ? f("html").css("margin-right").replace("px", "") : !1), b.locked = this.overlay.append(b.wrap), b.fixed = !1);
			!0 === a.showEarly && this.beforeShow.apply(this, arguments)
		},
		beforeShow: function(a, b) {
			var e, c;
			b.locked && (!1 !== this.margin && (f("*").filter(function() {
				return "fixed" === f(this).css("position") && !f(this).hasClass("fancybox-overlay") && !f(this).hasClass("fancybox-wrap")
			}).addClass("fancybox-margin"), this.el.addClass("fancybox-margin")), e = n.scrollTop(), c = n.scrollLeft(), this.el.addClass("fancybox-lock"), n.scrollTop(e).scrollLeft(c));
			this.open(a)
		},
		onUpdate: function() {
			this.fixed || this.update()
		},
		afterClose: function(a) {
			this.overlay && !b.coming && this.overlay.fadeOut(a.speedOut, f.proxy(this.close, this))
		}
	};
	b.helpers.title = {
		defaults: {
			type: "float",
			position: "bottom"
		},
		beforeShow: function(a) {
			var d = b.current,
				e = d.title,
				c = a.type;
			f.isFunction(e) && (e = e.call(d.element, d));
			if (q(e) && "" !== f.trim(e)) {
				d = f('<div class="fancybox-title fancybox-title-' + c + '-wrap">' + e + "</div>");
				switch (c) {
					case "inside":
						c = b.skin;
						break;
					case "outside":
						c = b.wrap;
						break;
					case "over":
						c = b.inner;
						break;
					default:
						c = b.skin, d.appendTo("body"), I && d.width(d.width()), d.wrapInner('<span class="child"></span>'), b.current.margin[2] += Math.abs(l(d.css("margin-bottom")))
				}
				d["top" === a.position ? "prependTo" : "appendTo"](c)
			}
		}
	};
	f.fn.fancybox = function(a) {
		var d, e = f(this),
			c = this.selector || "",
			k = function(g) {
				var h = f(this).blur(),
					j = d,
					k, l;
				!g.ctrlKey && (!g.altKey && !g.shiftKey && !g.metaKey) && !h.is(".fancybox-wrap") && (k = a.groupAttr || "data-fancybox-group", l = h.attr(k), l || (k = "rel", l = h.get(0)[k]), l && ("" !== l && "nofollow" !== l) && (h = c.length ? f(c) : e, h = h.filter("[" + k + '="' + l + '"]'), j = h.index(this)), a.index = j, !1 !== b.open(h, a) && g.preventDefault())
			};
		a = a || {};
		d = a.index || 0;
		!c || !1 === a.live ? e.unbind("click.fb-start").bind("click.fb-start", k) : p.undelegate(c, "click.fb-start").delegate(c + ":not('.fancybox-item, .fancybox-nav')", "click.fb-start", k);
		this.filter("[data-fancybox-start=1]").trigger("click");
		return this
	};
	p.ready(function() {
		var a, d;
		f.scrollbarWidth === v && (f.scrollbarWidth = function() {
			var a = f('<div style="width:50px;height:50px;overflow:auto"><div/></div>').appendTo("body"),
				b = a.children(),
				b = b.innerWidth() - b.height(99).innerWidth();
			a.remove();
			return b
		});
		if (f.support.fixedPosition === v) {
			a = f.support;
			d = f('<div style="position:fixed;top:20px;"></div>').appendTo("body");
			var e = 20 === d[0].offsetTop || 15 === d[0].offsetTop;
			d.remove();
			a.fixedPosition = e
		}
		f.extend(b.defaults, {
			scrollbarWidth: f.scrollbarWidth(),
			fixed: f.support.fixedPosition,
			parent: f("body")
		});
		a = f(r).width();
		J.addClass("fancybox-lock-test");
		d = f(r).width();
		J.removeClass("fancybox-lock-test");
		f("<style type='text/css'>.fancybox-margin{margin-right:" + (d - a) + "px;}</style>").appendTo("head")
	})
})(window, document, jQuery);
(function($) {
	$.cookie = function(key, value, options) {
		if (arguments.length > 1 && (!/Object/.test(Object.prototype.toString.call(value)) || value === null || value === undefined)) {
			options = $.extend({}, options);
			if (value === null || value === undefined) {
				options.expires = -1
			}
			if (typeof options.expires === 'number') {
				var days = options.expires,
					t = options.expires = new Date();
				t.setDate(t.getDate() + days)
			}
			value = String(value);
			return (document.cookie = [encodeURIComponent(key), '=', options.raw ? value : encodeURIComponent(value), options.expires ? '; expires=' + options.expires.toUTCString() : '', options.path ? '; path=' + options.path : '', options.domain ? '; domain=' + options.domain : '', options.secure ? '; secure' : ''].join(''))
		}
		options = value || {};
		var decode = options.raw ? function(s) {
			return s
		} : decodeURIComponent;
		var pairs = document.cookie.split('; ');
		for (var i = 0, pair; pair = pairs[i] && pairs[i].split('='); i++) {
			if (decode(pair[0]) === key) return decode(pair[1] || '')
		}
		return null
	}
})(jQuery);
$(document).ready(function() {
	var $searchWidget = $('#search_widget');
	var $searchBox = $searchWidget.find('input[type=text]');
	var searchURL = $searchWidget.attr('data-search-controller-url');
	$.widget('prestashop.psBlockSearchAutocomplete', $.ui.autocomplete, {
		_renderItem: function(ul, product) {
			return $("<li>").append($("<a>").append($("<span>").html(product.category_name).addClass("category")).append($("<span>").html(' > ').addClass("separator")).append($("<span>").html(product.name).addClass("product"))).appendTo(ul)
		}
	});
	$searchBox.psBlockSearchAutocomplete({
		source: function(query, response) {
			$.get(searchURL, {
				s: query.term,
				resultsPerPage: 10
			}, null, 'json').then(function(resp) {
					response(resp.products)
				}).fail(response)
		},
		select: function(event, ui) {
			var url = ui.item.url;
			window.location.href = url
		},
	})
});
$(document).ready(function() {
	prestashop.blockcart = prestashop.blockcart || {};
	var showModal = prestashop.blockcart.showModal || function(modal) {
		var $body = $('body');
		$body.append(modal);
		$body.one('click', '#blockcart-modal', function(event) {
			if (event.target.id === 'blockcart-modal') {
				$(event.target).remove()
			}
		})
	};
	$(document).ready(function() {
		prestashop.on('updateCart', function(event) {
			var refreshURL = $('.blockcart').data('refresh-url');
			var requestData = {};
			if (event && event.reason) {
				requestData = {
					id_product_attribute: event.reason.idProductAttribute,
					id_product: event.reason.idProduct,
					action: event.reason.linkAction
				}
			}
			$.post(refreshURL, requestData).then(function(resp) {
				$('.blockcart').parent().replaceWith(resp.preview);
				if (resp.modal) {
					showModal(resp.modal)
				}
			}).fail(function(resp) {
					prestashop.emit('handleError', {
						eventType: 'updateShoppingCart',
						resp: resp
					})
				})
		})
	})
});
$(document).ready(function() {
	$.each(list_menu, function(index, value) {
		if (value.type == "horizontal") {
			var megamenu_element = $('.cavas_menu[data-megamenu-id=' + value.id + ']');
			if ($("body").attr("id") == "index") isHomeMenu = 1;
			megamenu_element.find(".megamenu > li > a").each(function() {
				menuURL = $(this).attr("href").replace("https://", "").replace("http://", "").replace("www.", "").replace(/#\w*/, "");
				if ((currentURL == menuURL) || (currentURL.replace(current_link, "") == menuURL) || isHomeMenu) {
					$(this).parent().addClass("active");
					return !1
				}
			});
			if ($(window).width() <= 767) {
				set_target_blank(!1, megamenu_element)
			} else {
				set_target_blank(!0, megamenu_element)
			}
			if (value.show_cavas == 1) {
				$.fn.OffCavasmenu = function(opts) {
					var config = $.extend({}, {
						opt1: null,
						text_warning_select: text_warning_select_txt,
						text_confirm_remove: text_confirm_remove_txt,
						JSON: null
					}, opts);
					this.each(function() {
						var $btn = megamenu_element.find('.navbar-toggler');
						var $nav = null;
						if (!$btn.length)
							return;
						var $nav = $("<section class='off-canvas-nav-megamenu' data-megamenu-id=" + value.id + "><nav class='offcanvas-mainnav' ><div class='off-canvas-button-megamenu'><span class='off-canvas-nav'></span>" + close_bt_txt + "</div></nav></section>");
						var $menucontent = $($btn.data('target')).find('.megamenu').clone();
						$("body").append($nav);
						$('body main').append("<div class='megamenu-overlay' data-megamenu-id=" + value.id + "></div>");
						$(".megamenu-overlay[data-megamenu-id=" + value.id + "]").click(function() {
							$btn.trigger('click')
						});
						$(".off-canvas-nav-megamenu[data-megamenu-id=" + value.id + "] .offcanvas-mainnav").append($menucontent);
						$("html").addClass("off-canvas");
						$(".off-canvas-nav-megamenu[data-megamenu-id=" + value.id + "]").find(".off-canvas-button-megamenu").click(function() {
							off_canvas_active()
						});
						if ($btn.is(':visible')) {
							$("body").removeClass("off-canvas-active").addClass("off-canvas-inactive")
						}
						$btn.click(function() {
							$('.off-canvas-nav-megamenu').removeClass('active');
							if (!$(".off-canvas-nav-megamenu[data-megamenu-id=" + value.id + "]").hasClass('active')) {
								$(".off-canvas-nav-megamenu[data-megamenu-id=" + value.id + "]").addClass('active')
							}
							off_canvas_active()
						})
					});
					return this
				}
				megamenu_element.OffCavasmenu();
				megamenu_element.find('.navbar-toggler').click(function() {
					$('body,html').animate({
						scrollTop: 0
					}, 0);
					return !1
				});
				$(".off-canvas-nav-megamenu[data-megamenu-id=" + value.id + "]").find('.offcanvas-mainnav .caret').click(function() {
					if ($(this).parent('li').hasClass('open-sub')) {
						$(this).parent('li').find('.dropdown-menu').first().slideUp('fast', function() {});
						$(this).parent('li').removeClass('open-sub')
					} else {
						$(this).parent('li').siblings('.open-sub').find('.dropdown-menu').first().slideUp('fast');
						$(this).parent('li').siblings().removeClass('open-sub');
						$(this).parent('li').find('.dropdown-menu').first().slideDown('fast', function() {});
						$(this).parent('li').addClass('open-sub')
					}
				});
				$(window).resize(function() {
					if ($(window).width() > 991) {
						$("body").removeClass("off-canvas-active").addClass("off-canvas-inactive")
					}
				})
			} else {
				megamenu_element.find('.leo-top-menu .dropdown-toggle').removeAttr("disabled");
				megamenu_element.find(".dropdown-toggle").click(function() {
					if ($(window).width() <= 767) {
						if ($(this).parent("li").find("div:first").hasClass("level2"))
							return !1;
						else return !0
					}
				});
				megamenu_element.find(".leo-top-menu li a").each(function() {
					if ((this).hasAttribute('data-toggle')) {
						$(this).removeAttr('data-toggle')
					}
				});
				megamenu_element.find(".leo-top-menu li a.dropdown-toggle").click(function() {
					if (!$(this).parent().hasClass('open') && this.href && this.href != '#') {
						window.location.href = this.href
					}
				})
				megamenu_element.find(".leo-top-menu .caret").click(function() {
					if ($(this).parent('li').hasClass('open-sub')) {
						$(this).parent('li').find('.dropdown-menu').first().slideUp('fast');
						$(this).parent('li').removeClass('open-sub')
					} else {
						$(this).parent('li').siblings('.open-sub').find('.dropdown-menu').first().slideUp('fast');
						$(this).parent('li').siblings().removeClass('open-sub');
						$(this).parent('li').find('.dropdown-menu').first().slideDown('fast');
						$(this).parent('li').addClass('open-sub')
					}
				});
				if ($(document).width() > 543) {
					megamenu_element.find('.leo-top-menu .dropdown-menu').css('display', '')
				}
				$(window).resize(function() {
					if ($(document).width() > 543) {
						megamenu_element.find('.leo-top-menu .dropdown').removeClass('open-sub');
						megamenu_element.find('.leo-top-menu .dropdown-submenu').removeClass('open-sub');
						megamenu_element.find('.leo-top-menu .dropdown-menu').css('display', '')
					}
				})
			}
		} else {
			var megamenu_element = $('.leo-verticalmenu[data-megamenu-id=' + value.id + ']');
			megamenu_element.find('.verticalmenu .dropdown-toggle').removeAttr("disabled");
			megamenu_element.find(".verticalmenu .dropdown-toggle").click(function() {
				if ($(window).width() <= 767) {
					if ($(this).parent("li").find("div:first").hasClass("level2"))
						return !1;
					else return !0
				}
			});
			megamenu_element.find('.verticalmenu .dropdown-toggle').prop('disabled', !0);
			megamenu_element.find('.verticalmenu .dropdown-toggle').data('toggle', '');
			megamenu_element.find(".verticalmenu .caret").click(function() {
				if ($(this).parents('.verticalmenu').hasClass('active-button')) {
					var $parent = $(this).parent('li');
					if ($parent.hasClass('open-sub')) {
						$parent.find('.dropdown-menu').first().slideUp('fast', function() {
							$parent.removeClass('open-sub')
						})
					} else {
						if ($parent.siblings('.open-sub').length > 0) {
							$parent.siblings('.open-sub').find('.dropdown-menu').first().slideUp('fast', function() {
								$parent.siblings('.open-sub').removeClass('open-sub')
							});
							$parent.find('.dropdown-menu').first().slideDown('fast', function() {
								$parent.addClass('open-sub')
							})
						} else {
							$parent.find('.dropdown-menu').first().slideDown('fast', function() {
								$parent.addClass('open-sub')
							})
						}
					}
					return !1
				}
			});
			if ($(document).width() > 1199) {
				megamenu_element.find('.verticalmenu').addClass('active-hover');
				megamenu_element.find('.verticalmenu').removeClass('active-button');
				megamenu_element.find('.verticalmenu .dropdown-menu').css('display', '');
				megamenu_element.find('.leo-verticalmenu').removeClass('active')
			} else {
				megamenu_element.find('.verticalmenu').removeClass('active-hover');
				megamenu_element.find('.verticalmenu').addClass('active-button')
			}
			$(window).resize(function() {
				if ($(document).width() > 1199) {
					megamenu_element.find('.verticalmenu .dropdown').removeClass('open-sub');
					megamenu_element.find('.verticalmenu .dropdown-submenu').removeClass('open-sub');
					megamenu_element.find('.verticalmenu').addClass('active-hover');
					megamenu_element.find('.verticalmenu').removeClass('active-button');
					megamenu_element.find('.verticalmenu .dropdown-menu').css('display', '');
					megamenu_element.removeClass('active')
				} else {
					megamenu_element.find('.verticalmenu').removeClass('active-hover');
					megamenu_element.find('.verticalmenu').addClass('active-button')
				}
			});
			scrollSliderBarMenu(megamenu_element)
		}
		if (typeof value.tabhtml_id !== 'undefined') {
			megamenu_element.find('#tabhtml' + value.tabhtml_id + ' .nav a').click(function(e) {
				e.preventDefault();
				$(this).tab('show')
			})
		}
		if (typeof value.level !== 'undefined' && typeof value.limit !== 'undefined') {
			megamenu_element.find(".widget-category_image_" + value.level + " ul.level0").each(function() {
				$(this).find("ul.level" + value.level + " li").remove();
				var element = $(this).find("ul.level" + (value.level - 1) + " li").length;
				var count = 0;
				if (value.level > 0) {
					$(this).find("ul.level" + (value.level - 1) + " >li").each(function() {
						count = count + 1;
						if (count > value.limit) {
							$(this).remove()
						}
					})
				}
			})
		}
		if (value.type == "horizontal") {
			$(window).resize(function() {
				if ($(window).width() <= 767) {
					set_target_blank(!1, megamenu_element)
				} else {
					set_target_blank(!0, megamenu_element)
				}
			})
		}
		if (value.type == "horizontal" && value.show_cavas == 1) {
			$(document.body).on('click', '[data-toggle="dropdown"]', function() {
				if (!$(this).parent().hasClass('open') && this.href && this.href != '#') {
					window.location.href = this.href
				}
			})
		}
	})
	$(".fancybox").fancybox({
		openEffect: 'none',
		closeEffect: 'none'
	})
})

function off_canvas_active() {
	if ($('body').hasClass('off-canvas-active')) {
		$("body").removeClass("off-canvas-active").addClass("off-canvas-inactive")
	} else if ($('body').hasClass('off-canvas-inactive')) {
		$("body").removeClass("off-canvas-inactive").addClass("off-canvas-active")
	} else {
		$("body").addClass("off-canvas-active")
	}
}

function set_target_blank(show, megamenu_element) {
	if (show) {
		megamenu_element.find(".leo-top-menu li a").each(function() {
			if ($(this).hasClass('has-category') && (this).hasAttribute('data-toggle') && $(this).attr('target') == '_blank') {
				var value = $(this).attr('data-toggle');
				$(this).removeAttr('data-toggle');
				$(this).attr('remove-data-toggle', value)
			}
		})
	} else {
		megamenu_element.find(".leo-top-menu li a").each(function() {
			if ($(this).hasClass('has-category') && (this).hasAttribute('remove-data-toggle') && $(this).attr('target') == '_blank') {
				var value = $(this).attr('remove-data-toggle');
				$(this).removeAttr('remove-data-toggle');
				$(this).attr('data-toggle', value)
			}
		})
	}
}

function scrollSliderBarMenu(megamenu_element) {
	var menuElement = megamenu_element;
	var columnElement = null;
	var maxWindowSize = 1199;
	if ($(columnElement).length && $(window).width() >= maxWindowSize) showOrHideSliderBarMenu(columnElement, menuElement, 1);
	megamenu_element.find(".verticalmenu-button").click(function() {
		if ($(menuElement).hasClass('active')) {
			showOrHideSliderBarMenu(columnElement, menuElement, 0)
		} else {
			showOrHideSliderBarMenu(columnElement, menuElement, 1)
		}
	});
	var lastWidth = $(window).width();
	$(window).resize(function() {
		if ($(window).width() != lastWidth) {
			if ($(window).width() < maxWindowSize) {
				if ($(menuElement).hasClass('active')) showOrHideSliderBarMenu(columnElement, menuElement, 0)
			} else {
				if ($(columnElement).length && !$(menuElement).hasClass('active')) showOrHideSliderBarMenu(columnElement, menuElement, 1)
			}
			lastWidth = $(window).width()
		}
	})
}

function showOrHideSliderBarMenu(columnElement, menuElement, active) {
	if (active) {
		$(menuElement).addClass('active');
		if ($(columnElement).length && $(window).width() >= 1199)
			columnElement.css('padding-top', ($('.block_content', $(menuElement)).height()) + 'px')
	} else {
		$(menuElement).removeClass('active');
		if ($(columnElement).length) columnElement.css('padding-top', '')
	}
};
(function(r, G, f, v) {
	var J = f("html"),
		n = f(r),
		p = f(G),
		b = f.fancybox = function() {
			b.open.apply(this, arguments)
		},
		I = navigator.userAgent.match(/msie/i),
		B = null,
		s = G.createTouch !== v,
		t = function(a) {
			return a && a.hasOwnProperty && a instanceof f
		},
		q = function(a) {
			return a && "string" === f.type(a)
		},
		E = function(a) {
			return q(a) && 0 < a.indexOf("%")
		},
		l = function(a, d) {
			var e = parseInt(a, 10) || 0;
			d && E(a) && (e *= b.getViewport()[d] / 100);
			return Math.ceil(e)
		},
		w = function(a, b) {
			return l(a, b) + "px"
		};
	f.extend(b, {
		version: "2.1.5",
		defaults: {
			padding: 15,
			margin: 20,
			width: 800,
			height: 600,
			minWidth: 100,
			minHeight: 100,
			maxWidth: 9999,
			maxHeight: 9999,
			pixelRatio: 1,
			autoSize: !0,
			autoHeight: !1,
			autoWidth: !1,
			autoResize: !0,
			autoCenter: !s,
			fitToView: !0,
			aspectRatio: !1,
			topRatio: 0.5,
			leftRatio: 0.5,
			scrolling: "auto",
			wrapCSS: "",
			arrows: !0,
			closeBtn: !0,
			closeClick: !1,
			nextClick: !1,
			mouseWheel: !0,
			autoPlay: !1,
			playSpeed: 3E3,
			preload: 3,
			modal: !1,
			loop: !0,
			ajax: {
				dataType: "html",
				headers: {
					"X-fancyBox": !0
				}
			},
			iframe: {
				scrolling: "auto",
				preload: !0
			},
			swf: {
				wmode: "transparent",
				allowfullscreen: "true",
				allowscriptaccess: "always"
			},
			keys: {
				next: {
					13: "left",
					34: "up",
					39: "left",
					40: "up"
				},
				prev: {
					8: "right",
					33: "down",
					37: "right",
					38: "down"
				},
				close: [27],
				play: [32],
				toggle: [70]
			},
			direction: {
				next: "left",
				prev: "right"
			},
			scrollOutside: !0,
			index: 0,
			type: null,
			href: null,
			content: null,
			title: null,
			tpl: {
				wrap: '<div class="fancybox-wrap" tabIndex="-1"><div class="fancybox-skin"><div class="fancybox-outer"><div class="fancybox-inner"></div></div></div></div>',
				image: '<img class="fancybox-image" src="{href}" alt="" />',
				iframe: '<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen' + (I ? ' allowtransparency="true"' : "") + "></iframe>",
				error: '<p class="fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>',
				closeBtn: '<a title="Close" class="fancybox-item fancybox-close" href="javascript:;"></a>',
				next: '<a title="Next" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',
				prev: '<a title="Previous" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'
			},
			openEffect: "fade",
			openSpeed: 250,
			openEasing: "swing",
			openOpacity: !0,
			openMethod: "zoomIn",
			closeEffect: "fade",
			closeSpeed: 250,
			closeEasing: "swing",
			closeOpacity: !0,
			closeMethod: "zoomOut",
			nextEffect: "elastic",
			nextSpeed: 250,
			nextEasing: "swing",
			nextMethod: "changeIn",
			prevEffect: "elastic",
			prevSpeed: 250,
			prevEasing: "swing",
			prevMethod: "changeOut",
			helpers: {
				overlay: !0,
				title: !0
			},
			onCancel: f.noop,
			beforeLoad: f.noop,
			afterLoad: f.noop,
			beforeShow: f.noop,
			afterShow: f.noop,
			beforeChange: f.noop,
			beforeClose: f.noop,
			afterClose: f.noop
		},
		group: {},
		opts: {},
		previous: null,
		coming: null,
		current: null,
		isActive: !1,
		isOpen: !1,
		isOpened: !1,
		wrap: null,
		skin: null,
		outer: null,
		inner: null,
		player: {
			timer: null,
			isActive: !1
		},
		ajaxLoad: null,
		imgPreload: null,
		transitions: {},
		helpers: {},
		open: function(a, d) {
			if (a && (f.isPlainObject(d) || (d = {}), !1 !== b.close(!0))) return f.isArray(a) || (a = t(a) ? f(a).get() : [a]), f.each(a, function(e, c) {
				var k = {},
					g, h, j, m, l;
				"object" === f.type(c) && (c.nodeType && (c = f(c)), t(c) ? (k = {
					href: c.data("fancybox-href") || c.attr("href"),
					title: c.data("fancybox-title") || c.attr("title"),
					isDom: !0,
					element: c
				}, f.metadata && f.extend(!0, k, c.metadata())) : k = c);
				g = d.href || k.href || (q(c) ? c : null);
				h = d.title !== v ? d.title : k.title || "";
				m = (j = d.content || k.content) ? "html" : d.type || k.type;
				!m && k.isDom && (m = c.data("fancybox-type"), m || (m = (m = c.prop("class").match(/fancybox\.(\w+)/)) ? m[1] : null));
				q(g) && (m || (b.isImage(g) ? m = "image" : b.isSWF(g) ? m = "swf" : "#" === g.charAt(0) ? m = "inline" : q(c) && (m = "html", j = c)), "ajax" === m && (l = g.split(/\s+/, 2), g = l.shift(), l = l.shift()));
				j || ("inline" === m ? g ? j = f(q(g) ? g.replace(/.*(?=#[^\s]+$)/, "") : g) : k.isDom && (j = c) : "html" === m ? j = g : !m && (!g && k.isDom) && (m = "inline", j = c));
				f.extend(k, {
					href: g,
					type: m,
					content: j,
					title: h,
					selector: l
				});
				a[e] = k
			}), b.opts = f.extend(!0, {}, b.defaults, d), d.keys !== v && (b.opts.keys = d.keys ? f.extend({}, b.defaults.keys, d.keys) : !1), b.group = a, b._start(b.opts.index)
		},
		cancel: function() {
			var a = b.coming;
			a && !1 !== b.trigger("onCancel") && (b.hideLoading(), b.ajaxLoad && b.ajaxLoad.abort(), b.ajaxLoad = null, b.imgPreload && (b.imgPreload.onload = b.imgPreload.onerror = null), a.wrap && a.wrap.stop(!0, !0).trigger("onReset").remove(), b.coming = null, b.current || b._afterZoomOut(a))
		},
		close: function(a) {
			b.cancel();
			!1 !== b.trigger("beforeClose") && (b.unbindEvents(), b.isActive && (!b.isOpen || !0 === a ? (f(".fancybox-wrap").stop(!0).trigger("onReset").remove(), b._afterZoomOut()) : (b.isOpen = b.isOpened = !1, b.isClosing = !0, f(".fancybox-item, .fancybox-nav").remove(), b.wrap.stop(!0, !0).removeClass("fancybox-opened"), b.transitions[b.current.closeMethod]())))
		},
		play: function(a) {
			var d = function() {
					clearTimeout(b.player.timer)
				},
				e = function() {
					d();
					b.current && b.player.isActive && (b.player.timer = setTimeout(b.next, b.current.playSpeed))
				},
				c = function() {
					d();
					p.unbind(".player");
					b.player.isActive = !1;
					b.trigger("onPlayEnd")
				};
			if (!0 === a || !b.player.isActive && !1 !== a) {
				if (b.current && (b.current.loop || b.current.index < b.group.length - 1)) b.player.isActive = !0, p.bind({
					"onCancel.player beforeClose.player": c,
					"onUpdate.player": e,
					"beforeLoad.player": d
				}), e(), b.trigger("onPlayStart")
			} else c()
		},
		next: function(a) {
			var d = b.current;
			d && (q(a) || (a = d.direction.next), b.jumpto(d.index + 1, a, "next"))
		},
		prev: function(a) {
			var d = b.current;
			d && (q(a) || (a = d.direction.prev), b.jumpto(d.index - 1, a, "prev"))
		},
		jumpto: function(a, d, e) {
			var c = b.current;
			c && (a = l(a), b.direction = d || c.direction[a >= c.index ? "next" : "prev"], b.router = e || "jumpto", c.loop && (0 > a && (a = c.group.length + a % c.group.length), a %= c.group.length), c.group[a] !== v && (b.cancel(), b._start(a)))
		},
		reposition: function(a, d) {
			var e = b.current,
				c = e ? e.wrap : null,
				k;
			c && (k = b._getPosition(d), a && "scroll" === a.type ? (delete k.position, c.stop(!0, !0).animate(k, 200)) : (c.css(k), e.pos = f.extend({}, e.dim, k)))
		},
		update: function(a) {
			var d = a && a.type,
				e = !d || "orientationchange" === d;
			e && (clearTimeout(B), B = null);
			b.isOpen && !B && (B = setTimeout(function() {
				var c = b.current;
				c && !b.isClosing && (b.wrap.removeClass("fancybox-tmp"), (e || "load" === d || "resize" === d && c.autoResize) && b._setDimension(), "scroll" === d && c.canShrink || b.reposition(a), b.trigger("onUpdate"), B = null)
			}, e && !s ? 0 : 300))
		},
		toggle: function(a) {
			b.isOpen && (b.current.fitToView = "boolean" === f.type(a) ? a : !b.current.fitToView, s && (b.wrap.removeAttr("style").addClass("fancybox-tmp"), b.trigger("onUpdate")), b.update())
		},
		hideLoading: function() {
			p.unbind(".loading");
			f("#fancybox-loading").remove()
		},
		showLoading: function() {
			var a, d;
			b.hideLoading();
			a = f('<div id="fancybox-loading"><div></div></div>').click(b.cancel).appendTo("body");
			p.bind("keydown.loading", function(a) {
				if (27 === (a.which || a.keyCode)) a.preventDefault(), b.cancel()
			});
			b.defaults.fixed || (d = b.getViewport(), a.css({
				position: "absolute",
				top: 0.5 * d.h + d.y,
				left: 0.5 * d.w + d.x
			}))
		},
		getViewport: function() {
			var a = b.current && b.current.locked || !1,
				d = {
					x: n.scrollLeft(),
					y: n.scrollTop()
				};
			a ? (d.w = a[0].clientWidth, d.h = a[0].clientHeight) : (d.w = s && r.innerWidth ? r.innerWidth : n.width(), d.h = s && r.innerHeight ? r.innerHeight : n.height());
			return d
		},
		unbindEvents: function() {
			b.wrap && t(b.wrap) && b.wrap.unbind(".fb");
			p.unbind(".fb");
			n.unbind(".fb")
		},
		bindEvents: function() {
			var a = b.current,
				d;
			a && (n.bind("orientationchange.fb" + (s ? "" : " resize.fb") + (a.autoCenter && !a.locked ? " scroll.fb" : ""), b.update), (d = a.keys) && p.bind("keydown.fb", function(e) {
				var c = e.which || e.keyCode,
					k = e.target || e.srcElement;
				if (27 === c && b.coming) return !1;
				!e.ctrlKey && (!e.altKey && !e.shiftKey && !e.metaKey && (!k || !k.type && !f(k).is("[contenteditable]"))) && f.each(d, function(d, k) {
					if (1 < a.group.length && k[c] !== v) return b[d](k[c]), e.preventDefault(), !1;
					if (-1 < f.inArray(c, k)) return b[d](), e.preventDefault(), !1
				})
			}), f.fn.mousewheel && a.mouseWheel && b.wrap.bind("mousewheel.fb", function(d, c, k, g) {
				for (var h = f(d.target || null), j = !1; h.length && !j && !h.is(".fancybox-skin") && !h.is(".fancybox-wrap");) j = h[0] && !(h[0].style.overflow && "hidden" === h[0].style.overflow) && (h[0].clientWidth && h[0].scrollWidth > h[0].clientWidth || h[0].clientHeight && h[0].scrollHeight > h[0].clientHeight), h = f(h).parent();
				if (0 !== c && !j && 1 < b.group.length && !a.canShrink) {
					if (0 < g || 0 < k) b.prev(0 < g ? "down" : "left");
					else if (0 > g || 0 > k) b.next(0 > g ? "up" : "right");
					d.preventDefault()
				}
			}))
		},
		trigger: function(a, d) {
			var e, c = d || b.coming || b.current;
			if (c) {
				f.isFunction(c[a]) && (e = c[a].apply(c, Array.prototype.slice.call(arguments, 1)));
				if (!1 === e) return !1;
				c.helpers && f.each(c.helpers, function(d, e) {
					if (e && b.helpers[d] && f.isFunction(b.helpers[d][a])) b.helpers[d][a](f.extend(!0, {}, b.helpers[d].defaults, e), c)
				});
				p.trigger(a)
			}
		},
		isImage: function(a) {
			return q(a) && a.match(/(^data:image\/.*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg)((\?|#).*)?$)/i)
		},
		isSWF: function(a) {
			return q(a) && a.match(/\.(swf)((\?|#).*)?$/i)
		},
		_start: function(a) {
			var d = {},
				e, c;
			a = l(a);
			e = b.group[a] || null;
			if (!e) return !1;
			d = f.extend(!0, {}, b.opts, e);
			e = d.margin;
			c = d.padding;
			"number" === f.type(e) && (d.margin = [e, e, e, e]);
			"number" === f.type(c) && (d.padding = [c, c, c, c]);
			d.modal && f.extend(!0, d, {
				closeBtn: !1,
				closeClick: !1,
				nextClick: !1,
				arrows: !1,
				mouseWheel: !1,
				keys: null,
				helpers: {
					overlay: {
						closeClick: !1
					}
				}
			});
			d.autoSize && (d.autoWidth = d.autoHeight = !0);
			"auto" === d.width && (d.autoWidth = !0);
			"auto" === d.height && (d.autoHeight = !0);
			d.group = b.group;
			d.index = a;
			b.coming = d;
			if (!1 === b.trigger("beforeLoad")) b.coming = null;
			else {
				c = d.type;
				e = d.href;
				if (!c) return b.coming = null, b.current && b.router && "jumpto" !== b.router ? (b.current.index = a, b[b.router](b.direction)) : !1;
				b.isActive = !0;
				if ("image" === c || "swf" === c) d.autoHeight = d.autoWidth = !1, d.scrolling = "visible";
				"image" === c && (d.aspectRatio = !0);
				"iframe" === c && s && (d.scrolling = "scroll");
				d.wrap = f(d.tpl.wrap).addClass("fancybox-" + (s ? "mobile" : "desktop") + " fancybox-type-" + c + " fancybox-tmp " + d.wrapCSS).appendTo(d.parent || "body");
				f.extend(d, {
					skin: f(".fancybox-skin", d.wrap),
					outer: f(".fancybox-outer", d.wrap),
					inner: f(".fancybox-inner", d.wrap)
				});
				f.each(["Top", "Right", "Bottom", "Left"], function(a, b) {
					d.skin.css("padding" + b, w(d.padding[a]))
				});
				b.trigger("onReady");
				if ("inline" === c || "html" === c) {
					if (!d.content || !d.content.length) return b._error("content")
				} else if (!e) return b._error("href");
				"image" === c ? b._loadImage() : "ajax" === c ? b._loadAjax() : "iframe" === c ? b._loadIframe() : b._afterLoad()
			}
		},
		_error: function(a) {
			f.extend(b.coming, {
				type: "html",
				autoWidth: !0,
				autoHeight: !0,
				minWidth: 0,
				minHeight: 0,
				scrolling: "no",
				hasError: a,
				content: b.coming.tpl.error
			});
			b._afterLoad()
		},
		_loadImage: function() {
			var a = b.imgPreload = new Image;
			a.onload = function() {
				this.onload = this.onerror = null;
				b.coming.width = this.width / b.opts.pixelRatio;
				b.coming.height = this.height / b.opts.pixelRatio;
				b._afterLoad()
			};
			a.onerror = function() {
				this.onload = this.onerror = null;
				b._error("image")
			};
			a.src = b.coming.href;
			!0 !== a.complete && b.showLoading()
		},
		_loadAjax: function() {
			var a = b.coming;
			b.showLoading();
			b.ajaxLoad = f.ajax(f.extend({}, a.ajax, {
				url: a.href,
				error: function(a, e) {
					b.coming && "abort" !== e ? b._error("ajax", a) : b.hideLoading()
				},
				success: function(d, e) {
					"success" === e && (a.content = d, b._afterLoad())
				}
			}))
		},
		_loadIframe: function() {
			var a = b.coming,
				d = f(a.tpl.iframe.replace(/\{rnd\}/g, (new Date).getTime())).attr("scrolling", s ? "auto" : a.iframe.scrolling).attr("src", a.href);
			f(a.wrap).bind("onReset", function() {
				try {
					f(this).find("iframe").hide().attr("src", "//about:blank").end().empty()
				} catch (a) {}
			});
			a.iframe.preload && (b.showLoading(), d.one("load", function() {
				f(this).data("ready", 1);
				s || f(this).bind("load.fb", b.update);
				f(this).parents(".fancybox-wrap").width("100%").removeClass("fancybox-tmp").show();
				b._afterLoad()
			}));
			a.content = d.appendTo(a.inner);
			a.iframe.preload || b._afterLoad()
		},
		_preloadImages: function() {
			var a = b.group,
				d = b.current,
				e = a.length,
				c = d.preload ? Math.min(d.preload, e - 1) : 0,
				f, g;
			for (g = 1; g <= c; g += 1) f = a[(d.index + g) % e], "image" === f.type && f.href && ((new Image).src = f.href)
		},
		_afterLoad: function() {
			var a = b.coming,
				d = b.current,
				e, c, k, g, h;
			b.hideLoading();
			if (a && !1 !== b.isActive)
				if (!1 === b.trigger("afterLoad", a, d)) a.wrap.stop(!0).trigger("onReset").remove(), b.coming = null;
				else {
					d && (b.trigger("beforeChange", d), d.wrap.stop(!0).removeClass("fancybox-opened").find(".fancybox-item, .fancybox-nav").remove());
					b.unbindEvents();
					e = a.content;
					c = a.type;
					k = a.scrolling;
					f.extend(b, {
						wrap: a.wrap,
						skin: a.skin,
						outer: a.outer,
						inner: a.inner,
						current: a,
						previous: d
					});
					g = a.href;
					switch (c) {
						case "inline":
						case "ajax":
						case "html":
							a.selector ? e = f("<div>").html(e).find(a.selector) : t(e) && (e.data("fancybox-placeholder") || e.data("fancybox-placeholder", f('<div class="fancybox-placeholder"></div>').insertAfter(e).hide()), e = e.show().detach(), a.wrap.bind("onReset", function() {
								f(this).find(e).length && e.hide().replaceAll(e.data("fancybox-placeholder")).data("fancybox-placeholder", !1)
							}));
							break;
						case "image":
							e = a.tpl.image.replace("{href}", g);
							break;
						case "swf":
							e = '<object id="fancybox-swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="movie" value="' + g + '"></param>', h = "", f.each(a.swf, function(a, b) {
								e += '<param name="' + a + '" value="' + b + '"></param>';
								h += " " + a + '="' + b + '"'
							}), e += '<embed src="' + g + '" type="application/x-shockwave-flash" width="100%" height="100%"' + h + "></embed></object>"
					}(!t(e) || !e.parent().is(a.inner)) && a.inner.append(e);
					b.trigger("beforeShow");
					a.inner.css("overflow", "yes" === k ? "scroll" : "no" === k ? "hidden" : k);
					b._setDimension();
					b.reposition();
					b.isOpen = !1;
					b.coming = null;
					b.bindEvents();
					if (b.isOpened) {
						if (d.prevMethod) b.transitions[d.prevMethod]()
					} else f(".fancybox-wrap").not(a.wrap).stop(!0).trigger("onReset").remove();
					b.transitions[b.isOpened ? a.nextMethod : a.openMethod]();
					b._preloadImages()
				}
		},
		_setDimension: function() {
			var a = b.getViewport(),
				d = 0,
				e = !1,
				c = !1,
				e = b.wrap,
				k = b.skin,
				g = b.inner,
				h = b.current,
				c = h.width,
				j = h.height,
				m = h.minWidth,
				u = h.minHeight,
				n = h.maxWidth,
				p = h.maxHeight,
				s = h.scrolling,
				q = h.scrollOutside ? h.scrollbarWidth : 0,
				x = h.margin,
				y = l(x[1] + x[3]),
				r = l(x[0] + x[2]),
				v, z, t, C, A, F, B, D, H;
			e.add(k).add(g).width("auto").height("auto").removeClass("fancybox-tmp");
			x = l(k.outerWidth(!0) - k.width());
			v = l(k.outerHeight(!0) - k.height());
			z = y + x;
			t = r + v;
			C = E(c) ? (a.w - z) * l(c) / 100 : c;
			A = E(j) ? (a.h - t) * l(j) / 100 : j;
			if ("iframe" === h.type) {
				if (H = h.content, h.autoHeight && 1 === H.data("ready")) try {
					H[0].contentWindow.document.location && (g.width(C).height(9999), F = H.contents().find("body"), q && F.css("overflow-x", "hidden"), A = F.outerHeight(!0))
				} catch (G) {}
			} else if (h.autoWidth || h.autoHeight) g.addClass("fancybox-tmp"), h.autoWidth || g.width(C), h.autoHeight || g.height(A), h.autoWidth && (C = g.width()), h.autoHeight && (A = g.height()), g.removeClass("fancybox-tmp");
			c = l(C);
			j = l(A);
			D = C / A;
			m = l(E(m) ? l(m, "w") - z : m);
			n = l(E(n) ? l(n, "w") - z : n);
			u = l(E(u) ? l(u, "h") - t : u);
			p = l(E(p) ? l(p, "h") - t : p);
			F = n;
			B = p;
			h.fitToView && (n = Math.min(a.w - z, n), p = Math.min(a.h - t, p));
			z = a.w - y;
			r = a.h - r;
			h.aspectRatio ? (c > n && (c = n, j = l(c / D)), j > p && (j = p, c = l(j * D)), c < m && (c = m, j = l(c / D)), j < u && (j = u, c = l(j * D))) : (c = Math.max(m, Math.min(c, n)), h.autoHeight && "iframe" !== h.type && (g.width(c), j = g.height()), j = Math.max(u, Math.min(j, p)));
			if (h.fitToView)
				if (g.width(c).height(j), e.width(c + x), a = e.width(), y = e.height(), h.aspectRatio)
					for (;
						(a > z || y > r) && (c > m && j > u) && !(19 < d++);) j = Math.max(u, Math.min(p, j - 10)), c = l(j * D), c < m && (c = m, j = l(c / D)), c > n && (c = n, j = l(c / D)), g.width(c).height(j), e.width(c + x), a = e.width(), y = e.height();
				else c = Math.max(m, Math.min(c, c - (a - z))), j = Math.max(u, Math.min(j, j - (y - r)));
			q && ("auto" === s && j < A && c + x + q < z) && (c += q);
			g.width(c).height(j);
			e.width(c + x);
			a = e.width();
			y = e.height();
			e = (a > z || y > r) && c > m && j > u;
			c = h.aspectRatio ? c < F && j < B && c < C && j < A : (c < F || j < B) && (c < C || j < A);
			f.extend(h, {
				dim: {
					width: w(a),
					height: w(y)
				},
				origWidth: C,
				origHeight: A,
				canShrink: e,
				canExpand: c,
				wPadding: x,
				hPadding: v,
				wrapSpace: y - k.outerHeight(!0),
				skinSpace: k.height() - j
			});
			!H && (h.autoHeight && j > u && j < p && !c) && g.height("auto")
		},
		_getPosition: function(a) {
			var d = b.current,
				e = b.getViewport(),
				c = d.margin,
				f = b.wrap.width() + c[1] + c[3],
				g = b.wrap.height() + c[0] + c[2],
				c = {
					position: "absolute",
					top: c[0],
					left: c[3]
				};
			d.autoCenter && d.fixed && !a && g <= e.h && f <= e.w ? c.position = "fixed" : d.locked || (c.top += e.y, c.left += e.x);
			c.top = w(Math.max(c.top, c.top + (e.h - g) * d.topRatio));
			c.left = w(Math.max(c.left, c.left + (e.w - f) * d.leftRatio));
			return c
		},
		_afterZoomIn: function() {
			var a = b.current;
			a && (b.isOpen = b.isOpened = !0, b.wrap.css("overflow", "visible").addClass("fancybox-opened"), b.update(), (a.closeClick || a.nextClick && 1 < b.group.length) && b.inner.css("cursor", "pointer").bind("click.fb", function(d) {
				!f(d.target).is("a") && !f(d.target).parent().is("a") && (d.preventDefault(), b[a.closeClick ? "close" : "next"]())
			}), a.closeBtn && f(a.tpl.closeBtn).appendTo(b.skin).bind("click.fb", function(a) {
				a.preventDefault();
				b.close()
			}), a.arrows && 1 < b.group.length && ((a.loop || 0 < a.index) && f(a.tpl.prev).appendTo(b.outer).bind("click.fb", b.prev), (a.loop || a.index < b.group.length - 1) && f(a.tpl.next).appendTo(b.outer).bind("click.fb", b.next)), b.trigger("afterShow"), !a.loop && a.index === a.group.length - 1 ? b.play(!1) : b.opts.autoPlay && !b.player.isActive && (b.opts.autoPlay = !1, b.play()))
		},
		_afterZoomOut: function(a) {
			a = a || b.current;
			f(".fancybox-wrap").trigger("onReset").remove();
			f.extend(b, {
				group: {},
				opts: {},
				router: !1,
				current: null,
				isActive: !1,
				isOpened: !1,
				isOpen: !1,
				isClosing: !1,
				wrap: null,
				skin: null,
				outer: null,
				inner: null
			});
			b.trigger("afterClose", a)
		}
	});
	b.transitions = {
		getOrigPosition: function() {
			var a = b.current,
				d = a.element,
				e = a.orig,
				c = {},
				f = 50,
				g = 50,
				h = a.hPadding,
				j = a.wPadding,
				m = b.getViewport();
			!e && (a.isDom && d.is(":visible")) && (e = d.find("img:first"), e.length || (e = d));
			t(e) ? (c = e.offset(), e.is("img") && (f = e.outerWidth(), g = e.outerHeight())) : (c.top = m.y + (m.h - g) * a.topRatio, c.left = m.x + (m.w - f) * a.leftRatio);
			if ("fixed" === b.wrap.css("position") || a.locked) c.top -= m.y, c.left -= m.x;
			return c = {
				top: w(c.top - h * a.topRatio),
				left: w(c.left - j * a.leftRatio),
				width: w(f + j),
				height: w(g + h)
			}
		},
		step: function(a, d) {
			var e, c, f = d.prop;
			c = b.current;
			var g = c.wrapSpace,
				h = c.skinSpace;
			if ("width" === f || "height" === f) e = d.end === d.start ? 1 : (a - d.start) / (d.end - d.start), b.isClosing && (e = 1 - e), c = "width" === f ? c.wPadding : c.hPadding, c = a - c, b.skin[f](l("width" === f ? c : c - g * e)), b.inner[f](l("width" === f ? c : c - g * e - h * e))
		},
		zoomIn: function() {
			var a = b.current,
				d = a.pos,
				e = a.openEffect,
				c = "elastic" === e,
				k = f.extend({
					opacity: 1
				}, d);
			delete k.position;
			c ? (d = this.getOrigPosition(), a.openOpacity && (d.opacity = 0.1)) : "fade" === e && (d.opacity = 0.1);
			b.wrap.css(d).animate(k, {
				duration: "none" === e ? 0 : a.openSpeed,
				easing: a.openEasing,
				step: c ? this.step : null,
				complete: b._afterZoomIn
			})
		},
		zoomOut: function() {
			var a = b.current,
				d = a.closeEffect,
				e = "elastic" === d,
				c = {
					opacity: 0.1
				};
			e && (c = this.getOrigPosition(), a.closeOpacity && (c.opacity = 0.1));
			b.wrap.animate(c, {
				duration: "none" === d ? 0 : a.closeSpeed,
				easing: a.closeEasing,
				step: e ? this.step : null,
				complete: b._afterZoomOut
			})
		},
		changeIn: function() {
			var a = b.current,
				d = a.nextEffect,
				e = a.pos,
				c = {
					opacity: 1
				},
				f = b.direction,
				g;
			e.opacity = 0.1;
			"elastic" === d && (g = "down" === f || "up" === f ? "top" : "left", "down" === f || "right" === f ? (e[g] = w(l(e[g]) - 200), c[g] = "+=200px") : (e[g] = w(l(e[g]) + 200), c[g] = "-=200px"));
			"none" === d ? b._afterZoomIn() : b.wrap.css(e).animate(c, {
				duration: a.nextSpeed,
				easing: a.nextEasing,
				complete: b._afterZoomIn
			})
		},
		changeOut: function() {
			var a = b.previous,
				d = a.prevEffect,
				e = {
					opacity: 0.1
				},
				c = b.direction;
			"elastic" === d && (e["down" === c || "up" === c ? "top" : "left"] = ("up" === c || "left" === c ? "-" : "+") + "=200px");
			a.wrap.animate(e, {
				duration: "none" === d ? 0 : a.prevSpeed,
				easing: a.prevEasing,
				complete: function() {
					f(this).trigger("onReset").remove()
				}
			})
		}
	};
	b.helpers.overlay = {
		defaults: {
			closeClick: !0,
			speedOut: 200,
			showEarly: !0,
			css: {},
			locked: !s,
			fixed: !0
		},
		overlay: null,
		fixed: !1,
		el: f("html"),
		create: function(a) {
			a = f.extend({}, this.defaults, a);
			this.overlay && this.close();
			this.overlay = f('<div class="fancybox-overlay"></div>').appendTo(b.coming ? b.coming.parent : a.parent);
			this.fixed = !1;
			a.fixed && b.defaults.fixed && (this.overlay.addClass("fancybox-overlay-fixed"), this.fixed = !0)
		},
		open: function(a) {
			var d = this;
			a = f.extend({}, this.defaults, a);
			this.overlay ? this.overlay.unbind(".overlay").width("auto").height("auto") : this.create(a);
			this.fixed || (n.bind("resize.overlay", f.proxy(this.update, this)), this.update());
			a.closeClick && this.overlay.bind("click.overlay", function(a) {
				if (f(a.target).hasClass("fancybox-overlay")) return b.isActive ? b.close() : d.close(), !1
			});
			this.overlay.css(a.css).show()
		},
		close: function() {
			var a, b;
			n.unbind("resize.overlay");
			this.el.hasClass("fancybox-lock") && (f(".fancybox-margin").removeClass("fancybox-margin"), a = n.scrollTop(), b = n.scrollLeft(), this.el.removeClass("fancybox-lock"), n.scrollTop(a).scrollLeft(b));
			f(".fancybox-overlay").remove().hide();
			f.extend(this, {
				overlay: null,
				fixed: !1
			})
		},
		update: function() {
			var a = "100%",
				b;
			this.overlay.width(a).height("100%");
			I ? (b = Math.max(G.documentElement.offsetWidth, G.body.offsetWidth), p.width() > b && (a = p.width())) : p.width() > n.width() && (a = p.width());
			this.overlay.width(a).height(p.height())
		},
		onReady: function(a, b) {
			var e = this.overlay;
			f(".fancybox-overlay").stop(!0, !0);
			e || this.create(a);
			a.locked && (this.fixed && b.fixed) && (e || (this.margin = p.height() > n.height() ? f("html").css("margin-right").replace("px", "") : !1), b.locked = this.overlay.append(b.wrap), b.fixed = !1);
			!0 === a.showEarly && this.beforeShow.apply(this, arguments)
		},
		beforeShow: function(a, b) {
			var e, c;
			b.locked && (!1 !== this.margin && (f("*").filter(function() {
				return "fixed" === f(this).css("position") && !f(this).hasClass("fancybox-overlay") && !f(this).hasClass("fancybox-wrap")
			}).addClass("fancybox-margin"), this.el.addClass("fancybox-margin")), e = n.scrollTop(), c = n.scrollLeft(), this.el.addClass("fancybox-lock"), n.scrollTop(e).scrollLeft(c));
			this.open(a)
		},
		onUpdate: function() {
			this.fixed || this.update()
		},
		afterClose: function(a) {
			this.overlay && !b.coming && this.overlay.fadeOut(a.speedOut, f.proxy(this.close, this))
		}
	};
	b.helpers.title = {
		defaults: {
			type: "float",
			position: "bottom"
		},
		beforeShow: function(a) {
			var d = b.current,
				e = d.title,
				c = a.type;
			f.isFunction(e) && (e = e.call(d.element, d));
			if (q(e) && "" !== f.trim(e)) {
				d = f('<div class="fancybox-title fancybox-title-' + c + '-wrap">' + e + "</div>");
				switch (c) {
					case "inside":
						c = b.skin;
						break;
					case "outside":
						c = b.wrap;
						break;
					case "over":
						c = b.inner;
						break;
					default:
						c = b.skin, d.appendTo("body"), I && d.width(d.width()), d.wrapInner('<span class="child"></span>'), b.current.margin[2] += Math.abs(l(d.css("margin-bottom")))
				}
				d["top" === a.position ? "prependTo" : "appendTo"](c)
			}
		}
	};
	f.fn.fancybox = function(a) {
		var d, e = f(this),
			c = this.selector || "",
			k = function(g) {
				var h = f(this).blur(),
					j = d,
					k, l;
				!g.ctrlKey && (!g.altKey && !g.shiftKey && !g.metaKey) && !h.is(".fancybox-wrap") && (k = a.groupAttr || "data-fancybox-group", l = h.attr(k), l || (k = "rel", l = h.get(0)[k]), l && ("" !== l && "nofollow" !== l) && (h = c.length ? f(c) : e, h = h.filter("[" + k + '="' + l + '"]'), j = h.index(this)), a.index = j, !1 !== b.open(h, a) && g.preventDefault())
			};
		a = a || {};
		d = a.index || 0;
		!c || !1 === a.live ? e.unbind("click.fb-start").bind("click.fb-start", k) : p.undelegate(c, "click.fb-start").delegate(c + ":not('.fancybox-item, .fancybox-nav')", "click.fb-start", k);
		this.filter("[data-fancybox-start=1]").trigger("click");
		return this
	};
	p.ready(function() {
		var a, d;
		f.scrollbarWidth === v && (f.scrollbarWidth = function() {
			var a = f('<div style="width:50px;height:50px;overflow:auto"><div/></div>').appendTo("body"),
				b = a.children(),
				b = b.innerWidth() - b.height(99).innerWidth();
			a.remove();
			return b
		});
		if (f.support.fixedPosition === v) {
			a = f.support;
			d = f('<div style="position:fixed;top:20px;"></div>').appendTo("body");
			var e = 20 === d[0].offsetTop || 15 === d[0].offsetTop;
			d.remove();
			a.fixedPosition = e
		}
		f.extend(b.defaults, {
			scrollbarWidth: f.scrollbarWidth(),
			fixed: f.support.fixedPosition,
			parent: f("body")
		});
		a = f(r).width();
		J.addClass("fancybox-lock-test");
		d = f(r).width();
		J.removeClass("fancybox-lock-test");
		f("<style type='text/css'>.fancybox-margin{margin-right:" + (d - a) + "px;}</style>").appendTo("head")
	})
})(window, document, jQuery);
$(document).ready(function() {
	if (typeof enable_js_lang != 'undefined') {
		$('ul#first-currencies li:not(.selected)').css('opacity', 0.3);
		$('ul#first-currencies li:not(.selected)').hover(function() {
			$(this).css('opacity', 1)
		}, function() {
			$(this).css('opacity', 0.3)
		})
	}
	if (typeof enable_js_currency != 'undefined') {
		$("#setCurrency").mouseover(function() {
			$(this).addClass("countries_hover");
			$(".currencies_ul").addClass("currencies_ul_hover")
		});
		$("#setCurrency").mouseout(function() {
			$(this).removeClass("countries_hover");
			$(".currencies_ul").removeClass("currencies_ul_hover")
		})
	}
	if (typeof js_country != 'undefined') {
		$("#countries").mouseover(function() {
			$(this).addClass("countries_hover");
			$(".countries_ul").addClass("countries_ul_hover")
		});
		$("#countries").mouseout(function() {
			$(this).removeClass("countries_hover");
			$(".countries_ul").removeClass("countries_ul_hover")
		})
	}
})

function setCurrency(id_currency) {
	$.ajax({
		type: 'POST',
		headers: {
			"cache-control": "no-cache"
		},
		url: prestashop.urls.base_url + 'index.php' + '?rand=' + new Date().getTime(),
		data: 'controller=change-currency&id_currency=' + parseInt(id_currency),
		success: function(msg) {
			location.reload(!0)
		}
	})
};
$(document).ready(function() {
	floatHeader();
	backtotop()
	if (prestashop.page.page_name == 'category') {
		setDefaultListGrid()
	}
	if (typeof(products_list_functions) != 'undefined') {
		for (var i = 0; i < products_list_functions.length; i++) {
			products_list_functions[i]()
		}
	}
});
$(document).on('click', '.leo_grid', function(e) {
	e.preventDefault();
	$('#js-product-list .product_list').removeClass('list');
	$('#js-product-list .product_list').addClass('grid');
	$(this).parent().find('.leo_list').removeClass('selected');
	$(this).addClass('selected');
	var configName = LEO_COOKIE_THEME + '_grid_list';
	$.cookie(configName, 'grid', {
		expires: 1,
		path: '/'
	})
});
$(document).on('click', '.leo_list', function(e) {
	e.preventDefault();
	$('#js-product-list .product_list').removeClass('grid');
	$('#js-product-list .product_list').addClass('list');
	$(this).parent().find('.leo_grid').removeClass('selected');
	$(this).addClass('selected');
	var configName = LEO_COOKIE_THEME + '_grid_list';
	$.cookie(configName, 'list', {
		expires: 1,
		path: '/'
	})
});

function setDefaultListGrid() {
	if ($.cookie(LEO_COOKIE_THEME + '_grid_list') == 'grid') {
		$('.leo_grid').trigger('click')
	}
	if ($.cookie(LEO_COOKIE_THEME + '_grid_list') == 'list') {
		$('.leo_list').trigger('click')
	}
}

function processFloatHeader(headerAdd, scroolAction) {
	if (headerAdd) {
		$("#header").addClass("navbar-fixed-top");
		var hideheight = $("#header").height() + 120;
		$("#page").css("padding-top", $("#header").height());
		setTimeout(function() {
			$("#page").css("padding-top", $("#header").height())
		}, 200)
	} else {
		$("#header").removeClass("navbar-fixed-top");
		$("#page").css("padding-top", '')
	}
	var pos = $(window).scrollTop();
	if (scroolAction && pos >= hideheight) {
		$("#topbar").addClass('hide-bar');
		$(".hide-bar").css("margin-top", -$("#topbar").height());
		$("#header-main").addClass("mini-navbar")
	} else {
		$("#topbar").removeClass('hide-bar');
		$("#topbar").css("margin-top", 0);
		$("#header-main").removeClass("mini-navbar")
	}
}

function floatHeader() {
	if (!$("body").hasClass("keep-header") || $(window).width() <= 990) {
		return
	}
	$(window).resize(function() {
		if ($(window).width() <= 990) {
			processFloatHeader(0, 0)
		} else if ($(window).width() > 990) {
			if ($("body").hasClass("keep-header"))
				processFloatHeader(1, 1)
		}
	});
	var headerScrollTimer;
	$(window).scroll(function() {
		if (headerScrollTimer) {
			window.clearTimeout(headerScrollTimer)
		}
		headerScrollTimer = window.setTimeout(function() {
			if (!$("body").hasClass("keep-header")) return;
			if ($(window).width() > 990) {
				processFloatHeader(1, 1)
			}
		}, 100)
	})
}

function backtotop() {
	$("#back-top").hide();
	$(window).scroll(function() {
		if ($(this).scrollTop() > 100) {
			$('#back-top').fadeIn()
		} else {
			$('#back-top').fadeOut()
		}
	});
	$('#back-top a').click(function() {
		$('body,html').animate({
			scrollTop: 0
		}, 800);
		return !1
	})
}
$(function() {
	$('#click_show_search').click(function(e) {
		e.stopPropagation();
		if ($('#search_widget').hasClass('showsearch')) {
			$('#search_widget').removeClass('showsearch')
		} else {
			$('#search_widget').addClass('showsearch')
		}
	});
	$('#search_widget').click(function(e) {
		e.stopPropagation()
	});
	$('#page').click(function() {
		if ($('#search_widget').hasClass('showsearch')) {
			$('#search_widget').removeClass('showsearch')
		}
	})
})